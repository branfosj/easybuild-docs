{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the EasyBuild documentation!","text":"<p>Warning</p> <p>This is the new EasyBuild documentation, made with Material for MkDocs and written in MarkDown.</p> <p>We intend to replace the https://docs.easybuild.io, which is made with Sphinx and written in reStructuredText with this documentation soon...</p> <p> If you want to help with porting the EasyBuild documentation to MarkDown, you can! Please see https://github.com/easybuilders/easybuild-docs. </p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li>What is EasyBuild?</li> <li>EasyBuild terminology</li> <li>Installing and configuring EasyBuild</li> <li>Using EasyBuild</li> <li>Getting help</li> </ul>"},{"location":"#contents","title":"Introductory topics","text":""},{"location":"archived-easyconfigs/","title":"Archived easyconfigs","text":"<p>Since EasyBuild v3.0.0, easyconfig files using deprecated (i.e., old and inactive) toolchains are archived.</p>"},{"location":"archived-easyconfigs/#archived_easyconfigs_toolchain_deprecation","title":"Toolchain deprecation","text":"<p>Once in a blue moon, we review the list of toolchains (&amp; versions) that are included in EasyBuild.</p> <p>Easyconfig files that use toolchains that become deprecated are then moved to the easyconfigs archive, i.e. the <code>__archive__</code> subdirectory in the <code>easybuild-easyconfigs</code> repository (see https://github.com/easybuilders/easybuild-easyconfigs/tree/main/easybuild/easyconfigs/__archive__).</p>"},{"location":"archived-easyconfigs/#archived_easyconfigs_deprecated_toolchains_what","title":"What are deprecated toolchains?","text":"<p>Toolchains become deprecated if:</p> <ul> <li>no easyconfig files using that toolchain have been contributed   recently (e.g., in the last year)</li> <li>that toolchain is considered to be inactive, after consulting the   EasyBuild community (via mailing list, bi-weekly conf calls)</li> </ul> <p>Deprecating a toolchain implies that all easyconfigs using that toolchain are moved to the easyconfigs archive, and that they are no longer included in the EasyBuild regression test. In addition, these easyconfigs are 'hidden' from plain sight, in the sense that you need to use <code>--consider-archived-easyconfigs</code> to make EasyBuild consider them when it is looking for easyconfigs (e.g., with <code>--search</code> or <code>--robot</code>).</p> <p>This does not mean that the support for using these toolchains is removed from the EasyBuild framework, although not testing them anymore may imply that using them may no longer work at some point in time.</p> <p>For toolchains for which no active versions are available (outside of the easyconfigs archive), it is possible that they will be reactivated, if a new toolchain version is contributed.</p>"},{"location":"archived-easyconfigs/#archived_easyconfigs_deprecated_toolchains_why","title":"Why are toolchains being deprecated?","text":"<ul> <li>using old toolchains (incl. old compilers and/or libraries) is   likely to become more and more difficult on modern operating systems</li> <li>these toolchains put a significant burden on the regression testing   for EasyBuild releases</li> <li>easyconfigs using old toolchains are likely to be for old software   versions, which may no longer be relevant anyway</li> </ul>"},{"location":"archived-easyconfigs/#archived_easyconfigs_consider","title":"Using <code>--consider-archived-easyconfigs</code>","text":"<p>To make EasyBuild consider archived easyconfig files, you need to enable the <code>--consider-archived-easyconfigs</code> configuration option:</p> <pre><code>$ eb -S '^goolfc'\nCFGS=/home/example/work/easybuild-easyconfigs/easybuild/easyconfigs\n  * $CFGS1/g/goolfc/goolfc-2016.08.eb\n  * $CFGS1/g/goolfc/goolfc-2016.10.eb\n\nNote: 6 matching archived easyconfig(s) found, use --consider-archived-easyconfigs to see them\n</code></pre> <pre><code>$ eb -S '^goolfc' --consider-archived-easyconfigs\nCFGS=/home/example/easybuild-easyconfigs/easybuild/easyconfigs\n  * $CFGS/g/goolfc/goolfc-2016.08.eb\n  * $CFGS/g/goolfc/goolfc-2016.10.eb\n\nMatching archived easyconfigs:\n\n  * $CFGS/__archive__/g/goolfc/goolfc-1.3.12.eb\n  * $CFGS/__archive__/g/goolfc/goolfc-1.4.10.eb\n  * $CFGS/__archive__/g/goolfc/goolfc-2.6.10.eb\n</code></pre>"},{"location":"backup-modules/","title":"Backing up of existing modules","text":"<p>While regenerating existing module files, you may want to preserve the existing module files to compare and assess that the changes in the newly generated module file match expectations.</p> <p>Backing up of existing modules can be enabled with <code>--backup-modules</code>.</p> <p>Backups are stored in the same directory as where the module file was located, and the files are given an additional extension of the form <code>.bak_&lt;year&gt;&lt;month&gt;&lt;day&gt;&lt;hour&gt;&lt;min&gt;&lt;sec&gt;</code>.</p> <ul> <li>With module files in Tcl syntax, the backup module file is hidden by   adding a leading dot to the filename; this is done to avoid that it   is displayed as a normal module in <code>module avail</code>.</li> <li>With module files in Lua syntax, the backup module file is not made   hidden (unless Lmod 6.x is used), since the additional <code>.bak_*</code>   extension prevents from picking it up as a valid module file; only   files ending in <code>.lua</code> are considered to be module files by Lmod 7+.</li> </ul> <p>The location of the backed up module file will be printed, as well as a \"unified diff\" comparison (very similar to what <code>diff -u</code> produces) between the backed up module file and the newly generated module file (or a message mentioning that no differences were found).</p>"},{"location":"backup-modules/#backup_modules_disable","title":"Disabling automatic backup of modules","text":"<p>When <code>--skip</code> or <code>--module-only</code> is used, backing up of existing modules is enabled automatically.</p> <p>This can be disabled with <code>--disable-backup-modules</code>.</p>"},{"location":"backup-modules/#backup_modules_example","title":"Example","text":"<p>Suppose existing modules in both Tcl &amp; Lua syntax are present (<code>bzip2/1.0.6</code>).</p> <p>Both these module files are missing an update statement for <code>$PATH</code> because the <code>/bin</code> subdirectory was missing in the installation, for the purpose of this example:</p> <pre><code>$ ls -la $EASYBUILD_PREFIX/modules/all/bzip2\ntotal 16\ndrwxr-xr-x  2 example  example   136 Aug 24 10:20 .\ndrwxr-xr-x  3 example  example   102 Aug 24 10:18 ..\n-rw-r--r--  1 example  example  1256 Aug 24 10:19 1.0.6\n-rw-r--r--  1 example  example  1303 Aug 24 10:18 1.0.6.lua\n</code></pre> <p>Using <code>--force</code> and <code>--backup-modules</code>, we can reinstall the <code>bzip2/1.0.6</code> modules and get a clear view on what has changed.</p> <p>To reinstall the <code>bzip2/1.0.6</code> module in Lua syntax while retaining a backup of the existing module:</p> <pre><code>$ eb bzip2-1.0.6.eb --module-syntax=Lua --force --backup-modules\n...\n== creating build dir, resetting environment...\n== backup of existing module file stored at /example/modules/all/bzip2/1.0.6.lua.bak_20170824102603\n...\n== creating module...\n== comparing module file with backup /example/modules/all/bzip2/1.0.6.lua.bak_20170824102603; diff is:\n--- /example/modules/all/bzip2/1.0.6.lua.bak_20170824102603\n+++ /example/modules/all/bzip2/1.0.6.lua\n@@ -25,9 +25,10 @@\n prepend_path(\"LD_LIBRARY_PATH\", pathJoin(root, \"lib\"))\n prepend_path(\"LIBRARY_PATH\", pathJoin(root, \"lib\"))\n prepend_path(\"MANPATH\", pathJoin(root, \"man\"))\n+prepend_path(\"PATH\", pathJoin(root, \"bin\"))\n setenv(\"EBROOTBZIP2\", root)\n setenv(\"EBVERSIONBZIP2\", \"1.0.6\")\n setenv(\"EBDEVELBZIP2\", pathJoin(root, \"easybuild/bzip2-1.0.6-easybuild-devel\"))\n\n...\n</code></pre> <p>Equivalently, we can reinstall the module in Tcl syntax using:</p> <pre><code>eb bzip2-1.0.6.eb --module-syntax=Tcl --force --backup-modules\n</code></pre> <p>Afterwards, both the newly generated modules and the backups are in place:</p> <pre><code>$ ls -la $EASYBUILD_PREFIX/modules/all/bzip2\ntotal 32\ndrwxr-xr-x  2 example  example   204 Aug 24 10:26 .\ndrwxr-xr-x  3 example  example   102 Jul 11 10:18 ..\n-rw-r--r--  1 example  example  1227 Aug 24 10:24 .1.0.6.bak_20170824102412\n-rw-r--r--  1 example  example  1256 Jul 11 01:24 1.0.6\n-rw-r--r--  1 example  example  1303 Jul 11 01:26 1.0.6.lua\n-rw-r--r--  1 example  example  1259 Aug 24 10:26 1.0.6.lua.bak_20170824102603\n</code></pre> <p>Cleaning up the backup module files can be done with the following command (for example):</p> <pre><code>$ find $EASYBUILD_PREFIX/modules/all/bzip2 -name '*.bak*' | xargs rm -v\n/example/modules/all/bzip2/.1.0.6.bak_20170824102412\n/example/modules/all/bzip2/1.0.6.lua.bak_20170824102603\n</code></pre>"},{"location":"changelog-docs/","title":"Changelog for EasyBuild documentation","text":"<p>(for EasyBuild release notes, see EasyBuild release notes)</p> <ul> <li>release 20221021.01 (Oct 21st 2022): update     release notes for EasyBuild v4.6.2 (see     EasyBuild v4.6.2 (October 21st 2022))</li> <li>release 20220912.01 (Sep 12th 2022): update     release notes for EasyBuild v4.6.1 (see     EasyBuild v4.6.1 (September 12th 2022))</li> <li>release 20220708.01 (Jul 8th 2022): update release     notes for EasyBuild v4.6.0 (see     EasyBuild v4.6.0 (July 8th 2022))</li> <li>release 20220608.01 (Jun 8th 2022): update release     notes for EasyBuild v4.5.5 (see     EasyBuild v4.5.5 (June 8th 2022))</li> <li>release 20220331.01 (Mar 31st 2022): update     release notes for EasyBuild v4.5.4 (see     EasyBuild v4.5.4 (March 31st 2022))</li> <li>release 20220211.01 (Feb 11th 2022): update     release notes for EasyBuild v4.5.3 (see     EasyBuild v4.5.3 (February 11th 2022))</li> <li>release 20220124.01 (Jan 24th 2022): update     release notes for EasyBuild v4.5.2 (see     EasyBuild v4.5.2 (January 24th 2022))</li> <li>release 20211213.01 (Dec 13th 2021): update     release notes for EasyBuild v4.5.1 (see     EasyBuild v4.5.1 (December 13th 2021))</li> <li>release 20211029.01 (Oct 29th 2021): update     release notes for EasyBuild v4.5.0 (see     EasyBuild v4.5.0 (October 29th 2021))</li> <li>release 20210907.01 (Sep 7th 2021): update release     notes for EasyBuild v4.4.2 (see     EasyBuild v4.4.2 (September 7th 2021))</li> <li>release 20210706.01 (Jul 6th 2021): update release     notes for EasyBuild v4.4.1 (see     EasyBuild v4.4.1 (July 6th 2021))</li> <li>release 20210602.01 (Jun 2nd 2021): update release     notes for EasyBuild v4.4.0 (see     EasyBuild v4.4.0 (June 2nd 2021))</li> <li>release 20210409.01 (Apr 9th 2021): update release     notes for EasyBuild v4.3.4 (see     EasyBuild v4.3.4 (Apr 9th 2021))</li> <li>release 20210223.01 (Feb 23rd 2021): update     release notes for EasyBuild v4.3.3 (see     EasyBuild v4.3.3 (Feb 23rd 2021))</li> <li>release 20201210.01 (Dec 10th 2020): update     release notes for EasyBuild v4.3.2 (see     EasyBuild v4.3.2 (December 10th 2020))</li> <li>release 20201029.01 (Oct 29th 2020): update     release notes for EasyBuild v4.3.1 (see     EasyBuild v4.3.1 (October 29th 2020))</li> <li>release 20200913.01 (Sep 13th 2020): update     release notes for EasyBuild v4.3.0 (see     EasyBuild v4.3.0 (September 13th 2020))</li> <li>release 20200708.01 (July 8th 2020): update     release notes for EasyBuild v4.2.2 (see     EasyBuild v4.2.2 (July 8th 2020))</li> <li>release 20200520.01 (May 20th 2020): update     release notes for EasyBuild v4.2.1 (see     EasyBuild v4.2.1 (May 20th 2020))</li> <li>release 20200414.01 (Apr 14th 2020):<ul> <li>document new EasyBuild locking mechanism (see     Locks to prevent duplicate installations running at the same time)</li> <li>document support for creating index files (see     Using an index to speed up searching for easyconfigs)</li> <li>update release notes for EasyBuild v4.2.0 (see     EasyBuild v4.2.0 (April 14th 2020))</li> </ul> </li> <li>release 20200316.01 (Mar 16th 2020): update     release notes for EasyBuild v4.1.2 (see     EasyBuild v4.1.2 (March 16th 2020))</li> <li>release 20200116.01 (Jan 16th 2020): update     release notes for EasyBuild v4.1.1 (see     EasyBuild v4.1.1 (January 16th 2020))</li> <li>release 20191204.01 (Dec 4th 2019): update release     notes for EasyBuild v4.1.0 (see     EasyBuild v4.1.0 (December 4th 2019))</li> <li>release 20191015.01 (Oct 15th 2019): update     release notes for EasyBuild v4.0.1 (see     EasyBuild v4.0.1 (October 15th 2019))</li> <li>release 20190920.01 (Sep 20th 2019): update     release notes for EasyBuild v4.0.0 (see     EasyBuild v4.0.0 (September 20th 2019)); see also     Overview of changes in EasyBuild version 4.0</li> <li>release 20190823.01 (Aug 23rd 2019): update     release notes for EasyBuild v3.9.4 (see     EasyBuild v3.9.4 (August 23rd 2019))</li> <li>release 20190708.01 (Jul 8th 2019): update release     notes for EasyBuild v3.9.3 (see     EasyBuild v3.9.3 (July 8th 2019))</li> <li>release 20190609.01 (Jun 9th 2019): update release     notes for EasyBuild v3.9.2 (see     EasyBuild v3.9.2 (June 9th 2019))</li> <li>release 20190908.01 (Jun 8th 2019): update     documentation on support for generating (Singularity) container     recipes/images (see Generating container recipes &amp; images)</li> <li>release 20190520.01 (May 20th 2019): update     release notes for EasyBuild v3.9.1 (see     EasyBuild v3.9.1 (May 20th 2019))</li> <li>release 20190412.01 (Apr 12th 2019): update     release notes for EasyBuild v3.9.0 (see     EasyBuild v3.9.0 (April 12th 2019))</li> <li>release 20190129.01 (Jan 29th 2019): update     release notes for EasyBuild v3.8.1 (see     EasyBuild v3.8.1 (January 29th 2019))</li> <li>release 20190124.01 (Jan 24th 2019): add     definitions for <code>2019a</code> common toolchains (see     Common toolchains)</li> <li>release 20181218.01 (Dec 18th 2018): update     release notes for EasyBuild v3.8.0 (see     EasyBuild v3.8.0 (December 18th 2018))</li> <li>release 20181114.01 (Nov 14th 2018): add     documentation on deprecated easyconfigs &amp; toolchains     (Deprecated easyconfigs)</li> <li>release 20181104.01 (Nov 4th 2018): update <code>--job</code>     documentation to also cover <code>Slurm</code> job backend (see     Submitting jobs using <code>--job</code>)</li> <li>release 20181018.01 (Oct 18th 2018): update     release notes for EasyBuild v3.7.1 (see     EasyBuild v3.7.1 (October 18th 2018))</li> <li>release 20180925.01 (Sep 25th 2018): update     release notes for EasyBuild v3.7.0 (see     EasyBuild v3.7.0 (September 25th 2018))</li> <li>release 20180921.01 (Sep 21st 2018): document     support for wrapping dependencies (see     Wrapping dependencies)</li> <li>release 20180920.01 (Sep 20th 2018): document     support for downloading sources directly from a Git repository (see     Downloading from a Git repository)</li> <li>release 20180711.01 (Jul 11th 2018): update     release notes for EasyBuild v3.6.2 (see     EasyBuild v3.6.2 (July 11th 2018))</li> <li>release 20180710.01 (Jul 10th 2018): add     definitions for <code>2018b</code> common toolchains (see     Common toolchains)</li> <li>release 20180528.01 (May 28th 2018): update     release notes for EasyBuild v3.6.1 (see     EasyBuild v3.6.1 (May 26th 2018))</li> <li>release 20180427.01 (Apr 27th 2018): update     release notes for EasyBuild v3.6.0 (see     EasyBuild v3.6.0 (April 26th 2018))</li> <li>release 20180425.01 (Apr 25th 2018): add     documentation on support for generating container recipes &amp; images     (see Generating container recipes &amp; images)</li> <li>release 20180307.01 (Mar 7th 2018): update release     notes for EasyBuild v3.5.3 (see     EasyBuild v3.5.3 (March 7th 2018))</li> <li>release 20180302.01 (Mar 2nd 2018): update release     notes for EasyBuild v3.5.2 (see     EasyBuild v3.5.2 (March 2nd 2018))</li> <li>release 20180116.01 (Jan 16th 2018): update     release notes for EasyBuild v3.5.1 (see     EasyBuild v3.5.1 (January 16th 2018))</li> <li>release 20180112.01 (Jan 12th 2018): add     definitions for <code>2018a</code> common toolchains (see     Common toolchains)</li> <li>release 20171215.01 (Dec 15th 2017): update     release notes for EasyBuild v3.5.0 (see     EasyBuild v3.5.0 (December 15th 2017))</li> <li>release 20171208.01 (Dec 8th 2017): document     support for user-defined hooks (see hooks)</li> <li>release 20171017.01 (Oct 17th 2017): update     release notes for EasyBuild v3.4.1 (see     EasyBuild v3.4.1 (October 17th 2017))</li> <li>release 20170910.01 (Sept 10th 2017): update     release notes for EasyBuild v3.4.0 (see     EasyBuild v3.4.0 (September 10th 2017))</li> <li>release 20170906.01 (Sept 6th 2017): document     <code>--trace</code> (see Tracing progress)</li> <li>release 20170824.02 (Aug 24th 2017): document     <code>--inject-checksums</code> (see Adding or replacing checksums using <code>--inject-checksums</code>)</li> <li>release 20170824.01 (Aug 24th 2017): document     <code>--backup-modules</code> (see Backing up of existing modules)</li> <li>release 20170712.01 (July 12th 2017): update     release notes for EasyBuild v3.3.1 (see     EasyBuild v3.3.1 (July 12th 2017))</li> <li>release 20170708.01 (July 8th 2017): add     documentation on Merging easyconfig pull requests</li> <li>release 20170705.01 (July 5th 2017): clarify     Requirements for pull requests, add page listing Requirements for pull requests</li> <li>release 20170626.01 (June 26th 2017): update     release notes for EasyBuild v3.3.0 (see     EasyBuild v3.3.0 (June 26th 2017))</li> <li>release 20170623.01 (June 23rd 2017): document use     of <code>checksums</code> &amp; alternative formats for <code>sources</code> (see     Source files, patches and checksums)</li> <li>release 20170622.01 (June 22nd 2017): document     support for detecting loaded modules (see     Detection of loaded modules)</li> <li>release 20170522.01 (May 22nd 2017): document     deprecated behaviour in EasyBuild v3.2.0 (see     Overview of deprecated functionality in EasyBuild version)</li> <li>release 20170512.01 (May 12th 2017): update     release notes for EasyBuild v3.2.1 (see     EasyBuild v3.2.1 (May 12th 2017))</li> <li>release 20170505.01 (May 5th 2017): update release     notes for EasyBuild v3.2.0 (see     EasyBuild v3.2.0 (May 5th 2017))</li> <li>release 20170320.01 (Mar 20th 2017): update     release notes for EasyBuild v3.1.2 (see     EasyBuild v3.1.2 (March 20th 2017))</li> <li>release 20170307.01 (Mar 7th 2017): update release     notes for EasyBuild v3.1.1 (see     EasyBuild v3.1.1 (March 7th 2017))</li> <li>release 20170221.01 (Feb 21st 2017): add     documentation on Contributing</li> <li>release 20170209.01 (Feb 9th 2017): add     documentation on implementing easyblocks (see     Implementing easyblocks)</li> <li>release 20170203.01 (Feb 3rd 2017): update release     notes for EasyBuild v3.1.0 (see     EasyBuild v3.1.0 (February 3rd 2017))</li> <li>release 20170129.01 (Jan 29th 2017): update     <code>--optarch</code> documentation (see     Setting architecture flags for different compilers via <code>--optarch=&lt;compiler:flags&gt;;&lt;compiler:flags&gt;</code>)</li> <li>release 20170109.01 (Jan 9th 2017): add     documentation on Common toolchains</li> <li>release 20161222.01 (Dec 22nd 2016): update     documentation and release notes for EasyBuild v3.0.2 (see     EasyBuild v3.0.2 (December 22nd 2016))</li> <li>release 20161218.01 (Dec 18th 2016): document need     to download <code>vsc-*</code> source tarballs from PyPI</li> <li>release 20161202.01 (Dec 2nd 2016): add     documentation on Cray support (see EasyBuild on Cray)</li> <li>release 20161130.01 (Nov 16th 2016): update     release notes for EasyBuild v3.0.1 (see     EasyBuild v3.0.1 (November 30th 2016))</li> <li>release 20161117.01 (Nov 17th 2016): update     mentions of default configuration according to updated default in     EasyBuild v3.0.0</li> <li>release 20161116.01 (Nov 16th 2016): update     documentation and release notes for EasyBuild v3.0.0 (see     EasyBuild v3.0.0 (November 16th 2016))<ul> <li>Archived easyconfigs</li> <li>Support for RPATH</li> </ul> </li> <li>release 20161028.01 (Oct 28th 2016): recommend     using <code>--rebuild</code> rather than <code>--force</code> (see     Rebuild installation)</li> <li>release 20161023.01 (Oct 24th 2016): add section     on iterating over configure/build/install options (see     List of configure/build/install options)</li> <li>release 20161014.01 (Oct 14th 2016): update     documentation on deprecated functionality (see     Deprecated functionality)</li> <li>release 20161010.01 (Oct 10th 2016): add page for     EasyBuild demos (see demos)</li> <li>release 20160923.02 (Sept 23rd 2016): update     release notes for EasyBuild v2.9.0 (see     EasyBuild v2.9.0 (September 23rd 2016))</li> <li>release 20160923.01 (Sept 23rd 2016): add     generated list of supported software (see     List of supported software)</li> <li>release 20160713.01 (July 13th 2016): update     release notes for EasyBuild v2.8.2 (see     EasyBuild v2.8.2 (July 13th 2016))</li> <li>release 20160613.01 (June 13th 2016): clarify     required dependencies (setuptools, vsc-install) (see     Required Python packages)</li> <li>release 20160607.01 (June 7th 2016):     update/complete documentation on GitHub integration (see     Integration with GitHub)</li> <li>release 20160530.01 (May 30th 2016): update     release notes for EasyBuild v2.8.1 (see     EasyBuild v2.8.1 (May 30th 2016))</li> <li>release 20160518.01 (May 18th 2016): update     release notes for EasyBuild v2.8.0 (see     EasyBuild v2.8.0 (May 18th 2016))</li> <li>release 20160429.01 (April 29th 2016): add section     on updating EasyBuild, see Updating an existing EasyBuild installation</li> <li>release 20160320.01 (March 20th 2016): update     release notes for EasyBuild v2.7.0 (see     EasyBuild v2.7.0 (March 20th 2016))</li> <li>release 20160228.01 (February 28th 2016):<ul> <li>update documentation on external modules metadata (see     Metadata for external modules)</li> </ul> </li> <li> <p>release 20160214.01 (February 14th 2016):</p> </li> <li> <p>add section on <code>--show-config</code> (see     Overview of current configuration)</p> </li> <li> <p>release 20160126.02 (January 26th 2016): packaging     support is stable since EasyBuild v2.5.0 (see     Packaging support)</p> </li> <li> <p>release 20160126.01 (January 26th 2016): update     release notes for EasyBuild v2.6.0 (see     EasyBuild v2.6.0 (January 26th 2016))</p> </li> <li> <p>release 20151217.01 (December 17th 2015): update     release notes for EasyBuild v2.5.0 (see     EasyBuild v2.5.0 (December 17th 2015))</p> </li> <li> <p>release 20151209.01 (December 9th 2015):</p> <ul> <li>add documentation on controlling compiler optimizations flags,     see Controlling compiler optimization flags</li> </ul> </li> <li> <p>release 20151110.01 (November 10th 2015): update     release notes for EasyBuild v2.4.0 (see     EasyBuild v2.4.0 (November 10th 2015))</p> </li> <li> <p>release 20151108.01 (November 8th 2015):</p> <ul> <li>document (experimental) support for using minimal toolchains     (see Using minimal toolchains for dependencies)</li> </ul> </li> <li> <p>release 20151028.01 (October 28th 2015): document     extended dry run mechanism (see Extended dry run)</p> </li> <li> <p>release 20151021.01 (October 21st 2015):</p> <ul> <li>include initial documentation on experimental support for     easyconfig files in YAML syntax (<code>.yeb</code>), see     Writing easyconfig files in YAML syntax (<code>.yeb</code> format) [IN DEVELOPMENT]</li> </ul> </li> <li> <p>release 20150902.01 (September 2nd 2015): update     release notes for EasyBuild v2.3.0 (see     EasyBuild v2.3.0 (September 2nd 2015))</p> </li> <li> <p>release 20150715.01 (July 15th 2015): update     release notes for EasyBuild v2.2.0 (see     EasyBuild v2.2.0 (July 15th 2015))</p> </li> <li> <p>release 20150714.01 (July 14th 2015): add     documentation on Packaging support</p> </li> <li> <p>release 20150709.01 (July 9th 2015): add     documentation on Submitting jobs using <code>--job</code></p> </li> <li> <p>release 20150708.01 (July 8th 2015):</p> <ul> <li>add documentation on <code>--include-*</code> options (see     Including additional Python modules)</li> </ul> </li> <li> <p>release 20150703.01 (July 3rd 2015):</p> <ul> <li>fix outdated documentation on <code>easyblock</code> parameter (see     Easyblock specification)</li> </ul> </li> <li> <p>release 20150624.01 (June 24th 2015): mention <code>MigrateFromEBToHMNS</code> module naming scheme  in section on     <code>--module-only</code> (see Generating additional module files)</p> </li> <li> <p>release 20150610.01 (June 10th 2015): update     Installing Lmod without root permissions for Lmod v6.0</p> </li> <li> <p>release 20150518.01 (May 18th 2015):</p> <ul> <li>update section on <code>--search</code>: better examples + highlight     ability to search via regular expression (see     Searching for easyconfigs)</li> <li>update release notes for EasyBuild v2.1.1 (see     EasyBuild v2.1.1 (May 18th 2015))</li> </ul> </li> <li> <p>release 20150506.01 (May 6th 2015): updated     documentation for EasyBuild v2.1.1</p> <ul> <li>add note on <code>$LMOD_CMD</code> fallback to find full path to <code>lmod</code>     binary (see Required modules tool)</li> </ul> </li> <li> <p>release 20150430.01 (Apr 30th 2015): updated     documentation for EasyBuild v2.1.0</p> <ul> <li>also cover extensions in page on concepts and terminology (see     Extensions)</li> <li>add documentation on Partial installations, covering <code>--stop</code>, <code>--skip</code> and <code>--module-only</code></li> <li>add documentation on     Manipulating dependencies,     covering <code>--filter-deps</code> and <code>--hide-deps</code></li> <li>document <code>-module-syntax</code> configuration option (see     Module files syntax (<code>--module-syntax</code>))</li> <li>add note on detection of unknown <code>$EASYBUILD</code>-prefixed     environment variables (see     Environment variables)</li> <li>mention support for prepending/appending to <code>--robot-paths</code> (see     Prepending/appending to the default robot search path)</li> <li>update release notes for EasyBuild v2.1.0 (see     EasyBuild release notes)</li> </ul> </li> <li> <p>release 20150425.01 (Apr 25th 2015):</p> <ul> <li>add documentation on Using external modules</li> </ul> </li> <li> <p>release 20150407.01 (Apr 7th 2015):</p> <ul> <li>add link to Unit tests page in     dedicated section at Installing EasyBuild page</li> <li>clarify relation between <code>--installpath</code>, <code>--prefix</code>,     <code>-subdir-*</code> and <code>--installpath-*</code> configuration options (see     Software and modules install path)</li> <li>mention <code>--show-default-configfiles</code> command line option in     relevant section (see     Default configuration files)</li> </ul> </li> <li> <p>release 20150327.01 (Mar 27th 2015):</p> <ul> <li>documented deprecated functionality w.r.t. error reporting (see     <code>error</code> and <code>exception</code> log methods no longer raise an exception)</li> </ul> </li> <li> <p>release 20150316.01 (Mar 16th 2015):</p> <ul> <li>include list of EasyBuild repositories cloned by     <code>install-EasyBuild-develop.sh</code> script (see     Installation of latest development version using provided script)</li> </ul> </li> <li> <p>release 20150312.01 (Mar 12th 2015):</p> <ul> <li>enhance documentation w.r.t. template values in configuration     files (see     Templates and constants supported in configuration files)</li> <li>improve documentation on <code>--robot</code> and <code>--robot-paths</code> (see     Controlling the robot search path)</li> </ul> </li> <li> <p>release 20150310.01 (Mar 10th 2015):</p> <ul> <li>document peculiarities w.r.t. dependencies in combination with a     <code>dummy</code> toolchain (see Dependencies)</li> <li>document <code>clean_gists.py</code> script (see     <code>clean_gists.py</code>)</li> <li>mention taking into account of proxy settings for downloading     sources (see Source files, patches and checksums)</li> </ul> </li> <li> <p>release 20150306.03 (Mar 6th 2015): add release     notes for EasyBuild v2.0.0 (see EasyBuild release notes)</p> </li> <li> <p>release 20150306.02 (Mar 6th 2015):</p> <ul> <li>add documentation on GitHub integration features (see     Integration with GitHub), mainly     <code>--from-pr</code> (see Using easyconfigs from pull requests)</li> <li>document locations where (specified) easyconfig files are being     searched for (see Specifying what to install)</li> </ul> </li> <li> <p>release 20150306.01 (Mar 6th 2015):</p> <ul> <li>add documentation on removed functionality (see     Removed functionality)</li> <li>clean up documentation on deprecated functionality (see     Deprecated functionality)</li> <li>add documentation on provided scripts, in particular     <code>fix-broken-easyconfigs.py</code> (see     Useful scripts)</li> </ul> </li> <li> <p>release 20150302.01 (Mar 2nd 2015): update/cleanup     documentation on Alternative installation methods</p> </li> <li> <p>release 20150227.02 (Feb 27th 2015): add     documentation on the EasyBuild unit test suites, see     Unit tests</p> </li> <li> <p>release 20150227.01 (Feb 27th 2015): enhance     documentation w.r.t. to (optional dependencies), see     Installing EasyBuild</p> </li> <li> <p>release 20150220.01 (Feb 20th 2015):</p> <ul> <li>document new advanced bootstrapping options: skipping stage 0     and providing source tarballs (see     Installing EasyBuild)</li> </ul> </li> <li> <p>release 20150219.01 (Feb 19th 2015): first updates     for EasyBuild v2.0.0</p> <ul> <li>extend section on (default) EasyBuild configuration files to     also cover <code>$XDG_CONFIG_DIRS</code> (see     Configuration file(s))</li> </ul> </li> <li> <p>release 20150205.01 (Feb 5th 2015): include     information on deprecated functionality in (generic) easyblocks (see     Deprecated functionality)</p> </li> <li> <p>release 20150126.01 (Jan 26th 2015):</p> <ul> <li>fix <code>pip</code> installation prefix option     (Alternative installation methods)</li> <li>clarify need to have modules tool binary available in <code>$PATH</code>     (Installing EasyBuild)</li> </ul> </li> <li> <p>release 20150112.01 (Jan 12th 2015): mention need     to escape <code>%</code> when setting log file format via config file (see     Logfile format (<code>--logfile-format</code>))</p> </li> <li> <p>release 20150107.01 (Jan 7th 2015): document     behaviour of dummy toolchain     (<code>dummy</code> toolchain (DEPRECATED))</p> </li> <li> <p>release 20141219.01 (Dec 19th 2014): add release     notes for EasyBuild v1.16.1 (see EasyBuild release notes)</p> </li> <li> <p>release 20141218.01 (Dec 18th 2014): add release     notes for EasyBuild v1.16.0 (see EasyBuild release notes)</p> </li> <li> <p>release 20141217.01 (Dec 17th 2014): document     deprecated functionality in EasyBuild v1.x     (Deprecated functionality)</p> </li> <li> <p>release 20141204.02 (Dec 4th 2014): add EasyBuild     release notes (see EasyBuild release notes)</p> </li> <li> <p>release 20141204.01 (Dec 4th 2014): updates for     EasyBuild v1.16.0</p> <ul> <li>document details w.r.t. (controlling of) robot search path,     incl. <code>--robot-paths</code>     (Using the EasyBuild command line)</li> <li>document use of templates and constants in EasyBuild     configuration files (Configuring EasyBuild)</li> <li>bump EasyBuild version to 1.16.0</li> <li>changed release number scheme for documentation (based on     datestamp)</li> </ul> </li> <li> <p>release 1.0.3 (Dec 3rd 2014): add page on     Code style</p> </li> <li> <p>release 1.0.2 (Nov 6th 2014): typo and grammar     fixes, update Lmod installation instructions for Lmod v5.8</p> </li> <li> <p>release 1.0.1 (Nov 4th 2014): fix issues with     Changelog</p> </li> <li> <p>release 1.0.0 `(Nov 4th 2014)`: initial release of revamped     EasyBuild documentation @ http://easybuild.readthedocs.org,     covering basic topics:</p> <ul> <li>introductory topics:<ul> <li>What is EasyBuild?</li> <li>Concepts and terminology</li> <li>Typical workflow example: building and installing WRF</li> </ul> </li> <li>getting started:<ul> <li>Installing EasyBuild</li> <li>Configuring EasyBuild</li> </ul> </li> <li>basic usage topics:<ul> <li>Using the EasyBuild command line</li> <li>Writing easyconfig files: the basics</li> <li>Understanding EasyBuild logs</li> </ul> </li> </ul> </li> </ul>"},{"location":"code-style/","title":"Code style","text":"<p>The code style we follow in the EasyBuild code repository is mainly dictated by the Python standard PEP8.</p> <p>Highlighted PEP8 code style rules:</p> <ul> <li>use 4 spaces for indentation, do not use tabs<ul> <li>for example, use <code>:set tabstop 4</code> and <code>:set expandtab</code> in Vim</li> </ul> </li> <li>indent items in a list at an extra 4 spaces<ul> <li>nested lists can be indented at the same indentation as the first item in the list if it is on the first line, closing brackets must match visual indentation</li> </ul> </li> <li>use <code>optional underscores</code>, not camelCase, for variable, function and method names (i.e. <code>poll.get_unique_voters()</code>, not <code>poll.getUniqueVoters</code>)</li> <li>use <code>InitialCaps</code> for class names</li> <li>in docstrings, don't use \"action words\"</li> </ul> <p>The only (major) exception to PEP8 is our preference for longer line lengths: line lengths must be limited to 120 characters, and should by preference be <code>shorter than 100 characters</code> (as opposed to the 80-character limit in PEP8).</p>"},{"location":"code-style/#notes","title":"Notes","text":"<p>Code style in easyconfig files can be automatically checked using <code>--check-contrib</code>,  for example: <code>eb --check-contrib sympy-1.3-intel-2018a-Python-2.7.14.eb</code>  (see Code style review for more details).</p> <p>Style guides that go a step beyond PEP8:</p> <ul> <li>https://www.gramps-project.org/wiki/index.php?title=Programming_guidelines</li> <li>https://code.google.com/p/volatility/wiki/StyleGuide</li> </ul> <p>Automatic rewriting of Python code: PythonTidy</p> <p><code>pep8</code> might be a useful tool to check PEP8 compliance.</p>"},{"location":"common-toolchains/","title":"Common toolchains","text":"<p>This page documents the concept of common toolchains in the EasyBuild community; for a more general definition of what (compiler) toolchains are, see Toolchains.</p>"},{"location":"common-toolchains/#common_toolchains_what","title":"Definition and motivation","text":"<p>Picking a compiler toolchain to use is one of the first things you (need to) do when starting to use EasyBuild. This can be a daunting task, since a whole bunch of toolchains and different toolchain versions are readily available in EasyBuild. It may be difficult to determine which toolchain would be most rewarding to use, in terms of stability, performance of the resulting binaries and readily available easyconfig files.</p> <p>In an attempt to focus the effort of the EasyBuild community, the concept of so-called common toolchains was introduced.</p> <p>The idea is to compose and maintain a limited set of specific compiler toolchains, and try and convince many HPC sites to employ these toolchains. This helps in assuring stability of these toolchains w.r.t. which software can be built (correctly) with them, since they get significantly more testing. In addition, the expectation/hope is that more easyconfigs are contributed back to the central easyconfigs repository (https://github.com/easybuilders/easybuild-easyconfigs), resulting in a wide range of readily available easyconfig files using the common toolchains.</p> <p>The intention is to revise/update the definitions of the common toolchains regularly (see Update cycle for common toolchains), which again can be a joint effort that benefits many HPC sites.</p> <p>Currently, two different common toolchains are being maintained: <code>foss</code> and <code>intel</code>; see below for more details, and also Overview of common toolchains.</p>"},{"location":"common-toolchains/#common_toolchains_foss","title":"<code>foss</code> toolchain","text":"<p>The <code>foss</code> common compiler toolchain consists entirely of open source software (hence the name, derived from the common term 'FOSS', which is short for \"Free and Open Source Software\").</p> <p>This toolchain consists of:</p> <ul> <li>binutils (https://www.gnu.org/software/binutils/)</li> <li>the GNU Compiler Collection (GCC, https://gcc.gnu.org/), i.e. <code>gcc</code>   (C), <code>g++</code> (C++) and <code>gfortran</code> (Fortran)</li> <li>the Open MPI library (https://www.open-mpi.org/)</li> <li>the OpenBLAS (http://www.openblas.net/) + LAPACK   (http://netlib.org/lapack) libraries (for <code>foss</code> \\&lt; 2021a)</li> <li>the FlexiBLAS library   (https://www.mpi-magdeburg.mpg.de/projects/flexiblas), with   OpenBLAS + LAPACK as backend (for <code>foss</code> &gt;= 2021a)</li> <li>the ScaLAPACK (http://netlib.org/scalapack) library is also included</li> <li>the FFTW library (http://fftw.org/)</li> </ul>  <p>Note</p> <p>The toolchain name was deliberately chosen to be generic, to allow for swapping any of the toolchain components with a better (open source) alternative in the future, should the need or opportunity arise.</p>"},{"location":"common-toolchains/#common_toolchains_intel","title":"<code>intel</code> toolchain","text":"<p>The <code>intel</code> common compiler toolchain consists of the Intel compilers and libraries, i.e.:</p> <ul> <li>the Intel C/C++/Fortran compilers   (https://software.intel.com/en-us/intel-compilers), i.e. <code>icc</code>,   <code>icpc</code> and <code>ifort</code>,</li> <li>binutils and GCC, which serve as a base for the Intel compilers, are     also included</li> <li>the Intel MPI library   (https://software.intel.com/en-us/intel-mpi-library)</li> <li>the Intel Math Kernel Library (MKL,   https://software.intel.com/en-us/intel-mkl) for BLAS/LAPACK/FFT   functionality</li> </ul>  <p>Note</p> <p>This compiler toolchain includes licensed software; valid licenses must be available to install and use it.</p>"},{"location":"common-toolchains/#common_toolchains_versioning_scheme","title":"Versioning scheme for common toolchains","text":"<p>The common toolchains follow a specific versioning scheme, which takes the 6-month update cycle into account.</p> <p>Each revision of the common toolchains is versioned as the year in which it was defined, plus an additional '<code>a</code>' or '<code>b</code>' to indicate whether the toolchain was defined at the start of the year ('<code>a</code>') or halfway through the year ('<code>b</code>'); in short, the common toolchains are versioned as <code>&lt;year&gt;{a,b}</code>.</p> <p>For example, <code>foss/2016b</code> is a revision of the <code>foss</code> that was composed mid-2016.</p> <p>A full historic overview of the <code>foss</code> and <code>intel</code> common toolchains is available in Overview of common toolchains.</p>  <p>Note</p> <p>Next to the versions that follow the <code>&lt;year&gt;{a,b}</code> versioning scheme, additional versions of the <code>foss</code> and <code>intel</code> versions are available as well.</p> <p>These versions are not considered to be part of the series of common toolchains (even though they consists of the same toolchain components). These versions may be site-specific, or compositions that were put in place to evaluate a potential future common toolchain.</p> <p>Typically, they are versioned as <code>&lt;year&gt;.&lt;month&gt;</code>, indicating when the most recent component included was released, or when that particular toolchain composition was defined.</p>"},{"location":"common-toolchains/#common_toolchains_update_cycle","title":"Update cycle for common toolchains","text":"<p>The intention is to revise and update the common toolchains every 6 months: once in late December/early January (version <code>&lt;year&gt;a</code>), and once in late June/early July (version <code>&lt;year&gt;b</code>).</p> <p>This is meant be to be a community effort, in the sense that a proposal for an updated composition is shared and discussed before it is set in stone.</p> <p>Recent versions of each of the toolchain components are considered, taking into account stability, performance improvements, added features, known bugs/issues and experiences with those versions.</p> <p>Moreover, the proposed toolchain compositions are tested extensively, typically by rebuilding all available easyconfigs that are using the most recent revision of the common toolchains at that time.</p>"},{"location":"common-toolchains/#common_toolchains_overview","title":"Overview of common toolchains","text":""},{"location":"common-toolchains/#common_toolchains_overview_foss","title":"Component versions in <code>foss</code> toolchain","text":"<code>foss</code> date binutils GCC Open MPI FlexiBLAS OpenBLAS LAPACK ScaLAPACK FFTW     <code>2019a</code> Jan '19 2.31.1 8.2.0 3.1.3 (none) 0.3.5 (incl. with OpenBLAS) 2.0.2 3.3.8   <code>2019b</code> Sept '19 2.32 8.3.0 3.1.4 (none) 0.3.7 (incl. with OpenBLAS) 2.0.2 3.3.8   <code>2020a</code> May '20 2.34 9.3.0 4.0.3 (none) 0.3.9 (incl. with OpenBLAS) 2.1.0 3.3.8   <code>2020b</code> Nov '20 2.35 10.2.0 4.0.5 (none) 0.3.12 (incl. with OpenBLAS) 2.1.0 3.3.8   <code>2021a</code> May '21 2.36.1 10.3.0 4.1.1 3.0.4 0.3.15 (incl. with OpenBLAS) 2.1.0 3.3.9   <code>2021b</code> Oct '21 2.37 11.2.0 4.1.1 3.0.4 0.3.18 (incl. with OpenBLAS) 2.1.0 3.3.10   <code>2022a</code> Jun '22 2.38 11.3.0 4.1.4 3.2.0 0.3.20 (incl. with OpenBLAS) 2.2.0 3.3.10    <p>(components marked with * were patched)</p>"},{"location":"common-toolchains/#common_toolchains_overview_intel","title":"Component versions in <code>intel</code> toolchain","text":"<code>intel</code> date binutils GCC Intel compilers Intel MPI Intel MKL     <code>2019a</code> Jan '19 2.31.1 8.2.0 2019.1.144 2018.4.274 2019.1.144   <code>2019b</code> Sept '19 2.32 8.3.0 2019.5.281 2018.5.288 2019.5.281   <code>2020a</code> May '20 2.34 9.3.0 2020.1.217 2019.7.217 2020.1.217   <code>2020b</code> Nov '20 2.35 10.2.0 2020.4.304 2019.9.304 2020.4.304   <code>2021a</code> May '21 2.36.1 10.3.0 2021.2.0 2021.2.0 2021.2.0   <code>2021b</code> Oct '21 2.37 11.2.0 2021.4.0 2021.4.0 2021.4.0   <code>2022a</code> Jun '22 2.38 11.3.0 2022.1.0 2021.6.0 2022.1.0"},{"location":"common-toolchains/#common_toolchains_overview_deprecated","title":"Overview of common toolchains (deprecated versions)","text":""},{"location":"common-toolchains/#common_toolchains_overview_foss_deprecated","title":"Component versions in <code>foss</code> toolchain (deprecated versions)","text":"<code>foss</code> date binutils GCC Open MPI FlexiBLAS OpenBLAS LAPACK ScaLAPACK FFTW     <code>2014b</code> Jul '14 '(none) 4.8.3 1.8.1 (none) 0.2.9 3.5.0 2.0.2 3.3.4   <code>2015a</code> Jan '15 '(none) 4.9.2 1.8.4 (none) 0.2.13 3.5.0 2.0.2 3.3.4   <code>2015b</code> Jul '15 2.25 4.9.3 1.8.8 (none) 0.2.14 3.5.0 2.0.2 3.3.4   <code>2016a</code> Jan '16 2.25 4.9.3 1.10.2 (none) 0.2.15 3.6.0 2.0.2 3.3.4   <code>2016b</code> Jul '16 2.26 5.4.0 1.10.3 (none) 0.2.18 3.6.1 2.0.2 3.3.4   <code>2017a</code> Jan '17 2.27 6.3.0 2.0.2 (none) 0.2.19 3.7.0 2.0.2 3.3.6(-pl2)   <code>2017b</code> Jul '17 2.28 6.4.0 2.1.1 (none) 0.2.20* (incl. with OpenBLAS) 2.0.2 3.3.6(-pl2)   <code>2018a</code> Jan '18 2.28 6.4.0 2.1.2 (none) 0.2.20* (incl. with OpenBLAS) 2.0.2 3.3.7   <code>2018b</code> Jul '18 2.30 7.3.0 3.1.1 (none) 0.3.1 (incl. with OpenBLAS) 2.0.2 3.3.8"},{"location":"common-toolchains/#common_toolchains_overview_intel_deprecated","title":"Component versions in <code>intel</code> toolchain (deprecated versions)","text":"<code>intel</code> date binutils GCC Intel compilers Intel MPI Intel MKL     <code>2014b</code> Jul '14 '(none) 4.8.3 2013.5.192 4.1.3.049 11.1.2.144   <code>2015a</code> Jan '15 '(none) 4.9.2 2015.1.133 5.0.2.044 11.2.1.133   <code>2015b</code> Jul '15 2.25 4.9.3 2015.3.187 5.0.3.048 11.2.3.187   <code>2016a</code> Jan '16 2.26 4.9.3 2016.1.150 5.1.2.150 11.3.1.150   <code>2016b</code> Jul '16 2.26 5.4.0 2016.3.210 5.1.3.181 11.3.3.210   <code>2017a</code> Jan '17 2.27 6.3.0 2017.1.132 2017.1.132 2017.1.132   <code>2017b</code> Jul '17 2.28 6.4.0 2017.4.196 2017.3.196 2017.3.196   <code>2018a</code> Jan '18 2.28 6.4.0 2018.1.163 2018.1.163 2018.1.163   <code>2018b</code> Jul '18 2.30 7.3.0 2018.3.222 2018.3.222 2018.3.222"},{"location":"common-toolchains/#common_toolchains_customizing","title":"Customizing common toolchains","text":"<p>Sometimes the need arises to customize one or more components of a common toolchain w.r.t. site-specific aspects. One common example is using additional configuration options for Open MPI.</p> <p>To customize a toolchain component, you should copy the corresponding easyconfig file, modify according to your needs, and make sure it is included in a location in the robot search path that precedes the location of the easyconfig files that are included with EasyBuild (see also Searching for easyconfigs: the robot search path), before building and installation the toolchain.</p>"},{"location":"common-toolchains/#more-information-about-toolchains","title":"More information about toolchains","text":"<p>Please see the List of known toolchains for how to obtain a listing of the currently known toolchains.</p> <p>For a detailed listing of the compiler options available with each toolchain, please see Available toolchain options (by toolchain).</p>"},{"location":"configuration/","title":"Configuring EasyBuild","text":"<p>This page discusses the recommended style of configuring EasyBuild, which is supported since EasyBuild v1.3.0.</p> <p>See a demo on configuring EasyBuild.</p>"},{"location":"configuration/#configuration_types","title":"Supported configuration types","text":"<p>Configuring EasyBuild can be done by:</p> <ul> <li>using <code>eb</code> with command line arguments</li> <li>setting environment variables (<code>$EASYBUILD_...</code>)</li> <li>providing one or more configuration files</li> </ul> <p>Of course, combining any of these types of configuration works too (and is even fairly common).</p> <p>The order of preference for the different configuration types is as listed above, that is:</p> <ul> <li>environment variables override the corresponding entries in the configuration file</li> <li>command line arguments in turn override the corresponding environment variables and matching entries in the   configuration file</li> </ul>"},{"location":"configuration/#configuration_consistency","title":"Consistency across supported configuration types","text":"<p>Note that the various available configuration options are handled consistently across the supported configuration types.</p> <p>For example: to configure EasyBuild to use Lmod as modules tool, the following alternatives are available:</p> <ul> <li>configuration file entry (key-value assignment):</li> </ul> <pre><code>[config]\nmodules-tool = Lmod\n</code></pre> <ul> <li>environment variable (upper case, <code>EASYBUILD_</code> prefix, <code>-</code>'s becomes <code>_</code>'s):</li> </ul> <pre><code>export EASYBUILD_MODULES_TOOL=Lmod\n</code></pre> <ul> <li>command line argument (long options preceded by <code>--</code> and (optionally) using <code>=</code>):</li> </ul> <pre><code>eb --modules-tool=Lmod\n</code></pre> <p>or</p> <pre><code>$ eb --modules-tool Lmod\n</code></pre> <p>For more details w.r.t. each of the supported configuration types, see below.</p>"},{"location":"configuration/#configuration_file","title":"Configuration file(s)","text":""},{"location":"configuration/#list_of_configuration_files","title":"List of used configuration files","text":"<p>The list of configuration files that will be used by EasyBuild is determined in the following order of preference:</p> <ul> <li>the path(s) specified via the command line argument <code>--configfiles</code></li> <li>the path(s) specified via the <code>$EASYBUILD_CONFIGFILES</code> environment variable</li> <li>the default paths for EasyBuild configuration files</li> </ul>"},{"location":"configuration/#default_configuration_files","title":"Default configuration files","text":"<p>By default, EasyBuild will use existing configuration files at the following paths:</p> <ul> <li><code>$dir/easybuild.d/*.cfg</code>, for each directory <code>$dir</code> listed in <code>$XDG_CONFIG_DIRS</code> (where <code>$XDG_CONFIG_DIRS</code>   defaults to <code>/etc</code>)</li> <li><code>$XDG_CONFIG_HOME/easybuild/config.cfg</code> (where <code>$XDG_CONFIG_HOME</code> defaults to <code>$HOME/.config</code>)</li> </ul> <p>Hence, if <code>$XDG_CONFIG_HOME</code> and <code>$XDG_CONFIG_DIRS</code> are not defined, EasyBuild will only consider default configuration files at <code>/etc/easybuild.d/*.cfg</code> and <code>$HOME/.config/easybuild/config.cfg</code>.</p> <p>The configuration file located in <code>$XDG_CONFIG_HOME</code> will be listed after the ones obtained via <code>$XDG_CONFIG_DIRS</code>, such that user-defined configuration settings have preference over system defaults.</p> <p>A detailed overview of the list of default configuration files is available via <code>eb --show-default-configfiles</code> (available since EasyBuild v2.1.0). For example::</p> <pre><code>$ XDG_CONFIG_DIRS=/tmp/etc:/tmp/moreetc eb --show-default-configfiles\nefault list of configuration files:\n\n[with $XDG_CONFIG_HOME: (not set), $XDG_CONFIG_DIRS: /tmp/etc:/tmp/moreetc]\n\n* user-level: ${XDG_CONFIG_HOME:-$HOME/.config}/easybuild/config.cfg\n  -&gt; /home/example/.config/easybuild/config.cfg =&gt; found\n* system-level: ${XDG_CONFIG_DIRS:-/etc}/easybuild.d/*.cfg\n  -&gt; {/tmp/etc, /tmp/moreetc}/easybuild.d/*.cfg =&gt; /tmp/etc/easybuild.d/config.cfg, /tmp/moreetc/easybuild.d/bar.cfg, /tmp/moreetc/easybuild.d/foo.cfg\n\nDefault list of existing configuration files (4): /tmp/etc/easybuild.d/config.cfg, /tmp/moreetc/easybuild.d/bar.cfg, /tmp/moreetc/easybuild.d/foo.cfg, /home/example/.config/easybuild/config.cfg\n</code></pre>"},{"location":"configuration/#multiple-configuration-files","title":"Multiple configuration files","text":"<p>If multiple configuration files are listed via a mechanism listed above, the settings in the last configuration file have preference over the others.</p> <p>Each available configuration file will be used, and the configuration settings specified in these files will be retained according to the order of preference as indicated above: settings in configuration files specified via <code>--configfiles</code> override those in configuration files specified via <code>$EASYBUILD_CONFIGFILES</code>, which in turns override settings in default configuration files.</p>"},{"location":"configuration/#ignored-configuration-files","title":"Ignored configuration files","text":"<p>On top of this, the <code>--ignoreconfigfiles</code> configuration option allows to specify configuration files that should be ignored by EasyBuild (regardless of whether they are specified via any of the options above).</p>"},{"location":"configuration/#configuration-file-format","title":"Configuration file format","text":"<p>The EasyBuild configuration file follows the default Python configuration format as parsed by the <code>configparser</code> module (see <code>http://docs.python.org/2/library/configparser.html</code>_).</p> <p>Configuration files are organized in sections, the section name for a particular configuration setting is indicated in the output of <code>eb --help</code>. Some examples sections are: <code>MAIN</code>, <code>basic</code>, <code>config</code>, <code>informative</code>, <code>override</code>, <code>regtest</code>, <code>software</code>, <code>unittest</code>, etc.</p> <p>Sections are indicated by specifying the section name in square brackets on a dedicated line, e.g., <code>[basic]</code>.</p> <p>Configuration settings are specified in a <code>key = value</code> or <code>key: value</code> format, without using quotes for string-like values. For boolean configuration settings, values that evaluated to <code>True</code> (e.g., <code>true</code>, <code>1</code>, \u2026) are all equivalent to enabling the setting.</p> <p>Comment lines start with a hash character <code>#</code> (just like in Python code).</p> <p>An example configuration file that should make everything clear is shown below.</p> <pre><code>[basic]\n# always enable logging to stdout\nlogtostdout = true\n[config]\n# use Lmod as modules tool\nmodules-tool: Lmod\n# use different default installation path\nprefix=/home/you/work/easybuild/\n</code></pre>"},{"location":"configuration/#configuration_file_templates_constants","title":"Templates and constants supported in configuration files","text":"<p>Two types of template values <code>%(...)s</code> are supported in configuration files:</p> <ul> <li>for configuration options defined in the configuration file (and only those)<ul> <li>syntax: <code>%(opt)s</code>, i.e., using the (lowercase) name of the configuration option</li> </ul> </li> <li>for the default value of selected configuration options (see <code>eb --avail-cfgfile-constants</code>)<ul> <li>syntax: <code>%(DEFAULT_OPT)s</code>, i.e., using the uppercase name of the configuration option and prefixed with <code>DEFAULT_</code></li> </ul> </li> </ul>  <p>Note</p> <p>These template values are only supported in configuration files, not in environment variable values or  command line option values.</p>   <p>Note</p> <p>Using an unknown template value, i.e. either one for a configuration option that was not defined in the configuration file, or a non-existing one for a particular default value, will result in an error like: <code>ConfigParser.InterpolationMissingOptionError: Bad value substitution</code>.</p>"},{"location":"configuration/#example","title":"Example","text":"<p>To include both the (custom) location for the easyconfigs archive repository and the default list of robot search paths in the active robot search path, the following configuration file entry can be used, featuring the template for the <code>repositorypath</code> configuration option and the provided <code>DEFAULT_ROBOT_PATHS</code> constant::</p> <pre><code>[basic]\nrepositorypath = /home/example/easybuild/easyconfigs_archive\nrobot-paths = %(repositorypath)s:%(DEFAULT_ROBOT_PATHS)s\n</code></pre> <p>See also Controlling the robot search path.</p>"},{"location":"configuration/#generating-a-template-configuration-file","title":"Generating a template configuration file","text":"<p>Since EasyBuild v1.10, a command line option <code>--confighelp</code> is available that prints out the help text as an annotated configuration file. This can be used as an empty template configuration file:</p> <pre><code>mkdir -p $HOME/.config/easybuild\neb --confighelp &gt; $HOME/.config/easybuild/config.cfg\n</code></pre> <pre><code>$ head $HOME/.easybuild/config.cfg\n[MAIN]\n# Enable debug log mode (def False)\n#debug=\n# Enable info log mode (def False)\n#info=\n# Enable info quiet/warning mode (def False)\n#quiet=\n\n[basic]\n# Print build overview incl. dependencies (full paths) (def False)\n</code></pre>"},{"location":"configuration/#configuration_env_vars","title":"Environment variables","text":"<p>All configuration settings listed as long options in <code>eb --help</code> can also be specified via <code>EASYBUILD_</code>-prefixed environment variables.</p> <p>Configuration settings specified this way always override the corresponding setting specified in a configuration file.</p> <p>For example, to enable debug logging using an environment variable:</p> <pre><code>export EASYBUILD_DEBUG=1\n</code></pre> <p>More examples of using environment variables to configure EasyBuild are shown in the sections below.</p>  <p>Tip</p> <p>Any configuration option of EasyBuild which can be tuned by command line or via the configuration file, can also be tuned via a corresponding environment variable.</p>   <p>Note</p> <p>If any <code>$EASYBUILD</code>-prefixed environment variables are defined that do not correspond to a known configuration option, EasyBuild will report an error message and exit.</p>"},{"location":"configuration/#configuration_cmdline","title":"Command line arguments","text":"<p>The configuration type with the highest precedence are the <code>eb</code> command line arguments, which override settings specified through environment variables or in configuration files.</p> <p>For some configuration options, both short and long command line arguments are available (see <code>eb --help</code>); the long options indicate how the configuration setting should be specified in a configuration file or via an environment variable (<code>$EASYBUILD_&lt;LONGOPTION&gt;</code>).</p> <p>For boolean configuration settings, both the <code>--&lt;option&gt;</code> and <code>--disable-&lt;option&gt;</code> variants are always available.</p> <p>Examples (more below):</p> <ul> <li>enable debug logging (long option) and logging to stdout (short option)</li> </ul> <pre><code>eb --debug -l ...\n</code></pre> <ul> <li>use <code>/dev/shm</code> as build path, install to temporary install path, disable debug logging</li> </ul> <pre><code>eb --buildpath=/dev/shm --installpath=/tmp/$USER --disable-debug ...\n</code></pre>"},{"location":"configuration/#configuration_show_config","title":"Overview of current configuration","text":"<p>(<code>--show-config</code>, <code>--show-full-config</code>)</p> <p>To get an overview of the current EasyBuild configuration across all configuration types, you can use <code>eb --show-config</code>.</p> <p>The output will specify:</p> <ul> <li>any configuration setting for which the current value is different from the default value </li> <li>a couple of selected important configuration settings (even if they are still set to the default value), i.e.:<ul> <li>build path</li> <li>install path</li> <li>path to easyconfigs repository</li> <li>the robot search path</li> <li>source path</li> </ul> </li> <li>through which configuration type each setting was defined<ul> <li>i.e., default value, configuration file, environment variable or command line argument</li> </ul> </li> </ul> <p>Example output</p> <pre><code>$ cat $HOME/.config/easybuild/config.cfg\n[config]\nbuildpath = /tmp/eb-build\n\n$ export EASYBUILD_MODULES_TOOL=Lmod\n$ export EASYBUILD_OPTARCH=''\n\n$ eb --show-config --installpath=$HOME/apps --job-cores=4\n#\n# Current EasyBuild configuration\n# (C: command line argument, D: default value, E: environment variable, F: configuration file)\n#\nbuildpath      (F) = /tmp/eb-build\ninstallpath    (C) = /Users/example/apps\njob-cores      (C) = 4\nmodules-tool   (E) = Lmod\noptarch        (E) = ''\nrepositorypath (D) = /Users/example/.local/easybuild/ebfiles_repo\nrobot-paths    (D) = /Users/example/easybuild-easyconfigs/easybuild/easyconfigs\nsourcepath     (D) = /Users/example/.local/easybuild/sources\n</code></pre> <p>For a full overview of the current configuration, including all configuration settings, see <code>eb --show-full-config</code>.</p>"},{"location":"configuration/#configuration_available_settings","title":"Available configuration settings","text":"<p>To obtain a full and up-to-date list of available configuration settings, see <code>eb --help</code>. We refrain from listing all available configuration settings here, to avoid outdated documentation.</p> <p>A couple of selected configuration settings are discussed below, in particular the mandatory settings.</p>"},{"location":"configuration/#configuration_mandatory_settings","title":"Mandatory configuration settings","text":"<p>A handful of configuration settings are mandatory, and should be provided using one of the supported configuration types.</p> <p>The following configuration settings are currently mandatory (more details in the sections below):</p> <ul> <li>Source path (--sourcepath)</li> <li>Build path (--buildpath)</li> <li>Software and modules install path (--installpath, --installpath-software, --installpath-modules)</li> <li>Easyconfigs repository (--repository, --repositorypath)</li> <li>Logfile format (--logfile-format)</li> </ul> <p>If any of these configuration settings is not provided in one way or another, EasyBuild will complain and exit.</p> <p>In practice, all of these have reasonable defaults (see <code>eb --help</code> for the default settings).</p>  <p>Note</p> <p>The mandatory path-related options can be tweaked collectively via <code>--prefix</code>, see Overall prefix path (<code>--prefix</code>) for more information.</p>"},{"location":"configuration/#sourcepath","title":"Source path (<code>--sourcepath</code>)","text":"<p>default: <code>$HOME/.local/easybuild/sources/</code> (determined via Overall prefix path (<code>--prefix</code>))</p> <p>The <code>sourcepath</code> configuration setting specifies the parent path of the directory in which EasyBuild looks for software source and install files.</p> <p>Looking for the files specified via the <code>sources</code> parameter in the .eb easyconfig file is done in the following order of preference:</p> <ul> <li><code>&lt;sourcepath&gt;/&lt;name&gt;</code>: a subdirectory determined by the name of the software package</li> <li><code>&lt;sourcepath&gt;/&lt;letter&gt;/&lt;name&gt;</code>:  in the style of the <code>easyblocks</code>/<code>easyconfigs</code> directories: in a   subdirectory determined by the first letter (in lower case) of the software package and by its full <code>name</code></li> <li><code>&lt;sourcepath&gt;</code>: directly in the source path</li> </ul> <p>Note that these locations are also used when EasyBuild looks for patch files in addition to the various <code>easybuild/easyconfigs</code> directories that are listed in the $PYTHONPATH.</p> <p>You can specify multiple paths, separated with <code>:</code>, in which EasyBuild will look for sources, but only the first one will be used for downloading, so one needs to make sure at least the first path is writable by the user invoking <code>eb</code>.</p>"},{"location":"configuration/#buildpath","title":"Build path (<code>--buildpath</code>)","text":"<p>default: <code>$HOME/.local/easybuild/build/</code> (determined via Overall prefix path (<code>--prefix</code>))</p> <p>The <code>buildpath</code> configuration setting specifies the parent path of the (temporary) directories in which EasyBuild builds its software packages.</p> <p>Each software package is (by default) built in a subdirectory of the specified <code>buildpath</code> under <code>&lt;name&gt;/&lt;version&gt;/&lt;toolchain&gt;&lt;versionsuffix&gt;</code>.</p> <p>Note that the build directories are emptied and removed by EasyBuild when the installation is completed (by default).</p>  <p>Tip</p> <p>Using <code>/dev/shm</code> as build path can significantly speed up builds, if it is available and provides a sufficient amount of space. Setting up the variable <code>EASYBUILD_BUILDPATH</code> in your shell startup files makes this default. However be aware that, fi., two parallel GCC builds may fill up <code>/dev/shm</code> !</p>"},{"location":"configuration/#installpath","title":"Software and modules install path","text":"<p>(<code>--installpath</code>, <code>--installpath-software</code>, <code>--installpath-modules</code>)</p> <p>defaults:</p> <ul> <li>software install path: <code>$HOME/.local/easybuild/software</code>  (determined via Overall prefix path (<code>--prefix</code>) and <code>--subdir-software</code>)</li> <li>modules install path: <code>$HOME/.local/easybuild/modules/all</code>  (determined via Overall prefix path (<code>--prefix</code>),   <code>--subdir-modules</code> and <code>--suffix-modules-path</code>)</li> </ul> <p>There are several ways in which the software and modules install path used by EasyBuild can be configured:</p> <ul> <li>using the direct configuration options <code>--installpath-software</code> and <code>--installpath-modules</code> (see below)</li> <li>via the parent install path configuration option <code>--installpath</code> (see below)</li> <li>via the overall prefix path configuration option <code>--prefix</code> (see Overall prefix path (<code>--prefix</code>)][prefix])</li> </ul>"},{"location":"configuration/#installpath_direct_options","title":"Direct options","text":"<p>(<code>--installpath-software</code> and <code>--installpath-modules</code>)</p> <p>default: (no default specified)</p> <p>The <code>--installpath-software</code> and <code>--installpath-modules</code> configuration options (available since EasyBuild v2.1.0) allow to directly specify the software and modules install paths, respectively.</p> <p>These configuration options have precedence over all of the other configuration options that relate to specifying the install path for software and/or modules (see below).</p>"},{"location":"configuration/#parent_installpath","title":"Parent install path: <code>--installpath</code>","text":"<p>default: (no default specified)</p> <p>The <code>--installpath</code> configuration option specifies the parent path of the directories in which EasyBuild should install software packages and the corresponding module files.</p> <p>The install path for software and modules specifically is determined by combining <code>--installpath</code> with <code>--subdir-software</code>, and combining <code>--installpath</code> with <code>--subdir-modules</code> and <code>--suffix-modules-path</code>, respectively.</p> <p>For more information on these companion configuration options, see Software and modules install path subdirectories (<code>--subdir-software</code>, <code>--subdir-modules</code>, <code>--suffix-modules-path</code>).</p>"},{"location":"configuration/#full-install-path-for-software-and-module-file","title":"Full install path for software and module file","text":"<p>The full software and module install paths for a particular software package are determined by the active module naming scheme along with the general software and modules install paths specified by the EasyBuild configuration.</p> <p>Both the software itself and the corresponding module file will be installed in a subdirectory of the corresponding install path named according to the active module naming scheme (default format: <code>&lt;name&gt;/&lt;version&gt;-&lt;toolchain&gt;&lt;versionsuffix&gt;</code>). Additionally, symlinks to the actual module file are installed in a subdirectory of the modules install path named according to the value of the <code>moduleclass</code> easyconfig parameter.</p> <p>For more information on the module naming scheme used by EasyBuild, see Active module naming scheme (<code>--module-naming-scheme</code>).</p>"},{"location":"configuration/#updating-modulepath","title":"Updating <code>$MODULEPATH</code>","text":"<p>To make the modules generated by EasyBuild available, the <code>$MODULEPATH</code> environment variable must be updated to include the modules install path.</p> <p>The recommended way to do this is to use the <code>module use</code> command. For example:</p> <pre><code>eb --installpath=$HOME/easybuild\nmodule use $HOME/easybuild/modules/all\n</code></pre> <p>It is probably a good idea to add this to your (favourite) shell <code>.rc</code> file, e.g., <code>~/.bashrc</code>, and/or the <code>~/.profile</code> login scripts, so you do not need to adjust <code>$MODULEPATH</code> every time you start a new session.</p>  <p>Note</p> <p>Updating <code>$MODULEPATH</code> is not required for EasyBuild itself, since <code>eb</code> updates <code>$MODULEPATH</code> itself at runtime according to the modules install path it is configured with.</p>"},{"location":"configuration/#easyconfigs_repo","title":"Easyconfigs repository (<code>--repository</code>, <code>--repositorypath</code>)","text":"<p>default: <code>FileRepository</code> at <code>$HOME/.local/easybuild/ebfiles_repo</code> (determined via Overall prefix path (<code>--prefix</code>)][prefix])</p> <p>EasyBuild has support for archiving (tested) <code>.eb</code> easyconfig files. After successfully installing a software package using EasyBuild, the corresponding <code>.eb</code> file is uploaded to a repository defined by the <code>repository</code> and <code>repositorypath</code> configuration settings.</p> <p>Currently, EasyBuild supports the following repository types (see also <code>eb --avail-repositories</code>):</p> <ul> <li><code>FileRepository('path', 'subdir')</code>: a plain flat file repository;   <code>path</code> is the path where files will be stored, <code>subdir</code> is an   optional subdirectory of that path where the files should be stored</li> <li><code>GitRepository('path', 'subdir/in/repo'</code>: a non-empty bare   git repository (created with <code>git init --bare</code> or <code>git clone --bare</code>);   <code>path</code> is the path to the git repository (can also be a URL);   <code>subdir/in/repo</code> is optional, and specifies a subdirectory of the   repository where files should be stored in</li> <li><code>SvnRepository('path', 'subdir/in/repo')</code>: an SVN repository;   <code>path</code> contains the subversion repository location (directory or   URL), the optional second value specifies a subdirectory in the repository</li> </ul> <p>You need to set the <code>repository</code> setting inside a configuration file like this:</p> <pre><code>[config]\nrepository = FileRepository\nrepositorypath = &lt;path&gt;\n</code></pre> <p>Or, optionally an extra argument representing a subdirectory can be specified, e.g.:</p> <pre><code>export EASYBUILD_REPOSITORY=GitRepository\nexport EASYBUILD_REPOSITORYPATH=&lt;path&gt;,&lt;subdir&gt;\n</code></pre> <p>You do not have to worry about importing these classes, EasyBuild will make them available to the configuration file.</p> <p>Using <code>git</code> requires the <code>GitPython</code> Python modules, using <code>svn</code> requires the <code>pysvn</code> Python module (see Dependencies).</p> <p>If access to the easyconfigs repository fails for some reason (e.g., no network or a missing required Python module), EasyBuild will issue a warning. The software package will still be installed, but the (successful) easyconfig will not be automatically added to the archive (i.e., it is not considered a fatal error).</p>"},{"location":"configuration/#logfile_format","title":"Logfile format (<code>--logfile-format</code>)","text":"<p>default: <code>easybuild, easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log</code></p> <p>The <code>logfile format</code> configuration setting contains a tuple specifying a log directory name and a template log file name. In both of these values, using the following string templates is supported:</p> <ul> <li><code>%(name)s</code>: the name of the software package to install</li> <li><code>%(version)s</code>: the version of the software package to install</li> <li><code>%(date)s</code>: the date on which the installation was performed (in <code>YYYYMMDD</code> format, e.g. <code>20120324</code>)</li> <li><code>%(time)s</code>: the time at which the installation was started (in <code>HHMMSS</code> format, e.g. <code>214359</code>)</li> </ul>  <p>Note</p> <p>Because templating is supported in configuration files themselves (see Templates and constants supported in configuration files), the '<code>%</code>' character in these template values must be escaped when used in a configuration file (and only then), e.g., '<code>%%(name)s</code>'. Without escaping, an error like <code>InterpolationMissingOptionError: Bad value substitution</code> will be thrown by <code>ConfigParser</code>.</p>  <p>For example, configuring EasyBuild to generate a log file mentioning only the software name in a directory named <code>easybuild</code> can be done via the <code>--logfile-format</code> command line option:</p> <pre><code>eb --logfile-format=\"easybuild,easybuild-%(name)s.log\" ...\n</code></pre> <p>or the <code>$EASYBUILD_LOGFILE_FORMAT</code> environment variable:</p> <pre><code>export EASYBUILD_LOGFILE_FORMAT=\"easybuild,easybuild-%(name)s.log\"\n</code></pre> <p>or by including the following in an EasyBuild configuration file (note the use of '<code>%%</code>' to escape the <code>name</code> template value here):</p> <pre><code>logfile-format = easybuild,easybuild-%%(name)s.log\n</code></pre>"},{"location":"configuration/#configuration_optional_settings","title":"Optional configuration settings","text":"<p>The subsections below discuss a couple of commonly used optional configuration settings.</p>"},{"location":"configuration/#prefix","title":"Overall prefix path (<code>--prefix</code>)","text":"<p>default: <code>$HOME/.local/easybuild</code></p> <p>The overall prefix path used by EasyBuild can be specified using the <code>--prefix</code> configuration option.</p> <p>This affects the default value of several configuration options:</p> <ul> <li>source path</li> <li>build path</li> <li>software and modules install path</li> <li>easyconfigs repository path</li> <li>package path</li> <li>container path</li> </ul>"},{"location":"configuration/#installpath_subdirs","title":"Software and modules install path subdirectories","text":"<p>(<code>--subdir-software</code>, <code>--subdir-modules</code>, <code>--suffix-modules-path</code>)</p> <p>defaults:</p> <ul> <li>software install path subdirectory (<code>--subdir-software</code>): <code>software</code></li> <li>modules install path subdirectory (<code>--subdir-modules</code>): <code>modules</code></li> <li>modules install path suffix (<code>--suffix-modules-path</code>): <code>all</code></li> </ul> <p>The subdirectories for the software and modules install paths (relative to <code>--installpath</code>, see install path) can be specified using the corresponding dedicated configuration options (available since EasyBuild v1.14.0).</p> <p>For example:</p> <pre><code>export EASYBUILD_SUBDIR_SOFTWARE=installs\neb --installpath=$HOME/easybuild --subdir-modules=module_files ...\n</code></pre>"},{"location":"configuration/#modules_tool","title":"Modules tool (<code>--modules-tool</code>)","text":"<p>default: <code>Lmod</code></p> <p>Specifying the modules tool that should be used by EasyBuild can be done using the <code>modules-tool</code> configuration setting. A list of supported modules tools can be obtained using <code>eb --avail-modules-tools</code>.</p> <p>Currently, the following modules tools are supported:</p> <ul> <li><code>Lmod</code> (default): Lmod, an modern alternative to environment modules, written in Lua (<code>lmod</code>)</li> <li><code>EnvironmentModules</code>: modern Tcl-only version of environment modules (4.x) (<code>modulecmd.tcl</code>)</li> <li><code>EnvironmentModulesC</code>: Tcl/C version of environment modules, usually version 3.2.10 (<code>modulecmd</code>)</li> <li><code>EnvironmentModulesTcl</code>: (ancient) Tcl-only version of environment modules (<code>modulecmd.tcl</code>)</li> </ul> <p>You can determine which modules tool you are using by checking the output of <code>type -f module</code> (in a <code>bash</code> shell), or <code>alias module</code> (in a <code>tcsh</code> shell).</p> <p>The actual module command (i.e., <code>modulecmd</code>, <code>modulecmd.tcl</code>, <code>lmod</code>, ...) must be available via <code>$PATH</code> (which is not standard), except when using Lmod (in that case the <code>lmod</code> binary can also be located via <code>$LMOD_CMD</code>).</p> <p>For example, to indicate that EasyBuild should be using <code>Lmod</code> as modules tool:</p> <pre><code>eb --modules-tool=Lmod ...\n</code></pre>"},{"location":"configuration/#module_naming_scheme","title":"Active module naming scheme (<code>--module-naming-scheme</code>)","text":"<p>default: <code>EasyBuildModuleNamingScheme</code></p> <p>The module naming scheme that should be used by EasyBuild can be specified using the <code>module-naming-scheme</code> configuration setting.</p> <pre><code>eb --module-naming-scheme=HierarchicalMNS ...\n</code></pre> <p>For more details, see the dedicated page on using a custom module naming scheme.</p>"},{"location":"configuration/#module_syntax","title":"Module files syntax (<code>--module-syntax</code>)","text":"<p>default: <code>Lua</code></p> <p>supported since: EasyBuild v2.1</p> <p>The syntax to use for generated module files can be specified using the <code>--module-syntax</code> configuration setting.</p> <p>Possible values are:</p> <ul> <li><code>Lua</code>: generate module files in Lua syntax<ul> <li>this requires the use of Lmod as a modules tool to consume the module files (see modules tool)</li> <li>module file names will have the <code>.lua</code> extension</li> </ul> </li> <li><code>Tcl</code>: generate module files in Tcl syntax<ul> <li>Tcl module files can be consumed by all supported modules tools</li> <li>module files will contain a header string <code>#%Module</code> indicating that they are composed in Tcl syntax</li> </ul> </li> </ul>  <p>Note</p> <p>Lmod is able to deal with having module files in place in both Tcl and Lua syntax. When a module file in Lua syntax (i.e., with a <code>.lua</code> file name extension) is available, a Tcl module file with the same name will be ignored. The Tcl-based environment modules tool will simply ignore module files in Lua syntax, since they do not contain the header string that is included in Tcl module files.</p>   <p>Note</p> <p>Using module files in Lua syntax has the advantage that Lmod does not need to translate from Lua to Tcl internally when processing the module files, which benefits responsiveness of Lmod when used interactively by users. In terms of Lmod-specific aspects of module files, the syntax of the module file does not matter; Lmod-specific statements supported by EasyBuild can be included in Tcl module files as well, by guarding them by a condition that only evaluates positively when Lmod is consuming the module file, i.e. '<code>if { [ string match \"*tcl2lua.tcl\" $env(_) ] } { ... }</code>'. Only conditional load statements like '<code>load(atleast(\"gcc\",\"4.8\"))</code>' can only be used in Lua module files.</p>"},{"location":"containers/","title":"Generating container recipes &amp; images","text":"<p>EasyBuild has support for generating Singularity and Docker container recipes which will use EasyBuild to build and install a specified software stack. In addition, EasyBuild can (optionally) leverage the build tool provided by the container software of choice to create container images.</p>  <p>Note</p> <p>The features documented here have been available since EasyBuild v3.6.0 but are still experimental, which implies they are subject to change in upcoming versions of EasyBuild.</p> <p>You will need to enable the <code>--experimental</code> configuration option in order to use them.</p> <p>See Experimental features for more information.</p>  <p>Initially (since EasyBuild v3.6.0), only Singularity (https://www.sylabs.io/singularity) was supported. Since EasyBuild v3.6.2, generating (recipes for) Docker (https://www.docker.com/) containers is also supported.</p> <p>In EasyBuild v3.9.2 the support for generating Singularity container recipes/images was enhanced significantly.</p>"},{"location":"containers/#containers_req","title":"Requirements","text":"<ul> <li>Docker, or Singularity version 2.4 (or more recent, incl. version 3.x)</li> <li><code>sudo</code> permissions (only required to actually build container images,   see Building container images)</li> </ul>"},{"location":"containers/#containers_usage","title":"Usage","text":""},{"location":"containers/#containers_usage_containerize","title":"Generating container recipes","text":"<p>(<code>--containerize</code> / <code>-C</code>)</p> <p>To generate container recipes, use <code>eb --containerize</code>, or <code>eb -C</code> for short.</p> <p>The resulting container recipe will, in turn, leverage EasyBuild to build and install the software that corresponds to the easyconfig files that are specified as arguments to the <code>eb</code> command (and all required dependencies, if needed).</p>  <p>Note</p> <p>EasyBuild will refuse to overwrite existing container recipes.</p> <p>To re-generate an already existing recipe file, use the <code>--force</code> command line option.</p>"},{"location":"containers/#containers_usage_template_recipe","title":"Container template recipe","text":"<p>(<code>--container-template-recipe</code>)</p> <p>Via the <code>--container-template-recipe</code> configuration option, you can specify a specific container template recipe that EasyBuild should use to generate container recipes.</p> <p>This gives you control over a variety of aspects, including:</p> <ul> <li>the operating system (version) used in the container image</li> <li>the location where EasyBuild installs software within the container</li> <li>how EasyBuild is configured when installing software in the container</li> <li>etc.</li> </ul> <p>When generating container recipes, EasyBuild will replace the following template values:</p> <ul> <li><code>%(bootstrap)s</code>: bootstrap agent to use<ul> <li>see also https://www.sylabs.io/guides/latest/user-guide/definition_files.html#header</li> </ul> </li> <li><code>%(bootstrap_config)s</code>: configuration for the bootstrap agent<ul> <li>this is expected to include lines that specify <code>From:</code>, <code>MirrorURL:</code>, etc.</li> <li>for more information, see Container configuration</li> </ul> </li> <li><code>%(easyconfigs)s</code>: (list of) easyconfig file name(s)/path(s) to pass to <code>eb</code> command</li> <li><code>%(eb_args)s</code>: additional arguments for 'eb' command</li> <li><code>%(include)s</code>: list of additional OS packages to include<ul> <li>see also include keyword: OS packages to include</li> </ul> </li> <li><code>%(install_eb)s</code>: list of commands to install EasyBuild</li> <li><code>%(install_os_deps)s</code>: list of commands to install required OS packages (for example <code>yum install -y openssl</code>)<ul> <li>incl. <code>osdependencies</code> specified in easyconfig files</li> </ul> </li> <li><code>%(mirrorurl)</code>: URI to use to download OS<ul> <li>see also mirrorurl keyword: mirror URL to use to download OS</li> </ul> </li> <li><code>%(modname)s</code>: module name(s) to load in environment</li> <li><code>%(osversion)</code>: OS version to use<ul> <li>see also osversion keyword: OS version to use</li> </ul> </li> <li><code>%(post_commands)s</code>: additional commands for the <code>post</code> section of the   (Singularity) container recipe</li> </ul>"},{"location":"containers/#containers_usage_config","title":"Container configuration","text":"<p>(<code>--container-config</code>)</p> <p>Using <code>--container-config</code>, values for specific template values can be specified.</p> <p>Values can be specified as a comma-separated list of <code>&lt;key&gt;=&lt;value&gt;</code> pairs; for example: <code>--container-config bootstrap=localimage,from:example.sif</code>.</p> <p>Currently supported keywords include:</p> <ul> <li><code>bootstrap</code>: bootstrap agent to use<ul> <li>two types of values are supported:<ul> <li>Image-based bootstrap agents</li> <li>Linux distro bootstrap agents</li> </ul> </li> </ul> </li> <li><code>eb_args</code>: additional arguments for 'eb' command</li> <li><code>from</code>: argument to pass to bootstrap agent<ul> <li>required/only valid with <code>docker</code>, <code>library</code>, <code>localimage</code> and <code>shub</code> bootstrap agents</li> <li>for more details, see Image-based bootstrap agents</li> </ul> </li> <li><code>include</code>: list of additional OS packages to include<ul> <li>see also include keyword: OS packages to include</li> </ul> </li> <li><code>install_eb</code>: commands to install EasyBuild</li> <li><code>mirrorurl</code>: URI to use to download OS<ul> <li>see also mirrorurl keyword: mirror URL to use to download OS</li> </ul> </li> <li><code>osversion</code>: OS version to use<ul> <li>see also osversion keyword: OS version to use</li> </ul> </li> <li><code>post_commands</code>: additional commands for <code>post</code> section of   (Singularity) container recipe</li> </ul> <p>For more details on the last three, see Linux distro bootstrap agents.</p>  <p>Note</p> <p>Specifying any unknown keywords will results in an error.</p>"},{"location":"containers/#container_bootstrap_agent_image_based","title":"Image-based bootstrap agents","text":"<p>(e.g. <code>docker</code>, <code>library</code>, <code>localimage</code>, <code>shub</code>)</p> <p>These bootstrap agents involve using an existing container image as a base.</p> <p>Supported values include:</p> <ul> <li><code>docker</code>: base container image hosted on Docker Hub   (https://hub.docker.com/)</li> <li><code>library</code>: base container image hosted on Sylabs Container Library   (https://cloud.sylabs.io/)</li> <li><code>localimage</code>: local base container image file</li> <li><code>shub</code>: base container image hosted on Singularity Hub   (https://singularity-hub.org/)</li> </ul> <p>The <code>from</code> keyword must also be specified when using one of these bootstrap agents.</p> <p>The <code>localimage</code> bootstrap agents corresponds to using a local container image file as a base, where it's path is specified using the <code>from</code> keyword. For example: \"<code>bootstrap=localimage,from=/home/example/base.sif</code>\".</p> <p>Each of the other image-based bootstrap agents imply that the container image to use as a base is downloaded from the corresponding registry, ad specified through the <code>from</code> keyword, with a specific format:</p> <ul> <li>for <code>docker</code> bootstrap agent: <code>&lt;registry&gt;/&lt;namespace&gt;/&lt;container&gt;:&lt;tag&gt;@&lt;digest&gt;</code></li> <li>for <code>library</code> bootstrap agent: <code>&lt;entity&gt;/&lt;collection&gt;/&lt;container&gt;:&lt;tag&gt;</code></li> <li>for <code>shub</code> bootstrap agent: <code>&lt;registry&gt;/&lt;username&gt;/&lt;container-name&gt;:&lt;tag&gt;@digest</code></li> </ul> <p>For more details, see https://www.sylabs.io/guides/latest/user-guide/appendix.html#build-modules.</p>"},{"location":"containers/#containers_usage_container_base_image_requirements","title":"Requirements for base container image","text":"<p>There are a couple of specific requirements for the base container image:</p> <ul> <li>all dependencies of EasyBuild must be installed, including:<ul> <li>Python 2.7 or 3.6+</li> <li>Lmod</li> <li>standard tools &amp; utilities like <code>make</code>, <code>patch</code>, <code>tar</code>, etc.</li> <li>OS packages for system libraries like OpenSSL</li> </ul> </li> </ul> <p>See also Requirements</p> <p>Each generated container recipe will include commands to create the <code>easybuild</code> user if it doesn't exist yet, as well as commands to create the <code>/app</code> and <code>/scratch</code> directories and give the <code>easybuild</code> user write permissions to those locations.</p>  <p>Note</p> <p>The generated container recipe currently hardcodes some of this. We intend to make this more configurable in a future version of EasyBuild.</p>"},{"location":"containers/#container_bootstrap_agent_linux_distro","title":"Linux distro bootstrap agents","text":"<p>(e.g. <code>arch</code>, <code>busybox</code>, <code>debootstrap</code>, <code>yum</code>, <code>zypper</code>)</p> <p>Dedicated bootstrap agents are supported for different flavors of Linux distributions, including:</p> <ul> <li><code>arch</code>: Arch Linux</li> <li><code>busybox</code>: BusyBox Linux</li> <li><code>debootstrap</code>: apt-based systems like Ubuntu/Debian</li> <li><code>yum</code>: yum-based systems like CentOS</li> <li><code>zypper</code>: zypper-based systems like openSUSE</li> </ul> <p>When one of these bootstrap agents is used, additional keywords can be specified:</p> <ul> <li>include keyword: OS packages to include</li> <li>mirrorurl keyword: mirror URL to use to download OS</li> <li>osversion keyword: OS version to use</li> </ul>"},{"location":"containers/#container_bootstrap_agent_linux_distro_include","title":"<code>include</code> keyword: OS packages to include","text":"<p>Via the <code>include</code> keywords, a list of packages can be specified that should be include on top of the base OS installation.</p> <p>For some bootstrap agents, a default value is used if no value is specified:</p> <ul> <li>for the <code>yum</code> bootstrap agent: <code>yum</code></li> <li>for the <code>zypper</code> bootstrap agent: <code>zypper</code></li> </ul> <p>See also https://www.sylabs.io/guides/latest/user-guide/appendix.html#yum-bootstrap-agent and https://www.sylabs.io/guides/latest/user-guide/appendix.html#zypper-bootstrap-agent.</p>"},{"location":"containers/#container_bootstrap_agent_linux_distro_mirrorurl","title":"<code>mirrorurl</code> keyword: mirror URL to use to download OS","text":"<p>For most of the Linux distro bootstrap agents (all except <code>arch</code>), Singularity requires that a mirror URL is specified that will be used when downloading the corresponding OS.</p> <p>You can specify a value using the <code>mirrorurl</code> keyword. For example: \"<code>bootstrap=yum,mirrorurl=https://example.com</code>\".</p> <p>EasyBuild will use a default value for <code>mirrorurl</code> if no other value is specified:</p> <ul> <li><code>busybox</code>:   <code>https://www.busybox.net/downloads/binaries/%{OSVERSION}/busybox-x86_64</code></li> <li><code>debootstrap</code>: <code>http://us.archive.ubuntu.com/ubuntu/</code></li> <li><code>yum</code>:   <code>http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/x86_64/</code></li> <li><code>zypper</code>::   <code>http://download.opensuse.org/distribution/leap/%{OSVERSION}/repo/oss/</code></li> </ul>"},{"location":"containers/#container_bootstrap_agent_linux_distro_osversion","title":"<code>osversion</code> keyword: OS version to use","text":"<p>Using the <code>osversion</code> keyword you can specify which OS version should be installed.</p> <p>Note that is this only required/used if value for the <code>mirrorurl</code> value contains <code>%{OSVERSION}s</code>.</p> <p>For example: \"<code>bootstrap=yum,osversion=7</code>\".</p>"},{"location":"containers/#containers_usage_build_image","title":"Building container images","text":"<p>(<code>--container-build-image</code>)</p> <p>To instruct EasyBuild to also build a container image from the generated container recipe, use <code>--container-build-image</code> (in combination with <code>-C</code> or <code>--containerize</code>).</p> <p>EasyBuild will leverage functionality provided by the container software of choice (see Type of container recipe/image to generate) to build the container image.</p> <p>For example, in the case of Singularity, EasyBuild will run <code>sudo /path/to/singularity build</code> on the generated container recipe.</p>  <p>Note</p> <p>In order to leverage the image building functionality of the container software, admin privileges are typically required. Therefore, EasyBuild will run the command to build the container image with <code>sudo</code>. You may need to enter your password to let the command execute.</p> <p>EasyBuild will only run the actual container image build command with <code>sudo</code>. It will not use elevated privileges for anything else.</p> <p>In case of doubt, you can use <code>--extended-dry-run</code> or <code>-x</code> do perform a dry run, so you can evaluate which commands will be executed (see also Extended dry run.</p> <p>If you're not comfortable with this, you can just let EasyBuild generate the container recipe, and then use that to build the actual container images yourself, either locally or through Singularity Hub (https://singularity-hub.org).</p>  <p>The container image will be placed in the location specified by the <code>--containerpath</code> configuration option (see Location for generated container recipes &amp; images), next to the generated container recipe that was used to build the image.</p>  <p>Note</p> <p>When building container images, make sure to use a file system location with sufficient available storage space. Singularity may pull metadata during the build, and each image can range from several hundred MBs to GBs, depending on software stack you are including in the container image.</p>   <p>Note</p> <p>EasyBuild will refuse to overwrite existing container images.</p> <p>To re-generate an already existing image file, use the <code>--force</code> command line option.</p>"},{"location":"containers/#containers_usage_example","title":"Example usage","text":"<p>In this example, we will use a pre-built base container image located at <code>example.sif</code> (see also Image-based bootstrap agents).</p> <p>To let EasyBuild generate a container recipe for GCC 6.4.0 + binutils 2.28:</p> <pre><code>eb GCC-6.4.0-2.28.eb --containerize --container-config bootstrap=localimage,from=example.sif --experimental\n</code></pre> <p>With other configuration options left to default (see output of <code>eb --show-config</code>), this will result in a Singularity container recipe using <code>example.sif</code> as base image, which will be stored in <code>$HOME/.local/easybuild/containers</code>:</p> <pre><code>$ eb GCC-6.4.0-2.28.eb --containerize --container-config bootstrap=localimage,from=example.sif --experimental\n== temporary log file in case of crash /tmp/eb-dLZTNF/easybuild-LPLeG0.log\n== Singularity definition file created at /home/example/.local/easybuild/containers/Singularity.GCC-6.4.0-2.28\n== Temporary log file(s) /tmp/eb-dLZTNF/easybuild-LPLeG0.log* have been removed.\n== Temporary directory /tmp/eb-dLZTNF has been removed.\n</code></pre> <p>Docker supports a limited set of the container options. Example of commands that can be used to generate Docker containers are:</p> <pre><code>eb  --containerize --container-type=docker --experimental --container-config=ubuntu:20.04 zlib-1.2.11.eb\neb  --containerize --container-type=docker --experimental --container-config=centos:7 zlib-1.2.11.eb\n</code></pre>"},{"location":"containers/#containers_example_recipe","title":"Example of a generated container recipe","text":"<p>Below is an example of container recipe for that was generated by EasyBuild, using the following command:</p> <pre><code>eb Python-3.6.4-foss-2018a.eb -C --container-config bootstrap=yum,osversion=7 --experimental\n</code></pre> <pre><code>Bootstrap: yum\nOSVersion: 7\nMirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/x86_64/\nInclude: yum\n\n%post\nyum install --quiet --assumeyes epel-release\nyum install --quiet --assumeyes python setuptools Lmod\nyum install --quiet --assumeyes python-pip\nyum install --quiet --assumeyes bzip2 gzip tar zip unzip xz\nyum install --quiet --assumeyes curl wget\nyum install --quiet --assumeyes patch make\nyum install --quiet --assumeyes file git which\nyum install --quiet --assumeyes gcc-c++\nyum install --quiet --assumeyes perl-Data-Dumper\nyum install --quiet --assumeyes perl-Thread-Queue\nyum --skip-broken --quiet --assumeyes install libibverbs-dev libibverbs-devel rdma-core-devel\nyum --skip-broken --quiet --assumeyes install openssl-devel libssl-dev libopenssl-devel\n\n# install EasyBuild using pip\npip install -U setuptools\npip install 'vsc-install&lt;0.11.4' 'vsc-base&lt;2.9.0'\npip install easybuild\n\n# create 'easybuild' user (if missing)\nid easybuild || useradd easybuild\n\n# create /app software installation prefix + /scratch sandbox directory\nif [ ! -d /app ]; then mkdir -p /app; chown easybuild:easybuild -R /app; fi\nif [ ! -d /scratch ]; then mkdir -p /scratch; chown easybuild:easybuild -R /scratch; fi\n\n# install Lmod RC file\ncat &gt; /etc/lmodrc.lua &lt;&lt; EOF\nscDescriptT = {\n  {\n    [\"dir\"]       = \"/app/lmodcache\",\n    [\"timestamp\"] = \"/app/lmodcache/timestamp\",\n  },\n}\nEOF\n\n# change to 'easybuild' user\nsu - easybuild\n\n# verbose commands, exit on first error\nset -ve\n\n# configure EasyBuild\n\n# use /scratch as general prefix, used for sources, build directories, etc.\nexport EASYBUILD_PREFIX=/scratch\n\n# also use /scratch for temporary directories\nexport EASYBUILD_TMPDIR=/scratch/tmp\n\n# download sources to /scratch/sources, but also consider files located in /tmp/easybuild/sources;\n# that way, source files that can not be downloaded can be seeded in\nexport EASYBUILD_SOURCEPATH=/scratch/sources:/tmp/easybuild/sources\n\n# install software &amp; modules into /app\nexport EASYBUILD_INSTALLPATH=/app\n\n# use EasyBuild to install specified software\neb Python-3.6.4-foss-2018a.eb --robot\n\n# update Lmod cache\nmkdir -p /app/lmodcache\n$LMOD_DIR/update_lmod_system_cache_files -d /app/lmodcache -t /app/lmodcache/timestamp /app/modules/all\n\n# exit from 'easybuild' user\nexit\n\n# cleanup, everything in /scratch is assumed to be temporary\nrm -rf /scratch/*\n\n%runscript\neval \"$@\"\n\n%environment\n# make sure that 'module' and 'ml' commands are defined\nsource /etc/profile\n# increase threshold time for Lmod to write cache in $HOME (which we don't want to do)\nexport LMOD_SHORT_TIME=86400\n# purge any modules that may be loaded outside container\nmodule --force purge\n# avoid picking up modules from outside of container\nmodule unuse $MODULEPATH\n# pick up modules installed in /app\nmodule use /app/modules/all\n# load module(s) corresponding to installed software\nmodule load Python/3.6.4-foss-2018a\n\n%labels\n</code></pre> <p>The generated container recipe includes a bunch of <code>yum install</code> commands to install additional required/useful OS packages, <code>pip install</code> commands to install EasyBuild (if it's not installed yet), commands to create the <code>easybuild</code> user and provide write access to the <code>/app</code> and <code>/scratch</code> directories, and to configure Lmod and update the Lmod cache after software was installed with EasyBuild.</p> <p>In addition, the generated module files will follow the default module naming scheme (<code>EasyBuildMNS</code>). The modules that correspond to the easyconfig files that were specified on the command line will be loaded automatically, see the statements in the <code>%environment</code> section of the generated container recipe.</p>"},{"location":"containers/#containers_example_build_image","title":"Example of building container image","text":"<p>You can instruct EasyBuild to also build the container image by also using <code>--container-build-image</code>.</p> <p>Note that you will need to enter your <code>sudo</code> password (unless you recently executed a <code>sudo</code> command in the same shell session):</p> <pre><code>$ eb GCC-6.4.0-2.28.eb --containerize --container-config bootstrap=localimage,from=/tmp/example.sif --container-build-image --experimental\n== temporary log file in case of crash /tmp/eb-aYXYC8/easybuild-8uXhvu.log\n== Singularity tool found at /usr/bin/singularity\n== Singularity version '2.4.6' is 2.4 or higher ... OK\n== Singularity definition file created at /home/example/.local/easybuild/containers/Singularity.GCC-6.4.0-2.28\n== Running 'sudo /usr/bin/singularity build  /home/example/.local/easybuild/containers/GCC-6.4.0-2.28.sif /home/example/.local/easybuild/containers/Singularity.GCC-6.4.0-2.28', you may need to enter your 'sudo' password...\n== (streaming) output for command 'sudo /usr/bin/singularity build  /home/example/.local/easybuild/containers/GCC-6.4.0-2.28.sif /home/example/.local/easybuild/containers/Singularity.GCC-6.4.0-2.28':\nUsing container recipe deffile: /home/example/.local/easybuild/containers/Singularity.GCC-6.4.0-2.28\nSanitizing environment\nAdding base Singularity environment to container\n...\n== temporary log file in case of crash /scratch/tmp/eb-WnmCI_/easybuild-GcKyY9.log\n== resolving dependencies ...\n...\n== building and installing GCCcore/6.4.0...\n...\n== building and installing binutils/2.28-GCCcore-6.4.0...\n...\n== building and installing GCC/6.4.0-2.28...\n...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file(s) /app/software/GCC/6.4.0-2.28/easybuild/easybuild-GCC-6.4.0-20180424.084946.log\n== Build succeeded for 15 out of 15\n...\nBuilding Singularity image...\nSingularity container built: /home/example/.local/easybuild/containers/GCC-6.4.0-2.28.sif\nCleaning up...\n== Singularity image created at /home/example/.local/easybuild/containers/GCC-6.4.0-2.28.sif\n== Temporary log file(s) /tmp/eb-aYXYC8/easybuild-8uXhvu.log* have been removed.\n== Temporary directory /tmp/eb-aYXYC8 has been removed.\n</code></pre> <p>The inspect the container image, you can use <code>singularity shell</code> to start a shell session in the container:</p> <pre><code>$ singularity shell --shell \"/bin/bash --norc\" $HOME/.local/easybuild/containers/GCC-6.4.0-2.28.sif\n\nSingularity GCC-6.4.0-2.28.sif:~&gt; module list\n\nCurrently Loaded Modules:\n  1) GCCcore/6.4.0   2) binutils/2.28-GCCcore-6.4.0   3) GCC/6.4.0-2.28\n\nSingularity GCC-6.4.0-2.28.sif:~&gt; which gcc\n/app/software/GCCcore/6.4.0/bin/gcc\n\nSingularity GCC-6.4.0-2.28.sif:~&gt; gcc --version\ngcc (GCC) 6.4.0\n...\n</code></pre>  <p>Note</p> <p>We are passing <code>--shell \"/bin/bash --norc</code> to <code>singularity shell</code> to avoid that the <code>.bashrc</code> login script that may be present in your home directory is sourced, since that may include statements that are not relevant in the container environment.</p>  <p>Or, you can use <code>singularity exec</code> to execute a command in the container.</p> <p>Compare the output of running <code>which gcc</code> and <code>gcc --version</code> locally:</p> <pre><code>$ which gcc\n/usr/bin/gcc\n$ gcc --version\ngcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-16)\n...\n</code></pre> <p>and the output when running the same commands in the container:</p> <pre><code>$ singularity exec GCC-6.4.0-2.28.sif which gcc\n/app/software/GCCcore/6.4.0/bin/gcc\n\n$ singularity exec GCC-6.4.0-2.28.sif gcc --version\ngcc (GCC) 6.4.0\n...\n</code></pre>"},{"location":"containers/#configuration","title":"Configuration","text":"<p>Note</p> <p>You can specify each of these configuration options either as options to the <code>eb</code> command, via the equivalent <code>$EASYBUILD_CONTAINER*</code> environment variable, or via an EasyBuild configuration file; see Supported configuration types.</p>"},{"location":"containers/#containers_cfg_path","title":"Location for generated container recipes &amp; images","text":"<p>(<code>--containerpath</code>)</p> <p>To control the location where EasyBuild will put generated container recipes &amp; images, use the <code>--containerpath</code> configuration setting. Next to providing this as an option to the <code>eb</code> command, you can also define the <code>$EASYBUILD_CONTAINERPATH</code> environment variable or specify <code>containerpath</code> in an EasyBuild configuration file.</p> <p>The default value for this location is <code>$HOME/.local/easybuild/containers</code>, unless the <code>--prefix</code> configuration setting was provided, in which case it becomes <code>&lt;prefix&gt;/containers</code> (see Overall prefix path).</p> <p>Use <code>eb --show-full-config | grep containerpath</code> to determine the currently active setting.</p>"},{"location":"containers/#containers_cfg_image_format","title":"Container image format","text":"<p>(<code>--container-image-format</code>)</p>  <p>Note</p> <p>This is only relevant when creating Singularity container images; the value for <code>--container-image-format</code> is ignored when creating Docker container images.</p>  <p>The format for container images that EasyBuild is produces via the functionality provided by the container software can be controlled via the <code>--container-image-format</code> configuration setting.</p> <p>For Singularity containers (see Type of container recipe/image to generate), three image formats are supported:</p> <ul> <li><code>squashfs</code> (default when using Singularity 2.x): compressed images   using <code>squashfs</code> read-only file system</li> <li><code>sif</code> (default when using Singularity 3.x): compressed read-only   Singularity Image File (SIF)</li> <li><code>ext3</code>: writable image file using <code>ext3</code> file system (only supported   with Singularity 2.x)</li> <li><code>sandbox</code>: container image in a regular directory</li> </ul> <p>See also https://www.sylabs.io/guides/latest/user-guide/build_a_container.html .</p>"},{"location":"containers/#containers_cfg_image_name","title":"Name for container recipe &amp; image","text":"<p>(<code>--container-image-name</code>)</p> <p>By default, EasyBuild will use the name of the first easyconfig file (without the <code>.eb</code> suffix) as a name for both the container recipe and image.</p> <p>You can specify an altername name using the <code>--container-image-name</code> configuration setting.</p> <p>The filename of generated container recipe will be <code>Singularity.&lt;name&gt;</code>.</p> <p>The filename of the container image will be <code>&lt;name&gt;&lt;extension&gt;</code>, where the value for <code>&lt;extension&gt;</code> depends on the image format (see Container image format):</p> <ul> <li>'<code>.simg</code>' for <code>squashfs</code> Singularity container images (only with   Singularity 2.x)</li> <li>'<code>.img</code>' for <code>ext3</code> Singularity container images (only with   Singularity 2.x)</li> <li>'<code>.sif</code>' for Singularity container images in Singularity Image Format   (SIF) (only with Singularity 3.x)</li> <li>empty for <code>sandbox</code> Singularity container images (in which case the   container image is actually a directory rather than a file)</li> <li>empty for Docker container images</li> </ul>"},{"location":"containers/#containers_tmpdir","title":"Temporary directory for creating container images","text":"<p>(<code>--container-tmpdir</code>)</p> <p>The container software that EasyBuild leverages to build container images may be using a temporary directory in a location that doesn't have sufficient free space.</p> <p>You can instruct EasyBuild to pass an alternate location via the <code>--container-tmpdir</code> configuration setting.</p> <p>For Singularity, the default is to use <code>/tmp</code>, see https://www.sylabs.io/guides/latest/user-guide/build_env.html#temporary-folders. If <code>--container-tmpdir</code> is specified, the <code>$SINGULARITY_TMPDIR</code> environment variable will be defined accordingly to let Singularity use that location instead.</p>"},{"location":"containers/#containers_cfg_type","title":"Type of container recipe/image to generate","text":"<p>(<code>--container-type</code>)</p> <p>With the <code>--container-type</code> configuration option, you can specify what type of container recipe/image EasyBuild should generated. Possible values are:</p> <ul> <li><code>docker</code>: Docker (https://docs.docker.com/) container recipe &amp;   images (supported since EasyBuild v3.6.2)</li> <li><code>singularity</code> (default): Singularity   (https://www.sylabs.io/singularity) container recipes &amp; images</li> </ul>"},{"location":"containers/#containers_stacking","title":"'Stacking' container images","text":"<p>To avoid long build times and excessive large container images, you can construct your target container image step-by-step, by first building a base container image for the compiler toolchain you want to use, and then using it to build a container images for a particular (set of) software package(s).</p> <p>For example, to build a container image for Python 3.6.4 built with the <code>foss/2018a</code> toolchain:</p> <pre><code>$ cd /tmp\n\n# use current directory as location for generated container recipes &amp; images\n$ export EASYBUILD_CONTAINERPATH=$PWD\n\n# build base container image for OpenMPI + GCC parts of foss/2018a toolchain, on top of CentOS 7.4 base image\n$ eb -C --container-build-image OpenMPI-2.1.2-GCC-6.4.0-2.28.eb --container-config bootstrap=yum,osversion=7 --experimental\n...\n== Singularity image created at /tmp/OpenMPI-2.1.2-GCC-6.4.0-2.28.sif\n...\n\n$ ls -lh OpenMPI-2.1.2-GCC-6.4.0-2.28.sif\n-rwxr-xr-x 1 root root 590M Apr 24 11:43 OpenMPI-2.1.2-GCC-6.4.0-2.28.sif\n\n# build another container image for the for the full foss/2018a toolchain, using the OpenMPI + GCC container as a base\n$ eb -C --container-build-image foss-2018a.eb --container-config bootstrap=localimage,from=OpenMPI-2.1.2-GCC-6.4.0-2.28.sif --experimental\n...\n== Singularity image created at /tmp/foss-2018a.sif\n...\n\n$ ls -lh foss-2018a.sif\n-rwxr-xr-x 1 root root 614M Apr 24 13:11 foss-2018a.sif\n\n# build container image for Python 3.6.4 with foss/2018a toolchain by leveraging base container image foss-2018a.sif\n$ eb -C --container-build-image Python-3.6.4-foss-2018a.eb --container-config bootstrap=localimage,from=foss-2018a.sif --experimental\n...\n== Singularity image created at /tmp/Python-3.6.4-foss-2018a.sif\n...\n\n$ ls -lh Python-3.6.4-foss-2018a.sif\n-rwxr-xr-x 1 root root 759M Apr 24 14:01 Python-3.6.4-foss-2018a.sif\n\n$ singularity exec Python-3.6.4-foss-2018a.sif which python\n/app/software/Python/3.6.4-foss-2018a/bin/python\n\n$ singularity exec Python-3.6.4-foss-2018a.sif python -V\nvsc40023 belongs to gsingularity\nPython 3.6.4\n</code></pre>"},{"location":"containers/#containers_seeding","title":"Seeding in source files for container build process","text":"<p>In some cases, you may need to \"seed in\" manually downloaded source files into the container build environment, because the sources can not be downloaded automatically.</p> <p>As shown in Example of a generated container recipe, the container recipe generated by EasyBuild includes <code>/tmp/easybuild/sources/</code> as a fallback directory in the list of locations considered by EasyBuild when looking for sources/patches (see also Source path).</p> <p>That way, you can copy source files that should be available when building the container image into <code>/tmp/easybuild/sources/</code>.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>This documentation explains how you can contribute to EasyBuild, and discusses the review process for contributions.</p>"},{"location":"contributing/#contributing_how","title":"How to contribute","text":"<p>It is a common misconception that contributing to an open source project requires being intimately familiar with its codebase.</p> <p>There are various ways to contribute, even if you don't have any experience with the programming language(s) being used by the project you are interested in.</p> <p>You can contribute to EasyBuild by:</p> <ul> <li>Giving feedback</li> <li>Reporting bugs</li> <li>Submitting feature/change requests</li> <li>Helping others</li> <li>Contributing easyconfig files</li> <li>Contributing code changes</li> <li>Writing documentation</li> <li>Joining the conversation</li> </ul>"},{"location":"contributing/#contributing_feedback","title":"Giving feedback","text":"<p>An easy way to contribute to EasyBuild, even without having a lot of hands-on experience with it, is to provide feedback on your experiences.</p> <p>Feedback from people new to EasyBuild is valuable, since it provides a perspective that is easily overlooked by more experienced users.</p> <p>You can contact the EasyBuild community via the EasyBuild mailing list (<code>easybuild@lists.ugent.be</code>), the <code>#easybuild</code> IRC channel (see also Getting help).</p>"},{"location":"contributing/#contributing_bugs","title":"Reporting bugs","text":"<p>If you run into unexpected problems when using EasyBuild, please open a bug report in the issue tracker of the relevant GitHub repository:</p> <ul> <li>https://github.com/easybuilders/easybuild-framework/issues: for     general problems with <code>eb</code>, the EasyBuild framework, etc.</li> <li>https://github.com/easybuilders/easybuild-easyblocks/issues: for     problems specific to a particular (generic or software-specific)     easyblock, etc.</li> <li>https://github.com/easybuilders/easybuild-easyconfigs/issues: for     problems specific to a particular software package, e.g., with     building and installing a particular version of that software, or     when using a particular toolchain, etc.</li> <li>https://github.com/easybuilders/easybuild/issues: for problems     with the EasyBuild documentation, etc.</li> </ul> <p>Please try and provide all relevant information, which may include:</p> <ul> <li>the EasyBuild version you are using</li> <li>the specifics of the system you are using, incl. OS + version,     Python version, modules tool &amp; version, etc.</li> <li>the active EasyBuild configuration; usually the output of     <code>eb --show-config</code> is sufficient</li> <li>the full <code>eb</code> command line that was used</li> <li>warning or error messages, or other relevant informative messages</li> <li>filename or contents of easyconfig file(s) being used</li> <li>EasyBuild log file (for example via https://gist.github.com/),     preferably collected with <code>eb --debug</code></li> </ul>"},{"location":"contributing/#contributing_requests","title":"Submitting feature/change requests","text":"<p>If you have suggestions for enhancements or ideas for new features that could be useful, please open an issue in the relevant GitHub repository (see Reporting bugs).</p> <p>Describe what you have in mind, and maybe also provide a concrete example to illustrate how your suggestion would improve the current functionality.</p>"},{"location":"contributing/#contributing_helping_others","title":"Helping others","text":"<p>Try and help others based on your experience, or help them figure out an answer to their question or a solution to their problem using the EasyBuild documentation or by reaching out to someone else in the EasyBuild community that may know the answer.</p> <p>The EasyBuild community is known to be very welcoming and helpful, and you too can be a part of that.</p>"},{"location":"contributing/#contributing_easyconfigs","title":"Contributing easyconfig files","text":"<p>Please contribute easyconfig files that are not included yet in (the <code>develop</code> branch of) the <code>easybuild-easyconfigs</code> GitHub repository at https://github.com/easybuilders/easybuild-easyconfigs.</p> <p>This includes easyconfigs for software that is not supported yet by EasyBuild, as well as updates to existing easyconfigs (e.g., version updates, using a different toolchain, etc.), even if you consider the updates to be trivial. Keep in mind that being able to use something that is known to work out-of-the-box can save quite a bit of time compared to having to tweak existing easyconfigs and validate the result installations.</p> <p>We highly recommend using the <code>--new-pr</code> and <code>--update-pr</code> command line options for contributing easyconfig files; see Submitting new and updating pull requests.</p>"},{"location":"contributing/#contributing_code","title":"Contributing code changes","text":"<p>Of course you can also contribute code changes, including bug fixes, enhancements or additional features in the EasyBuild framework, the easyblocks repository, the test suites or in related scripts.</p> <p>Do keep in mind that this requires some experience with Python, although you should be able to go a long way by using the existing code base as support.</p> <p>See Pull requests for more information on the practical aspects of contributing code.</p>"},{"location":"contributing/#contributing_docs","title":"Writing documentation","text":"<p>Another way to contribute to EasyBuild without having to implement Python code is by writing documentation, i.e. enhancing or updating existing documentation or documenting features that are not covered yet.</p> <p>To contribute to the documentation hosted at https://docs.easybuild.io, you should open a pull request to the <code>main</code> branch of the https://github.com/easybuilders/easybuild-docs repository; see the <code>docs</code> subdirectory.</p> <p>The EasyBuild documentation is made with Material for MkDocs and written in MarkDown.</p>"},{"location":"contributing/#contributing_conversation","title":"Joining the conversation","text":"<p>Last but not least, you can actively join the conversation that arise on the EasyBuild mailing list, the <code>#easybuild</code> IRC channel and during the bi-weekly EasyBuild conference calls (see https://github.com/easybuilders/easybuild/wiki/Conference-calls).</p> <p>Engage with the EasyBuild community, and help steer EasyBuild development by participating in the conversations regarding a variety of topics related to building and installing (scientific) software.</p>"},{"location":"contributing/#contributing_pull_requests","title":"Pull requests","text":"<p>To contribute to the EasyBuild framework, easyblocks, easyconfig files or the EasyBuild documentation, you will need to open a pull request to the corresponding GitHub repository:</p> <ul> <li>EasyBuild framework:     https://github.com/easybuilders/easybuild-framework</li> <li>easyblocks: https://github.com/easybuilders/easybuild-easyblocks</li> <li>easyconfigs: https://github.com/easybuilders/easybuild-easyconfigs</li> <li>documentation: https://github.com/easybuilders/easybuild (see     <code>docs</code> subdirectory)</li> </ul> <p>Doing this the traditional way requires some knowledge about using <code>git</code> (i.e. creating commits, using branches, pushing to and pulling from remote Git repositories, etc.), and being familiar with GitHub.</p> <p>However, this can be largely circumvented by using the GitHub integration provided by EasyBuild, see Integration with GitHub .</p>"},{"location":"contributing/#contributing_pull_request_setup","title":"Setting up","text":"<p>Note</p> <p>These instructions assume that you already have a working GitHub account.</p> <p>If you don't have a GitHub account yet, visit https://github.com/ to create one.</p> <p>We highly recommend registering your SSH public key in your GitHub account, via https://github.com/settings/keys. This allows pushing to your fork of the GitHub repositories without using a password.</p>  <p>Before you can open pull requests, you will need to fork the GitHub repository you are targeting, and create a local working copy of that repository. This only needs to be done once for every of the EasyBuild repositories.</p>  <p>Note</p> <p>For the purpose of this guide, we will be using the <code>easybuild-framework</code> repository.</p> <p>However, the instructions are equivalent for the other EasyBuild repositories.</p>"},{"location":"contributing/#contributing_pull_request_setup_fork_repo","title":"Forking the repository","text":"<p>First, create your own fork of the repository in your GitHub account using the <code>Fork</code> button on the top right at https://github.com/easybuilders/easybuild-framework.</p> <p>This will create a 'copy' of the <code>easybuild-framework</code> repository owned by the <code>easybuilders</code> GitHub organisation to your own personal GitHub account.</p> <p>You will have to use this fork as a staging area for your work, to prepare your contributions before creating the actual pull requests.</p>"},{"location":"contributing/#contributing_pull_request_setup_working_copy","title":"Creating a working copy","text":"<p>In addition to forking the repository on GitHub, you also need to create a local working copy of the repository. This is basically a local checkout of the repository where you can track the changes you are making.</p> <p>First, clone your fork of the repository:</p> <pre><code>git clone git@github.com:EXAMPLE/easybuild-framework.git\n</code></pre>  <p>Note</p> <p>Do not forget to replace <code>EXAMPLE</code> with your GitHub account name.</p>  <p>If that worked as expected, you should have a new directory named <code>easybuild-framework</code>. Move into the <code>easybuild-framework</code> directory:</p> <pre><code>cd easybuild-framework\n</code></pre> <p>Finally, we recommended to also check out the <code>develop</code> branch, which will be used as the base for your own branches:</p> <pre><code>git checkout -b develop origin/develop\n</code></pre> <p>With this in place, you are all set to open pull requests for your contributions.</p>"},{"location":"contributing/#keeping-the-develop-branch-in-sync","title":"Keeping the <code>develop</code> branch in sync","text":"<p>It is important to keep the <code>develop</code> branch in your working copy in sync with the upstream repository in the GitHub <code>easybuilders</code> organization.</p> <p>For this, you need to add the upstream repository as a 'remote' repository:</p> <pre><code>git remote add upstream git@github.com:easybuilders/easybuild-framework.git\n</code></pre>  <p>Note</p> <p><code>upstream</code> is just a name that you give to the remote the central</p> <p><code>easybuilders</code> repository on GitHub; you can modify this to your liking if desired (but do take that into account for the further instructions if you do so).</p> <p>For your fork of the repository, a default remote named <code>origin</code> should have been created via <code>git clone</code> (see the output of <code>git remote -v</code>).</p>  <p>To sync your <code>develop</code> branch, use <code>git pull upstream develop</code> after making sure you have the <code>develop</code> branch checked out:</p> <pre><code>git checkout develop\ngit pull upstream develop\n</code></pre>"},{"location":"contributing/#contributing_creating_pull_requests","title":"Opening a new pull request","text":"<p>Note</p> <p>This section describes the manual procedure to open a new pull request.</p> <p>Please consider using <code>eb --new-pr</code> instead, see Submitting pull requests.</p>   <p>Note</p> <p>We assume you are already located in your local working copy of the repository you want to contribute to (e.g., <code>easybuild-framework</code>).</p>  <p>To open a pull request for your contribution, you must follow these steps:</p> <ol> <li>Creating a new branch</li> <li>Committing your changes</li> <li>Pushing your branch</li> <li>Pull request title &amp; description</li> <li>Opening the pull request</li> </ol>"},{"location":"contributing/#contributing_creating_pull_requests_branch","title":"Creating a new branch","text":"<p>First, create a new branch for your work. You can do this either before or after making the changes that you would like to contribute, but we recommend to create a new branch before making any changes.</p> <p>Make sure you have the <code>develop</code> branch checked out before creating your branch:</p> <pre><code>git checkout develop\n</code></pre> <p>To create a new branch, you should use <code>git branch &lt;branch_name&gt;</code> followed by <code>git checkout &lt;branch_name&gt;</code>, or equivalently <code>git checkout -b &lt;branch_name&gt;</code>.</p> <p>For example, to create a new branch named <code>mybranch</code>:</p> <pre><code>git checkout -b mybranch\n</code></pre> <p>You can choose the branch name freely, but make it sufficiently descriptive \u2013 your future self will thank you.</p>"},{"location":"contributing/#contributing_creating_pull_requests_commit","title":"Committing your changes","text":"<p>To 'save' your changes, you should create one or more commits in the branch you created. We recommended making separate commits for different 'units of work'.</p> <p>First, make sure you have checked out the branch were you want to commit the changes to. For example, to prepare for committing changes to the <code>mybranch</code> branch:</p> <pre><code>git checkout mybranch\n</code></pre> <p>To check which branch is currently checked out, use <code>git branch</code>.</p> <p>To get a high-level overview of the changes before committing them, you can use <code>git status</code>.</p> <p>To see the actual changes that were made, use <code>git diff</code>.</p> <p>To commit the changes you want to contribute, use <code>git add &lt;files&gt;</code> to stage the changes, followed by <code>git commit -m \"&lt;message&gt;\"</code> to create the actual commit.</p> <p>For example, to commit the changes that were made to <code>easybuild/tools/filetools.py</code>:</p> <pre><code>git add easybuild/tools/filetools.py\ngit status  # check which files are staged for commit\ngit commit -m \"example commit message for changes to filetools.py\"\n</code></pre>  <p>Note</p> <p>Please use a concise commit message that describes the changes you made.</p>   <p>Note</p> <p>For files that are already being tracked, you can use <code>git commit -am &lt;message&gt;</code> to commit all changes at once.</p>  <p>To verify that your work was committed, use <code>git log</code> to see all commits on the current branch. Use <code>git log --stat</code> and/or <code>git log --diff</code> to see more details about which changes are included in each of the commits.</p>"},{"location":"contributing/#contributing_creating_pull_requests_push","title":"Pushing your branch","text":"<p>Once you have committed your changes to a branch, you should push your branch to your fork of the GitHub repository using <code>git push</code>.</p> <p>For example, to push the <code>mybranch</code> branch to your fork of the GitHub repository (via the <code>origin</code> remote, see Creating a working copy):</p> <pre><code>git push origin mybranch\n</code></pre>  <p>Note</p> <p>The above command will make your work public.</p>"},{"location":"contributing/#contributing_creating_pull_requests_pr_title","title":"Pull request title &amp; description","text":"<p>Please use a descriptive (short) title for your pull requests, and clarify (if needed) in the pull request description.</p> <p>If any other pull requests are required, refer to them in the description using <code>#&lt;PR number&gt;</code> (only for pull requests to the same repository), or by copy-pasting the URL to the pull request.</p> <p>For pull requests to the easyconfig repository, we recommend using this format for the pull request title when contributing new easyconfig files:</p> <pre><code>{&lt;moduleclass&gt;}[&lt;toolchain&gt;] &lt;software name&gt; &lt;software version&gt; &lt;extra info&gt;\n</code></pre> <p>For example:</p> <ul> <li><code>{tools}[dummy] EasyBuild v3.2.1</code></li> <li><code>{math}[intel/2017a] numpy 1.13.0 w/ Python 2.7.13</code></li> <li><code>{math,numlib}[foss/2017a] METIS v5.1.0, ParMETIS v4.0.3, SuiteSparse v4.5.5, ...</code></li> </ul> <p>If you are opening a work-in-progress pull request, for example to solicit feedback, tag it using <code>(WIP)</code>. in the pull request title.</p>"},{"location":"contributing/#contributing_creating_pull_requests_open_pr","title":"Opening the pull request","text":"<p>To open a pull request using the branch you pushed, you should use the GitHub interface, and follow the steps outlined below.</p> <ol> <li> <p>visit https://github.com/EXAMPLE/easybuild-framework</p>  <p>Note</p> <p>Replace <code>EXAMPLE</code> with your GitHub account name, and <code>easybuild-framework</code> with the name of the target EasyBuild repository.</p>  </li> <li> <p>switch to the branch that includes the changes you want to     contribute using the <code>Branch: main</code> button on the left, for     example by selecting <code>Branch: mybranch</code> from the dropdown list</p> </li> <li>click the <code>New pull request</code> button</li> <li>change the target branch to <code>develop</code> using the <code>base: main</code> button</li> <li>review your changes using the 'diff' view presented by GitHub;</li> <li>provide an appropriate title and description for your contribution;</li> <li>open the pull request by clicking the green      <code>Create pull request</code> button</li> </ol> <p>Next, your pull request will be reviewed &amp; tested, see Review process for contributions.</p>"},{"location":"contributing/#contributing_updating_pull_requests","title":"Updating existing pull requests","text":"<p>Note</p> <p>This section describes the manual procedure to create a new pull request.</p> <p>Please consider using <code>eb --update-pr</code> instead, see Updating existing pull requests.</p>  <p>It is quite common to update a pull request after creating it, for example if the test suite run in GitHub Actions reports problems with the changes being made, or as a response to someone reviewing your contribution.</p> <p>To update an existing pull request, it suffices to add commits to the branch that was used for opening the pull request, and pushing the updated branch to GitHub.</p> <p>For example, to update the pull request that was created using the <code>mybranch</code> branch:</p> <pre><code>git checkout mybranch\n# make changes...\ngit add &lt;paths to changed files&gt;\ngit commit -m \"example commit message for additional changes\"\ngit push origin mybranch\n</code></pre> <p>Updating a pull request will trigger GitHub Actions to re-test your contribution, and a notification will be sent out to whoever is 'watching' your pull request.</p>"},{"location":"contributing/#contributing_merging_pull_requests","title":"Merging of pull requests","text":"<p>Once your pull request has been given the green light by GitHub Actions and one or more people reviewing have approved the changes, it can be merged into the <code>develop</code> branch.</p> <p>This can only be done by a member of the EasyBuild maintainers team. Only pull requests that meet the requirements are eligible for merging, see Requirements for pull requests .</p> <p>Merging a pull request usually implies that the changes will be part of the next EasyBuild release.</p>"},{"location":"contributing/#contributing_review_process","title":"Review process for contributions","text":"<p>Each contribution is thoroughly reviewed and tested before it gets merged in. Some aspects of this are automated, others require human intervention.</p>"},{"location":"contributing/#contributing_review_process_pr_requirements","title":"Requirements for pull requests","text":"<p>Only pull requests (PRs) that fulfil these requirements are eligible to be merged:</p> <ul> <li>the PR must target the <code>develop</code> branch of the repository; see     <code>develop</code> branch</li> <li> <p>the test suite must (still) pass, i.e. GitHub Actions must give      a green light; see Test suite (GitHub Actions)</p> <ul> <li>tests should be added or enhanced when appropriate; see     Adding tests, especially for PRs to the <code>easybuild-framework</code> repository</li> </ul> </li> <li> <p>backward compatibility should be retained; see       Backward compatibility</p> </li> <li> <p>code style must be kept consistent; see      Code style review</p> <ul> <li>easyconfigs should be kept consistent across versions &amp;     toolchains; see Comparing with existing easyconfigs</li> </ul> </li> <li> <p>(successful) test reports must be submitted for easyconfig PRs;     see Test reports for easyconfig contributions</p> </li> <li> <p>the PR is approved by one or more maintainers of the repository;      see EasyBuild maintainers</p> </li> <li>the PR should be merged by one of the maintainers, other than the       author of the PR; see       Pull requests are merged by a maintainer other than the author</li> </ul>"},{"location":"contributing/#contributing_review_process_develop_branch","title":"<code>develop</code> branch","text":"<p>Pull requests are only merged in the <code>develop</code> branch of the EasyBuild repositories, which contains the changes that will be included in the next EasyBuild release.</p> <p>The <code>main</code> branch provides the latest stable release of EasyBuild at all times. Only the EasyBuild release manager should issue a pull request to the EasyBuild <code>main</code> branch, when preparing a new EasyBuild release.</p> <p>Occasionally, an additional version branch (e.g. <code>3.3.x</code>) may be introduced temporarily, in case an intermittent bugfix release is being worked on.</p>"},{"location":"contributing/#contributing_review_process_github_actions","title":"Test suite (GitHub Actions)","text":"<p>Each pull request is tested automatically by GitHub Actions and the test result is reported in the pull request.</p> <p>Only pull requests that have been tested and approved by GitHub Actions are eligible for being merged!</p> <p>Note that GitHub Actions will only run the test suite for that particular repository. That is, for easyconfig contributions it does not include actually building and installing software.</p> <p>For more information on the test suites, see Unit tests.</p>"},{"location":"contributing/#contributing_review_process_adding_tests","title":"Adding tests","text":"<p>An implicit requirement for contributions, in particular contributions to the EasyBuild framework, is that they must be accompanied by additional tests or test cases.</p> <p>For new features or enhancements, a dedicated test (case) must be added which verifies that the feature implementation works as expected.</p> <p>For bug fixes, a test (case) must be added that triggers the code path where the bug manifested, and which verifies that the bug was indeed fixed.</p> <p>Tests not only confirm that the implementation is correct, it also helps to ensure that any future changes will not break the functionality you contributed.</p>"},{"location":"contributing/#contributing_review_process_backward_compatibility","title":"Backward compatibility","text":"<p>Contributions should retain backward compatibility, i.e., they should not make any changes that alter the (default) functionality of the existing code base. Of course, enhancements to existing code that retain backward compatibility can be made.</p> <p>One exception to this rule is bug fixes, where the whole point is usually to fix functionality that was implemented incorrectly.</p> <p>This also applies to existing easyconfig files; for example, the versions of dependencies should not be altered. Adding dependencies that were missing or otherwise enhancing existing easyconfigs (e.g., adding extra extensions, enabling additional features, etc.) are usually considered acceptable.</p> <p>Changes that break backward compatibility have to be motivated well with technical arguments, and must be approved by the EasyBuild maintainers.</p>"},{"location":"contributing/#contributing_review_process_code_style","title":"Code style review","text":"<p>Next to functional evaluation of contributions, care is also taken to maintain a consistent code style across the EasyBuild code base (see also Code style); contributions must take the (mostly PEP8) code style into account.</p> <p>This aspect is sometimes considered to be needless overhead, yet it is an important aspect of the review process. A consistent code style is invaluable in a large code base that is constantly being updated by a worldwide community.</p> <p>This also applies to easyconfig files, where we try to maintain a strict style that mostly matches the established PEP8 coding style for Python (since easyconfigs are written in Python syntax). However, also the grouping and ordering of easyconfig parameters is a part of the 'code' style we maintain.</p> <p>An automated (partial) check to see whether easyconfig files are ready to be contributed can be performed via <code>eb --check-contrib</code>. This will check:</p> <ul> <li>style aspects for the specified easyconfig files</li> <li>whether SHA256 checksums are included for all source files &amp; patches</li> </ul> <p>This check is also a part of the test suite run by GitHub Actions for easyconfig PRs.</p>"},{"location":"contributing/#contributing_review_process_review_pr","title":"Comparing with existing easyconfigs","text":"<p>(<code>--review-pr</code>)</p> <p>We try to maintain consistency across easyconfig files for a particular software package, across multiple software versions, toolchains and variants (with a different <code>versionsuffix</code>).</p> <p>Therefore, easyconfig contributions are also reviewed using <code>eb --review-pr &lt;PR #&gt;</code>, which compares the touched easyconfig files to those in the current <code>develop</code> branch that are most closely related.</p> <p>The easyconfig files to compare with are selected based on similarity, by combining two criteria, in order.</p> <p>First, the software version is taken into account, using one of the following criteria:</p> <ul> <li>exact match on software version match</li> <li>match on major/minor software version</li> <li>match on major software version</li> <li>no match on software version</li> </ul> <p>This is combined with one of the criteria below (in order):</p> <ul> <li>matching versionsuffix and toolchain name/version</li> <li>matching versionsuffix and toolchain name (any toolchain version)</li> <li>matching versionsuffix (any toolchain name/version)</li> <li>matching toolchain name/version (any versionsuffix)</li> <li>matching toolchain name (any versionsuffix, toolchain version)</li> <li>no extra requirements (any versionsuffix, toolchain name/version)</li> </ul> <p>The first combination of one of the software version criteria with one of the other criteria that yields one or more matching easyconfig files is used. If none of the combinations match, no easyconfig files for that particular software package are available yet, and no comparison is made.</p> <p>The output of <code>--review-pr</code> provides a 'multidiff' comparison, which highlights the differences between the easyconfig file in the pull request and the most similar selected ones from the current <code>develop</code> branch. Interpreting this output is a quick and easy way to assess how different the contributed easyconfig files are from the existing easyconfigs, although it does require a bit of practice because of the density of the provided information.</p>"},{"location":"contributing/#contributing_review_process_test_reports","title":"Test reports for easyconfig contributions","text":"<p>(<code>upload-test-report</code>)</p> <p>For easyconfig contributions, one or more accompanying test reports must be submitted to confirm that the added and/or changed easyconfig files (still) work as expected.</p> <p>We recommend that you submit a test report for your own easyconfig pull requests. Other people can also submit test reports to confirm that your contribution works as expected on their system(s).</p> <p>With EasyBuild being properly configured (see GitHub: Configuration), this should be as simple as running <code>eb --from-pr &lt;PR#&gt; --upload-test-report --force --robot</code>.</p> <p>See Uploading test reports for more information.</p>"},{"location":"contributing/#contributing_review_process_do_not_merge_your_own_prs","title":"Pull requests are merged by a maintainer other than the author","text":"<p>A pull request should never be merged by its author.</p> <p>This policy is maintained in order to ensure a \"two-pairs-of-eyes\" review process of all contributions.</p>"},{"location":"contributing/#contributing_review_process_why_pr_closed_by_maintainer","title":"Why a pull request may be closed by a maintainer","text":"<p>Although it is generally avoided, there are a few reasons why maintainers might close a pull request:</p> <ul> <li>uses an archived toolchain</li> <li>no activity for &gt; 6 months</li> <li>obsolete because more recent PRs for newer versions of the software     have been merged already</li> </ul> <p>This is done routinely as a way of focusing everyone's efforts on relevant contributions, and should not be seen as a rejection. In fact, contributors are encouraged to reopen the pull request if they feel it is still relevant.</p>"},{"location":"controlling-compiler-optimization-flags/","title":"Controlling compiler optimization flags","text":"<p>This page provides an overview on the different ways in which compiler optimization flags used by EasyBuild can be controlled.</p>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch","title":"Controlling target architecture specific optimizations via <code>--optarch</code>","text":""},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_default","title":"Default behaviour","text":"<p>By default, EasyBuild optimizes builds for the CPU architecture of the build host, by instructing the compiler to generate instructions for the highest instruction set supported by the process architecture of the build host processor.</p> <p>This is done by including specific compiler flags in <code>$CFLAGS</code>, <code>$CXXFLAGS</code>, <code>$FFLAGS</code>, <code>$F90FLAGS</code>, etc.</p> <p>For example:</p> <ul> <li>for toolchains using the GCC compilers, <code>--march=native</code> will be used   (see https://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/i386-and-x86-64-Options.html)</li> <li>for toolchains using the Intel compilers, <code>-xHost</code> will be used   (https://software.intel.com/en-us/node/522846)</li> </ul>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_caveats","title":"Caveats","text":""},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_caveats_heterogeneous","title":"Heterogeneous clusters","text":"<p>Optimizing for the processor architecture of the build host is usually what you want in an HPC cluster, but it has some implications if your cluster is heterogeneous (i.e., has different processor generations), or if you want to execute your applications in a machine with a processor architecture that is different from the one of the build host.</p> <p>For example, if you compile your application optimized for an Intel Haswell processor (i.e. using AVX2 instructions), it will not run on a system with an older Intel Nehalem processor.</p> <p>One possible workaround for heterogeneous HPC clusters is to build as many copies of the software stack as you have processor generations in your cluster, and to configure your system so each compute node uses the right software stack matching its processor architecture type. Details for one way of doing this, using automounter/autofs are available at https://easybuilders.github.io/easybuild/files/sciCORE-software-management_20150611.pdf.</p> <p>Another solution is to configure EasyBuild to not optimize for the processor architecture of the build host via <code>--optarch</code>, see below.</p>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_caveats_hardcoding","title":"Build environment vs hardcoding in build scripts","text":"<p>Be aware that that using <code>--optarch</code> as described below does not provide hard guarantees that the build will be executed using the intended compiler flags.</p> <p>EasyBuild will define the appropriate environment variables (<code>$CFLAGS</code> and co) to use the compiler flags as specified, but some MakeFiles or build systems could have hardcoded values that have not been dealt with yet (for example, via a patch file or by specifying options to the <code>make</code> command).</p> <p>For example, the OpenBLAS build system will autodetect the processor architecture in the build host, and will optimize for that processor architecture by default.</p> <p>If you want a generic OpenBLAS build you will need to tweak the OpenBLAS easyconfig file to define the desired <code>TARGET</code> to use. For this you will need to modify the <code>buildopts</code> easyconfig parameter, for example:</p> <pre><code>buildopts = 'TARGET=PRESCOTT BINARY=64 ' + threading + ' CC=\"$CC\" FC=\"$F77\"'\n</code></pre> <p>See these links for more details w.r.t. OpenBLAS:</p> <ul> <li>https://github.com/xianyi/OpenBLAS/blob/develop/TargetList.txt</li> <li>https://github.com/xianyi/OpenBLAS/issues/685</li> </ul>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_flags","title":"Specifying target architecture specific optimization flags to use via <code>--optarch=&lt;flags&gt;</code>","text":"<p>Using the <code>--optarch</code> EasyBuild configuration option, specific compiler flags can be provided that EasyBuild should use, rather than the ones used by default (depending on the compiler in the toolchain being used).</p> <p>Like any other configuration setting, this can also be specified via <code>$EASYBUILD_OPTARCH</code>, or by defining <code>optarch</code> in an EasyBuild configuration file (cfr. Consistency across supported configuration types).</p> <p>For example, by specifying <code>--optarch=march=core2</code>, EasyBuild will use <code>-march=core2</code> rather than the default flag <code>--march=native</code> (when using GCC compilers).</p> <p>Likewise, to avoid using the default <code>-xHost</code> flag with the Intel compilers and using <code>-xSSSE3</code> instead, you can define <code>$EASYBUILD_OPTARCH</code> to be equal to <code>xSSSE3</code>.</p>  <p>Note</p> <p>The first dash (<code>-</code>) is added automagically to the value specified to <code>--optarch</code>, because of technicalities with the current implementation.</p>  <p>The <code>--optarch</code> configuration option gives you flexibility to define the specific target architecture optimization flags you want, but requires that you take care of specifying different flags for different compilers and choose the right flags depending on your specific processor architecture.</p>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_generic","title":"Optimizing for a generic processor architecture via <code>--optarch=GENERIC</code>","text":"<p>To make EasyBuild optimize for a generic processor architecture, <code>--optarch</code> can be set to '<code>GENERIC</code>'.</p> <p>When this is the case, EasyBuild will use the right compiler flags to optimize for a generic processor architecture, i.e. avoid using machine instructions that are only supported by very recent processors.</p> <p>The <code>GENERIC</code> keyword for <code>--optarch</code> is recognized since EasyBuild v2.5.0, and is supported for GCC and Intel compilers on x86-64 systems (Intel or AMD). For other compilers that can be used in toolchains and other system architectures, the necessary compiler flags will be defined in later EasyBuild versions.</p> <p>Currently, using <code>--optarch=GENERIC</code> will result in the following target architecture optimization flags being used, (on a Linux x86-64 system):</p> <ul> <li>for toolchains using GCC compilers: <code>-march=x86-64 -mtune=generic</code></li> <li>for toolchains using Intel compilers: <code>-xSSE2</code></li> </ul> <p>On other systems or for other compilers, you can check which compiler flags will be used via Extended dry run.</p>"},{"location":"controlling-compiler-optimization-flags/#controlling_compiler_optimization_flags_optarch_per_compiler","title":"Setting architecture flags for different compilers via <code>--optarch=&lt;compiler:flags&gt;;&lt;compiler:flags&gt;</code>","text":"<p>Starting with version 3.1.0, EasyBuild supports specifying architecture flags on a per-compiler basis. This enables to \"set and forget\" the <code>--optarch</code> option for your compilers of interest, as opposed to change it depending on the compiler used on the packages to be installed.</p> <p>The syntax is <code>&lt;compiler:flags&gt;;&lt;compiler:flags&gt;</code>, where <code>:</code> separates the compiler name from the compiler flags, and <code>;</code> separates different compilers. This is an example for the Intel and GCC compilers: <code>--optarch='Intel:xHost;GCC:march=x86-64 -mtune=generic'</code>. As in the simple cases, EasyBuild adds one <code>-</code> to the flags specified, so the flags passed to the Intel and GCC compilers in this case are <code>-xHost</code> and <code>-march=x86-64 -mtune=generic</code>. Please note the quotes to escape the space in the GCC flags.</p> <p>Additionally, <code>GENERIC</code> is also supported on a compiler basis, allowing to specify a generic compilation for the desired compilers. This is an example of this usage: <code>--optarch=Intel:xHost;GCC:GENERIC</code>. Of course, this is supported just for compiler toolchains that recognize <code>GENERIC</code>.</p> <p>The options for each compiler are set independently. That means that if a GCC-based toolchain is used, but the only compiler specified is <code>Intel</code> (for example with <code>--optarch=Intel:xCORE-AVX2</code>), then EasyBuild will behave as if <code>--optarch</code> was not specified for this toolchain.</p> <p>The compiler name corresponds to the value of the <code>COMPILER_FAMILY</code> constant of the toolchain. Two common examples are <code>GCC</code> and <code>Intel</code>.</p> <p>Due to the special treatment of <code>--optarch</code> in Cray environments, this feature is not supported on this platform.</p>"},{"location":"cray-support/","title":"EasyBuild on Cray","text":"<p>As of EasyBuild v2.7.0, the support for using EasyBuild on Cray systems is considered stable. Tt enables building/installing software using the <code>PrgEnv</code> modules provided by Cray. This page provides an overview of the current status.</p> <p>For more information about this, contact:</p> <ul> <li>Guilherme Peretti-Pezzi (CSCS, Switzerland, peretti@cscs.ch)</li> <li>Kenneth Hoste (HPC-UGent, Belgium; kenneth.hoste@ugent.be)</li> <li>Petar Forai (IMBA/IMP, Austria; petar.forai@imp.ac.at).</li> </ul> <p>Thanks to:</p> <ul> <li>Olli-Pekka Letho (CSC.fi)</li> <li>Tim Robinson and Guilherme Peretti-Pezzi (CSCS.ch)</li> <li>Eric Bavier (Cray)</li> <li>Brett Bode (NCSA)</li> </ul> <p>for providing us access to Cray systems, for their support and for testing and contributing to this work.</p>"},{"location":"cray-support/#test-systems","title":"Test systems","text":"<ul> <li>Piz Daint &amp; Piz Dora @ CSCS.ch (https://www.cscs.ch/computers/piz_daint_piz_dora/index.html)</li> <li>Santis &amp; Brisi (TDS) @ CSCS.ch</li> <li>Sisu @ CSC.fi (https://research.csc.fi/sisu-supercomputer)</li> <li>Swan (TDS) @ Cray</li> <li>Blue Waters @ NCSA</li> </ul>"},{"location":"cray-support/#easybuild-toolchains","title":"EasyBuild toolchains","text":"<ul> <li><code>CrayCCE</code>: <code>PrgEnv-cray</code> with pinned versions of <code>cce</code>, <code>cray-libsci</code> and <code>cray-mpich</code></li> <li><code>CrayGNU</code>: <code>PrgEnv-gnu</code> with pinned versions of <code>gcc</code>, <code>cray-libsci</code> and <code>cray-mpich</code></li> <li><code>CrayIntel</code>: <code>PrgEnv-intel</code> with pinned versions of <code>intel</code>, <code>cray-libsci</code> and <code>cray-mpich</code></li> <li><code>CrayPGI</code>: <code>PrgEnv-pgi</code> with pinned versions of <code>pgi</code> and <code>cray-mpich</code></li> </ul> <p>versions:</p> <ul> <li><code>Cray{CCE,GNU,Intel}/2015.06</code> (requires Cray PE June/2015)</li> <li><code>Cray{CCE,GNU,Intel}/2015.11</code> (requires Cray PE November/2015)</li> <li><code>CrayGNU/2016.03</code> (requires Cray PE March/2016)</li> <li><code>Cray{GNU,PGI}/2016.04</code> (requires Cray PE April/2016)</li> <li><code>Cray{GNU,Intel}/2016.06</code> (requires Cray PE June/2016)</li> </ul>"},{"location":"cray-support/#what-works-already","title":"What works already?","text":"<p>(see below for more information)</p> <ul> <li>HPL (LINPACK) benchmark version 2.1</li> </ul>"},{"location":"cray-support/#major-scientific-software-applications","title":"Major scientific software applications","text":"<ul> <li>CP2K 2.6.0</li> <li>GROMACS 4.6.7</li> <li>Python 2.7.9 + numpy 1.9.2 + scipy 0.15.1</li> <li>WRF 3.6.1 (pending on Sisu)</li> </ul> <p>An up-to-date list of software applications built on Cray systems at CSCS can be found https://github.com/eth-cscs/production/, see https://github.com/eth-cscs/production/tree/master/jenkins-builds.</p>"},{"location":"cray-support/#required-easybuild-configuration","title":"Required EasyBuild configuration","text":""},{"location":"cray-support/#modules-tool","title":"Modules tool","text":"<ul> <li>Sisu: self-installed Lmod 5.8</li> <li>Piz Daint, Dora, Swan, Santis, Brisi: system-provided environment modules 3.2.10 </li> </ul> <p>Example for environment modules 3.2.10:</p> <pre><code>source /opt/modules/3.2.10.3/init/bash\nexport PATH=/opt/modules/3.2.10.3/bin/:$PATH\nexport EASYBUILD_MODULES_TOOL=EnvironmentModulesC\nexport EASYBUILD_MODULE_SYNTAX=Tcl\n</code></pre>"},{"location":"cray-support/#architecture","title":"Architecture","text":"<ul> <li>the <code>craype-&lt;target&gt;</code> module to load must be specified using <code>--optarch</code><ul> <li>e.g., <code>--optarch=sandybridge</code> results in <code>craype-sandybridge</code> being loaded in the build environment used by EasyBuild </li> </ul> </li> </ul> <p>You can also export this option as a shell variable. Example for <code>sandybridge</code>:</p> <pre><code>export EASYBUILD_OPTARCH=sandybridge\n</code></pre>"},{"location":"cray-support/#metadata-for-cray-provided-modules","title":"Metadata for Cray-provided modules","text":"<ul> <li>Easybuild provides a sample metadata file in order to use modules provided by Cray:</li> </ul> <pre><code>easybuild-framework/etc/cray_external_modules_metadata.cfg\n</code></pre> <p>This file is loaded by default and contains enough information to build the easyconfig files shipped with EasyBuild.</p> <p>If you need to use a customized file, it can be specified using <code>--external-modules-metadata</code>. For more details see Metadata for external modules.</p>"},{"location":"cray-support/#major-supportedtested-applications","title":"Major supported/tested applications","text":"<p>(in alphabetical order)</p>"},{"location":"cray-support/#cp2k","title":"CP2K","text":"<ul> <li>https://www.cp2k.org</li> <li>version(s): 2.6.0</li> </ul> <pre><code>eb CP2K-2.6.0-CrayGNU-2015.06.eb -dr\n</code></pre>"},{"location":"cray-support/#gromacs","title":"GROMACS","text":"<ul> <li>https://www.gromacs.org</li> <li>version(s): 4.6.7</li> </ul> <pre><code>eb GROMACS-4.6.7-CrayGNU-2015.06-mpi.eb -dr\n</code></pre>"},{"location":"cray-support/#hpl","title":"HPL","text":"<ul> <li>https://www.netlib.org/benchmark/hpl</li> <li>version(s): 2.1</li> </ul> <pre><code>eb HPL-2.1-CrayCCE-2015.06.eb -dr\neb HPL-2.1-CrayGNU-2015.06.eb -dr \neb HPL-2.1-CrayIntel-2015.06.eb -dr \n</code></pre>"},{"location":"cray-support/#python-numpyscipy","title":"Python + numpy/scipy","text":"<ul> <li>https://python.org, https://www.numpy.org, https://www.scipy.org</li> <li>version(s): Python 2.7.9, numpy 1.9.2, scipy 0.15.1</li> </ul> <pre><code>eb Python-2.7.9-CrayGNU-2015.06.eb -dr \n# includes a few python packages (such as mpi4py, numpy and scipy)\n</code></pre>"},{"location":"cray-support/#wrf","title":"WRF","text":"<ul> <li>https://www2.mmm.ucar.edu/wrf/users/</li> <li>version(s): 3.6.1</li> </ul> <pre><code>eb WRF-3.6.1-CrayGNU-2015.06-dmpar.eb --dr\n</code></pre>"},{"location":"deprecated-easyconfigs/","title":"Deprecated easyconfigs","text":"<p>Since EasyBuild v3.8.0, individual easyconfig files or particular (versions of) toolchains can be marked as deprecated.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_symptoms","title":"Symptoms","text":"<p>Using an easyconfig file or toolchain that was marked as deprecated results in a warning message like:</p> <pre><code>WARNING: Deprecated functionality, will no longer work in v4.0: easyconfig file '/home/example/test.eb' is marked as deprecated:\nThis is an example message explaining why the easyconfig file was deprecated.\n(see also http://easybuild.readthedocs.org/en/latest/Deprecated-easyconfigs.html)\n</code></pre> <p>Or, in case you are trying to use an easyconfig file or toolchain that was marked deprecated in a previous major version of EasyBuild:</p> <pre><code>ERROR: Failed to process easyconfig /home/example/test.eb: DEPRECATED (since v4.0) functionality used: easyconfig file '/home/example/test.eb' is marked as deprecated:\nThis is an example message explaining why the easyconfig file was deprecated.\n(see also http://easybuild.readthedocs.org/en/latest/Deprecated-easyconfigs.html)\n</code></pre>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_why","title":"Reasons for deprecation","text":"<p>There are several possible reasons why a particular easyconfig file or toolchain was deprecated, some of which include:</p> <ul> <li>old/obsolete versions of software or toolchain components</li> <li>toolchains that are superseded by other toolchains</li> <li>known installation problems that are hard to resolve (or not worth     the effort to resolve)</li> </ul>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_implications","title":"Implications","text":"<p>Easyconfig files that are deprecated or which use a deprecated toolchain are not actively maintained, and are no longer included in the EasyBuild regression test (which means they may be broken by recent changes to the EasyBuild framework or relevant easyblocks).</p> <p>In a future major version of EasyBuild, these easyconfig files will be archived (see also Archived easyconfigs).</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains","title":"Deprecated toolchains","text":"<p>Overview of deprecated toolchains:</p> <ul> <li><code>foss</code> and <code>fosscuda</code> toolchain</li> <li><code>GCCcore</code> and <code>GCC</code> toolchains</li> <li><code>gcccuda</code> toolchain</li> <li><code>gompi</code> and <code>gompic</code> toolchains</li> <li><code>goolf</code> and <code>goolfc</code> toolchains</li> <li><code>ictce</code> toolchain</li> <li><code>iccifort</code>, <code>iimpi</code>, <code>iimpic</code>, <code>intel</code>, and <code>intelcuda</code> toolchains</li> <li><code>iompi</code>, <code>iompic</code>, <code>iomkl</code>, and <code>iomklc</code> toolchains</li> </ul>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_foss","title":"<code>foss</code> and <code>fosscuda</code> toolchain","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>The oldest versions of the <code>foss</code> and <code>fosscuda</code> toolchains have been deprecated, which currently includes any version older than <code>foss/2019a</code> and <code>fosscuda/2019a</code>.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_gcc","title":"<code>GCCcore</code> and <code>GCC</code> toolchains","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>The oldest versions of the <code>GCCcore</code> and <code>GCC</code> toolchains have been deprecated, which currently includes any version older than <code>8.0</code>.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_gcccuda","title":"<code>gcccuda</code> toolchain","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>The oldest versions of the <code>gcccuda</code> toolchains have been deprecated, which currently includes any version older than <code>gcccuda/2019a</code>.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_gompi","title":"<code>gompi</code> and <code>gompic</code> toolchains","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>Versions of the <code>gompi</code> and <code>gompic</code> toolchains that were used as a subtoolchain for a deprecated toolchain have also been deprecated; this includes versions older than <code>gompi/2019a</code> and <code>gompic/2019a</code>.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_goolf","title":"<code>goolf</code> and <code>goolfc</code> toolchains","text":"<ul> <li>deprecated since: EasyBuild v3.8.0</li> <li>archived in: EasyBuild v4.0.0</li> </ul> <p>The <code>goolf</code> and <code>goolfc</code> toolchains have been deprecated, since they are superseded by the <code>foss</code> toolchain and <code>fosscuda</code> toolchains, respectively.</p> <p>The <code>foss*</code> toolchains are equivalent to the <code>goolf*</code> toolchains, except that <code>binutils</code> is also included as a companion to <code>GCC(core)</code> in the <code>foss*</code> toolchains.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_ictce","title":"<code>ictce</code> toolchain","text":"<ul> <li>deprecated since: EasyBuild v3.8.0</li> <li>archived in: EasyBuild v4.0.0</li> </ul> <p>The <code>ictce</code> toolchain has been deprecated, since it is superseded by the <code>intel</code> toolchain.</p> <p>The <code>ictce</code> toolchain is equivalent to <code>intel</code> w.r.t. toolchain components, except that <code>binutils</code> is also included as a companion to <code>GCC(core)</code> (which serves as a base for the Intel compilers) in the <code>intel</code> toolchain.</p>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_intel","title":"<code>iccifort</code>, <code>iimpi</code>, <code>iimpic</code>, <code>intel</code>, and <code>intelcuda</code> toolchains","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>The oldest versions of the <code>iccifort</code>, <code>iimpi</code> and <code>intel</code> toolchain have been deprecated.</p> <p>Deprecated versions include:</p> <ul> <li><code>iccifort</code> versions older than <code>2019.0</code></li> <li><code>iimpi</code> and <code>iimpic</code> versions older than <code>2019a</code></li> <li><code>intel</code> and <code>intelcuda</code> versions older than <code>2019a</code></li> </ul>"},{"location":"deprecated-easyconfigs/#deprecated_easyconfigs_toolchains_iomkl","title":"<code>iompi</code>, <code>iompic</code>, <code>iomkl</code>, and <code>iomklc</code> toolchains","text":"<ul> <li>deprecated since: EasyBuild v4.5.0</li> <li>will be archived in: EasyBuild v5.0.0</li> </ul> <p>The oldest versions of the <code>iompi</code>, <code>iompic</code>, <code>iomkl</code> and <code>iomklc</code> toolchains have been deprecated, which currently includes any version older than <code>2019a</code>.</p>"},{"location":"deprecated-functionality/","title":"Deprecated functionality","text":"<p>Some of the functionality that was available in previous EasyBuild versions is deprecated, and should no longer be used.</p> <p>This functionality will be removed in a future version of EasyBuild (see Removed functionality for more information about functionality that has been removed already).</p> <p>This page:</p> <ul> <li>provides an     Overview of deprecated functionality in EasyBuild version together with available alternatives</li> <li>describes the     Deprecation policy</li> <li>explains how to easily     check for use of deprecated functionality</li> </ul>"},{"location":"deprecated-functionality/#overview_deprecated","title":"Overview of deprecated functionality in EasyBuild version","text":"<p>The different section below document the functionality that is deprecated in EasyBuild version, for which support will be removed in EasyBuild version 5.0.</p> <p>For EasyBuild users:</p> <ul> <li>Support for using Lmod 6.x</li> </ul> <p>For authors of easyconfig files:</p> <ul> <li><code>dummy</code> toolchain</li> </ul> <p>For developers of easyblocks:</p> <p>(nothing yet)</p> <p>For EasyBuild framework developers:</p> <p>(nothing yet)</p>"},{"location":"deprecated-functionality/#depr_lmod6","title":"Support for using Lmod 6.x","text":"<ul> <li>deprecated since: EasyBuild v4.1.0 (Nov'19)</li> <li>removed in: EasyBuild v5.0</li> <li>alternative(s): use Lmod 7.x or more recent</li> </ul> <p>Support for using Lmod 6.x as modules tool with EasyBuild has been deprecated, and will be removed in a future version of EasyBuild.</p>"},{"location":"deprecated-functionality/#depr_dummy_toolchain","title":"<code>dummy</code> toolchain","text":"<ul> <li>deprecated since: EasyBuild v4.0.0 (Sept'19)</li> <li>removed in: EasyBuild v5.0</li> <li>alternative(s): use <code>system</code> toolchain instead</li> </ul> <p>The <code>dummy</code> toolchain is has been deprecated, and is replaced with the <code>system</code> toolchain.</p> <p>For more information, see System toolchain.</p>"},{"location":"deprecated-functionality/#deprecation_policy","title":"Deprecation policy","text":"<p>With every EasyBuild release, we try very hard to maintain backward compatibility. That is, EasyBuild version <code>X.Y</code> should still build software packages that could be built with EasyBuild version <code>X.(Y-1)</code>, without requiring modifications to the used easyconfig file or easyblock.</p> <p>However, every now and then a breaking change needs to be made to EasyBuild, because of design decisions or to resolve mistakes that were made in the past. These changes involve deprecating the behaviour or functionality we want to get rid of, together with supporting a better alternative.</p> <p>Deprecating functionality:</p> <ul> <li> <p>using a <code>log.deprecated(\"msg\", 'X.Y')</code> statement in EasyBuild     version <code>X.(Y-n)</code> a certain block of code is tagged as deprecated,     indicating that the corresponding functionality will no longer be     supported in EasyBuild version <code>X.Y</code>; for example, to deprecate the     use of the <code>makeopts</code> easyconfig parameter with EasyBuild v2.0:</p> <pre><code>if self.cfg['makeopts']:\n    self.log.deprecated(\"Easyconfig parameter 'makeopts' is deprecated, use 'buildopts' instead\", '2.0')\n</code></pre> </li> <li> <p>until EasyBuild version <code>X.Y</code>, the deprecation log message will     manifest itself as a warning, highlighting the use of deprecated     functionality; for example:</p> <pre><code>== 2014-12-16 16:29:07,906 main.easyconfig.easyconfig WARNING Deprecated functionality, will no longer work in v2.0:\nEasyconfig parameter 'makeopts' is deprecated, use 'buildopts' instead;\nsee http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html for more information\n</code></pre> </li> </ul> <p>Removing support for deprecated behavior:</p> <ul> <li> <p>starting with EasyBuild version <code>X.Y</code>, the deprecation log message     will result in an error, indicating that the deprecated behavior     is no longer supported; for example:</p> <pre><code>ERROR: EasyBuild encountered an exception (at easybuild/framework/easyconfig/easyconfig.py:937 in process_easyconfig):\nFailed to process easyconfig /home/example/gzip-1.5-goolf-1.4.10.eb:\nDEPRECATED (since v2.0) functionality used: Easyconfig parameter 'makeopts' is deprecated, use 'buildopts' instead;\nsee http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html for more information.\n</code></pre> </li> <li> <p>the code supporting the deprecated functionality is removed in     EasyBuild version <code>X.(Y+1)</code> (i.e., the first non-bugfix-only release     after version <code>X.Y</code>), see also     Removed functionality</p> </li> <li> <p>until EasyBuild version <code>X.(Y+1)</code>, the code supporting the     deprecated functionality will still be available; using the     <code>--deprecated</code> command line option (or, equivalently, the     <code>$EASYBUILD_DEPRECATED</code> environment variable), the deprecated     functionality can be reactivated by specifying a lower version;     for example, to avoid running into an error with EasyBuild v2.0 for     functionality that was deprecated for EasyBuild v2.0:</p> <pre><code>eb gzip-1.5-goolf-1.4.10.eb --deprecated=1.0\n</code></pre> </li> </ul>"},{"location":"deprecated-functionality/#how_to_check_use_of_deprecated_functionality","title":"How to check for use of deprecated functionality","text":"<p>Since EasyBuild v1.16.0, the <code>--deprecated</code> command line option can be used to check whether deprecated behavior is still being triggered in your EasyBuild setup.</p> <p>For example, using <code>--deprecated=5.0</code> with EasyBuild v4.x will transform any deprecation warning for functionality that will no longer be supported in EasyBuild v5.0 into an error message. For example:</p> <pre><code>$ eb test.eb --deprecated=5.0\n== temporary log file in case of crash /tmp/easybuild-WWalWX/easybuild-aoL9Nd.log\nERROR: Failed to process easyconfig /home/example/test.eb:\nDEPRECATED (since v5.0) functionality used: Use of 'dummy' toolchain is deprecated, use 'system' toolchain instead;\nsee http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html for more information\nbe used; see http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html for more information\n</code></pre>  <p>Tip</p> <p>Define <code>deprecated</code> to the next major EasyBuild version in one of your EasyBuild configuration files (see Configuration file(s)) or by defining <code>$EASYBUILD_DEPRECATED=5.0</code>, to ensure you are made aware of deprecated behavior as early as possible.</p> <p>You can (temporarily) still rely on the deprecated functionality by specifying a lower version via <code>--deprecated</code> to overrule that setting, until the functionality is actually disabled.</p>"},{"location":"detecting-loaded-modules/","title":"Detection of loaded modules","text":"<p>Since EasyBuild v3.3.0, the <code>eb</code> command performs a check to see if any (EasyBuild-generated) modules have been loaded in the current environment.</p> <p>This check can be controlled via the <code>--detect-loaded-modules</code> and <code>--allow-loaded-modules</code> configuration options.</p> <p>In addition any unknown <code>$EBROOT*</code> environment variables are detected and acted upon, according to how the <code>--check-ebroot-env-vars</code> configuration option was set.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_motivation","title":"Motivation","text":"<p>Running EasyBuild in an environment where one or more (EasyBuild-generated) modules are loaded may interfere with the software installations performed by EasyBuild, i.e.:</p> <ul> <li>they may cause installations failures, for example due to     incompatibilities with the modules being loaded during the     installation procedure being performed;</li> <li>they may cause installations to work in that particular environment,     for example by providing a necessary dependency</li> </ul> <p>Since manually loading modules may affect the reproducibility of software installations, it should be discouraged.</p> <p>In EasyBuild versions before v3.3.0, having a loaded module for the same software packages as the one being installed resulted in an EasyBuild error message.</p> <p>Since EasyBuild v3.3.0 a more extensive detection mechanism is available and the action that should be taken for loaded modules can be controlled via <code>--detect-loaded-modules</code>. Having a module loaded for any software package that is being installed still results in a hard error.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_mechanism","title":"Detection mechanism","text":"<p>Detecting loaded EasyBuild-generated modules is done by checking the environment for defined <code>$EBROOT*</code> environment variables. If any are found, the corresponding loaded module is determined for better reporting.</p> <p>In case defined <code>$EBROOT*</code> environment variables are found that do not match a loaded modules, action is taken as well; see Checking of <code>$EBROOT*</code> environment variables.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action","title":"Action to take if loaded modules are detected","text":"<p>The action that should be taken when one or more loaded (EasyBuild-generated) modules are detected can be specified via the <code>--detect-loaded-modules</code> configuration option.</p> <p>Supported values include:</p> <ul> <li><code>error</code>: report error and stop EasyBuild upon detection of loaded modules</li> <li><code>ignore</code>: ignore any loaded modules</li> <li><code>purge</code>: run '<code>module purge</code>' to clean environment of loaded modules</li> <li><code>unload</code>: unload loaded modules</li> <li><code>warn</code>: print warning and continue upon detection of loaded modules     (current default)</li> </ul> <p>The specified action is only taken for non-allowed loaded modules, see Allowing particular loaded modules.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action_error","title":"<code>error</code>: report error and stop EasyBuild upon detection of loaded modules","text":"<p>When EasyBuild is configured with <code>--detect-loaded-modules=error</code>, it will print a clear error and stop when any (non-allowed) loaded modules are detected.</p> <p>For example:</p> <pre><code>$ eb example.eb --detect-loaded-modules=error\n== temporary log file in case of crash /tmp/eb-UlKMRN/easybuild-MgfEHi.log\nERROR: Found one or more non-allowed loaded (EasyBuild-generated) modules in current environment:\n* Spack/0.10.0\n\nTo make EasyBuild allow particular loaded modules, use the --allow-loaded-modules configuration option.\nUse --detect-loaded-modules={error,ignore,purge,unload,warn} to specify action to take when loaded modules are detected.\n\nSee http://easybuild.readthedocs.io/en/latest/Detecting_loaded_modules.html for more information.\n</code></pre>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action_ignore","title":"<code>ignore</code>: ignore any loaded modules","text":"<p>With <code>--detect-loaded-modules=ignore</code> in place, any loaded modules are simply ignored and EasyBuild continues silently.</p> <p>This is equivalent to the behaviour of EasyBuild versions prior to version 3.3.0.</p>  <p>Warning</p> <p>This is not recommended!</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action_purge","title":"<code>purge</code>: run '<code>module purge</code>' to clean environment of loaded modules","text":"<p>Using <code>--detect-loaded-modules=purge</code>, EasyBuild will run <code>module purge</code> if any (non-allowed) loaded modules are detected, in an attempt to restore the environment to a clean state before starting software installations.</p> <p>A short warning message is printed in case <code>module purge</code> was used to clean up the environment:</p> <pre><code>$ export EASYBUILD_DETECT_LOADED_MODULES=purge\n$ eb example.eb\n== temporary log file in case of crash /tmp/eb-QLTV9v/easybuild-6mOmIN.log\n\nWARNING: Found non-allowed loaded (EasyBuild-generated) modules (Spack/0.10.0), running 'module purge'\n\n...\n</code></pre>  <p>Note</p> <p>Whether or not <code>module purge</code> is a suitable action is site-specific, since this will unload all loaded modules (except for 'sticky' modules when Lmod is used), including modules that were not installed with EasyBuild and which may be always required.</p> <p>Configuring EasyBuild to use <code>module purge</code> when (non-allowed) loaded modules are found should not be done on Cray systems, since it will result in a broken environment.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action_unload","title":"<code>unload</code>: unload loaded modules","text":"<p>When <code>--detect-loaded-modules=unload</code> is used, EasyBuild will only unload the (non-allowed &amp; EasyBuild-generated) modules. The modules are unloaded in reverse order, i.e. the last loaded module is unloaded first.</p> <p>This is an alternative to using <code>module purge</code>, in case some other (allowed) modules are loaded and should remain loaded.</p> <p>A short warning message is printed when loaded modules are unloaded:</p> <pre><code>$ eb example.eb --detect-loaded-modules=unload\n== temporary log file in case of crash /tmp/eb-JyyaEF/easybuild-WyGqZs.log\n\nWARNING: Unloading non-allowed loaded (EasyBuild-generated) modules: Spack/0.10.0\n\n...\n</code></pre>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_action_warn","title":"<code>warn</code>: print warning and continue upon detection of loaded modules","text":"<p>When EasyBuild is configured with <code>--detect-loaded-modules=warn</code>, EasyBuild will print a warning mentioning that one or more loaded (EasyBuild-generated) were detected, before continuing as normal.</p> <p>The warning is intended to make the user aware that the environment in which EasyBuild is being run is not clean.</p> <p>For example:</p> <pre><code>$ export EASYBUILD_DETECT_LOADED_MODULES=warn\n$ eb example.eb\n== temporary log file in case of crash /tmp/eb-9HD20m/easybuild-WAYzK2.log\n\nWARNING: Found one or more non-allowed loaded (EasyBuild-generated) modules in current environment:\n* Spack/0.10.0\n\nTo make EasyBuild allow particular loaded modules, use the --allow-loaded-modules configuration option.\nUse --detect-loaded-modules={error,ignore,purge,unload,warn} to specify action to take when loaded modules are detected.\n\nSee http://easybuild.readthedocs.io/en/latest/Detecting_loaded_modules.html for more information.\n\n...\n</code></pre>  <p>Note</p> <p>This is the default behaviour in EasyBuild v3.3.0 and newer.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_allow","title":"Allowing particular loaded modules","text":"<p>By default, only EasyBuild itself is considered as an allowed module.</p> <p>EasyBuild can be configured to allow particular modules to be loaded via <code>--allow-loaded-modules</code>, by specifying a comma-separated list of software names.</p> <p>For example:</p> <pre><code>$ export EASYBUILD_DETECT_LOADED_MODULES=error\n$ export EASYBUILD_ALLOW_LOADED_MODULES=EasyBuild,GC3Pie\n\n$ module load EasyBuild\n$ module load GC3Pie\n$ eb example.eb\n...\n</code></pre> <p>When <code>--allow-loaded-modules</code> is used, the EasyBuild module is no more allowed by default and must be explicitly listed if you want to allow an EasyBuild installation provided through a module.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_EBROOT_env_vars","title":"Checking of <code>$EBROOT*</code> environment variables","text":"<p>The detection mechanism for loaded modules relies on defined <code>$EBROOT*</code> environment variables, and determining by which loaded module they were set.</p> <p>When one or more <code>$EBROOT*</code> environment variables are found for which the corresponding loaded modules can not be found, this can lead to problems.</p> <p>Hence, EasyBuild will detect this and act on it, according to the value specified to <code>--check-ebroot-env-vars</code>:</p> <ul> <li><code>error</code>: report error and stop EasyBuild on unknown <code>$EBROOT*</code> environment variables</li> <li><code>ignore</code>: ignore unknown <code>$EBROOT*</code> environment variables</li> <li><code>unset</code>: unset unknown <code>$EBROOT*</code> environment variables and print warning</li> <li><code>warn</code>: print warning for unknown <code>$EBROOT*</code> environment variables and continue (current default)</li> </ul>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_EBROOT_env_vars_error","title":"<code>error</code>: report error and stop EasyBuild on unknown <code>$EBROOT*</code> environment variables","text":"<p>When configured with <code>--check-ebroot-env-vars=error</code>, EasyBuild will stop with a clear error message when it discovers one or more <code>$EBROOT*</code> environment variables that do not correspond to a loaded module:</p> <pre><code>$ export EBROOTUNKNOWN=just_an_example\n\n$ eb example.eb --check-ebroot-env-vars=error\n\n== temporary log file in case of crash /tmp/eb-cNqOzG/easybuild-xmV8vc.log\nERROR: Found defined $EBROOT* environment variables without matching loaded module: $EBROOTUNKNOWN\n(control action via --check-ebroot-env-vars={error,ignore,unset,warn})\n</code></pre>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_EBROOT_env_vars_ignore","title":"<code>ignore</code>: ignore unknown <code>$EBROOT*</code> environment variables","text":"<p>To simply ignore any defined <code>$EBROOT*</code> environment variables that do not correspond with a loaded module, configure EasyBuild with <code>--check-ebroot-env-vars=ignore</code>.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_EBROOT_env_vars_unset","title":"<code>unset</code>: unset unknown <code>$EBROOT*</code> environment variables and print warning","text":"<p>If you are confident that the defined <code>$EBROOT*</code> environment variables for which no matching loaded module was found are harmless, you can specify that EasyBuild should clean up the environment by unsetting them, before continuing. A clear warning message will be printed whenever this occurs:</p> <pre><code>$ export EBROOTUNKNOWN=just_an_example\n\n$ eb bzip2-1.0.6.eb --check-ebroot-env-vars=unset\n\n== temporary log file in case of crash /tmp/eb-IvXik8/easybuild-cjHjhs.log\n\nWARNING: Found defined $EBROOT* environment variables without matching loaded module: $EBROOTUNKNOWN; unsetting them\n\n...\n</code></pre> <p>Note that these unknown <code>$EBROOT*</code> will only be unset in the environment of the running EasyBuild session, not in the current session in which <code>eb</code> is being run.</p>"},{"location":"detecting-loaded-modules/#detecting_loaded_modules_EBROOT_env_vars_warn","title":"<code>warn</code>: print warning for unknown <code>$EBROOT*</code> environment variables and continue","text":"<p>If EasyBuild was configured with <code>--check-ebroot-env-vars=warn</code>, a warning will be printed when one or more defined <code>$EBROOT*</code> environment variables are encountered for which no corresponding loaded module was found:</p> <pre><code>$ export EBROOTUNKNOWN=just_an_example\n\n$ export EASYBUILD_CHECK_EBROOT_ENV_VARS=warn\n$ eb example.eb\n\n== temporary log file in case of crash /tmp/eb-1h_LQ9/easybuild-BHrPk4.log\nWARNING: Found defined $EBROOT* environment variables without matching loaded module: $EBROOTUNKNOWN\n(control action via --check-ebroot-env-vars={error,ignore,unset,warn})\n\n...\n</code></pre>  <p>Note</p> <p>This is the default behaviour in EasyBuild v3.3.0 and newer.</p>"},{"location":"easyconfig-files-local-variables/","title":"Local variables in easyconfig files","text":"<p>This page discusses the use of local variables in easyconfig files.</p> <p>For more general information on writing easyconfig files, please see Writing easyconfig files: the basics.</p>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_motivation","title":"Motivation &amp; context","text":"<p>When composing easyconfig files, it can sometimes make sense to use one or more local variables to define easyconfig parameters in a cleaner way, for example to avoid copy-pasting values that are used multiple times, or to avoid too long lines (longer than the maximum width of 120 characters as specified in Code style). A local variable within the context of easyconfig files is any variable that does not correspond to a known easyconfig parameter (either general of easyblock-specific).</p> <p>One thing that is easily overlooked is the importance of how these local variables are named: you should try and avoid that the names of local variables will match with the name of an easyconfig parameter that may get introduced in future EasyBuild versions. If that would happen, the semantics of the easyconfig file will change which may either result in a broken installation or perhaps a different installation than was intended (which could be worse than a broken one).</p> <p>Avoiding that names of local variables are close to the name of (future) easyconfig parameters is also important, because of the \"typo detection\" feature that EasyBuild has: if the name of a local variable is too close to a known easyconfig parameter, EasyBuild will assume you have made a mistake, and will report a typo error, for example:</p> <pre><code>ERROR: Failed to process easyconfig example.eb:\nYou may have some typos in your easyconfig file: configopt -&gt; configopts\n</code></pre>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_easybuild4","title":"Changes in EasyBuild v4.0 w.r.t. local variables in easyconfig files","text":"<p>Some changes were made in EasyBuild v4.0 to discourage the use of poorly named local variables:</p> <ul> <li>a Recommended naming scheme for local variables in easyconfig files was defined;</li> <li>a mechanism was implemented to detect the use of local variables in     easyconfig files, which will print a     Warning for local variables that do not follow the recommended naming scheme</li> <li>EasyBuild can be configured to report an error for local variables     that do not follow the recommended naming scheme; see     Specifying what should be done when non-confirming local variables are found via <code>--local-var-naming-check</code></li> <li>using <code>eb --fix-deprecated-easyconfigs</code>, the names of local     variables can be changed automatically to match the recommended     naming scheme; see     Renaming local variables to match the recommended naming scheme using <code>eb --fix-deprecated-easyconfigs</code></li> </ul>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_naming_scheme","title":"Recommended naming scheme for local variables in easyconfig files","text":"<p>To ensure that local variables used in easyconfig files do not clash with easyconfig parameters that get added in future EasyBuild versions, we have defined a recommended naming scheme for local variables.</p> <p>Names of local variables should either:</p> <ul> <li>start with <code>local_</code>, to make it explicit that it is a local     variable (examples: <code>local_example</code>, <code>local_var</code>)</li> <li>consist of a single letter (examples: <code>f</code>, <code>l</code>, <code>x</code>); this is     typically only done within the context of a list     comprehension</li> <li>start with a single underscore (<code>_</code>), which matches the common     convention in Python code that these variables are only for     \"internal use\" (examples: <code>_example</code>, <code>_local_var</code>)</li> </ul>  <p>Note</p> <p>A check was added in EasyBuild v4.0 to ensure that the names of known easyconfig parameters do not conform to any of these rules, to ensure that local variables can always be discriminated from known easyconfig parameters.</p>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_naming_warning","title":"Warning for local variables that do not follow the recommended naming scheme","text":"<p>By default, EasyBuild will produce a clear warning when one or more local variables are used that do not conform to the Recommended naming scheme for local variables in easyconfig files.</p> <p>For example, when using an easyconfig file that includes a local variable named <code>var</code>:</p> <pre><code>$ eb example.eb\n...\nWARNING: Use of 1 unknown easyconfig parameters detected in example.eb: var\nIf these are just local variables please rename them to start with 'local_', or try using --fix-deprecated-easyconfigs to do this automatically.\n</code></pre> <p>To get rid of this warning, you can either:</p> <ul> <li>rename the local variable, either manually to something like     <code>local_var</code> or using <code>eb --fix-deprecated-easyconfigs example.eb</code>     (see also     Renaming local variables to match the recommended naming scheme using <code>eb --fix-deprecated-easyconfigs</code>)</li> <li>configure EasyBuild to only log the warning (not print it), via     <code>--local-var-naming-check=log</code> (see also     Specifying what should be done when non-confirming local variables are found via <code>--local-var-naming-check</code>; note that silencing the printed warning is not     recommended, see the motivation in     Motivation &amp; context</li> </ul>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_check_mode","title":"Specifying what should be done when non-confirming local variables are found via <code>--local-var-naming-check</code>","text":"<p>Using the <code>--local-var-naming-check</code> configuration option, you can specify what should be done when one or more local variables are found that do not follow the Recommended naming scheme for local variables in easyconfig files:</p> <ul> <li><code>--local-var-naming-check=error</code>: fail with an error if any     easyconfig file that was parsed includes local variables that do not     follow the recommended naming scheme;</li> <li><code>--local-var-naming-check=log</code>: only log a warning (but do not     print it) if any easyconfig file that was parsed includes local     variables that do not follow the recommended naming scheme;</li> <li><code>--local-var-naming-check=warn</code> [default]: print a warning if     any easyconfig file that was parsed includes local variables that do     not follow the recommended naming scheme;</li> </ul> <p>The default is set such that non-confirming local variables are only reported through a printed warning, but do not result in cancelling the installation (since they're usually not actually problematic).</p>"},{"location":"easyconfig-files-local-variables/#easyconfig_files_local_variables_fix_deprecated_easyconfigs","title":"Renaming local variables to match the recommended naming scheme using <code>eb --fix-deprecated-easyconfigs</code>","text":"<p>To fix one or more easyconfig files that includes local variables that do not follow the Recommended naming scheme for local variables in easyconfig files, <code>eb --fix-deprecated-easyconfigs</code> can be used.</p> <p>For example:</p> <pre><code>eb --fix-deprecated-easyconfigs bzip2.eb zlib.eb\n== temporary log file in case of crash /tmp/eb-Z7r_KJ/easybuild-dHtPY4.log\n\n* [1/2] fixing /tmp/example/bzip2.eb... FIXED!\n  (changes made in place, original copied to /tmp/example/bzip2.eb.orig_20190815180106_53972)\n\n* [2/2] fixing /tmp/example/zlib.eb... FIXED!\n  (changes made in place, original copied to /tmp/example/zlib.eb.orig_20190815180106_53972)\n\nAll done! Fixed 2 easyconfigs (out of 2 found).\n\n== Temporary log file(s) /tmp/eb-Z7r_KJ/easybuild-dHtPY4.log* have been removed.\n== Temporary directory /tmp/eb-Z7r_KJ has been removed.\n</code></pre> <p>There are a couple of caveats here though...</p> <p>While <code>--fix-deprecated-easyconfigs</code> can be very useful, it's certainly not perfect since all it does is simple search and replace of the names of non-conforming local variables (as whole words) to prefix them with <code>local_</code>.</p> <p>This means that it may make some unintended changes, so make sure to always double check which changes were made!</p> <p>In addition, it sometimes make more sense to simply eliminate the local variable rather than renaming it, for example when it wasn't really needed at all: maybe it was only actually used once, or maybe using a template like <code>%(pyver)s</code> or <code>(pyshortver)s</code> (see also Available template values for easyconfigs) renders it obsolete.</p>"},{"location":"easyconfigs-search-index/","title":"Using an index to speed up searching for easyconfigs","text":"<p>EasyBuild often needs to search for Easyconfig files (or accompanying files like patches), either based on command line arguments (like the name of an easyconfig file) or options to the <code>eb</code> command (like <code>--search</code>, see Searching for easyconfigs), or to resolve dependencies for a particular easyconfig file that was parsed already.</p> <p>Searching for easyconfig files or patches may take a while, since it can potentially involve weeding through thousands of files, which may be located on a shared filesystem (where metadata-intensive operations like file searching can be rather slow).</p> <p>If EasyBuild turns out to be sluggish when searching for easyconfig files in your setup, using an index file could make a big difference.</p>  <p>Note</p> <p>Support for index files was implemented in EasyBuild version 4.2.0 .</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_create","title":"Creating an index","text":"<p>(<code>--create-index</code>)</p> <p><code>eb --create-index</code> can be used to create an index file for a particular directory that holds a (large) set of easyconfig files.</p> <p>The index file (a hidden file named <code>.eb-path-index</code>) will be created in the specified directory. It will contain a list of (relative) paths for all files in that directory, along with some metadata: the time at which the index file was created and a timestamp that indicates how long the index is considered to be valid (see Controlling how long the index is valid).</p>  <p>Note</p> <p>Make sure to create an index for the correct path.</p> <p>The search for easyconfig files performed by EasyBuild will not recurse into subdirectories of the locations it considers (see Searching for easyconfigs: the robot search path), other than those with a name matching the software for which it is trying to find an easyconfig file (like <code>t/TensorFlow/</code> when searching for an easyconfig file for <code>TensorFlow</code>).</p> <p>Hence, if the directory housing your easyconfig files has an <code>easybuild/easyconfigs</code> subdirectory (for example, a working copy of the <code>easybuild-easyconfigs</code> repository), create the index in that subdirectory, rather than in the higher-level directory.</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_create_example","title":"Example of creating an index","text":"<pre><code>$ eb --create-index $HOME/easybuild-easyconfigs/easybuild/easyconfigs\n== temporary log file in case of crash /tmp/eb-tUu6_w/easybuild-SKBnVO.log\nCreating index for /home/example/easybuild-easyconfigs/easybuild/easyconfigs...\n== found valid index for /home/example/easybuild-easyconfigs/easybuild/easyconfigs, so using it...\nIndex created at /home/example/easybuild-easyconfigs/easybuild/easyconfigs/.eb-path-index (738 files)\n\n$ head -n 5 $HOME/easybuild-easyconfigs/easybuild/easyconfigs/.eb-path-index\n# created at: 2020-04-13 14:19:57.008981\n# valid until: 2020-04-20 14:19:57.008981\na/Arrow/Arrow-0.16.0-intel-2019b-Python-3.7.4.eb\nb/Boost/Boost-1.71.0-gompi-2019b.eb\nb/bokeh/bokeh-1.4.0-foss-2019b-Python-3.7.4.eb\n</code></pre>  <p>Note</p> <p>The \"<code>found valid index ...</code>\" message being printed occurs because EasyBuild tries to load the index file right after creating it, as a sanity check.</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_update","title":"Updating an existing index","text":"<p>(<code>--create-index --force</code>)</p> <p>To update an existing index, you can use <code>--create-index --force</code>.</p> <p>Without using <code>--force</code>, EasyBuild will refuse to overwrite the existing index file:</p> <pre><code>$ eb --create-index $HOME/easybuild-easyconfigs/easybuild/easyconfigs\n== temporary log file in case of crash /tmp/eb-tUu6_w/easybuild-SKBnVO.log\nCreating index for /home/example/easybuild-easyconfigs/easybuild/easyconfigs...\nERROR: File exists, not overwriting it without --force: /home/example/easybuild-easyconfigs/easybuild/easyconfigs/.eb-path-index\n</code></pre>"},{"location":"easyconfigs-search-index/#easyconfigs_index_use","title":"Using index files","text":"<p>EasyBuild will automatically pick up and use any index file that it runs into while searching for easyconfig files or patches. If an index file is found, it will be preferred over walking through the directory tree to check for the target file, which is likely to significantly speed up the search operation.</p> <p>When a (valid) index file is found for a particular path, a message will be printed mentioning \"<code>found valid index for...</code>\":</p> <pre><code>$ eb --search TensorFlow-2.1.0-foss-2019b\n== found valid index for /home/example/easybuild-easyconfigs/easybuild/easyconfigs, so using it...\n* /home/example/easybuild-easyconfigs/easybuild/easyconfigs/t/TensorFlow/TensorFlow-2.1.0-foss-2019b-Python-3.7.4.eb\n</code></pre>"},{"location":"easyconfigs-search-index/#easyconfigs_index_ignore","title":"Ignoring indices","text":"<p>(<code>--ignore-index</code>)</p> <p>One potential issue with having an index in place is that it may get outdated: new files may have been added to the directory since the index was created or last updated.</p> <p>If updating the indexes is not an option (see Updating an existing index), you can instruct EasyBuild to ignore any existing indices using the <code>--ignore-index</code> configuration option.</p> <p>The only downside of this option is that searching for easyconfig files may be significantly slower. Any existing index files are left untouched (they will not be updated or removed).</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_max_age","title":"Controlling how long the index is valid","text":"<p>(<code>--index-max-age</code>)</p> <p>When creating an index file, you can specify how long the index should be considered valid.</p> <p>Using the <code>--index-max-age</code> configuration option, you can specify how long after the creation time the index remains valid (in seconds).</p> <p>By default, EasyBuild will consider index files to remain valid for 1 week (<code>7 * 24 * 60 * 60 = 604,800</code> seconds).</p> <p>To create an index that always remains valid (never expires), use zero (<code>0</code>) as value for <code>--index-max-age</code>:</p> <pre><code>$ eb --index-max-age=0 --create-index $HOME/easybuild-easyconfigs/easybuild/easyconfigs\n\n$ head -n 2 $HOME/easybuild-easyconfigs/easybuild/easyconfigs/.eb-path-index\n# created at: 2020-04-13 15:10:07.173191\n# valid until: 9999-12-31 23:59:59.999999\n</code></pre>  <p>Note</p> <p>Trust us here, December 31st 9999 is the end of times. Better get prepared.</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_release","title":"Index included with EasyBuild releases","text":"<p>Each EasyBuild release (since EasyBuild v4.2.0) comes with an index file for the easyconfig (and patch) files that are included with that release.</p> <p>Hence, you only need to use <code>--create-index</code> to create/update the index file for any additional directories with easyconfig files you may have on the side (and only if searching those easyconfig files is rather slow).</p>"},{"location":"easyconfigs-search-index/#easyconfigs_index_should_use","title":"Should I create an index?","text":"<p>Whether or not you should create an index file for your directories housing additional easyconfig files depends on a number of factors, including:</p> <ul> <li>how often files are added and/or removed in those directories, since     files listed in the index are assumed to be there and any files not     included in the index will be overlooked by EasyBuild when it's     searching for files;</li> <li>the filesystem on which those directories are located, since an     index file will only make a significant difference on filesystems     where metadata-intensive operations are relatively slow;</li> <li>how many files there are in those directories, since performance     benefits will only be apparent if the number if files is     sufficiently large;</li> </ul>  <p>Note</p> <p>Keep in mind that creating an index implies also updating it frequently, to ensure that EasyBuild will take all available files in account.</p>"},{"location":"easystack-files/","title":"Easystack files","text":"<p>This documentation covers aspects of specifying a software stack to install with Easybuild with easystack files.</p> <p>Note: this is an experimental feature. Some of the mentioned functionality may be subject to change or be prone to errors.</p>  <p>Note</p> <p>Some breaking changes were made to the experimental easystack support in EasyBuild v4.7.0.</p> <p>Easystack files must now use the <code>easyconfigs</code> top-level key to list easyconfig filenames, as opposed to the <code>software</code> top-level key and separate subkeys like <code>version</code>, <code>versionsuffix</code> and <code>toolchain</code> to specify aspects of an easyconfig file that were supported before.</p>"},{"location":"easystack-files/#easystack_basics","title":"The basics","text":"<p>Easystack files describe an entire software stack, and can be used to specify to EasyBuild what to install.</p>"},{"location":"easystack-files/#easystack_usage","title":"Usage","text":"<p>To build software with Easystack, type:</p> <pre><code>eb --easystack example.yaml --experimental\n</code></pre> <p>where <code>example.yaml</code> is the file with specifications that you just created (more about this in the next section).</p>"},{"location":"easystack-files/#easystack_structure","title":"Structure of an easystack file","text":"<p>Easystack files are written in YAML syntax.</p> <p>Essentially, an easystack file lists the easyconfig files you want to install, which are specified under the <code>easyconfigs</code> key.</p> <p>For example:</p> <pre><code>easyconfigs:\n  - PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb\n  - OpenFOAM-v2206-foss-2022a.eb\n</code></pre>  <p>Note</p> <p>You must use '<code>-</code>' to list the easyconfigs in an easystack file.</p>  <p>In addition, you can specify additional configuration options via the <code>options</code> subkey which will only apply to the installation of a particular easyconfig file.</p> <p>For example:</p> <pre><code>easyconfigs:\n  - PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb:\n    options:\n      from-pr: 15924\n      debug: True\n  - Hypre-2.25.0-foss-2022a.eb:\n  - OpenFOAM-v2206-foss-2022a.eb:\n    options:\n      installpath: /my/custom/installpath\n</code></pre>  <p>Note</p> <p>You need to take care with some values in YAML, especially integers, booleans, etc.</p> <p>If the specified value definitely must be a string value, you should use quotes (<code>'...'</code>) to avoid that the YAML parser automatically converts the value to be of a specific type.</p> <p>In other cases, the automatic conversion is useful, like for the <code>True</code> used above, since <code>debug</code> is a boolean configuration option.</p>  <p>The configuration options that are valid for the <code>eb</code> command can be used (see <code>eb --help</code>), but the <code>-</code> or <code>--</code> prefixes that are commonly used on the command line are omitted in easystack files.</p> <p>Using the example easystack file above would be equivalent to running:</p> <pre><code>eb PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb --from-pr 15924 --debug\neb Hypre-2.25.0-foss-2022a.eb\neb OpenFOAM-v2206-foss-2022a.eb --installpath /my/custom/installpath\n</code></pre>  <p>Note</p> <p>Whenever configuration options are not specified (as is the case for <code>Hypre</code> in the example easystack file above), you are still allowed to use '<code>:</code>' after the easyconfig filename: there is no difference in behaviour in ending with or without '<code>:</code>'.</p>  <p>Specifying short options in an easystack file is allowed, for example:</p> <pre><code>easyconfigs:\n  - OpenFOAM-v2206-foss-2022a.eb:\n    options:\n      D: True\n</code></pre> <p>This is not recommended however, as short options are more difficult to interpret by humans.</p>"},{"location":"easystack-files/#easystack_combining_options","title":"Combining command line options with options in an easystack file","text":"<p>When building software with an easystack file, you can still add additional options on the command line as well. These apply to all items in the easystack file. For example, if you have an easystack file named <code>my_easystack.yaml</code></p> <pre><code>easyconfigs:\n  - PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb:\n    options:\n      from-pr: 15924\n      debug: True\n  - OpenFOAM-v2206-foss-2022a.eb:\n</code></pre> <p>and you run with</p> <pre><code>eb --experimental --easystack my_easystack.yaml --dry-run\n</code></pre> <p>this will have the same effect as running</p> <pre><code>eb PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb --dry-run --from-pr 15924 --debug\neb OpenFOAM-v2206-foss-2022a.eb --dry-run --installpath /my/custom/installpath\n</code></pre> <p>Note that options specified on the command line are placed before the easyconfig-specific options in the easystack file. EasyBuild will always respect the argument that was put last.</p> <p>For example:</p> <pre><code>eb PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb --dry-run --disable-dry-run\n</code></pre> <p>will effectively run without enabling dry run mode, since <code>--disable-dry-run</code> is specified after <code>--dry-run</code>.</p> <p>Since easyconfig-specific configuration options specified in the easystack file are put last, they take priority over the the ones on the command line, if the same configuration option is specified in both.</p> <p>For example, running:</p> <pre><code>eb --experimental --easystack my_easystack.yaml --disable-debug\n</code></pre> <p>will effectively cause <code>PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb</code> to be installed with debug logging enabled, while <code>OpenFOAM-v2206-foss-2022a.eb</code> will be effectively installed without debug logging.</p>"},{"location":"easystack-files/#to-be-developed","title":"To be developed","text":"<p>In the future, we are planning to support additional also global options specified in the easystack file. For example:</p> <pre><code>options:\n  robot: True\neasyconfigs:\n  - PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb\n  - OpenFOAM-v2206-foss-2022a.eb\n</code></pre> <p>would installed both <code>PyTorch-1.12.0-foss-2022a-CUDA-11.7.0.eb</code> and <code>OpenFOAM-v2206-foss-2022a.eb</code> using <code>--robot</code> (see issue #4105).</p> <p>Additionally, we plan to support specifying for which EasyBuild version an easystack file was intended, which can be helpful in more accurately recreating a certain software stack (see issue #4106).</p> <p>In the future, the <code>--easystack</code> option will probably be dropped, and EasyBuild will automatically detect the use of easystack files (see issue #4104).</p> <p>Finally, we plan to support specifying labels, which would make it more easy to install only a certain subset of the items listed in an easystack file. For example, by labelling all GPU-capable software with a <code>gpu</code> label, one could easily choose to not build anything labeled <code>gpu</code> on a CPU node (see issue #3512).</p>"},{"location":"experimental-features/","title":"Experimental features","text":"<p>First introduced in EasyBuild v2.1.0 (see EasyBuild v2.1.0 Release Notes), experimental features can only be used by enabling the <code>--experimental</code> configuration option.</p> <p>An experimental feature indicates to users that these features may change significantly in a future release and should be used only for testing, not (yet) for production usage.</p> <p>Currently enabled experimental features include:</p> <ul> <li>support for easyconfig files in YAML syntax (see     Writing easyconfig files in YAML syntax)</li> <li>support for generating container recipes &amp; images (see     Generating container recipes &amp; images)</li> <li>support for using easystack files (see     Easystack files)</li> <li>support for trying to update versions of the dependencies of an     easyconfig based on what is available in the robot path (see     Output of <code>eb --help</code>)</li> <li>support for installing extensions in parallel (see     Installing extensions in parallel)</li> </ul>"},{"location":"extended-dry-run/","title":"Extended dry run","text":"<p>Using <code>--extended-dry-run</code> or <code>-x</code> (supported since EasyBuild v2.4.0, see release notes for EasyBuild v2.4.0 (November 10th 2015)), a detailed overview of the build and install procedure that EasyBuild is going to execute can be obtained almost instantly.</p> <p>All time-consuming operations, including executing commands to configure/build/install the software, are only reported rather than being actually performed.</p> <p>Example output is available at Extended dry run: examples.</p>"},{"location":"extended-dry-run/#extended_dry_run_notes","title":"Important notes","text":"<p>There are a couple of things you should be aware of when using <code>--extended-dry-run</code> and interpreting the output it produces.</p>"},{"location":"extended-dry-run/#extended_dry_run_notes_differences","title":"Build/install procedure reported by dry run may be (slightly) different","text":"<p>The actual build and install procedure may (slightly) differ from the one reported by <code>--extended-dry-run</code>, due to conditional checks in the easyblock being used.</p> <p>For example, expressions that are conditional on the presence of certain files or directories in the build directory will always be false, since the build directory is never actually populated.</p>"},{"location":"extended-dry-run/#extended_dry_run_notes_ignored_errors","title":"Errors are ignored (by default) during dry run","text":"<p>Any errors that occur are ignored, and are reported with a clear warning message. This is done because it is possible that these errors occur because of the dry run mechanism.</p> <p>For example, the install step could assume that certain files created by a previous step will be present, but they will not be there since the commands that are supposed to produce them were not actually performed in dry run mode.</p> <p>Errors are ignored on a per-step basis. When an error is ignored in a particular step, that step is aborted, which may result in partial dry run output for that particular step. Subsequent steps will still be run (in dry run mode), however.</p> <p>Since it's possible that these errors occur due to a bug in the easyblock being used, it's important to pay attention to these ignored errors.</p> <p>Ignored errors are reported as follows, for example:</p> <pre><code>== testing... [DRY RUN]\n\n[test_step method]\n!!!\n!!! WARNING: ignoring error \"[Errno 2] No such file or directory: 'test'\"\n!!!\n</code></pre> <p>At the end of dry run output, another warning message is shown if any ignored errors occurred:</p> <pre><code>== COMPLETED: Installation ended successfully\n\n!!!\n!!! WARNING: One or more errors were ignored, see warnings above\n!!!\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_notes_ignored_errors_disabling","title":"Disabling ignoring errors during dry run","text":"<p>Ignoring errors that occur during a dry run is enabled by default; it can be disabled using the configuration option that is available for it, i.e. by:</p> <ul> <li>the <code>--disable-extended-dry-run-ignore-errors</code> command line option</li> <li>by defining the <code>$EASYBUILD_DISABLE_EXTENDED_DRY_RUN_IGNORE_ERRORS</code>     environment variable</li> <li>or by defining <code>disable-extended-dry-run-ignore-errors</code> in an     EasyBuild configuration file</li> </ul> <p>(see also Configuring EasyBuild)</p>"},{"location":"extended-dry-run/#extended_dry_run_overview","title":"Overview of dry run mechanism","text":"<p>During an extended dry run, several operations are not performed, or are only simulated.</p> <p>The sections below give a detailed overview of the dry run mechanism.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_build_install_dirs","title":"Temporary directories as build/install directories","text":"<p>To make very sure that EasyBuild does not touch any files or directories during the dry run, the build and (software/module) install directories are replaced by subdirectories of the temporary directory used by that particular EasyBuild session.</p> <p>In the background, the values for <code>self.builddir</code>, <code>self.installdir</code> and <code>self.installdir_mod</code> are changed in the <code>EasyBlock</code> instance(s) being used; this also affects the use of the <code>%(builddir)s</code> and <code>$(installdir)s</code> values in easyconfig files.</p> <p>Although the build and install directories are effectively temporary directories during a dry run (under a prefix like <code>/tmp/eb-aD_yNu/__ROOT__</code>), this is not visible in the dry run output: the 'fake' build and install directories are replaced by the corresponding original value in the dry run output. For example:</p> <pre><code>[extract_step method]\n  running command \"tar xzf /home/example/easybuild/sources/b/bzip2/bzip2-1.0.6.tar.gz\"\n  (in /tmp/example/eb_build/bzip2/1.0.6/GCC-4.9.2)\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_build_dir_guess","title":"Note on build directory in dry run mode","text":"<p>The build (sub)directory used during an actual (non-dry run) EasyBuild session may be different than the one mentioned in the dry run output.</p> <p>This is because during a dry run, EasyBuild will guess the name of the subdirectory that is created by unpacking the first source file in the build directory as being <code>&lt;name&gt;-&lt;version&gt;</code>. Although this is a common pattern, it is not always 100% correct.</p> <p>For example, you may see this in the dry run output for WRF (for which a build-in-installdir procedure is used):</p> <pre><code>[build_step method]\n  running command \"tcsh ./compile -j 4 wrf\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\n</code></pre> <p>The actual build (and install) subdirectory is slightly different while not in dry run mode however, i.e.: <code>/home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRFV3</code>.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_downloading","title":"No downloading of missing source files/patches","text":"<p>Required files (source files/patches) are not downloaded during a dry run if they are not available yet.</p> <p>The dry run output will specify whether files are found (and if so, at which path) or not; the exact output for files that were not found depends on whether or not source URLs are available.</p> <p>For example: if the required source file for <code>bzip2</code> is not available yet, it is indicated where EasyBuild will try to download it to:</p> <pre><code>[fetch_step method]\nAvailable download URLs for sources/patches:\n  * http://www.bzip.org/1.0.6/$source\n\nList of sources:\n  * bzip2-1.0.6.tar.gz downloaded to /home/example/easybuild/sources/b/bzip2/bzip2-1.0.6.tar.gz\n\nList of patches:\n(none)\n</code></pre> <p>If the source file is already available in the source path that EasyBuild was configured with, it is indicated as such:</p> <pre><code>List of sources:\n  * bzip2-1.0.6.tar.gz found at /home/example/easybuild/sources/b/bzip2/bzip2-1.0.6.tar.gz\n</code></pre> <p>In case no source URLs are available and required files are missing, they are simply marked as such:</p> <pre><code>Available download URLs for sources/patches:\n(none)\n\nList of sources:\n  * bzip2-1.0.6.tar.bz2 (MISSING)\n</code></pre> <p>However, since the dry run mechanism never actually uses the source files/patches, this does not affect the remainder of the output of <code>--extended-dry-run</code>/<code>-x</code>.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_checksum_verification","title":"Checksum verification is skipped","text":"<p>Computing checksums of sources files/patches, and verifying them against specified checksums (if available) is skipped during a dry run, because it is considered potentially too time-consuming. In addition, source files/patches may not be available anyway.</p> <p>If checksums are available they are only reported, for example (for GCC v4.9.3):</p> <pre><code>[checksum_step method]\n* expected checksum for gcc-4.9.3.tar.bz2: 6f831b4d251872736e8e9cc09746f327\n* expected checksum for gmp-6.0.0a.tar.bz2: b7ff2d88cae7f8085bd5006096eed470\n* expected checksum for mpfr-3.1.2.tar.gz: 181aa7bb0e452c409f2788a4a7f38476\n* expected checksum for mpc-1.0.2.tar.gz: 68fadff3358fb3e7976c7a398a0af4c3\n* expected checksum for mpfr-3.1.2-allpatches-20141204.patch: 58aec98d15982f9744a043d2f1c5af82\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_unpacking_sources","title":"Source files are not unpacked","text":"<p>Source files are not unpacked, since this may require too much time (in case of large source files). Additionally, source files may not be available anyway.</p> <p>This has a number of implications:</p> <ul> <li>files or directories that may be expected to be there are not, which     may lead to (ignored) errors if the used easyblock does not take     this into account (see also     Errors are ignored (by default) during dry run)</li> <li>the build directory in which commands are executed may be incorrect     in the dry run output (see also     Note on build directory in dry run mode)</li> </ul> <p>The extraction command is mentioned in the dry run output however, for example:</p> <pre><code>[extract_step method]\n  running command \"tar xjf bzip2-1.0.6.tar.bz2\"\n  (in /tmp/example/eb_build/bzip2/1.0.6/GCC-4.9.2)\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_patching","title":"Patch files are not applied, no runtime patching","text":"<p>Since source files are not unpacked, patch files can not applied either.</p> <p>The dry run output does provide an overview of patch files, together with where they are found and how they are applied:</p> <pre><code>[patch_step method]\n* applying patch file WRF_parallel_build_fix.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/easybuild/sources/w/WRF/WRF_parallel_build_fix.patch\"\n  (in /home/example/easybuild/easybuild/software/WRF/3.6.1-intel-2015a-dmpar)\n* applying patch file WRF-3.6.1_known_problems.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/easybuild/sources/w/WRF/WRF-3.6.1_known_problems.patch\"\n  (in /home/example/easybuild/easybuild/software/WRF/3.6.1-intel-2015a-dmpar)\n</code></pre> <p>Likewise, runtime patching performed by the easyblock itself can not work either. If the <code>apply_regex_substitutions</code> function (available from <code>easybuild.tools.filetools</code>) is used, a clear overview is included in the dry run output (see also Runtime patching of files).</p> <p>For example, in the <code>configure</code> step of the WRF easyblock when using the Intel compilers, this yields:</p> <pre><code>[configure_step method]\n...\napplying regex substitutions to file configure.wrf\n  * regex pattern '^(DM_FC\\s*=\\s*).*$', replacement string '\\1 mpif90'\n  * regex pattern '^(DM_CC\\s*=\\s*).*$', replacement string '\\1 mpicc -DMPI2_SUPPORT'\n</code></pre> <p>If the <code>apply_regex_substitutions</code> function provided for runtime patching is not used (and <code>fileinput</code> is used directly, for example), runtime patching performed by the easyblock will most likely result in an error, leading to the step in which it is being performed being aborted (see Errors are ignored (by default) during dry run).</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_module_load","title":"Module <code>load</code> statements are executed or simulated","text":"<p><code>module load</code> statements are either effectively executed or simulated, depending on whether the corresponding module files are available or not.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_module_load_available","title":"Available modules are loaded","text":"<p><code>module load</code> statements are fairly light-weight, so they are effectively executed if the module being loaded is available.</p> <p>The dry run output includes an overview of the modules being loaded. In addition an overview of all loaded modules, including the ones that were loaded indirectly, is shown.</p> <p>For example:</p> <pre><code>[prepare_step method]\nDefining build environment, based on toolchain (options) and specified dependencies...\n\nLoading toolchain module...\n\nmodule load GCC/4.9.2\n\nLoading modules for dependencies...\n\nmodule load M4/1.4.17-GCC-4.9.2\n\nFull list of loaded modules:\n  1) GCC/4.8.2\n  2) M4/1.4.17-GCC-4.9.2\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_module_load_simulated","title":"Loading of non-available modules is simulated","text":"<p>If the module file required to execute a particular <code>module load</code> statement is not available, the dry run mechanism will simulate the loading of the module.</p> <p>The <code>module load</code> statements that were simulated rather than actually performed are clearly indicated using <code>[SIMULATED]</code> in the dry run output, for example:</p> <pre><code>[prepare_step method]\nDefining build environment, based on toolchain (options) and specified dependencies...\n\nLoading toolchain module...\n\nmodule load intel/2015a\n\nLoading modules for dependencies...\n\nmodule load JasPer/1.900.1-intel-2015a\nmodule load netCDF/4.3.2-intel-2015a [SIMULATED]\nmodule load netCDF-Fortran/4.4.0-intel-2015a [SIMULATED]\nmodule load tcsh/6.18.01-intel-2015a\n</code></pre> <p>Only modules that were effectively loaded will appear in the full list of modules being printed; modules for which the load was simulated will not be included.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_module_load_simulated_deps","title":"Simulated loading of non-available dependency modules","text":"<p>For dependencies, simulating a <code>module load</code> statement basically (only) entails defining the <code>$EBROOT*</code> and <code>$EBVERSION*</code> environment variables (the full variable names are determined by the software name), which are picked up by resp. the <code>get_software_root</code> and <code>get_software_version</code> functions often used in easyblocks.</p> <p>The <code>$EBVERSION*</code> environment variable is defined with the actual software version of the dependency.</p> <p>For the <code>$EBROOT*</code> environment variable, the name of the environment variable itself prefixed with a '<code>$</code>' is used as a dummy value, rather than using an fake installation software prefix. For example, when simulating the load statement for a <code>GCC</code> module, the environment variable <code>$EBROOTGCC</code> is defined as the string value <code>'$EBROOTGCC'</code> (literally).</p> <p>This results in sensible output when this value is picked up via <code>get_software_root</code> by the easyblock.</p> <p>For example, for netCDF used as a dependency for WRF the following is included in the module file contents included in the dry run output:</p> <pre><code>setenv  NETCDF      \"$EBROOTNETCDF\"\nsetenv  NETCDFF     \"$EBROOTNETCDFMINFORTRAN\"\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_module_load_simulated_toolchain","title":"Simulated loading of non-available toolchain module","text":"<p>When the module that corresponds to the toolchain being used is not available, the dry run mechanism will also simulate the <code>module load</code> statements for the individual toolchain components, to ensure that version checks on the toolchain components can work as expected.</p> <p>For example, if the toolchain module <code>intel/2015a</code> is not available, the loading of the <code>icc</code>, <code>ifort</code>, <code>impi</code> and <code>imkl</code> modules that would be loaded by the <code>intel</code> module is also simulated:</p> <pre><code>[prepare_step method]\nDefining build environment, based on toolchain (options) and specified dependencies...\n\nLoading toolchain module...\n\nmodule load icc/2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load ifort/2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load impi/5.0.2.044-iccifort-2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load imkl/11.2.1.133-iimpi-7.2.3-GCC-4.9.2 [SIMULATED]\nmodule load intel/2015a [SIMULATED]\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_build_environment","title":"Build environment is reported","text":"<p>The build environment that is set up based on the toolchain (and toolchain options) being used, and the dependencies being loaded is reported as a part of the dry run output.</p> <p>For example, when <code>GCC</code> is used as a toolchain something like this will be included in the <code>prepare_step</code> part of the dry run output:</p> <pre><code>Defining build environment...\n\n  export CC=\"gcc\"\n  export CFLAGS=\"-O2\"\n  export CXX=\"g++\"\n  export CXXFLAGS=\"-O2\"\n  export F77=\"gfortran\"\n  export F90=\"gfortran\"\n  export F90FLAGS=\"-O2\"\n  export FFLAGS=\"-O2\"\n  export FLIBS=\"-lgfortran\"\n  export LDFLAGS=\"-L/home/example/eb/software/GCC/4.8.2/lib\"\n  export LIBS=\"-lm -lpthread\"\n  export OPTFLAGS=\"-O2\"\n  export PRECFLAGS=\"\"\n</code></pre> <p>This is particularly useful as an overview of which environment variables that are defined by the toolchain mechanism, and to assess the effect of changing toolchain options.</p> <p>The output is deliberately formatted such that is can be easily copy-pasted, which can be useful to mimic the environment in which EasyBuild will perform the build and install procedure.</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_run_cmd","title":"Shell commands are not executed","text":"<p>Any shell commands that are executed via the <code>run_cmd</code> and <code>run_cmd_qa</code> functions that are provided by the EasyBuild framework via the <code>easybuild.tools.run</code> are not executed, only reported (see also Executing commands).</p> <p>This typically includes the commands that are defined in the easyblock to be run as a part of the configure/build/install steps.</p> <p>For example:</p> <pre><code>configuring... [DRY RUN]\n\n[configure_step method]\n  running command \" ./configure --prefix=/home/example/eb/software/make/3.82-GCC-4.8.2 \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n\nbuilding... [DRY RUN]\n\n[build_step method]\n  running command \" make -j 4 \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n\n...\n\ninstalling... [DRY RUN]\n\n[stage_install_step method]\n\n[make_installdir method]\n\n[install_step method]\n  running command \" make install \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n</code></pre> <p>There are a couple of minor exceptions though. Some (light-weight) commands are always run by the EasyBuild framework, even in dry run mode, and an easyblock can specify that particular commands must always be run (see also Executing commands).</p>"},{"location":"extended-dry-run/#extended_dry_run_overview_sanity_check","title":"Sanity check paths/commands are not checked","text":"<p>Since nothing is actually being installed during a dry run, the sanity check paths/commands can not be checked.</p> <p>Instead, the dry run mechanism will produce a clear overview of which paths are expected to be found in the installation directory, and which commands are expected to work (if any).</p> <p>For example:</p> <pre><code>sanity checking... [DRY RUN]\n\n[sanity_check_step method]\nSanity check paths - file ['files']\n  * WRFV3/main/ideal.exe\n  * WRFV3/main/libwrflib.a\n  * WRFV3/main/ndown.exe\n  * WRFV3/main/nup.exe\n  * WRFV3/main/real.exe\n  * WRFV3/main/tc.exe\n  * WRFV3/main/wrf.exe\nSanity check paths - (non-empty) directory ['dirs']\n  * WRFV3/main\n  * WRFV3/run\nSanity check commands\n  (none)\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_overview_no_downloading","title":"Module file is incomplete and only printed","text":"<p>During a dry run, the contents of the module file that would be installed is still generated, but only printed; it is not actually written to file.</p> <p>More importantly however, the module file being reported is bound to be incomplete, since the module generator only includes certain statements conditionally, for example only if the files/directories to which they relate actually exist. This typically affects <code>prepend-path</code> statements, e.g. for <code>$PATH</code>, <code>$LD_LIBRARY_PATH</code>, etc.</p> <p>For example, the reported module file for make v3.82 built with <code>GCC/4.8.2</code> may look something like:</p> <pre><code>creating module... [DRY RUN]\n\n[make_module_step method]\nGenerating module file /home/example/eb/modules/all/make/3.82-GCC-4.8.2, with contents:\n\n    #%Module\n    proc ModulesHelp { } {\n        puts stderr { make-3.82: GNU version of make utility - Homepage: http://www.gnu.org/software/make/make.html\n        }\n    }\n\n    module-whatis {Description: make-3.82: GNU version of make utility - Homepage: http://www.gnu.org/software/make/make.html}\n\n    set root /home/example/eb/software/make/3.82-GCC-4.8.2\n\n    conflict make\n\n    if { ![ is-loaded GCC/4.8.2 ] } {\n        module load GCC/4.8.2\n    }\n\n    setenv  EBROOTMAKE      \"$root\"\n    setenv  EBVERSIONMAKE       \"3.82\"\n    setenv  EBDEVELMAKE     \"$root/easybuild/make-3.82-GCC-4.8.2-easybuild-devel\"\n\n    # Built with EasyBuild version 2.4.0\n</code></pre> <p>Note that there is no <code>prepend-path PATH</code> statement for the <code>bin</code> subdirectory, for example.</p>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks","title":"Guidelines for easyblocks","text":"<p>To ensure useful output under <code>--extended-dry-run</code>, easyblocks should be implemented keeping in mind that some operations are possible not performed, to avoid generating errors in dry run mode.</p> <p>Although errors are just ignored by the dry run mechanism on a per-step basis, they may hide subsequent operations and useful information for the remainder of the step (see also Errors are ignored (by default) during dry run).</p>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_detect_dry_run","title":"Detecting dry run mode and enhancing the dry run output","text":"<p>To detect whether an easyblock is being used in dry run mode, it suffices to check the <code>self.dry_run</code> class variable.</p> <p>Additional messages can be included in the dry run output using the <code>self.dry_run_msg</code> method.</p> <p>For example:</p> <pre><code>class Example(EasyBlock):\n\n    def configure_step(self):\n\n        if self.dry_run:\n            self.dry_run_msg(\"Dry run mode detected, not reading template configuration files\")\n            ...\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_files_dirs_checks","title":"Check whether files/directories exist before accessing them","text":"<p>Rather than assuming that particular files or directories will be there, easyblocks should take into that they may not be, for example because EasyBuild is being run in dry run mode.</p> <p>For example, instead of simply assuming that a directory named '<code>test</code>' will be there, the existence should be checked first. If not, an appropriate error should be produced, but only when the easyblock is not being used in dry run mode.</p> <p>Bad example:</p> <pre><code># *BAD* example: maybe the 'test' directory is not there (e.g., because we're in dry run mode)!\ntry:\n    testcases = os.listdir('test')\nexcept OSError as err:\n    raise EasyBuildError(\"Unexpected error when determining list of test cases: %s\", err)\n</code></pre> <p>Good example:</p> <pre><code># make sure the 'test' directory is there before trying to access it\nif os.path.exists('test'):\n    try:\n        testcases = os.listdir('test')\n    except OSError as err:\n        raise EasyBuildError(\"Unexpected error when determining list of test cases: %s\", err)\n\n# only raise an error if we're not in dry run mode\nelif not self.dry_run:\n    raise EasyBuildError(\"Test directory not found, failed to determine list of test cases\")\n</code></pre> <p>Easyblocks that do not take this into account are likely to result in ignored errors during a dry run (see also Errors are ignored (by default) during dry run). For example, for the bad example shown above:</p> <pre><code>!!!\n!!! WARNING: ignoring error \"Unexpected error when determining list of test cases: [Errno 2] No such file or directory: 'test'\"\n!!!\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_framework_functions","title":"Use functions provided by the EasyBuild framework","text":"<p>The EasyBuild framework provides a bunch of functions that are \"dry run-aware\", and which can significantly help in keeping easyblocks free from conditional statements checking <code>self.dry_run</code>:</p> <ul> <li>Defining environment variables</li> <li>Writing or appending to files</li> <li>Runtime patching of files</li> <li>Executing commands</li> </ul>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_framework_functions_setvar","title":"Defining environment variables","text":"<p>(<code>setvar</code>)</p> <p>For defining environment variables, the <code>setvar</code> function available in the <code>easybuild.tools.environment</code> module should be used.</p> <p>For example, from the WRF easyblock:</p> <pre><code>jasper = get_software_root('JasPer')\nif jasper:\n    env.setvar('JASPERINC', os.path.join(jasper, 'include'))\n</code></pre> <p>When triggered in dry run mode, this will result in a clear dry run message like:</p> <pre><code>export JASPERINC=\"$EBROOTJASPER/include\"\n</code></pre> <p>The actual output depends on whether or not the required module for <code>JasPer</code> is available (see Simulated loading of non-available dependency modules).</p>"},{"location":"extended-dry-run/#silently-defining-environment-variables","title":"Silently defining environment variables","text":"<p>The <code>setvar</code> function also supports defining environment variables silently, i.e. without producing a corresponding dry run message, via the named argument <code>verbose</code>.</p> <p>This is used in a couple of places in the EasyBuild framework, to avoid some environment variables being defined cluttering the dry run output without added value. It can be used for similar reasons in easyblocks.</p> <p>For example, the <code>PythonPackage</code> uses it in the install step, to modify <code>$PYTHONPATH</code> as required by the <code>python setup.py install</code> procedure (which is considered not relevant to include in the dry run output, since it's a technicality):</p> <pre><code>env.setvar('PYTHONPATH', new_pythonpath, verbose=False)\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_framework_functions_write_file","title":"Writing or appending to files","text":"<p>(<code>write_file</code>)</p> <p>For writing and appending to files, the EasyBuild framework provides the <code>write_file</code> function (available from the <code>easybuild.tools.filetools</code> module).</p> <p>Using it is straightforward, for example:</p> <pre><code>write_file('example.txt', \"Contents for the example file\")\n</code></pre> <p>To append to an existing file, <code>write_file</code> support a named argument <code>append</code>.</p> <p>When used in dry run mode, <code>write_file</code> does not actually (attempt to) write to the file; instead, it just produces an appropriate dry run message and returns.</p> <p>For example:</p> <pre><code>file written: /tmp/eb-ksVC07/tmp.conf\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_framework_functions_runtime_patching","title":"Runtime patching of files","text":"<p>(<code>apply_regex_substitutions</code>)</p> <p>To make runtime patching of files in easyblocks easier, and to do it with taking the possibility of being in dry run module into account, the EasyBuild framework provides the <code>apply_regex_substitutions</code> function (available from the <code>easybuild.tools.filetools</code> module, since EasyBuild v2.4.0).</p> <p>This function takes two arguments: a path to the file that should be patched, and a list of tuples specifying the regular expression pattern to match on, and the string value that should be used as replacement text.</p> <p>For example (simple fictional example):</p> <pre><code># replace value for C++ compiler\napply_regex_substitutions('config.mk', [('^(CPLUSPLUS\\s*=).*', '\\1 %s' % os.environ['CXX'])])\n</code></pre> <p>When used in dry run mode, it will produce a message like:</p> <pre><code>applying regex substitutions to file config.mk\n  * regex pattern '^(CPLUSPLUS\\s*=\\s).*', replacement string '\\1 g++'\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_guidelines_easyblocks_framework_functions_run_cmd","title":"Executing commands","text":"<p>(<code>run_cmd</code> and <code>run_cmd_qa</code>)</p> <p>To execute shell commands, the <code>run_cmd</code> and <code>run_cmd_qa</code> functions are provided by the EasyBuild framework in the <code>easybuild.tools.run</code> module, with the latter providing support for running interactive commands.</p> <p>In their simplest form, they simply take the command to execute as a string. For example:</p> <pre><code>run_cmd(\"tcsh ./compile -j %s wrf\" % self.cfg['parallel'])\n</code></pre> <p>In dry run mode, these functions just produce a dry run message, rather than actually executing the specified command. For example:</p> <pre><code>running command \"tcsh ./compile -j 4 wrf\"\n(in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\n</code></pre> <p>Take into account that the directory included in the message may not be 100% accurate, see Note on build directory in dry run mode.</p>"},{"location":"extended-dry-run/#silently-executing-commands","title":"Silently executing commands","text":"<p>The <code>verbose</code> named argument supported by the <code>run_cmd</code> function allows to execute a particular command silently, i.e. without producing a dry run message.</p> <p>For example:</p> <pre><code># only run for debugging purposes\nrun_cmd(\"ulimit -v\", verbose=False)\n</code></pre>"},{"location":"extended-dry-run/#forced-execution-of-particular-commands","title":"Forced execution of particular commands","text":"<p>Sometimes, it can be required that specific (light-weight) commands are always executed, because they have side-effects that are assumed to have taken place later in the easyblock.</p> <p>For this, the <code>run_cmd</code> function support another named argument, i.e. <code>force_in_dry_run</code>. When set to <code>True</code>, the specified command will always be executed, even when in dry run mode.</p> <p>This is mainly intended for use in the EasyBuild framework itself, where commands that verify certain things must be executed, but it can also be useful for easyblocks (if used correctly).</p> <p>For example:</p> <pre><code>out, exit_code = run_cmd(\"type module\", simple=False, force_in_dry_run=True)\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_examples","title":"Extended dry run: examples","text":"<p>Output examples for <code>eb --extended-dry-run</code>/<code>eb -x</code>:</p> <ul> <li>make v3.82 with GCC/4.8.2</li> <li>WRF v3.6.1 with intel/2015a</li> </ul>"},{"location":"extended-dry-run/#extended_dry_run_examples_make382_GCC482","title":"make v3.82 with GCC/4.8.2","text":"<pre><code>$ eb make-3.82-GCC-4.8.2.eb -x\n== temporary log file in case of crash /tmp/eb-ksVC07/easybuild-MmAugb.log\n\n== processing EasyBuild easyconfig /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/m/make/make-3.82-GCC-4.8.2.eb\n\nImportant note: the actual build &amp; install procedure that will be performed may diverge\n(slightly) from what is outlined below, due to conditions in the easyblock which are\nincorrectly handled in a dry run.\nAny errors that may occur are ignored and reported as warnings, on a per-step basis.\nPlease be aware of this, and only use the information below for quick debugging purposes.\n\n*** DRY RUN using 'ConfigureMake' easyblock (easybuild.easyblocks.generic.configuremake @ /home/example/eb/easybuild-easyblocks/easybuild/easyblocks/generic/configuremake.pyc) ***\n\n== building and installing make/3.82-GCC-4.8.2...\nfetching files... [DRY RUN]\n\n[fetch_step method]\nAvailable download URLs for sources/patches:\n  * http://ftpmirror.gnu.org/make/$source\n\nList of sources:\n  * make-3.82.tar.bz2 will be downloaded to /home/example/eb/sources/m/make/make-3.82.tar.bz2\n\nList of patches:\n(none)\n\ncreating build dir, resetting environment... [DRY RUN]\n\n[check_readiness_step method]\n\n[make_builddir method]\n\n[reset_changes method]\n\n[handle_iterate_opts method]\n\nunpacking... [DRY RUN]\n\n[checksum_step method]\n* expected checksum for make-3.82.tar.bz2: (none)\n\n[extract_step method]\n  running command \"tar xjf /home/example/eb/sources/m/make/make-3.82.tar.bz2\"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2)\n\npatching... [DRY RUN]\n\n[patch_step method]\n\npreparing... [DRY RUN]\n\n[prepare_step method]\nDefining build environment, based on toolchain (options) and specified dependencies...\n\nLoading toolchain module...\n\nmodule load GCC/4.8.2\n\nLoading modules for dependencies...\n\n\nFull list of loaded modules:\n  1) GCC/4.8.2\n\nDefining build environment...\n\n  export CC=\"gcc\"\n  export CFLAGS=\"-O2\"\n  export CXX=\"g++\"\n  export CXXFLAGS=\"-O2\"\n  export F77=\"gfortran\"\n  export F90=\"gfortran\"\n  export F90FLAGS=\"-O2\"\n  export FFLAGS=\"-O2\"\n  export FLIBS=\"-lgfortran\"\n  export LDFLAGS=\"-L/home/example/eb/software/GCC/4.8.2/lib\"\n  export LIBS=\"-lm -lpthread\"\n  export OPTFLAGS=\"-O2\"\n  export PRECFLAGS=\"\"\n\nconfiguring... [DRY RUN]\n\n[configure_step method]\n  running command \" ./configure --prefix=/home/example/eb/software/make/3.82-GCC-4.8.2 \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n\nbuilding... [DRY RUN]\n\n[build_step method]\n  running command \" make -j 4 \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n\ntesting... [DRY RUN]\n\n[test_step method]\n\ninstalling... [DRY RUN]\n\n[stage_install_step method]\n\n[make_installdir method]\n\n[install_step method]\n  running command \" make install \"\n  (in /home/example/eb/build/make/3.82/GCC-4.8.2/make-3.82)\n\ntaking care of extensions... [DRY RUN]\n\n[extensions_step method]\n\npostprocessing... [DRY RUN]\n\n[post_install_step method]\n\nsanity checking... [DRY RUN]\n\n[sanity_check_step method]\nSanity check paths - file ['files']\n  * bin/make\nSanity check paths - (non-empty) directory ['dirs']\n  (none)\nSanity check commands\n  (none)\n\ncleaning up... [DRY RUN]\n\n[cleanup_step method]\n\ncreating module... [DRY RUN]\n\n[make_module_step method]\nGenerating module file /home/example/eb/modules/all/make/3.82-GCC-4.8.2, with contents:\n\n    #%Module\n    proc ModulesHelp { } {\n        puts stderr { make-3.82: GNU version of make utility - Homepage: http://www.gnu.org/software/make/make.html\n        }\n    }\n\n    module-whatis {Description: make-3.82: GNU version of make utility - Homepage: http://www.gnu.org/software/make/make.html}\n\n    set root /home/example/eb/software/make/3.82-GCC-4.8.2\n\n    conflict make\n\n    if { ![ is-loaded GCC/4.8.2 ] } {\n        module load GCC/4.8.2\n    }\n\n    setenv  EBROOTMAKE      \"$root\"\n    setenv  EBVERSIONMAKE       \"3.82\"\n    setenv  EBDEVELMAKE     \"$root/easybuild/make-3.82-GCC-4.8.2-easybuild-devel\"\n\n    # Built with EasyBuild version 2.4.0\n\n\npermissions... [DRY RUN]\n\n[permissions_step method]\n\npackaging... [DRY RUN]\n\n[package_step method]\n\n== COMPLETED: Installation ended successfully\n\nImportant note: the actual build &amp; install procedure that will be performed may diverge\n(slightly) from what is outlined above, due to conditions in the easyblock which are\nincorrectly handled in a dry run.\nAny errors that may occur are ignored and reported as warnings, on a per-step basis.\nPlease be aware of this, and only use the information above for quick debugging purposes.\n\n(no ignored errors during dry run)\n\n== Build succeeded for 1 out of 1\n== Temporary log file(s) /tmp/eb-ksVC07/easybuild-MmAugb.log* have been removed.\n== Temporary directory /tmp/eb-ksVC07 has been removed.\n</code></pre>"},{"location":"extended-dry-run/#extended_dry_run_examples_WRF361_intel2015a","title":"WRF v3.6.1 with intel/2015a","text":"<pre><code>$ eb WRF-3.6.1-intel-2015a-dmpar.eb -x\n== temporary log file in case of crash /tmp/eb-Dh1wOp/easybuild-0bu9u9.log\n\n== processing EasyBuild easyconfig /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF-3.6.1-intel-2015a-dmpar.eb\n\nImportant note: the actual build &amp; install procedure that will be performed may diverge\n(slightly) from what is outlined below, due to conditions in the easyblock which are\nincorrectly handled in a dry run.\nAny errors that may occur are ignored and reported as warnings, on a per-step basis.\nPlease be aware of this, and only use the information below for quick debugging purposes.\n\n*** DRY RUN using 'EB_WRF' easyblock (easybuild.easyblocks.wrf @ /home/example/eb/easybuild-easyblocks/easybuild/easyblocks/w/wrf.py) ***\n\n== building and installing WRF/3.6.1-intel-2015a-dmpar...\nfetching files... [DRY RUN]\n\n[fetch_step method]\nAvailable download URLs for sources/patches:\n  * http://www2.mmm.ucar.edu/wrf/src//$source\n  * http://www.mmm.ucar.edu/wrf/src//$source\n\nList of sources:\n  * WRFV3.6.1.TAR.gz will be downloaded to /home/example/eb/sources/w/WRF/WRFV3.6.1.TAR.gz\n\nList of patches:\n  * WRF_parallel_build_fix.patch found at /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF_parallel_build_fix.patch\n  * WRF-3.6.1_netCDF-Fortran_separate_path.patch found at /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF-3.6.1_netCDF-Fortran_separate_path.patch\n  * WRF-3.6.1_known_problems.patch found at /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF-3.6.1_known_problems.patch\n  * WRF_tests_limit-runtimes.patch found at /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF_tests_limit-runtimes.patch\n\ncreating build dir, resetting environment... [DRY RUN]\n\n[check_readiness_step method]\n\n[make_builddir method]\n\n[reset_changes method]\n\n[handle_iterate_opts method]\n\nunpacking... [DRY RUN]\n\n[checksum_step method]\n* expected checksum for WRFV3.6.1.TAR.gz: (none)\n* expected checksum for WRF_parallel_build_fix.patch: (none)\n* expected checksum for WRF-3.6.1_netCDF-Fortran_separate_path.patch: (none)\n* expected checksum for WRF-3.6.1_known_problems.patch: (none)\n* expected checksum for WRF_tests_limit-runtimes.patch: (none)\n\n[extract_step method]\n  running command \"tar xzf /home/example/eb/sources/w/WRF/WRFV3.6.1.TAR.gz\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar)\n\npatching... [DRY RUN]\n\n[patch_step method]\n* applying patch file WRF_parallel_build_fix.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF_parallel_build_fix.patch\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar)\n* applying patch file WRF-3.6.1_netCDF-Fortran_separate_path.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF-3.6.1_netCDF-Fortran_separate_path.patch\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar)\n* applying patch file WRF-3.6.1_known_problems.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF-3.6.1_known_problems.patch\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar)\n* applying patch file WRF_tests_limit-runtimes.patch\n  running command \"patch -b -p&lt;derived&gt; -i /home/example/eb/easybuild-easyconfigs/easybuild/easyconfigs/w/WRF/WRF_tests_limit-runtimes.patch\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar)\n\npreparing... [DRY RUN]\n\n[prepare_step method]\nDefining build environment, based on toolchain (options) and specified dependencies...\n\nLoading toolchain module...\n\nmodule load icc/2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load ifort/2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load impi/5.0.2.044-iccifort-2015.1.133-GCC-4.9.2 [SIMULATED]\nmodule load imkl/11.2.1.133-iimpi-7.2.3-GCC-4.9.2 [SIMULATED]\nmodule load intel/2015a [SIMULATED]\n\nLoading modules for dependencies...\n\nmodule load JasPer/1.900.1-intel-2015a [SIMULATED]\nmodule load netCDF/4.3.2-intel-2015a [SIMULATED]\nmodule load netCDF-Fortran/4.4.0-intel-2015a [SIMULATED]\nmodule load tcsh/6.18.01-intel-2015a [SIMULATED]\n\nFull list of loaded modules:\n  (none)\n\n\n!!!\n!!! WARNING: Not all FFTW interface libraries ['fftw3xc_intel', 'mkl_intel_lp64', 'mkl_sequential', 'mkl_core'] are found in ['$EBROOTIMKL/mkl/lib/intel64', '$EBROOTIMKL/compiler/lib/intel64'], can't set $FFT_LIB.\n!!!\n\nDefining build environment...\n\n  export BLACS_INC_DIR=\"\"\n  export BLACS_LIB_DIR=\"\"\n  export BLACS_MT_STATIC_LIBS=\"libmkl_blacs_intelmpi_lp64.a\"\n  export BLACS_STATIC_LIBS=\"libmkl_blacs_intelmpi_lp64.a\"\n  export BLAS_INC_DIR=\"\"\n  export BLAS_LAPACK_INC_DIR=\"\"\n  export BLAS_LAPACK_LIB_DIR=\"\"\n  export BLAS_LAPACK_MT_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_intel_thread.a,libmkl_core.a,libiomp5.a,libpthread.a\"\n  export BLAS_LAPACK_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a\"\n  export BLAS_LIB_DIR=\"\"\n  export BLAS_MT_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_intel_thread.a,libmkl_core.a,libiomp5.a,libpthread.a\"\n  export BLAS_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a\"\n  export CC=\"icc\"\n  export CFLAGS=\"-O2 -ftz -fp-speculation=safe -fp-model source\"\n  export CPPFLAGS=\"\"\n  export CXX=\"icpc\"\n  export CXXFLAGS=\"-O2 -ftz -fp-speculation=safe -fp-model source\"\n  export F77=\"ifort\"\n  export F90=\"ifort\"\n  export F90FLAGS=\"-O2 -ftz -fp-speculation=safe -fp-model source\"\n  export FFLAGS=\"-O2 -ftz -fp-speculation=safe -fp-model source\"\n  export FFTW_INC_DIR=\"\"\n  export FFTW_LIB_DIR=\"\"\n  export FFTW_STATIC_LIBS=\"\"\n  export FFT_INC_DIR=\"\"\n  export FFT_LIB_DIR=\"\"\n  export FFT_STATIC_LIBS=\"\"\n  export I_MPI_CC=\"icc\"\n  export I_MPI_CXX=\"icpc\"\n  export I_MPI_F77=\"ifort\"\n  export I_MPI_F90=\"ifort\"\n  export LAPACK_INC_DIR=\"\"\n  export LAPACK_LIB_DIR=\"\"\n  export LAPACK_MT_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_intel_thread.a,libmkl_core.a,libiomp5.a,libpthread.a\"\n  export LAPACK_STATIC_LIBS=\"libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a\"\n  export LDFLAGS=\"\"\n  export LIBBLACS=\"-Wl,-Bstatic -Wl,--start-group -lmkl_blacs_intelmpi_lp64 -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBBLACS_MT=\"-Wl,-Bstatic -Wl,--start-group -lmkl_blacs_intelmpi_lp64 -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBBLAS=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBBLAS_MT=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group -Wl,-Bdynamic -liomp5 -lpthread\"\n  export LIBFFT=\"\"\n  export LIBLAPACK=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBLAPACK_MT=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group -Wl,-Bdynamic -liomp5 -lpthread\"\n  export LIBLAPACK_MT_ONLY=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group -Wl,-Bdynamic -liomp5 -lpthread\"\n  export LIBLAPACK_ONLY=\"-Wl,-Bstatic -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBS=\"-liomp5 -lpthread\"\n  export LIBSCALAPACK=\"-Wl,-Bstatic -Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group -Wl,-Bdynamic\"\n  export LIBSCALAPACK_MT=\"-Wl,-Bstatic -Wl,--start-group -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -Wl,--end-group -Wl,-Bdynamic -liomp5 -lpthread\"\n  export LIBSCALAPACK_MT_ONLY=\"-Wl,-Bstatic -Wl,--start-group -lmkl_scalapack_lp64 -Wl,--end-group -Wl,-Bdynamic -liomp5 -lpthread\"\n  export LIBSCALAPACK_ONLY=\"-Wl,-Bstatic -Wl,--start-group -lmkl_scalapack_lp64 -Wl,--end-group -Wl,-Bdynamic\"\n  export MPICC=\"mpicc\"\n  export MPICH_CC=\"icc\"\n  export MPICH_CXX=\"icpc\"\n  export MPICH_F77=\"ifort\"\n  export MPICH_F90=\"ifort\"\n  export MPICXX=\"mpicxx\"\n  export MPIF77=\"mpif77\"\n  export MPIF90=\"mpif90\"\n  export MPI_INC_DIR=\"\"\n  export MPI_LIB_DIR=\"\"\n  export MPI_LIB_SHARED=\"\"\n  export MPI_LIB_STATIC=\"\"\n  export OPTFLAGS=\"-O2\"\n  export PRECFLAGS=\"-ftz -fp-speculation=safe -fp-model source\"\n  export SCALAPACK_INC_DIR=\"\"\n  export SCALAPACK_LIB_DIR=\"\"\n  export SCALAPACK_MT_STATIC_LIBS=\"libmkl_scalapack_lp64.a,libmkl_blacs_intelmpi_lp64.a,libmkl_intel_lp64.a,libmkl_intel_thread.a,libmkl_core.a,libiomp5.a,libpthread.a\"\n  export SCALAPACK_STATIC_LIBS=\"libmkl_scalapack_lp64.a,libmkl_blacs_intelmpi_lp64.a,libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a\"\n\nconfiguring... [DRY RUN]\n\n[configure_step method]\n  export NETCDF=\"$EBROOTNETCDF\"\n  export NETCDFF=\"$EBROOTNETCDFMINFORTRAN\"\n  export JASPERINC=\"$EBROOTJASPER/include\"\n  export JASPERLIB=\"$EBROOTJASPER/lib\"\n  export WRFIO_NCD_LARGE_FILE_SUPPORT=\"1\"\nPerl script patched: arch/Config_new.pl\n  running interactive command \"./configure\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\napplying regex substitutions to file configure.wrf\n  * regex pattern '^(DM_FC\\s*=\\s*).*$', replacement string '\\1 mpif90'\n  * regex pattern '^(DM_CC\\s*=\\s*).*$', replacement string '\\1 mpicc -DMPI2_SUPPORT'\n  * regex pattern '^(SFC\\s*=\\s*).*$', replacement string '\\1 ifort'\n  * regex pattern '^(SCC\\s*=\\s*).*$', replacement string '\\1 icc'\n  * regex pattern '^(CCOMP\\s*=\\s*).*$', replacement string '\\1 icc'\napplying regex substitutions to file configure.wrf\n  * regex pattern '^(FCOPTIM.*)(\\s-O3)(\\s.*)$', replacement string '\\1 -O2 -ftz -fp-speculation=safe -fp-model source \\3'\n  * regex pattern '^(CFLAGS_LOCAL.*)(\\s-O3)(\\s.*)$', replacement string '\\1 -O2 -ftz -fp-speculation=safe -fp-model source \\3'\n\nbuilding... [DRY RUN]\n\n[build_step method]\n  running command \"tcsh ./compile -j 4 wrf\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\n  running command \"tcsh ./compile -j 4 em_real\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\n  running command \"tcsh ./compile -j 4 em_b_wave\"\n  (in /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar/WRF-3.6.1)\n\ntesting... [DRY RUN]\n\n[test_step method]\n  export I_MPI_MPD_TMPDIR=\"/tmp/eb-Dh1wOp\"\n  export PBS_ENVIRONMENT=\"PBS_BATCH_MPI\"\n  export I_MPI_PROCESS_MANAGER=\"mpd\"\nfile written: /tmp/eb-Dh1wOp/mpi_cmd_for-nzyh5V/mpdboot\nfile written: /tmp/eb-Dh1wOp/mpi_cmd_for-nzyh5V/nodes\n  export I_MPI_MPD_TMPDIR=\"/tmp/eb-Dh1wOp\"\n  export PBS_ENVIRONMENT=\"PBS_BATCH_MPI\"\n  export I_MPI_PROCESS_MANAGER=\"mpd\"\nfile written: /tmp/eb-Dh1wOp/mpi_cmd_for-hIOEd_/mpdboot\nfile written: /tmp/eb-Dh1wOp/mpi_cmd_for-hIOEd_/nodes\n\ninstalling... [DRY RUN]\n\n[stage_install_step method]\n\n[make_installdir method]\n\n[install_step method]\n\ntaking care of extensions... [DRY RUN]\n\n[extensions_step method]\n\npostprocessing... [DRY RUN]\n\n[post_install_step method]\n\nsanity checking... [DRY RUN]\n\n[sanity_check_step method]\nSanity check paths - file ['files']\n  * WRFV3/main/ideal.exe\n  * WRFV3/main/libwrflib.a\n  * WRFV3/main/ndown.exe\n  * WRFV3/main/nup.exe\n  * WRFV3/main/real.exe\n  * WRFV3/main/tc.exe\n  * WRFV3/main/wrf.exe\nSanity check paths - (non-empty) directory ['dirs']\n  * WRFV3/main\n  * WRFV3/run\nSanity check commands\n  (none)\n\ncleaning up... [DRY RUN]\n\n[cleanup_step method]\n\ncreating module... [DRY RUN]\n\n[make_module_step method]\nGenerating module file /home/example/eb/modules/all/WRF/3.6.1-intel-2015a-dmpar, with contents:\n\n    #%Module\n    proc ModulesHelp { } {\n        puts stderr { The Weather Research and Forecasting (WRF) Model is a next-generation mesoscale\n     numerical weather prediction system designed to serve both operational forecasting and atmospheric\n     research needs. - Homepage: http://www.wrf-model.org\n        }\n    }\n\n    module-whatis {Description: The Weather Research and Forecasting (WRF) Model is a next-generation mesoscale\n     numerical weather prediction system designed to serve both operational forecasting and atmospheric\n     research needs. - Homepage: http://www.wrf-model.org}\n\n    set root /home/example/eb/software/WRF/3.6.1-intel-2015a-dmpar\n\n    conflict WRF\n\n    if { ![ is-loaded intel/2015a ] } {\n        module load intel/2015a\n    }\n\n    if { ![ is-loaded JasPer/1.900.1-intel-2015a ] } {\n        module load JasPer/1.900.1-intel-2015a\n    }\n\n    if { ![ is-loaded netCDF/4.3.2-intel-2015a ] } {\n        module load netCDF/4.3.2-intel-2015a\n    }\n\n    if { ![ is-loaded netCDF-Fortran/4.4.0-intel-2015a ] } {\n        module load netCDF-Fortran/4.4.0-intel-2015a\n    }\n\n    setenv  EBROOTWRF       \"$root\"\n    setenv  EBVERSIONWRF        \"3.6.1\"\n    setenv  EBDEVELWRF      \"$root/easybuild/WRF-3.6.1-intel-2015a-dmpar-easybuild-devel\"\n\n    setenv  NETCDF      \"$EBROOTNETCDF\"\n    setenv  NETCDFF     \"$EBROOTNETCDFMINFORTRAN\"\n    # Built with EasyBuild version 2.4.0\n\n\npermissions... [DRY RUN]\n\n[permissions_step method]\n\npackaging... [DRY RUN]\n\n[package_step method]\n\n== COMPLETED: Installation ended successfully\n\nImportant note: the actual build &amp; install procedure that will be performed may diverge\n(slightly) from what is outlined above, due to conditions in the easyblock which are\nincorrectly handled in a dry run.\nAny errors that may occur are ignored and reported as warnings, on a per-step basis.\nPlease be aware of this, and only use the information above for quick debugging purposes.\n\n(no ignored errors during dry run)\n\n== Build succeeded for 1 out of 1\n== Temporary log file(s) /tmp/eb-Dh1wOp/easybuild-0bu9u9.log* have been removed.\n== Temporary directory /tmp/eb-Dh1wOp has been removed.\n</code></pre>"},{"location":"getting-help/","title":"Getting help","text":"<p>Having trouble? We would like to help!</p> <ul> <li>Search this documentation using the search box on top;</li> <li>Search for information in the archives of the EasyBuild mailing list;</li> <li>Subscribe to the EasyBuild mailing list <code>easybuild@lists.ugent.be</code> to post a question;</li> <li>Check the output of <code>eb --help</code>;</li> <li>Ask a question in the EasyBuild Slack channel;</li> <li>Consider participating in an EasyBuild conference call;</li> <li>Report issues with EasyBuild framework in the <code>easybuild-framework</code> GitHub repository;</li> <li>Report issues with easyblocks in the <code>easybuild-easyblocks</code> GitHub repository;</li> <li>Report issues with easyconfigs in the <code>easybuild-easyconfigs</code> GitHub repository;</li> <li>Report issues with the EasyBuild documentation in the <code>easybuild-docs</code> GitHub repository;</li> <li>Report issues on other aspects in the general <code>easybuild</code> GitHub repository;</li> </ul>"},{"location":"hooks/","title":"Hooks","text":"<p>Since v3.5.0, EasyBuild supports hooks that can be used to customise the behaviour of EasyBuild according to site policies if needed, without having to change the EasyBuild framework or the existing easyblocks.</p>"},{"location":"hooks/#what-are-hooks","title":"What are hooks?","text":"<p>Hooks are user-defined functions that are called by the EasyBuild framework at specific times during the installation procedure. They can be leveraged to alter or augment the installation procedure.</p> <p>This is usually done to conform with site-specific policies that are difficult to enforce otherwise, but it can also be (ab)used to fix specific problems or inject self-implemented enhancements (before you flesh them out in a proper contribution, for example).</p> <p>Both the <code>EasyBlock</code> instance and the parsed easyconfig file that are being used are fully accessible (and modifiable) from within hook implementations. Hence, this mechanism provides a lot of flexibility to change the EasyBuild functionality should you require it, without having to modify the codebase of EasyBuild itself.</p>"},{"location":"hooks/#configuring-easybuild-to-use-your-hook-implementations","title":"Configuring EasyBuild to use your hook implementations","text":"<p>To instruct EasyBuild to use your hook implementations, you only need to specify the location of the Python module (<code>*.py</code>) that implements them.</p> <p>This is done via the <code>--hooks</code> configuration option (or equivalently via the <code>$EASYBUILD_HOOKS</code> environment variable, or via <code>hooks = ...</code> in an EasyBuild configuration file, see also Configuring EasyBuild).</p> <p>For example:</p> <pre><code>eb --hooks=$HOME/my_eb_hooks.py ...\n</code></pre> <p>or:</p> <pre><code>export EASYBUILD_HOOKS=$HOME/my_eb_hooks.py\neb ...\n</code></pre>"},{"location":"hooks/#available-hooks","title":"Available hooks","text":"<p>Currently (since EasyBuild v3.7.0), three types of hooks are supported:</p> <ul> <li><code>start_hook</code> and <code>end_hook</code>, which are triggered once before starting software installations,   and once right after completing all installations, respectively</li> <li><code>parse_hook</code>, which is triggered when an easyconfig file is being parsed</li> <li><code>module_write_hook</code>, which is triggered right before a module file is written.   This includes the temporary module file used when installing extensions and during the sanity check,   as well as the devel module.</li> <li>\"step\" hooks that are triggered before and after every step of each installation procedure that is performed,   also aptly named '<code>pre</code>'- and '<code>post</code>'-hooks</li> </ul> <p>The list of currently available hooks in order of execution, which can also be consulted using <code>eb --avail-hooks</code>, is:</p> <ul> <li><code>start_hook</code> (only called once in an EasyBuild session)</li> <li><code>parse_hook</code> (available since EasyBuild v3.7.0)</li> <li><code>pre_fetch_hook</code>, <code>post_fetch_hook</code></li> <li><code>pre_ready_hook</code>, <code>post_ready_hook</code></li> <li><code>pre_source_hook</code>, <code>post_source_hook</code></li> <li><code>pre_patch_hook</code>, <code>post_patch_hook</code></li> <li><code>pre_prepare_hook</code>, <code>post_prepare_hook</code></li> <li><code>pre_configure_hook</code>, <code>post_configure_hook</code></li> <li><code>pre_build_hook</code>, <code>post_build_hook</code></li> <li><code>pre_test_hook</code>, <code>post_test_hook</code></li> <li><code>pre_install_hook</code>, <code>post_install_hook</code></li> <li><code>pre_extensions_hook</code>, <code>post_extensions_hook</code></li> <li><code>pre_postproc_hook</code>, <code>post_postproc_hook</code></li> <li><code>pre_sanitycheck_hook</code>, <code>post_sanitycheck_hook</code></li> <li><code>pre_cleanup_hook</code>, <code>post_cleanup_hook</code></li> <li><code>pre_module_hook</code>, <code>post_module_hook</code></li> <li><code>pre_permissions_hook</code>, <code>post_permissions_hook</code></li> <li><code>pre_package_hook</code>, <code>post_package_hook</code></li> <li><code>pre_testcases_hook</code>, <code>post_testcases_hook</code></li> <li><code>end_hook</code> (only called once in an EasyBuild session)</li> <li><code>module_write_hook</code> (called multiple times per installation, available since EasyBuild v4.4.1)</li> </ul> <p>All functions implemented in the provided Python module for which the name ends with <code>_hook</code> are considered.</p> <p>If any <code>*_hook</code> functions are encountered that do not match any of the available hooks, an error is reported. EasyBuild will try to provide suggestions for available hooks that closely match the encountered unknown hook.</p> <p>For example:</p> <pre><code>$ eb --hooks wrong_hooks.py example.eb\n== temporary log file in case of crash /tmp/eb-nMawy1/easybuild-Gu2ZP6.log\nERROR: Found one or more unknown hooks:\n* stat_hook (did you mean 'start_hook'?)\n* this_is_not_a_hook\n* install_hook (did you mean 'pre_install_hook', or 'post_install_hook'?)\n\nRun 'eb --avail-hooks' to get an overview of known hooks\n</code></pre>"},{"location":"hooks/#implementing-hooks","title":"Implementing hooks","text":"<p>To implement hooks, simply define one or more functions in a Python module (<code>*.py</code>), each named after an available hook.</p> <p>Do take into account the following:</p> <ul> <li>for <code>start_hook</code> and <code>end_hook</code>, no arguments are provided</li> <li>for <code>parse_hook</code>, one argument is provided: the <code>EasyConfig</code> instance   that corresponds to the easyconfig file being parsed (usually referred to as <code>ec</code>)</li> <li>for <code>module_write_hook</code>, 3 arguments are provided:</li> <li>the <code>EasyBlock</code> instance used to perform the installation (usually referred to as <code>self</code>)</li> <li>the filepath of the module that will be written</li> <li>the module text as a string   The return value of this hook, when set, will replace the original text that is then written to the module file.</li> <li>for the step hooks, one argument is provided:   the <code>EasyBlock</code> instance used to perform the installation (usually referred to as <code>self</code>)</li> <li>the parsed easyconfig file can be accessed in the step hooks via the <code>EasyBlock</code> instance,   i.e., via <code>self.cfg</code></li> </ul> <p>It is recommended to anticipate possible changes in the provided (named) arguments, using the <code>*args</code> and <code>**kwargs</code> mechanism commonly used in Python. This avoids that your hook implementations may break when updating to future EasyBuild versions. For example:</p> <pre><code># example pre-configure hook that anticipates changes in provided arguments\ndef pre_configure_hook(self, *args, **kwargs):\n    ...\n</code></pre> <p>In hooks you have access to the full functionality provided by the EasyBuild framework, so do <code>import</code> from <code>easybuild.tools.*</code> (or other <code>easybuild.*</code> namespaces) to leverage those functions.</p>"},{"location":"hooks/#parse-hook-specifics","title":"Parse hook specifics","text":"<p><code>parse_hook</code> is triggered right after reading the easyconfig file, before further parsing of some easyconfig parameters (like <code>*dependencies</code>) into custom data structures is done.</p> <p>This is important since it allows to dynamically modify easyconfig files while they are still \"raw\", i.e. when the easyconfig parameter values are still basic Python data structures like lists, dictionaries, etc. that are easy to manipulate (see also Manipulating easyconfig parameters).</p> <p>In <code>parse_hook</code> easyconfig parameters can be accessed and/or modified in a straightforward way, see Example hook to inject a custom patch file.</p>"},{"location":"hooks/#caveats","title":"Caveats","text":"<p>Due to internal details of the EasyBuild framework, you may run into some surprises when implementing hooks. Here are some things to take into account:</p>"},{"location":"hooks/#resolving-of-template-values","title":"Resolving of template values","text":"<p>In all step hooks, template values in easyconfig parameters will be resolved whenever they are accessed.</p> <p>That is, if the <code>%(version)</code> template is used in for example the <code>sources</code> easyconfig parameter, it will be replaced with the actual value of the <code>version</code> easyconfig parameter whenever the <code>sources</code> value is used. This can be avoided by temporarily disabling templating by wrapping the code in <code>with self.cfg.disable_templating:</code>.</p> <p>There is one notable exception to this: Templates in easyconfig parameters are not resolved in <code>parse_hook</code>, because templating has been disabled explicitly before <code>parse_hook</code> is called; this helps significantly to simplify manipulating of easyconfig parameter values (see also Manipulating easyconfig parameters).</p>"},{"location":"hooks/#manipulating-easyconfig-parameters","title":"Manipulating easyconfig parameters","text":"<p>You may run into surprises when trying to manipulate easyconfig parameters, for various reasons.</p> <p>First of all, the original easyconfig parameters may already be processed in another data structure which does not resemble the original format in which the parameter was defined in the easyconfig file.</p> <p>Moreover, this processing could be done either \"in place\" by replacing the original easyconfig parameter value, or in a separate variable, which effectively means that any changes to the original easyconfig parameter value are simply ignored.</p> <p>In addition, because of how the templating mechanism for easyconfig parameter works, changes to easyconfig parameters with non-string values (i.e. lists, dictionaries, etc.) will go up in smoke if not done correctly.</p> <p>More specifically, the following approach will not work in any of the (step) hooks, except for <code>parse_hook</code>:</p> <pre><code>def pre_fetch_hook(self):\n     \"Example of pre-fetch hook to manipulate list of patches.\"\n     # this does NOT have the intended affect in any pre- or post-step hook\n     self.cfg['patches'].append('example.patch')\n</code></pre> <p>The problem here is that the value obtained via <code>self.cfg['patches']</code> is not a reference to the actual easyconfig parameter value but a reference to a temporary copy thereof; hence any updates on the copy are effectively lost immediately.</p> <p>To achieve the intended effect, you can either:</p> <ul> <li> <p>temporarily disable the templating mechanism:</p> <pre><code>def pre_fetch_hook(self):\n    \"Example of pre-fetch hook to manipulate list of patches.\"\n    # temporarily disable templating, so changes to 'patches' easyconfig parameter are picked up\n    with self.cfg.disable_templating:\n        # add patch\n        self.cfg['patches'].append('example.patch')\n    # templating state restored\n</code></pre> </li> <li> <p>or replace the original value entirely:</p> <pre><code>def pre_fetch_hook(self):\n    \"Example of pre-fetch hook to manipulate list of patches.\"\n    self.cfg['patches'] = self.cfg['patches'] + ['example.patch']\n</code></pre> </li> </ul> <p>A better approach for manipulating easyconfig parameters is to use the <code>parse_hook</code> that was introduced in EasyBuild v3.7.0 (see Parse hook specifics), where these kind of surprises will not occur (because templating is automatically disabled before <code>parse_hook</code> is called and restored immediately afterwards). See also Example hook to inject a custom patch file.</p>"},{"location":"hooks/#archived-easyconfig-file-vs-hooks","title":"Archived easyconfig file vs hooks","text":"<p>EasyBuild archives the easyconfig file that was used for a particular installation: A copy is stored both in the <code>easybuild</code> subdirectory of the software installation directory and in the easyconfigs repository (see Easyconfigs repository).</p> <p>If any changes were made to the easyconfig file via hooks, these changes will not be reflected in these copies. The assumption here is that the hooks will also be in place for future (re-)installations.</p> <p>EasyBuild does however store an additional copy of the easyconfig file which includes any modifications that were done dynamically, for example by hooks. If subtoolchains were used to resolve dependencies, they will also be hardwired in this copy.</p> <p>This \"reproducible easyconfig\" is stored in the <code>easybuild/reprod</code> subdirectory of the software installation directory.</p>"},{"location":"hooks/#examples-of-hook-implementations","title":"Examples of hook implementations","text":""},{"location":"hooks/#replace-with-verbs-with-without-verbs-in-openmpi-configure-options","title":"Replace <code>--with-verbs</code> with <code>--without-verbs</code> in OpenMPI configure options","text":"<pre><code>def pre_configure_hook(self, *args, **kwargs):\n    \"\"\"Example pre-configure hook to replace --with-verbs with --without -verbs for OpenMPI.\"\"\"\n    if self.name == 'OpenMPI' and '--with-verbs' in self.cfg['configopts']:\n        self.log.info(\"[pre-configure hook] Replacing --with-verbs with --without-verbs\")\n        self.cfg['configopts'] = self.cfg['configopts'].replace('--with-verbs', '--without-verbs')\n</code></pre>"},{"location":"hooks/#inject-a-custom-patch-file","title":"Inject a custom patch file","text":"<pre><code>def parse_hook(ec, *args, **kwargs):\n    \"\"\"Example parse hook to inject a patch file for a fictive software package named 'Example'.\"\"\"\n    if ec.name == 'Example':\n        patch_file = 'example.patch'\n        ec.log.info(\"[parse hook] Injecting additional patch file '%s'\", patch_file)\n        ec['patches'].append(patch_file)\n</code></pre>"},{"location":"hooks/#replace-pythonpath-by-ebpythonprefixes-in-lua-modules","title":"Replace <code>PYTHONPATH</code> by <code>EBPYTHONPREFIXES</code> in (Lua) modules","text":"<pre><code>def module_write_hook(self, filepath, module_txt, *args, **kwargs):\n    # note: if `self.mod_filepath == filepath` =&gt; final module file\n    if 'Python' in (dep['name'] for dep in self.cfg.dependencies()):\n        search = r'prepend_path\\(\"PYTHONPATH\", pathJoin\\(root, \"lib/python\\d.\\d/site-packages\"\\)\\)'\n        replace = 'prepend_path(\"EBPYTHONPREFIXES\", root)'\n        return re.sub(search, replace, module_txt)\n</code></pre>"},{"location":"implementing-easyblocks/","title":"Implementing easyblocks","text":"<p>This documentation covers aspects of implementing easyblocks and how to use them. For a concise definition of easyblocks, see Easyblocks.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_basics","title":"The basics","text":"<p>An easyblock is a Python module that implements a software build and installation procedure.</p> <p>This concept is essentially implemented as a Python script that plugs into the EasyBuild framework.</p> <p>EasyBuild will leverage easyblocks as needed, depending on which software packages it needs to install. Which easyblock is required is determined by the <code>easyblock</code> easyconfig parameter, if it is present, or the software name (see Generic vs software-specific easyblocks).</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_generic_vs_software_specific","title":"Generic vs software-specific easyblocks","text":"<p>Easyblocks can either be generic or software-specific.</p> <p>Generic easyblocks implement a 'standard' software build and installation procedure that is used by multiple different software packages. A commonly used example is the ConfigureMake generic easyblock, which implements the standard <code>configure</code> - <code>make</code> - <code>make install</code> installation procedure used by most GNU software packages.</p> <p>Software-specific easyblocks implement the build and installation procedure for a particular software package (see also Module name/location). Typically this involves highly customised substeps, for example specifying dedicated configuration options, creating or adjusting specific files, executing non-standard shell commands, etc. Usually a custom implementation of the sanity check is also included.</p> <p>Since EasyBuild v2.0, using a generic easyblock requires specifying the <code>easyblock</code> parameter in the easyconfig file. If it is not specified, EasyBuild will try and find the software-specific easyblock derived from the software name.</p> <p>The distinction between generic and software-specific easyblocks can be made based on the naming scheme that is used for an easyblock (see also Naming scheme for easyblocks).</p> <p>See also .</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_vs_easyconfigs","title":"Easyblocks vs easyconfigs","text":"<p>Before you start implementing an easyblock, you should determine whether or not you really need an easyblock.</p> <p>Easyconfig files provide quite a bit of flexibility that alleviate the need for implementing many (software-specific) easyblocks. Examples include easyconfig parameters like <code>(pre){config,build,installopts}</code> (available for any easyblock), <code>install_cmd</code> (only for <code>Binary</code> generic easyblock or derivates), etc. See Writing easyconfig files: the basics for an overview of what is supported in easyconfig files, and  for custom easyconfig parameters for the existing generic easyblocks (see also '<code>eb -e &lt;easyblock&gt; -a</code>').</p> <p>On the other hand, somewhat complex or heavily customised software build and installation procedures may be handled better via a custom easyblock.</p> <p>Easyblocks are \"do once and forget\", and can provide a central solution for peculiarities of installations. Since they are basically Python scripts, they are very flexible and can take care of the 'heavy lifting' that goes beyond the key-value defining scope of easyconfig files.</p> <p>Hence, there is a fine line between using 'fat' easyconfigs with a generic easyblock and using a custom software-specific easyblock.</p> <p>Reasons to consider implementing a custom easyblock include:</p> <ul> <li>'critical' values for easyconfig parameters, which are required to make the installation succeed</li> <li>compiler- or toolchain-specific aspects of the build and installation procedure (e.g., configure/build/install options)</li> <li>interactive commands that need to be run</li> <li>custom (configure) options for dependencies</li> <li>having to create or adjust specific (configuration) files</li> <li>'hackish' usage of existing (generic) easyblocks and available easyconfig parameters</li> </ul> <p>One important aspect to consider of course is that implementing easyblocks requires some familiarity with Python, while easyconfig files can mostly be seen as a set of pure key-value definitions and hence are easier to create or update.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_naming_scheme","title":"Naming scheme for easyblocks","text":"<p>Easyblocks need to follow a strict naming scheme, to ensure that EasyBuild can pick them up as needed. This involves two aspects: i) the name of the Python class, and ii) the name and location of the Python module file.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_naming_scheme_class_name_specific","title":"Class name for software-specific easyblocks","text":"<p>The name of the Python class is determined by the software name for software-specific easyblocks. It consists of a prefix '<code>EB_</code>', followed by the (original) software name.</p> <p>Because of limitations in Python on characters allowed in names of Python classes, only alphanumeric characters and <code>_</code> are allowed. Any other characters are replaced following an encoding scheme:</p> <ul> <li>spaces are replaced by underscores (<code>_</code>)</li> <li>dashes <code>-</code> are replaced by <code>_minus_</code></li> <li>underscores are replaced by <code>_underscore_</code></li> <li>etc.</li> </ul> <p>The <code>encode_class_name</code> function provided in <code>easybuild.tools.filetools</code> returns the expected class name for a given software name; for example:</p> <pre><code>&gt;&gt;&gt; from easybuild.tools.filetools import encode_class_name\n&gt;&gt;&gt; encode_class_name('netCDF-Fortran')\n'EB_netCDF_minus_Fortran'\n</code></pre>"},{"location":"implementing-easyblocks/#implementing_easyblocks_naming_scheme_class_name_generic","title":"Class name for generic easyblocks","text":"<p>For generic easyblocks, the class name does not include an <code>EB_</code> prefix (since there is no need for an escaping mechanism) and hence the name is fully free to choose, taking into account the restriction to alphanumeric characters and underscores.</p> <p>For code style reasons, the class name should start with a capital letter.</p> <p>Examples include <code>Bundle</code>, <code>ConfigureMake</code>, <code>CMakePythonPackage</code>.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_naming_scheme_module","title":"Module name/location","text":"<p>The name of the Python module file is directly related to the name of Python class (i.e., the actual easyblock) that it provides.</p> <p>It should:</p> <ul> <li>not include the <code>EB_</code> prefix of the class name for software-specific easyblocks</li> <li>consists only of lower-case alphanumeric characters (<code>[a-z0-9]</code>) and underscores (<code>_</code>)<ul> <li>dashes (<code>-</code>) are replaced by underscores (<code>_</code>)</li> <li>any other non-alphanumeric characters (incl. spaces) are simply dropped</li> </ul> </li> </ul> <p>Examples include:</p> <ul> <li><code>gcc.py</code> (for GCC)</li> <li><code>netcdf_fortran.py</code> (for netCDF-Fortran)</li> <li><code>gamess_us.py</code> (for GAMESS (US))</li> </ul> <p>The <code>get_module_path</code> function provided in <code>easybuild.framework.easyconfig.easyconfig</code> returns the (full) module location for a particular software name or easyblock class name; for example:</p> <pre><code>&gt;&gt;&gt; from easybuild.framework.easyconfig.easyconfig import get_module_path\n&gt;&gt;&gt; get_module_path('netCDF-Fortran')\n'easybuild.easyblocks.netcdf_fortran'\n&gt;&gt;&gt; get_module_path('EB_netCDF_minus_Fortran')\n'easybuild.easyblocks.netcdf_fortran'\n</code></pre> <p>The location of the Python module is determined by whether the easyblock is generic or software-specific. Generic easyblocks are located in the <code>easybuid.easyblocks.generic</code> namespace, while software-specific easyblocks live in the <code>easybuild.easyblocks</code> namespace directly. To keep things organised, the actual Python module file for software-specific easyblocks are kept in 'letter' subdirectories, rather than in one large '<code>easyblocks</code>' directory (see https://github.com/easybuilders/easybuild-easyblocks/blob/main/easybuild/easyblocks/).</p> <p>Note that you shouldn't concern yourself too much with getting the location of an easyblock right, as long as you use <code>--include-easyblocks</code> to make EasyBuild use additional or customised easyblocks (see Including additional easyblocks (<code>--include-easyblocks</code>) for more information).</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_structure","title":"Structure of an easyblock","text":"<p>The example below shows the overall structure of an easyblock:</p> <pre><code>from easybuild.framework.easyblock import EasyBlock\nfrom easybuild.tools.run import run_cmd\n\nclass EB_Example(EasyBlock):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    def configure_step(self):\n        \"\"\"Custom implementation of configure step for Example\"\"\"\n\n        # run configure.sh to configure the build\n        run_cmd(\"./configure.sh --install-prefix=%s\" % self.installdir)\n</code></pre> <p>Each easyblock includes an implementation of a <code>class</code> that (directly or indirectly) derives from the abstract <code>EasyBlock</code> class.</p> <p>Typically some useful functions provided by the EasyBuild framework are imported at the top of the Python module.</p> <p>In the class definition, one or more '<code>*_step</code>' methods are redefined, to implement the corresponding step in the build and installation procedure.</p> <p>Each easyblock must implement the <code>configure</code>, <code>build</code> and <code>install</code> steps, since these are not implemented in the abstract <code>EasyBlock</code> class. This could be done explicitly by redefining the corresponding <code>*_step</code> methods, or implicitly by deriving from existing (generic) easyblocks.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_deriving","title":"Deriving from existing (generic) easyblocks","text":"<p>When implementing an easyblock, it is common to derive from an existing (usually generic) easyblock, and to leverage the functionality provided by it. This approach is typically used when only a specific part of the build and installation procedure needs to be customised.</p> <p>In the (fictitious) example below, we derive from the generic <code>ConfigureMake</code> easyblock to redefine the <code>configure</code> step. In this case, we are extending the <code>configure</code> step as implemented by <code>ConfigureMake</code> rather than redefining it entirely, since we call out to the original <code>configure_step</code> method at the end.</p> <pre><code>from easybuild.easyblocks.generic.configuremake import ConfigureMake\nfrom easybuild.tools.filetools import copy_file\n\nclass EB_Example(ConfigureMake):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    def configure_step(self):\n        \"\"\"Custom implementation of configure step for Example\"\"\"\n\n        # use example make.cfg for x86-64\n        copy_file('make.cfg.x86', 'make.cfg')\n\n        # call out to original configure_step implementation of ConfigureMake easyblock\n        super(EB_Example, self).configure_step()\n</code></pre>"},{"location":"implementing-easyblocks/#implementing_easyblocks_specifics","title":"Specific aspects of easyblocks","text":""},{"location":"implementing-easyblocks/#implementing_easyblocks_default_parameters","title":"Default easyconfig parameters","text":"<p>All of the parameters which are \"set\" in an easyconfig file (see Available easyconfig parameters) become key-value pairs in the <code>self.cfg</code> dictionary.  For instance, if the easyconfig file specifies</p> <pre><code>name = 'example'\nversion = '2.5.3'\nversionsuffix = '-Python-3.7.4'\n</code></pre> <p>then these three parameters are accessible within an easyblock via</p> <pre><code>longform = ''.join(self.cfg['name'],'/',self.cfg['version'],self.cfg['versionsuffix'])\n</code></pre> <p>You can use this notation successfully in your easyblock.  A few of the most commonly used parameters can be referenced directly,</p> <ul> <li>self.name = <code>self.cfg['name']</code></li> <li>self.version = <code>self.cfg['version']</code></li> <li>self.toolchain = <code>self.cfg['toolchain']</code></li> <li>self.all_dependencies: combines <code>builddependencies</code>, <code>dependencies</code>, and <code>toolchain</code>, in one dictionary</li> </ul> <p>So in your easyblock code, you may replace the above expression with</p> <pre><code>longform = ''.join(self.name,'/',self.version,self.cfg['versionsuffix'])\n</code></pre> <p>The other easyconfig parameters, and any additional custom parameters which you define for your own easyblock, will not be automatically mapped. You will need to use <code>self.cfg</code> to access them in your code.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_custom_parameters","title":"Custom easyconfig parameters","text":"<p>In an easyblock, additional custom easyconfig parameters can be defined to steer the behaviour of the easyblock. This is done via the <code>extra_options</code> static method. Custom parameters can be defined to be mandatory or optional.</p> <p>The example below shows how this can be implemented:</p> <pre><code>from easybuild.easyblocks.generic.configuremake import ConfigureMake\nfrom easybuild.framework.easyconfig import CUSTOM, MANDATORY\n\nclass EB_Example(ConfigureMake):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    @staticmethod\n    def extra_options():\n        \"\"\"Custom easyconfig parameters for Example\"\"\"\n        extra_vars = {\n            'required_example_param': [None, \"Help text for required example custom parameter\", MANDATORY],\n            'optional_example_param': [None, \"Help text for (optional) example custom parameter\", CUSTOM],\n        }\n        return ConfigureMake.extra_options(extra_vars)\n</code></pre> <p>The first element in the list of a defined custom parameter corresponds to the default value for that parameter (both <code>None</code> in the example above). The second element provides some informative help text, and the last element indicates whether the parameter is mandatory (<code>MANDATORY</code>) or just a custom parameter (<code>CUSTOM</code>).</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_constructor","title":"Easyblock constructor","text":"<p>In the <code>class</code> constructor of the easyblock, i.e. the <code>__init__</code> method, one or more class variables can be initialised. These can be used for sharing information between different <code>*_step</code> methods in the easyblock.</p> <p>For example:</p> <pre><code>from easybuild.framework.easyblock import EasyBlock\n\nclass EB_Example(EasyBlock):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    def __init__(self, *args, **kwargs):\n        \"\"\"Constructor for Example easyblock, initialises class variables.\"\"\"\n\n        # call out to original constructor first, so 'self' (i.e. the class instance) is initialised\n        super(EB_Example, self).__init__(*args, **kwargs)\n\n        # initialise class variables\n        self.var1 = None\n        self.var2 = None\n</code></pre>"},{"location":"implementing-easyblocks/#implementing_easyblocks_files","title":"Reading/writing/copying/patching files","text":"<p>File manipulation is a common use case for implementing easyblocks, hence the EasyBuild framework provides a number of useful functions related to this, including:</p> <ul> <li><code>read_file(&lt;path&gt;)</code>: read file at a specified location and returns its contents</li> <li><code>write_file(&lt;path&gt;, &lt;text&gt;)</code> at a specified location with provided contents;   to append to an existing file, use <code>append=True</code> as an extra argument</li> <li><code>copy_file(&lt;src&gt;, &lt;dest&gt;)</code> to copy an existing file</li> <li><code>apply_regex_substitutions(&lt;path&gt;, &lt;list of regex substitutions&gt;)</code> to patch an existing file</li> </ul> <p>All of these functions are provided by the <code>easybuild.tools.filetools</code> module.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_commands","title":"Executing (interactive) shell commands","text":"<p>For executing shell commands two functions are provided by the <code>easybuild.tools.run</code> module:</p> <ul> <li><code>run_cmd(&lt;cmd&gt;)</code> to run a non-interactive shell command</li> <li><code>run_cmd_qa(&lt;cmd&gt;, &lt;dict with questions &amp; answers&gt;)</code> to run an interactive shell command</li> </ul> <p>Both of these accept a number of optional arguments:</p> <ul> <li><code>simple=True</code> to just return <code>True</code> or <code>False</code> to indicate a successful execution,   rather than the default return value, i.e., a tuple that provides the command output and the exit code (in that order)</li> <li><code>path=&lt;path&gt;</code> to run the command in a specific subdirectory</li> </ul> <p>The <code>run_cmd_qa</code> function takes two additional specific arguments:</p> <ul> <li><code>no_qa=&lt;list&gt;</code> to specify a list of patterns to recognize non-questions</li> <li><code>std_qa=&lt;dict&gt;</code> to specify patterns for common questions and the matching answer</li> </ul>"},{"location":"implementing-easyblocks/#implementing_easyblocks_environment","title":"Manipulating the environment","text":"<p>To (re)define environment variables, the <code>setvar</code> function provided by the <code>easybuild.tools.environment</code> module should be used.</p> <p>This makes sure that the changes being made to the specified environment variable are kept track of, and that they are handled correctly under <code>--extended-dry-run</code>.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_logging","title":"Log statements","text":"<p>It is good practice to include meaningful log messages in the <code>*_step</code> methods being customised in the easyblock, to enrich the build log with useful information for later debugging or diagnostics.</p> <p>For logging, the provided <code>self.log</code> logger class should be used, i.e. the <code>self.log.info</code> or <code>self.log.debug</code> methods should be called.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_sanity_check","title":"Custom (default) sanity check","text":"<p>For software-specific easyblocks, a custom sanity check is usually included to verify that the installation was successful or not.</p> <p>This is done by redefining the <code>sanity_check_step</code> method in the easyblock. For example:</p> <pre><code>from easybuild.framework.easyblock import EasyBlock\n\nclass EB_Example(EasyBlock):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    def sanity_check_step(self):\n        \"\"\"Custom sanity check for Example.\"\"\"\n\n        custom_paths = {\n            'files': ['bin/example'],\n            'dirs': [],\n        }\n        custom_commands = ['example --version']\n\n        # call out to parent to do the actual sanity checking, pass through custom paths and commands\n        super(EB_Example, self).sanity_check_step(custom_paths=custom_paths, custom_commands=custom_commands)\n</code></pre> <p>You can both specify file path and subdirectories to check for, which are specified relative to the installation directory, as well as simple commands that should execute successfully after completing the installation and loading the generated module file.</p> <p>Note that it is up to you how extensive you make the sanity check, but it is recommended to make the check as complete as possible to catch any potential build or installation problems that may occur.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_version_specific","title":"Version-specific parts","text":"<p>In some case, version-specific actions or checks need to be included in an easyblock. For this, it is recommended to use <code>LooseVersion</code> rather than directly comparing version numbers using string values.</p> <p>For example:</p> <pre><code>from distutils.version import LooseVersion\n\nfrom easybuild.framework.easyblock import EasyBlock\n\nclass EB_Example(EasyBlock):\n    \"\"\"Custom easyblock for Example\"\"\"\n\n    def sanity_check_step(self):\n        \"\"\"Custom sanity check for Example.\"\"\"\n\n        custom_paths = {\n            'files': [],\n            'dirs': [],\n        }\n\n        # in older version, the binary used to be named 'EXAMPLE' rather than 'example'\n        if LooseVersion(self.version) &lt; LooseVersion('1.0'):\n            custom_paths['files'].append('bin/EXAMPLE')\n        else:\n            custom_paths['files'].append('bin/example')\n\n        super(EB_Example, self).sanity_check_step(custom_paths=custom_paths)\n</code></pre>"},{"location":"implementing-easyblocks/#implementing_easyblocks_module_only_compatibility","title":"Compatibility with <code>--extended-dry-run</code>/<code>-x</code> and <code>--module-only</code>","text":"<p>Some special care must be taken to ensure that an easyblock is fully compatible with <code>--extended-dry-run</code> / <code>-x</code> (see Extended dry run) and <code>--module-only</code> (see Only (re)generating (additional) module files using <code>--module-only</code>).</p> <p>For <code>--extended-dry-run</code>/<code>-x</code>, this is already well covered at Detecting dry run mode and enhancing the dry run output.</p> <p>For <code>--module-only</code>, you should make sure that both the <code>make_module_step</code>, including the <code>make_module_*</code> submethods, and the <code>sanity_check_step</code> methods do not make any assumptions about the presence of certain environment variables or that class variables have been defined already.</p> <p>This needs to be handled with care since under <code>--module-only</code> the large majority of the <code>*_step</code> functions is simply skipped entirely. So, if the <code>configure_step</code> method is responsible for defining class variables that are picked up in <code>sanity_check_step</code>, the latter may run into unexpected initial values like <code>None</code>. A possible workaround is to define a separate custom method to define the class variables, and to call out to this method from <code>configure_step</code> and <code>sanity_check_step</code> (for the latter, conditionally, i.e., only if the class variables still have the initial values).</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_using","title":"Using new/custom easyblocks","text":"<p>The best way to make EasyBuild aware of new or customized easyblocks is via <code>--include-easyblocks</code>, see Including additional easyblocks (<code>--include-easyblocks</code>) for more information.</p> <p>To verify that your easyblocks are indeed picked up correctly, you can use <code>--list-easyblocks=detailed</code>, see also List of available easyblocks, <code>--list-easyblocks</code>.</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_testing","title":"Testing easyblocks","text":"<p>Before testing your easyblock implementation by actually building and installing the software package(s) it was implemented for, it is recommended to:</p> <ul> <li>study the output produced by <code>--extended-dry-run</code>/<code>-x</code></li> <li>evaluate the generated module file that is obtained by using <code>--module-only --force</code></li> </ul> <p>For the output of <code>--extended-dry-run</code>/<code>-x</code>, there should be no ignored errors (cfr. Errors are ignored (by default) during dry run), that is the end of the output produced should include this message:</p> <pre><code>(no ignored errors during dry run)\n</code></pre> <p>With <code>--module-only --force</code>, the easyblock complete successfully without crashing, and should generate a module file that includes everything that is expected (except for statements that require that the actual installation was performend).</p>"},{"location":"implementing-easyblocks/#implementing_easyblocks_use_case_tensorlow","title":"Use case: an easyblock for Tensorflow","text":"<p>(work in progress)</p>"},{"location":"including-additional-python-modules/","title":"Including additional Python modules","text":"<p>(<code>--include-*</code>)</p> <p>EasyBuild's capabilities can be extended easily, by including additional Python modules that implement support for building and installing software that is not supported (yet), define additional module naming schemes, or introduce additional toolchains, (optionally) with support for additional compilers, MPI libraries, linear algebra libraries, etc.</p> <p>Since EasyBuild v2.2.0, dedicated configuration options are available that make it straightforward to get EasyBuild to pick up additional Python modules, and get them registered in the appropriate <code>easybuild</code> subnamespace.</p> <ul> <li>Including additional easyblocks</li> <li>Including additional module naming schemes</li> <li>Including additional toolchains</li> </ul>"},{"location":"including-additional-python-modules/#include_general_remarks","title":"General aspects of <code>--include-*</code> options","text":""},{"location":"including-additional-python-modules/#configuration-types","title":"Configuration types","text":"<p>The <code>--include-*</code> options can be specified via the <code>eb</code> command line, using an environment variable (<code>$EASYBUILD_INCLUDE_*</code>) or by defining the corresponding <code>include-*</code> parameters in an EasyBuild configuration file, just like all other configuration options (see also Consistency across supported configuration types).</p>"},{"location":"including-additional-python-modules/#format","title":"Format","text":"<p>The <code>--include-*</code> options accept a comma-separated list of paths to Python modules.</p> <p>These paths can be absolute or relative paths, or so-called glob patterns, i.e., paths containing wildcard characters like <code>*</code> or <code>?</code>. The latter can be used to include several Python modules at once.</p> <p>For example, to include all Python modules located in the directory <code>$HOME/myeb</code>, a path pattern like <code>$HOME/myeb/*.py</code> can be specified to the appropriate <code>--include-*</code> option.</p>  <p>Note</p> <p>Shell expansion can get in the way of specifying paths to <code>eb</code> that contains wildcards. To avoid problems simply wrap the path in single quotes, or escape the wildcard characters using a backslash. Keep in mind that using single quotes also prevents environment variables (e.g., <code>$HOME</code>) from being expanded.</p> <p>Examples of correct path specifications containing wildcards: - in a configuration file (no escaping of wildcards required):     <code>include-easyblocks = /home/example/myeb/*.py</code> - using an environment variable:     <code>export EASYBUILD_INCLUDE_EASYBLOCKS=\"$HOME/myeb\\*.py\"</code> - on the command line:     <code>eb --include-easyblocks='/home/example/myeb/*.py' ...</code>.</p>"},{"location":"including-additional-python-modules/#how-it-works","title":"How it works","text":"<p>For each of the <code>--include-*</code> options, EasyBuild will set up a temporary directory providing the corresponding Python package. In this directory, symlinks will be put in place to each of the included Python modules. The parent path is then injected in the Python search path to make the included Python modules available as required.</p>"},{"location":"including-additional-python-modules/#order-of-preference","title":"Order of preference","text":"<p>Python modules that are included via <code>--include-*</code> get preference over other Python modules available in the Python search path (e.g., the one that are part of the EasyBuild installation you are using). This may be useful when testing modifications to particular components of EasyBuild, for example easyblocks.</p>  <p>Note</p> <p>It is recommended to only override existing components during testing. Future EasyBuild versions may include important updates like bug fixes, which may be missed if customised implementations of components were put in place.</p>"},{"location":"including-additional-python-modules/#include_easyblocks","title":"Including additional easyblocks","text":"<p>(<code>--include-easyblocks</code>)</p> <p>Adding support for building and installing additional software packages can be done by specifying the location of Python modules that implement easyblocks via <code>--include-easyblocks</code>.</p> <p>Generic easyblocks are expected to be located in a directory named <code>generic</code>.</p> <p>To verify that the easyblocks you included are indeed being picked up, <code>--list-easyblocks=detailed</code> can be used (see also List of available easyblocks).</p> <p>Since EasyBuild 4.2.0, easyblocks from a pull request on GitHub can also be included, using <code>--include-easyblocks-from-pr</code> (see Using easyblocks from pull requests).</p>"},{"location":"including-additional-python-modules/#example","title":"Example","text":"<p>The example below shows how all self-implemented easyblocks (both software-specific and generic) located in the <code>$HOME/myeasyblocks</code> directory can be included:</p> <pre><code>$ export EASYBUILD_INCLUDE_EASYBLOCKS=$HOME/myeasyblocks/\\*.py,$HOME/myeasyblocks/generic/\\*.py\n$ eb --list-easyblocks=detailed\n...\n|-- EB_mytest (easybuild.easyblocks.mytest @ /tmp/example/eb-Bk3zxb/included-easyblocks/easybuild/easyblocks/mytest.py)\n...\n|-- foo (easybuild.easyblocks.generic.foo @ /tmp/example/eb-Bk3zxb/included-easyblocks/easybuild/easyblocks/generic/foo.py)\n...\n</code></pre>"},{"location":"including-additional-python-modules/#include_mns","title":"Including additional module naming schemes","text":"<p>(<code>--include-module-naming-schemes</code>)</p> <p>To make EasyBuild aware of one or more custom module naming schemes, the path to the corresponding Python modules can be specified via <code>--include-module-naming-schemes</code>.</p> <p>To verify that EasyBuild is aware of the additional module naming schemes, the <code>--avail-module-naming-schemes</code> option can be used.</p>"},{"location":"including-additional-python-modules/#example_1","title":"Example","text":"<p>The example below shows how all custom module naming schemes located in the <code>$HOME/myebmns</code> can be included:</p> <pre><code>$ eb --include-module-naming-schemes=$HOME/myebmns/\\*.py --avail-module-naming-schemes\nList of supported module naming schemes:\n    ...\n    MyCustomMNS\n    MyOtherCustomMNS\n    ...\n</code></pre>"},{"location":"including-additional-python-modules/#include_toolchains","title":"Including additional toolchains","text":"<p>(<code>--include-toolchains</code>)</p> <p>Plugging in Python modules that add support for additional toolchains, optionally including additional toolchain components (compilers, MPI libraries, BLAS/LAPACK/FFT libraries, ...) can be done via <code>--include-toolchains</code>.</p> <p>EasyBuild will determine whether the Python module is a toolchain definition or implements support for an additional toolchain component based on the name of the directory in which it is located. Implementations of toolchain components are expected to be located in a directory named according to the type of component (<code>compiler</code>, <code>mpi</code>, <code>linalg</code> or <code>fft</code>).</p> <p>To verify that EasyBuild is aware of the included toolchains, <code>--list-toolchains</code> can be used.</p>"},{"location":"including-additional-python-modules/#example_2","title":"Example","text":"<p>The example below shows how the support for additional toolchains and the required additional compiler/MPI toolchain components implemented by the Python modules located in the directory <code>$HOME/myebtcs</code> can be included:</p> <pre><code>$ export EASYBUILD_INCLUDE_TOOLCHAINS=$HOME/myebtcs/\\*.py,$HOME/myebtcs/compiler/\\*.py,$HOME/myebtcs/mpi/\\*.py\n$ eb --list-toolchains\nList of known toolchains (toolchainname: module[,module...]):\n    ...\n    mytoolchain: MyCompiler, MyMPI\n    ...\n</code></pre>"},{"location":"installation-alternative/","title":"Alternative installation methods","text":"<p>This page describes the alternative installation methods:</p> <ul> <li>Standard installation of latest     release</li> <li>Installation from downloaded     sources</li> <li>Installation of latest release from     GitHub</li> <li>Installation of latest development     version</li> </ul> <p>Do take into account the list of (required) dependencies (see Dependencies).</p>"},{"location":"installation-alternative/#standard-installation-of-latest-release","title":"Standard installation of latest release","text":"<p>Usually, you just want to install the latest (stable) version of each of the EasyBuild packages (framework, easyblocks, easyconfigs).</p> <p>Python provides a couple of ways to do that. Every version of the EasyBuild packages is released via PyPi.</p>"},{"location":"installation-alternative/#alt_inst_easy_install_pip","title":"Installing EasyBuild without admin rights","text":"<p>If you do not have EasyBuild installed yet, or if you just want to install the most recent version of each of the EasyBuild packages, you can use one of the following simple commands:</p> <ul> <li> <p>using <code>easy_install</code> (old tool, but still works):</p> <pre><code>easy_install --prefix $HOME/EasyBuild easybuild\n</code></pre>  <p>Note</p> <p>If you already have easybuild installed, you may need to instruct <code>easy_install</code> to install a newer version, using <code>--upgrade</code> or <code>-U</code>.</p>  </li> <li> <p>using <code>pip</code> (more recent and better installation tool for Python     software):</p> <pre><code>pip install --install-option \"--prefix=$HOME/EasyBuild\" easybuild\n</code></pre> <p>The <code>--prefix $HOME/EasyBuild</code> part in these commands allows you to install EasyBuild without admin rights into <code>$HOME/EasyBuild</code>.</p>  <p>Note</p> <p>For pip v8.0 and newer, <code>pip install --prefix=$HOME/EasyBuild easybuild</code> works too.</p>  </li> </ul>"},{"location":"installation-alternative/#adjusting-path-and-pythonpath-environment-variables","title":"Adjusting <code>$PATH</code> and <code>$PYTHONPATH</code> environment variables","text":"<p>After installing EasyBuild with either <code>easy_install</code> or <code>pip</code> like this, you will need to update the <code>$PATH</code> and <code>$PYTHONPATH</code> environment variable to make sure the system can find the main EasyBuild command <code>eb</code>. On (most) Linux distributions, the command for doing this is:</p> <pre><code>export PATH=$HOME/EasyBuild/bin:$PATH\nexport PYTHONPATH=$HOME/EasyBuild/lib/python2.7/site-packages:$PYTHONPATH\n</code></pre>  <p>Tip</p> <p>To determine the path that should be added to the <code>$PYTHONPATH</code> environment variable for a given installation prefix, you can use the following command:</p> <pre><code>python -c \"import distutils.sysconfig; print distutils.sysconfig.get_python_lib(prefix='$HOME/EasyBuild/');\"\n</code></pre>"},{"location":"installation-alternative/#install-with-admin-rights","title":"Install with admin rights","text":"<p>If you do have admin rights on the system where you want to install EasyBuild, you can simply omit the <code>--prefix $HOME/EasyBuild/</code> to have EasyBuild installed system-wide. In that case, you do not need to touch the <code>$PATH</code> or <code>$PYTHONPATH</code> environment variables since the <code>eb</code> command will be installed in one of the default paths.</p>"},{"location":"installation-alternative/#alternatives-to-prefix","title":"Alternatives to <code>--prefix</code>","text":"<p>As an alternative to <code>--prefix</code> when you do not have admin rights, you can specify that EasyBuild should be installed in your <code>$HOME</code> directory using the <code>--user</code> option.</p> <p>The full list of commands to install EasyBuild in your <code>$HOME</code> directory using <code>pip</code> would be:</p> <pre><code>pip install --user easybuild\nexport PATH=$HOME/.local/bin:$PATH\n</code></pre>  <p>Warning</p> <p>In our experience, using <code>--user</code> creates more problems than it solves. We have run into unexpected behavior with Python software installed in your home directory using <code>--user</code>, for example it always being preferred over versions installed somewhere else. Hence, we strongly discourage using <code>--user</code> to install EasyBuild (or other Python software).</p>"},{"location":"installation-alternative/#installing-the-easybuild-packages-separately","title":"Installing the EasyBuild packages separately","text":"<p>Each of the EasyBuild packages can also be installed separately:</p> <pre><code>pip install --install-option \"--prefix=$HOME/EasyBuild\" easybuild-framework\npip install --install-option \"--prefix=$HOME/EasyBuild\" easybuild-easyblocks\npip install --install-option \"--prefix=$HOME/EasyBuild\" easybuild-easyconfigs\n</code></pre> <p>This is the exact same sequence of steps as they will be performed when running <code>pip install --install-option \"--prefix=$HOME/EasyBuild\" easybuild</code>.</p>"},{"location":"installation-alternative/#installation-from-downloaded-sources","title":"Installation from downloaded sources","text":"<p>To install one of the EasyBuild packages from a downloaded source tarball, use the following steps:</p> <pre><code>tar xfvz easybuild-framework-1.0.tar.gz\ncd easybuild-framework-1.0\npip install --install-option \"--prefix=$HOME/EasyBuild\" .\n</code></pre> <p>Do note that when an EasyBuild package is being installed without having the EasyBuild packages that it depends upon available, both <code>easy_install</code> and <code>pip</code> will try and pull in the latest available version of those packages from PyPi.</p> <p>Thus, to have full control over the EasyBuild installation, you need to respect the following installation order: easybuild-framework, easybuild-easyblocks, easybuild-easyconfigs. The easyblocks package depends on the framework package; the easyconfigs package depends on both the framework and easyblocks packages.</p> <p>If you do not have <code>pip</code> or <code>easy_install</code> available, you can also fall back to using the <code>setup.py</code> script directly:</p> <pre><code>python setup.py --prefix $HOME/EasyBuild install\n</code></pre>"},{"location":"installation-alternative/#installation-of-latest-release-from-github","title":"Installation of latest release from GitHub","text":"<p>To install the latest (stable) release of an EasyBuild package directly from GitHub, use the following command:</p> <pre><code>pip install --install-option \"--prefix=$HOME/EasyBuild\" https://github.com/easybuilders/easybuild-framework/archive/main.tar.gz\n</code></pre> <p>Again, the order in which the EasyBuild packages are installed is important to have full control over the installation process, see previous section.</p>"},{"location":"installation-alternative/#installation-of-latest-development-version","title":"Installation of latest development version","text":"<p>To install the latest development version of an EasyBuild package from GitHub, you can simply adjust the command from the previous section to install from the <code>develop</code> branch (or any of the available feature branches in any EasyBuild repository for that matter):</p> <pre><code>pip install --install-option \"--prefix=$HOME/EasyBuild\" https://github.com/easybuilders/easybuild-framework/archive/develop.tar.gz\n</code></pre>  <p>Note</p> <p>You should use this only if you are interested in developing for EasyBuild. Although it is well tested, the development version of the EasyBuild repositories may be unstable at a given point in time.</p>"},{"location":"installation-alternative/#install_latest_develop_using_script","title":"Installation of latest development version using provided script","text":"<p>After you have forked each of the EasyBuild repositories on GitHub (+ vsc-base), you can set up a development version of EasyBuild using the <code>install-EasyBuild-develop.sh</code> script.</p> <p>This script will clone the different EasyBuild repositories from GitHub:</p> <ul> <li>easybuild: EasyBuild     metapackage &amp; documentation sources for     http://easybuild.readthedocs.org</li> <li>vsc-base: dependency for     EasyBuild framework (logging, command line interface, ...)</li> <li>easybuild-framework:     EasyBuild framework</li> <li>easybuild-easyblocks:     collection of easyblocks</li> <li>easybuild-easyconfigs:     collection of easyconfig files</li> </ul> <p>It can be used as follows:</p> <pre><code># pick an installation prefix (adjust as you like)\nINSTALL_PREFIX=$(mktemp -d $HOME/EasyBuild-XXXXXX)\n# download script\ncurl -O https://raw.githubusercontent.com/easybuilders/easybuild-framework/main/easybuild/scripts/install-EasyBuild-develop.sh\n# run downloaded script, specifying *your* GitHub username and the installation prefix\nbash install-EasyBuild-develop.sh GITHUB_USERNAME $INSTALL_PREFIX\n# update $MODULEPATH via 'module use', and load the module\nmodule use $INSTALL_PREFIX/modules\nmodule load EasyBuild-develop\neb --version  ## This should ensure you have a reasonable instance of EasyBuild\n</code></pre>  <p>Note</p> <p>The above creates a module file which you can load/inspect at will.</p> <p>The interesting aspect about it is that it is pointing to an EasyBuild installation directly on local git repositories, which allows you to customise it easily. Remember to commit/push or otherwise save your changes, if you intend to use them later.</p>"},{"location":"installation/","title":"Installing EasyBuild","text":"<p>EasyBuild is Python software, so there are a couple of ways to install it.</p> <p>We recommend installing EasyBuild using <code>pip</code>. This method is described at Using pip to Install EasyBuild.</p> <p>It is also possible to install EasyBuild as a module. To do this,  use the 3-step procedure outlined at Installing EasyBuild with EasyBuild.</p> <p>Do take into account the required and optional dependencies (see Requirements and Dependencies).</p> <p>Notes on other ways of installing EasyBuild are available under section Alternative installation methods.</p>"},{"location":"installation/#requirements","title":"Requirements","text":"<p>The only strict requirements are:</p> <ul> <li>a GNU/Linux distribution as operating system</li> <li>Python:<ul> <li>Python 2.7, or Python 3.x (&gt;= 3.5). Since Python 2 is end-of-life we recommend   using Python 3 if it is available</li> <li>note: only EasyBuild v4.0 (or newer) is compatible with Python 3, earlier EasyBuild releases require Python 2</li> <li>no Python packages other than the ones included in the Python standard library are strictly required<ul> <li>note: only EasyBuild versions prior to v4.0 require <code>vsc-base</code> (&amp; <code>vsc-install</code>),   see also Required Python packages for older EasyBuild versions</li> </ul> </li> <li>for some specific features, additional Python packages are needed though, see Optional Python packages</li> </ul> </li> <li>a modules tool: Tcl(/C) environment modules or Lmod<ul> <li>the actual module command/script (<code>modulecmd</code>, <code>modulecmd.tcl</code> or <code>lmod</code>) must be available via <code>$PATH</code></li> <li>see Required modules tool for more details</li> </ul> </li> </ul> <p>For more information on (optional) dependencies, see Dependencies.</p>"},{"location":"installation/#pip","title":"Using pip to Install EasyBuild","text":"<p>Since EasyBuild is released as a Python package on PyPI you can install it using <code>pip</code>, the most commonly used tool for installing Python packages.</p> <p>Install EasyBuild with:</p> <pre><code>pip install easybuild\n</code></pre> <p>You may need to tweak this command a bit, depending on your setup, see Additional pip install options.</p>  <p>Note</p> <p>There are various other ways of installing Python packages, which we won't cover here. If you are familiar with other tools like <code>virtualenv</code> or <code>pipenv</code>, feel free to use those instead to install EasyBuild.</p>"},{"location":"installation/#sanity-check","title":"Sanity check","text":"<p>Compare the version of <code>eb</code>, the main EasyBuild command, with the version of the EasyBuild module that was installed. For example::</p> <pre><code>$ module load EasyBuild\n$ module list\n\nCurrently Loaded Modules:\n  1) EasyBuild/4.4.0\n\n$ eb --version\nThis is EasyBuild 4.4.0 (framework: 4.4.0, easyblocks: 4.4.0) on host example.local\n</code></pre>  <p>Tip</p> <p>The Tcl-based or Lmod implementations of environment modules do their default sorting differently. The former will normally sort in the lexicographic order, while Lmod follows an approach that is closer to Python's construct <code>LooseVersion</code> way of ordering. Such aspects may make a big difference, if you have installed both versions 1.9.0 and 1.15.2, with respect to what is the version being loaded by default.</p>  <p>You can also run <code>eb --show-system-info</code> to see system information relevant to EasyBuild, or run<code>eb --show-config</code> to see the default EasyBuild configuration (see also Configuring EasyBuild).</p>"},{"location":"installation/#updating","title":"Updating an existing EasyBuild installation","text":"<p>To upgrade to a newer EasyBuild version than the one currently installed:</p> <ul> <li><code>pip install --upgrade easybuild</code> will upgrade EasyBuild to the latest release.</li> </ul>"},{"location":"installation/#more_pip","title":"Additional pip install options","text":"<p>For the <code>pip</code> install, you may wish to slightly change this command depending on the context and your personal preferences:</p> <ul> <li> <p>to install EasyBuild system-wide, you can use <code>sudo</code> (if you have admin privileges):</p> <pre><code>sudo pip install easybuild\n</code></pre> </li> <li> <p>To install EasyBuild in your personal home directory, you can use the <code>--user</code> option:</p> <pre><code>pip install --user easybuild\n</code></pre> <p>This will result in an EasyBuild installation in <code>$HOME/.local/</code>.</p> </li> <li> <p>To install EasyBuild in a specific directory you can use the <code>--prefix</code> option:</p> <pre><code>pip install --prefix _PREFIX_ easybuild\n</code></pre> <p>In this command, you should replace '<code>_PREFIX_</code>' with the location where you want to have EasyBuild installed (for example, <code>$HOME/tools</code> or <code>/tmp/$USER</code>).</p> </li> </ul> <p>Keep in mind that you may need to update your environment too when using <code>--user</code> or <code>--prefix</code>, see Updating your environment.</p>"},{"location":"installation/#more_pip_pip3","title":"<code>pip</code> vs <code>pip3</code>","text":"<p>On systems where both Python 2 and Python 3 are installed you may also have different <code>pip</code> commands available. Or maybe <code>pip</code> is not available at all, and only \"versioned\" <code>pip</code> commands like <code>pip3</code> are available.</p> <p>If you (only) have <code>pip3</code> available, you can replace <code>pip</code> with <code>pip3</code> in any of the <code>pip install</code> commands above:</p> <pre><code>pip3 install easybuild\n</code></pre> <p>If you want to ensure that you are using the <code>pip</code> installation that corresponds to the Python 3 installation that you intend to use, you can use <code>python3 -m pip</code> rather than <code>pip3</code>.</p> <pre><code>python3.6 -m pip install easybuild\n</code></pre> <p>Note that you may also need to instruct the <code>eb</code> command to use the correct Python version at runtime, via <code>$EB_PYTHON</code> (see Setting <code>$EB_PYTHON</code>).</p>"},{"location":"installation/#more_pip_env","title":"Updating your environment","text":"<p>If you used the <code>--user</code> or <code>--prefix</code> option in the <code>pip install</code> command, or if you installed EasyBuild with a <code>pip</code> version that does not correspond to your default Python installation, you will need to update your environment to make EasyBuild ready for use. This is not required if you did a system-wide installation in a standard location with the default Python version.</p>  <p>Note</p> <p>Keep in mind that you will have to make these environment changes again if you start a new shell session. To avoid this, you can update one of the shell startup scripts in your home directory (<code>.bashrc</code> for example).</p>"},{"location":"installation/#more_pip_env_PATH","title":"Updating <code>$PATH</code>","text":"<p>Update the <code>$PATH</code> environment variable to make sure the <code>eb</code> command is available::</p> <pre><code>export PATH=_PREFIX_/bin:$PATH\n</code></pre> <p>Replace <code>_PREFIX_</code> in this command with the directory path where EasyBuild was installed into (use <code>$HOME/.local</code> if you used <code>pip install --user</code>).</p> <p>This is not required if you installing EasyBuild in a standard system location.</p> <p>You can check with the <code>which eb</code> command to determine whether or not you need to update the <code>$PATH</code> environment variable.</p>"},{"location":"installation/#more_pip_env_PYTHONPATH","title":"Updating <code>$PYTHONPATH</code>","text":"<p>If you installed EasyBuild to a non-standard location using <code>pip install --prefix</code>, you also need to update the Python search path environment variable <code>$PYTHONPATH</code> to instruct Python where it can find the EasyBuild Python packages.</p> <p>This is not required if you used the <code>--user</code> option, since Python will automatically consider <code>$HOME/.local</code> when searching for installed Python packages, or if you installed EasyBuild in a standard system-wide location.</p> <p>Update <code>$PYTHONPATH</code> by running a command like::</p> <pre><code>export PYTHONPATH=_PREFIX_/lib/pythonX.Y/site-packages:$PYTHONPATH\n</code></pre> <p>Here, you need to replace the <code>X</code> and <code>Y</code> with the major and minor version of your Python installation, which you can determine by running <code>python -V</code>. For example, if you are using Python 3.6, make sure you are using <code>/python3.6/</code> in the command to update <code>$PYTHONPATH</code>.</p> <p>And of course, you again need to replace '<code>_PREFIX_</code>' with the installation prefix where EasyBuild was installed into.</p> <p>For example:</p> <pre><code># update $PYTHONPATH if EasyBuild was installed in $HOME/tools with Python 3.6\nexport PYTHONPATH=$HOME/tools/lib/python3.6/site-packages:$PYTHONPATH\n</code></pre>"},{"location":"installation/#more_pip_env_EB_PYTHON","title":"Setting <code>$EB_PYTHON</code>","text":"<p>If you want to control which Python version is used to run EasyBuild, you can specify the name or the full path to the <code>python</code> command that should be used by the <code>eb</code> command via the <code>$EB_PYTHON</code> environment variable.</p> <p>This may be required when you installing EasyBuild with a version of <code>pip</code> that does not correspond with the default Python version.</p> <p>For example, to ensure that <code>eb</code> uses <code>python3.6</code>:</p> <pre><code>export EB_PYTHON=python3.6\n</code></pre>"},{"location":"installation/#more_pip_env_EB_VERBOSE","title":"Setting <code>$EB_VERBOSE</code>","text":"<p>To determine which <code>python</code> commands are being considered by the <code>eb</code> command, you can define the <code>$EB_VERBOSE</code> environment variable. For example:</p> <pre><code>$ EB_VERBOSE=1 eb --version\n&gt;&gt; Considering 'python3.6'...\n&gt;&gt; 'python3' version: 3.6.8, which matches Python 3 version requirement (&gt;= 3.5)\n&gt;&gt; Selected Python command: python3 (/usr/bin/python3.6)\n&gt;&gt; python3.6 -m easybuild.main --version\nThis is EasyBuild 4.3.3 (framework: 4.3.3, easyblocks: 4.3.3) on host example\n</code></pre>"},{"location":"installation/#eb_as_module","title":"Installing EasyBuild with EasyBuild","text":"<p>If you prefer having EasyBuild available through an environment module file, you can consider installing EasyBuild with EasyBuild. This can be done in 3 steps:</p> <ul> <li>Step 1: Installing EasyBuild with <code>pip</code> into a temporary location (only needed if EasyBuild is not installed yet)</li> <li>Step 2: Using EasyBuild to install EasyBuild as a module</li> <li>Step 3: Loading the EasyBuild module</li> </ul>"},{"location":"installation/#eb_as_module_step1","title":"Step 1: Installing EasyBuild into a temporary location","text":"<p>If you don't have EasyBuild installed yet, you need to install it in a temporary location first. The recommended way of doing this is using pip to install EasyBuild.</p> <p>For example, to install EasyBuild into a subdirectory <code>/tmp/$USER</code> using the default Python 3 version:</p> <pre><code># pick installation prefix, and install EasyBuild into it\nexport EB_TMPDIR=/tmp/$USER/eb_tmp\npython3 -m pip install --ignore-installed --prefix $EB_TMPDIR easybuild\n\n# update environment to use this temporary EasyBuild installation\nexport PATH=$EB_TMPDIR/bin:$PATH\nexport PYTHONPATH=$(/bin/ls -rtd -1 $EB_TMPDIR/lib*/python*/site-packages | tail -1):$PYTHONPATH\nexport EB_PYTHON=python3\n</code></pre>"},{"location":"installation/#eb_as_module_step2","title":"Step 2: Using EasyBuild to install EasyBuild","text":"<p>Once you have a working (recent) temporary EasyBuild installation, you can use it to install EasyBuild as a module. Usually this is done in the location where you would like to install other software too.</p> <p>You can use the <code>eb --install-latest-eb-release</code> command for this, combined with the <code>--prefix</code> option to control which directories are used by EasyBuild for the installation.</p> <p>For example, to install the latest version of EasyBuild as a module into <code>$HOME/easybuild</code>:</p> <pre><code>eb --install-latest-eb-release --prefix $HOME/easybuild\n</code></pre>  <p>Note</p> <p>You may see a harmless deprecation warning popping up when performing this installation, just ignore it.</p>"},{"location":"installation/#eb_as_module_step3","title":"Step 3: Loading the EasyBuild module","text":"<p>Once Step 2: Using EasyBuild to install EasyBuild is completed, you should be able to load the module that was generated alongside the EasyBuild installation. You will need to do this every time you start a new shell session.</p> <p>First, make the module available by running the following command (which will update the module search path environment variable <code>$MODULEPATH</code>):</p> <pre><code>module use _PREFIX_/modules/all\n</code></pre> <p>Replace <code>_PREFIX_</code> with the path to the directory that you used when running Step 2: Using EasyBuild to install EasyBuild (for example, <code>$HOME/easybuild</code>).</p> <p>Then, load the EasyBuild module to update your environment and make EasyBuild available for use:</p> <pre><code>module load EasyBuild\n</code></pre>  <p>Note</p> <p>Note that in this case, we don't need to make any changes to our environment for EasyBuild to work correctly. The environment module file that was generated by EasyBuild specifies all changes that need to be made.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>EasyBuild has a couple of dependencies, some are optional.</p>"},{"location":"installation/#required_dependencies","title":"Required dependencies","text":"<ul> <li>a GNU/Linux distribution as operating system<ul> <li>some common shell tools are expected to be available, see Required shell tools</li> </ul> </li> <li>Python:<ul> <li>Python 2.7, or Python 3.x (&gt;= 3.5);</li> <li>since Python 2 is end-of-life we strongly recommend   using Python 3 if it is available;</li> <li>no third-party Python packages are strictly required (the Python standard library is sufficient);</li> <li>for some specific EasyBuild features additional Python packages are required however, see Optional Python packages;</li> </ul> </li> <li>a modules tool: Tcl(/C) environment modules or Lmod<ul> <li>the actual modules tool must be available via <code>$PATH</code>, see Required modules tool</li> </ul> </li> <li>a C/C++ compiler (e.g., <code>gcc</code> and <code>g++</code>)<ul> <li>only required to build and install GCC with, or as a dependency for the Intel compilers, for example</li> </ul> </li> </ul>"},{"location":"installation/#required_shell_tools","title":"Required shell tools","text":"<p>A couple of shell tools may be required, depending on the particular use case (in relative order of importance):</p> <ul> <li>shell builtin commands:<ul> <li><code>type</code>, for inspecting the <code>module</code> function (if defined)</li> <li><code>ulimit</code>, for querying user limits</li> </ul> </li> <li>tools for unpacking (source) archives:<ul> <li>commonly required: <code>tar</code>, <code>gunzip</code>, <code>bunzip2</code></li> <li>occasionally required: <code>unzip</code>, <code>unxz</code></li> </ul> </li> <li><code>patch</code>, for applying patch files to unpacked sources (relatively common)</li> <li><code>rpm</code> or <code>dpkg</code>, for querying OS dependencies (only needed occasionally)</li> <li><code>locate</code>, only as a (poor mans) fallback to <code>rpm</code>/<code>dpkg</code> (rarely needed)</li> <li><code>sysctl</code>, for querying system characteristics (only required on non-Linux systems)</li> </ul>"},{"location":"installation/#required_modules_tool","title":"Required modules tool","text":"<p>EasyBuild not only generates module files to be used along with the software it installs, it also depends on the generated modules, mainly for resolving dependencies. Hence, a modules tool must be available to consume module files with.</p>  <p>Supported module tools:</p> <ul> <li>Tcl/C environment-modules (version &gt;= 3.2.10)</li> <li>Tcl-only variant of environment modules</li> <li>Lmod (version &gt;= 6.5.1), highly recommended</li> </ul>  <p>Note</p> <p>The path to the actual modules tool binary/script used must be included in <code>$PATH</code>, to make it readily available to EasyBuild.</p> <ul> <li>for Tcl/C environment modules: <code>modulecmd</code></li> <li>for Tcl-only environment modules: <code>modulecmd.tcl</code></li> <li>for Lmod: <code>lmod</code></li> </ul> <p>The path where the modules tool binary/script is located can be determined via the definition of the <code>module</code> function; for example, using <code>type module</code> or <code>type -f module</code>.</p>   <p>Note</p> <p>For Lmod specifically, EasyBuild will try to fall back to finding the <code>lmod</code> binary via the <code>$LMOD_CMD</code> environment variable, in case <code>lmod</code> is not available in <code>$PATH</code>.</p> <p>In EasyBuild versions prior to 2.1.1, the path specified by <code>$LMOD_CMD</code> was (erroneously) preferred over the (first) <code>lmod</code> binary available via <code>$PATH</code>.</p>  <p>Additional notes:</p> <ul> <li>Tcl(/C) environment-modules requires Tcl to be   installed (with header files and development libraries)</li> <li>Lmod requires Lua and a couple of non-standard Lua libraries   (<code>lua-posix</code>, <code>lua-filesystem</code>) to be available<ul> <li>Tcl (<code>tclsh</code>) must also be available for Lmod to support module files in <code>Tcl</code> syntax</li> </ul> </li> <li>a guide to installing Tcl/C environment modules without having root   permissions is available at Installing environment modules without root permissions.</li> <li>a guide to installing Lmod without having root permissions is available at   Installing Lmod without root permissions.</li> </ul>"},{"location":"installation/#required_python_packages","title":"Required Python packages","text":"<p>Since EasyBuild v4.0, no Python packages outside of the Python standard library are required.</p>"},{"location":"installation/#required_python_packages_eb3","title":"Required Python packages for older EasyBuild versions","text":"<p>For EasyBuild versions prior to version 4.0, a couple of additional Python packages are required:</p> <ul> <li><code>setuptools</code>: used to define the <code>easybuild</code> namespace across different directories<ul> <li>available at https://pypi.python.org/pypi/setuptools</li> <li>must be version 0.6 or more recent</li> <li>strictly required since EasyBuild v2.7.0</li> </ul> </li> <li><code>vsc-install</code>: provides setuptools functions and support for unit test suites for Python tools<ul> <li>also required to install <code>vsc-base</code> (see below)</li> <li>available at https://pypi.python.org/pypi/vsc-install</li> <li>the required version depends primarily on the <code>vsc-base</code> version</li> </ul> </li> <li><code>vsc-base</code>: a Python library providing the <code>fancylogger</code> and <code>generaloption</code> Python modules<ul> <li>available at https://pypi.python.org/pypi/vsc-base and https://github.com/hpcugent/vsc-base</li> <li>the required version of <code>vsc-base</code> depends on the EasyBuild version</li> </ul> </li> </ul>  <p>Note</p> <p><code>vsc-base</code> is installed automatically along with EasyBuild 3.x, if an installation procedure is used that consumes the <code>setup.py</code> script that comes with the EasyBuild framework (e.g., EasyBuild or the EasyBuild bootstrap script, <code>pip</code>, <code>easy_install</code>, ...)</p>  <p>Other Python packages are optional dependencies, see Optional Python packages.</p>"},{"location":"installation/#optional-dependencies","title":"Optional dependencies","text":"<p>Some dependencies are optional and are only required to support certain features.</p>"},{"location":"installation/#optional_python_packages","title":"Optional Python packages","text":"<ul> <li>GC3Pie, only needed when using <code>GC3Pie</code> as a backend for <code>--job</code>,   see also Submitting jobs using --job;</li> <li>GitPython, only needed if   EasyBuild is hosted in a git repository or if you\u2019re using a git   repository for easyconfig files (.eb);</li> <li>graphviz for Python,   only needed for building nice-looking dependency graphs using <code>--dep-graph *.pdf / *.png</code>;</li> <li>keyring, only needed for securely storing a GitHub token   (see Integration with GitHub);</li> <li>pycodestyle,   only required for <code>--check-style</code> and <code>--check-contrib</code>;</li> <li>pysvn, only needed if you\u2019re using an   SVN repository for easyconfig files;</li> <li>python-graph-dot,   only needed for building nice-looking dependency graphs using <code>--dep-graph *.dot</code></li> <li>Rich,   only needed to let <code>eb</code> produce rich output, like Progress bars;</li> </ul>"},{"location":"installation/#sources","title":"Sources","text":"<p>EasyBuild is split up into three different packages, which are available from the Python Package Index (PyPi):</p> <ul> <li>easybuild-framework - the EasyBuild framework, which includes the   easybuild.framework and easybuild.tools Python packages that provide   general support for building and installing software</li> <li>easybuild-easyblocks - a collection of easyblocks that implement   support for building and installing (collections of) software   packages</li> <li>easybuild-easyconfigs - a collection of example easyconfig files   that specify which software to build, and using which build options;   these easyconfigs will be well tested with the latest compatible   versions of the easybuild-framework and easybuild-easyblocks packages</li> </ul> <p>Next to these packages, a meta-package named easybuild is also available on PyPi, in order to easily install the full EasyBuild distribution.</p> <p>The source code for these packages is also available on GitHub:</p> <ul> <li>easybuild-framework git repository</li> <li>easybuild-easyblocks git repository</li> <li>easybuild-easyconfigs git repository</li> <li>the main EasyBuild repository</li> </ul>"},{"location":"installation/#in-case-of-installation-issues","title":"In case of installation issues...","text":"<p>Should the installation of EasyBuild fail for you, please open an issue to report the problems you're running into.</p>"},{"location":"installation/#how-to-collect-info-in-case-sanity-checks-fail-or-there-is-another-issue","title":"How to collect info in case sanity checks fail or there is another issue","text":"<p>In order to get a better understanding in which kind of environment you are using the bootstrap script, please copy-paste the commands below and provide the output in your problem report. Do not worry if some of these commands fail or spit out error messages.</p> <pre><code>python -V\ntype module\ntype -f module\nmodule --version\nmodule av EasyBuild\nwhich -a eb\neb --version\n</code></pre>"},{"location":"installing-environment-modules-without-root-permissions/","title":"Installing environment modules without root permissions","text":"<p>This short guide will explain how to install the standard environment modules Tcl/C software package without root permissions on a Linux or Mac OS X system, together with Tcl on which it depends.</p>"},{"location":"installing-environment-modules-without-root-permissions/#tcl","title":"Tcl","text":"<ol> <li> <p>Go to https://www.tcl.tk and download the latest Tcl sources. At     the time of writing, the latest available Tcl version was 8.5.15,     which can be downloaded from     here.     The remainder of these commands will assume Tcl v8.5.15 is being     installed, you may need to adjust them accordingly. Note: Stick     to Tcl v8.5.x, don't consider using the more recent v8.6.x or     higher, since the environment modules package is not compatible with     those Tcl versions.</p> </li> <li> <p>Unpack the Tcl source tarball:</p> <pre><code>tar xfvz tcl8.5.15-src.tar.gz\n</code></pre> </li> <li> <p>Pick a location where you will install Tcl. It should be a directory     you have write permissions on. My suggestion would be to use     something like <code>$HOME/.local/Tcl</code>.</p> </li> <li> <p>Go to the <code>unix</code> subdirectory of the unpacked Tcl directory, and run     the <code>configure</code> script using the <code>--prefix</code> option:</p> <pre><code>cd tcl8.5.15/unix\n./configure --prefix=$HOME/.local/Tcl\n</code></pre> <p>If you're building Tcl and environment modules on Mac, you should run <code>configure</code> in the <code>tcl8.5.15/macosx</code> directory instead.</p> </li> <li> <p>Next, build Tcl using the <code>make</code> command. If the system you are     building on has multiple cores, running make in parallel will speed     up the build. Just use the <code>-j</code> option, and pass it a degree of     parallelism (just use the number of cores your system has     available), e.g.:</p> <pre><code>make -j 4\n</code></pre> </li> <li> <p>The final step consists of installing Tcl to the directory specified     in step 4. To do this, simply run:</p> <pre><code>make install\n</code></pre> </li> </ol> <p>All done! Now you are ready to build the environment modules package, which requires Tcl.</p>"},{"location":"installing-environment-modules-without-root-permissions/#environment-modules","title":"Environment Modules","text":"<ol> <li> <p>Download the latest source tarball for the environment modules tools     from https://modules.sourceforge.net. At the time of writing, the     latest available version is 3.2.10 which can be downloaded from     here.</p> </li> <li> <p>Unpack the downloaded source tarball:</p> <pre><code>tar xfvz modules-3.2.10.tar.gz\n</code></pre> </li> <li> <p>Configure the build, again use <code>--prefix</code> to specify where to     install the environment modules tool in the end. If you needed to     install Tcl by hand as outlined in the previous section, you'll also     need to specify where it was installed using the <code>--with-tcl</code>     option:</p> <pre><code>cd modules-3.2.10\n./configure --prefix=$HOME/.local/environment-modules --with-tcl=$HOME/.local/Tcl/lib\n</code></pre> </li> <li> <p>Build with <code>make</code>, consider parallel build if your system is recent     enough:</p> <pre><code>make -j 4\n</code></pre> </li> <li> <p>Install:</p> <pre><code>make install\n</code></pre> </li> </ol> <p>Alright, now just one more thing...</p>"},{"location":"installing-environment-modules-without-root-permissions/#set-up-your-environment","title":"Set up your environment","text":"<p>Because you've installed environment modules and Tcl in a non-default location, you need to make sure your environment is setup up correctly to use them.</p> <p>To make a long story short, these are the commands you need to execute:</p> <pre><code>export PATH=$HOME/.local/environment-modules/Modules/3.2.10/bin:$PATH\nexport LD_LIBRARY_PATH=$HOME/.local/Tcl/lib:$LD_LIBRARY_PATH\n# adjust line below if you're using a shell other than bash, check with 'echo $SHELL'\nsource $HOME/.local/environment-modules/Modules/3.2.10/init/bash\n</code></pre>  <p>Tip</p> <p>Add these three lines in your <code>.bashrc</code> file, that way they'll be executed every time you log in.</p>"},{"location":"installing-extensions-in-parallel/","title":"Installing extensions in parallel (experimental!)","text":"<p>Since EasyBuild v4.5.0 (initial) support is available for installing extensions in parallel, that is to run the installation command for multiple extensions that are ready to install at the same time in the background, to exploit the availability of multiple cores.</p> <p>Note: this is an experimental feature. Some of the mentioned functionality may be subject to change or be prone to errors.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_configuration","title":"Configuration","text":"<p>To let EasyBuild install extensions in parallel, the <code>parallel-extensions-install</code> configuration option must be enabled.</p> <p>In addition, since the support for installing extensions in parallel is an experimental feature, the <code>experimental</code> configuration option must be also be enabled (see also Experimental features).</p> <p>How many extension installations should be started (at maximum) at the same time is controlled by the <code>parallel</code> configuration option.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_requirements","title":"Requirements","text":"<p>For EasyBuild to be able to install a list of extensions in parallel, two requirements must be met:</p> <ul> <li>The easyblock(s) that are used for installing the extensions must     have support for determining which installed extensions are required     to fulfil the dependencies for a particular extension. This is done     via the <code>required_deps</code> property method.</li> <li>EasyBuild must be able to start a single shell command     (asynchronously, so it runs in the background) to perform the     installation of the extension via the <code>run_async</code> method, and check     whether the command has completed via the <code>async_cmd_check</code> method.</li> </ul> <p>For an example of how <code>required_deps</code>, <code>run_async</code>, and <code>async_cmd_check</code> can be implemented, see the RPackage easyblock.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_caveats_known_issues","title":"Caveats and Known issues","text":"<p>(last update: EasyBuild v4.5.0)</p> <p>There are a couple of caveats and known issues with installing extensions in parallel, which we hope to resolve in future EasyBuild releases.</p> <p>This is also why the support for installing extensions in parallel is currently marked as an experimental feature.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_caveats_known_issues_only_r","title":"Only works for R extensions","text":"<p>The support for installing extensions in parallel currently only works for R extensions, since only the <code>RPackage</code> easyblock (which is used to install R packages as extensions) implements the necessary methods (see Requirements).</p> <p>Supporting other types of extensions (Python, Perl, etc.) requires that the corresponding easyblocks that are used to install those extensions (like <code>PythonPackage</code>, <code>PerlModule</code>) are enhanced to support determining required dependencies and starting the installation command asynchronously.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_caveats_known_issues_exts_list","title":"List of extensions must be self-contained","text":"<p>The EasyBuild framework currently enforces that all required dependencies for a particular extension are included in the list of extensions that is being installed (specified via the <code>exts_list</code> easyconfig parameter). Extensions provided by dependencies are not taken into account (yet).</p> <p>As a result, trying to install an R-bundle-Bioconductor easyconfig with <code>parallel-extensions-install</code> enabled will result in an error reporting missing required dependencies.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_caveats_known_issues_skip","title":"Skipping of installed extensions is still done sequentially","text":"<p>Checking which extensions are already installed for which the installation can be skipped when <code>--skip</code> (see Installing additional extensions using <code>-k</code>/<code>-skip</code>) is being used is still done sequentially.</p> <p>Additional work is needed to also run these checks in parallel across the cores that are available to EasyBuild.</p>"},{"location":"installing-extensions-in-parallel/#installing_extensions_in_parallel_caveats_known_issues_sanity_check","title":"Sanity check for extensions is still run sequentially","text":"<p>The sanity checks that are done for each extension are still done through a sequential loop over the list of extensions.</p> <p>Additional work is needed to also run these checks in parallel across the cores that are available to EasyBuild.</p>"},{"location":"installing-lmod-without-root-permissions/","title":"Installing Lmod without root permissions","text":"<p>This short guide will show how to install Lmod (and Lua, on which it depends) on Linux, without requiring root permissions.</p>"},{"location":"installing-lmod-without-root-permissions/#lua","title":"Lua","text":"<p>Dependencies: Installing Lua using the steps below requires rsync, make and gcc</p> <p>Build and install Lua using the source tarball available in the Lmod SourceForge repository. This version is a lot easier to build, and already includes the required extra Lua modules. At the time of writing this relates to the <code>lua-5.1.4.8.tar.gz</code> tarball.</p> <p>Step 1: Download and unpack lua-5.1.4.8.tar.gz.</p> <p>Step 2: Configure the Lua build, provide a custom installation prefix (e.g. <code>$HOME/lua</code>) and specify to statically link libraries (i.e. <code>libreadline</code> and <code>ncurses</code>), to avoid problems when modules that provide these libraries are being loaded. Then build and install via <code>make</code>:</p> <pre><code>./configure --with-static=yes --prefix=$HOME/lua &amp;&amp; make &amp;&amp; make install\n</code></pre> <p>Step 3: Make sure the <code>lua</code> binary is available in your <code>$PATH</code> (only required when building Lmod, see below):</p> <pre><code>export PATH=$HOME/lua/bin:$PATH\n</code></pre> <p>Optionally, check whether the <code>lua</code> binary indeed doesn\u2019t link to any unexpected <code>readline</code> or <code>ncurses</code> libraries:</p> <pre><code>$ ldd $HOME/lua/bin/lua\n        linux-vdso.so.1 (0x00007fffad7ff000)\n        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007ff9914db000)\n        libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007ff9912d7000)\n        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007ff990f2a000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007ff9917d9000)\n</code></pre>"},{"location":"installing-lmod-without-root-permissions/#lmod","title":"Lmod","text":"<p>Dependencies: building Lmod using the steps below requires tcl, tcl-dev(el), make and bzip2</p> <p>Step 1: Download and unpack the latest available Lmod version, Lmod-8.4.tar.bz2 at the time of writing.</p> <pre><code>tar xfvj Lmod-8.4.tar.bz2 &amp;&amp; cd Lmod-8.4\n</code></pre> <p>Step 2: Configure, build and install Lmod build, in a custom prefix:</p> <pre><code>./configure --prefix=$HOME &amp;&amp; make install\n</code></pre> <p>Step 3: Update <code>$PATH</code> so <code>lmod</code> is available (put this in your <code>.bashrc</code>):</p> <pre><code>export PATH=$HOME/lmod/8.4/libexec:$PATH\n</code></pre> <p>Optionally, give it a spin:</p> <pre><code>$ lmod --version\n\nModules based on Lua: Version 8.4  2020-07-31 12:25 -05:00\n    by Robert McLay mclay@tacc.utexas.edu\n</code></pre> <p>Step 4: Define <code>module</code> function to use <code>lmod</code> (optional for use with EasyBuild):</p> <pre><code>source $HOME/lmod/8.4/init/bash\nexport LMOD_CMD=$HOME/lmod/8.4/libexec/lmod\n</code></pre>"},{"location":"integration-with-github/","title":"Integration with GitHub","text":"<p>EasyBuild provides several features that integrate with GitHub, where the different EasyBuild repositories are located.</p> <p>From the EasyBuild command line <code>eb</code> several options are available to reach out to GitHub, which are documented below.</p>"},{"location":"integration-with-github/#github_requirements","title":"Requirements","text":"<p>Depending on which GitHub integration features you want to use, there are a couple of requirements:</p> <ul> <li>a GitHub account<ul> <li>see https://github.com; creating an account is free</li> </ul> </li> <li>a GitHub user name<ul> <li>only required for authenticated access to the GitHub API, which can     help to avoid rate limitations</li> <li>not strictly necessary for read-only operations<ul> <li>i.e. not required for Using easyconfigs from pull requests and  Reviewing easyconfig pull requests</li> </ul> </li> <li>see Providing a GitHub username</li> </ul> </li> <li>a GitHub token + <code>keyring</code> Python package<ul> <li>install via <code>pip install keyring</code> (for Python2: <code>pip install 'keyring&lt;19.0'</code>)</li> <li>optionally install potentially unsafe keyrings: <code>pip install keyrings.alt</code> (but read and understand the   warning)</li> <li>allows accessing the GitHub API with authentication</li> <li>only strictly required for features that require GitHub 'write'   permissions<ul> <li>i.e. for Uploading test reports and   Submitting pull requests</li> </ul> </li> <li>see Installing a GitHub token</li> </ul> </li> <li><code>git</code> command / <code>GitPython</code> Python package<ul> <li>install via <code>pip install GitPython</code> (for Python2:     <code>pip install 'GitPython&lt;3.0'</code>)</li> <li>only required when local <code>git</code> commands need to be executed, e.g. to     manipulate a Git repository<ul> <li>i.e. for Submitting pull requests and  Updating existing pull requests</li> </ul> </li> </ul> </li> <li>SSH public key registered on GitHub<ul> <li>only required when <code>push</code> access to Git repositories that reside on     GitHub is required<ul> <li>i.e. for Submitting pull requests and Updating existing pull requests</li> </ul> </li> <li>see https://github.com/settings/ssh</li> </ul> </li> <li>fork of the EasyBuild repositories on GitHub<ul> <li>only required for submitting/updating pull requests (Submitting pull requests and Updating existing pull requests</li> <li>see <code>Fork</code> button (top right) at     https://github.com/easybuilders/easybuild-easyconfigs (for     example)</li> </ul> </li> </ul> <p>See also Checking status of GitHub integration.</p>"},{"location":"integration-with-github/#github_configuration","title":"Configuration","text":"<p>The following sections discuss the EasyBuild configuration options relevant to the GitHub integration features.</p>"},{"location":"integration-with-github/#github_user","title":"Providing a GitHub username","text":"<p>(<code>--github-user</code>)</p> <p>To specify your GitHub username, do one of the following:</p> <ul> <li>use the <code>--github-user</code> configuration option on the <code>eb</code> command line</li> <li>define the <code>$EASYBUILD_GITHUB_USER</code> environment variable</li> <li>specify <code>github-user</code> in your EasyBuild configuration file</li> </ul> <p>(see also Configuring EasyBuild)</p>"},{"location":"integration-with-github/#github_token","title":"Installing a GitHub token","text":"<p>(<code>--install-github-token</code>)</p>  <p>Note</p> <p>requires: GitHub username + <code>keyring</code> Python package</p>  <p>A GitHub token is a string of 40 characters that is tied to your GitHub account, allowing you to access the GitHub API authenticated.</p> <p>Using a GitHub token is beneficial with respect to rate limitations, and enables write permissions on GitHub (e.g. posting comments, creating gists, opening pull requests).</p> <p>To obtain a GitHub token:</p> <ul> <li>visit https://github.com/settings/tokens/new and log in with your   GitHub account</li> <li>enter a token description, for example: \"<code>EasyBuild</code>\"</li> <li>make sure (only) the <code>gist</code> and <code>public_repo</code> (in the <code>repo</code> section)   scopes are fully enabled</li> <li>click <code>Generate token</code></li> <li>copy-paste the generated token</li> </ul>  <p>Note</p> <p>You will only be able to copy-paste the generated token right after you have created it. The value corresponding to an existing token can not be retrieved later through the GitHub interface.</p> <p>Please keep your token secret at all times; it allows fully authenticated access to your GitHub account!</p>  <p>You can install the GitHub token in your keyring using EasyBuild, so it can pick it up when it needs to, using <code>eb --install-github-token</code>:</p> <pre><code>$ eb --github-user example --install-github-token\nToken: &lt;copy-paste-your-40-character-token-here&gt;\nValidating token...\nToken seems to be valid, installing it.\nToken 'e3a..0c2' installed!\n</code></pre> <p>EasyBuild will validate the provided token, to check that authenticated access to your GitHub account works as expected.</p>  <p>Note</p> <p>EasyBuild will never print the full token value, to avoid leaking it. For debugging purposes, only the first and last 3 characters will be shown.</p>"},{"location":"integration-with-github/#github_git_working_dirs_path","title":"Specify location of working directories","text":"<p>(<code>--git-working-dirs-path</code>)</p> <p>You can specify the location of your Git working directories with one of the following:</p> <ul> <li>use the <code>--git-working-dirs-path</code> configuration option on the <code>eb</code>   command line</li> <li>define the <code>$EASYBUILD_GIT_WORKING_DIRS_PATH</code> environment variable</li> <li>specify the <code>git-working-dirs-path</code> option in your EasyBuild   configuration file</li> </ul> <p>The provided path should be the parent directory of the location of the working directories (i.e. clones) of the EasyBuild repositories (<code>easybuild-easyconfigs</code>, etc.); the assumption is that you keep them all in a single parent directory.</p> <p>Although not strictly required, this is useful for speeding up <code>--new-pr</code> and <code>--update-pr</code>, since it allows that the repository can be copied &amp; updated, rather than being cloned from scratch.</p>"},{"location":"integration-with-github/#github_requirements_check","title":"Checking status of GitHub integration","text":"<p>(<code>--check-github</code>)</p> <p>To check the status of your setup w.r.t. GitHub integration, the <code>--check-github</code> command line option can be used.</p> <p>Using this will trigger EasyBuild to perform a number of checks, and report back on what the test results mean for the different GitHub integration features.</p> <p>If all requirements are taken care of in your setup, you should see output like this:</p> <pre><code>$ eb --check-github\n\n== temporary log file in case of crash /tmp/eb-xWCpWl/easybuild-hGnKS5.log\n\nChecking status of GitHub integration...\n\nMaking sure we're online... OK\n\n* GitHub user... example =&gt; OK\n* GitHub token... e3f..0c8 (len: 40) =&gt; OK (validated)\n* git command... OK (\"git version 2.7.4 (Apple Git-66); \")\n* GitPython module... OK\n* push access to example/easybuild-easyconfigs repo @ GitHub... OK\n* creating gists... OK\n* location to Git working dirs...  OK (/home/example/git-working-dirs)\n\nAll checks PASSed!\n\nStatus of GitHub integration:\n* --from-pr: OK\n* --new-pr: OK\n* --review-pr: OK\n* --update-pr: OK\n* --upload-test-report: OK\n</code></pre>  <p>Note</p> <p>Checking whether push access to GitHub works may take some time, since a recent clone of the easybuild-easyconfigs GitHub repository will be created in the process (at a temporary location).</p>  <p>See also Requirements.</p>"},{"location":"integration-with-github/#github_from_pr","title":"Using easyconfigs from pull requests","text":"<p>(<code>--from-pr</code>, supported since EasyBuild v1.13.0)</p> <p>Via the <code>--from-pr</code> command line option (available since EasyBuild v1.13.0), easyconfig files that are added or modified by a particular pull request to the easybuild-easyconfigs GitHub repository can be used (regardless of whether the pull request is merged or not).</p> <p>This can be useful to employ easyconfig files that are not available yet in the active EasyBuild installation, or to test new contributions by combining <code>--from-pr</code> with <code>--upload-test-report</code> (see Uploading test reports).</p> <p>When <code>--from-pr</code> is used, EasyBuild will download all modified files (easyconfig files and patches) to a temporary directory before processing them.</p> <p>For example, to use the GCC v4.9.2 easyconfigs contributed via easyconfigs pull request #1177:</p> <pre><code>$ eb --from-pr 1177 --dry-run\n== temporary log file in case of crash /tmp/eb-88quZc/easybuild-62fFdo.log\nDry run: printing build status of easyconfigs and dependencies\n * [ ] /tmp/eb-88quZc/files_pr1177/GCC-4.9.2-CLooG-multilib.eb (module: GCC/4.9.2-CLooG-multilib)\n * [ ] /tmp/eb-88quZc/files_pr1177/GCC-4.9.2-CLooG.eb (module: GCC/4.9.2-CLooG)\n * [ ] /tmp/eb-88quZc/files_pr1177/GCC-4.9.2.eb (module: GCC/4.9.2)\n== temporary log file /tmp/eb-88quZc/easybuild-62fFdo.log has been removed.\n== temporary directory /tmp/eb-88quZc has been removed.\n</code></pre>  <p>Note</p> <p>To avoid GitHub rate limiting, let EasyBuild know which GitHub account should be used to query the GitHub API, and provide a matching GitHub token; see also Installing a GitHub token.</p>"},{"location":"integration-with-github/#github_from_pr_vs_develop","title":"Relation between pull requests and current <code>develop</code> branch","text":"<p>Since EasyBuild v2.9.0, the current <code>develop</code> branch of the central <code>easybuild-easyconfigs</code> GitHub repository is taken into account when applicable with <code>--from-pr</code>. Before, only the branch corresponding to the specified pull request itself was being considered, which potentially did not reflect the correct state of things, in particular for pull requests based on an outdated branch in which easyconfigs are changed that have been updated in <code>develop</code> as well.</p> <p>As such, the exact semantics of <code>--from-pr</code> depends on the state of the specified pull request, i.e. whether or not the pull request was merged already, whether the pull request is mergeable and stable (as indicated by GitHub Actions), etc.</p>"},{"location":"integration-with-github/#github_from_pr_vs_develop_open_stable_prs","title":"Open stable pull requests","text":"<p>For open pull requests that are stable (i.e. tests pass and no merge conflicts), the pull request is effectively treated as a patch to the current <code>develop</code> branch. This is done to ensure that contributions that are picked up via <code>--from-pr</code> are correctly evaluated.</p> <p>First, the current <code>develop</code> branch of the central <code>easybuild-easyconfigs</code> GitHub repository is downloaded to a temporary directory. Afterwards, the patch corresponding to the specified pull request is applied on top of the <code>develop</code> branch. This results in a correct reflection of how the easyconfig files would look like if the pull request would be merged, which is particularly important for testing of contributions (see also Uploading test reports).</p> <p>Easyconfig files touched by the pull request that are explicitly specified are then picked up from this location; see also Specifying particular easyconfig files.</p>"},{"location":"integration-with-github/#github_from_pr_vs_develop_merged_prs","title":"Merged pull requests","text":"<p>For merged pull requests, the current <code>develop</code> branch is considered to be the correct state of the easyconfigs touched by the pull request.</p> <p>Note that this implies that the easyconfig files being picked up are potentially different from the ones that appear in the specified pull request itself, taking into account that further updates may have been applied in the <code>develop</code> branch since the pull request got merged.</p>"},{"location":"integration-with-github/#github_from_pr_vs_develop_closed_unstable_prs","title":"Closed or unstable pull requests","text":"<p>For closed and unstable pull requests, only the branch corresponding to the pull request itself is being considered, which aligns with the semantics of <code>--from-pr</code> as it was before EasyBuild v2.9.0. In this case, the current <code>develop</code> branch is not taken into account.</p>  <p>Note</p> <p>A pull request is considered unstable when GitHub reports merge conflicts or when GitHub Actions reports one or more failing tests.</p>"},{"location":"integration-with-github/#github_from_pr_robot_synergy","title":"Synergy with <code>--robot</code>","text":"<p>Since EasyBuild v1.15.0, the temporary directory containing the easyconfigs (and patch files) from the specified pull request is included in the robot search path.</p> <p>Up until EasyBuild v2.9.0, this directory was prepended to the robot search path, to ensure that easyconfigs that were modified in the respective pull request are picked up via <code>--robot</code> when they are required. Thus, for easyconfig files that were available in the pull request as well as locally, the ones from the specified pull request were preferred.</p> <p>This was changed in EasyBuild v2.9.0, where the directory containing the easyconfigs touched by the pull request is appended to the robot search path. This change was made to ensure that customized easyconfig files that are available in the robot search path are preferred over the (patched) easyconfig files from the <code>develop</code> branch (see also Relation between pull requests and current <code>develop</code> branch).</p> <p>For example, to build and install <code>HPL</code> with the <code>intel/2015a</code> toolchain, both of which are contributed via easyconfigs pull request #1238:</p> <pre><code>$ eb --from-pr 1238 --dry-run --robot $HOME/easyconfigs\n== temporary log file in case of crash /tmp/eb-A1fRvw/easybuild-Eqc8Oi.log\nDry run: printing build status of easyconfigs and dependencies\n * [x] /home/example/easyconfigs/g/GCC/GCC-4.9.2.eb (module: GCC/4.9.2)\n * [x] /home/example/easyconfigs/i/icc/icc-2015.1.133-GCC-4.9.2.eb (module: icc/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/ifort/ifort-2015.1.133-GCC-4.9.2.eb (module: ifort/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/iccifort/iccifort-2015.1.133-GCC-4.9.2.eb (module: iccifort/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/impi/impi-5.0.2.044-iccifort-2015.1.133-GCC-4.9.2.eb (module: impi/5.0.2.044-iccifort-2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/iimpi/iimpi-7.2.3-GCC-4.9.2.eb (module: iimpi/7.2.3-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/imkl/imkl-11.2.1.133-iimpi-7.2.3-GCC-4.9.2.eb (module: imkl/11.2.1.133-iimpi-7.2.3-GCC-4.9.2)\n * [ ] /tmp/eb-A1fRvw/files_pr1238/intel-2015a.eb (module: intel/2015a)\n * [ ] /tmp/eb-A1fRvw/files_pr1238/HPL-2.1-intel-2015a.eb (module: HPL/2.1-intel-2015a)\n== temporary log file /tmp/eb-A1fRvw/easybuild-Eqc8Oi.log has been removed.\n== temporary directory /tmp/eb-A1fRvw has been removed.\n</code></pre> <p>Note that the easyconfigs that are required to resolve dependencies and are available locally in <code>$HOME/easyconfigs</code> are being picked up as needed.</p>"},{"location":"integration-with-github/#github_from_pr_specifying_easyconfigs","title":"Specifying particular easyconfig files","text":"<p>Since EasyBuid v2.0.0 the particular easyconfigs to be used can be specified, rather than using all easyconfigs that are touched by the pull request (which is the default if no easyconfigs are specified alongside <code>--from-pr</code>).</p> <p>For example, to only use <code>CMake-3.0.0-intel-2015a.eb</code> from easyconfigs pull request #1330, and ignore the other easyconfigs being contributed in that same pull request for netCDF, WRF, ...:</p> <pre><code>$ eb --from-pr 1330 CMake-3.0.0-intel-2015a.eb --dry-run --robot $HOME/easyconfigs\n== temporary log file in case of crash /tmp/eb-QhM_qc/easybuild-TPvMkJ.log\nDry run: printing build status of easyconfigs and dependencies\n * [x] /home/example/easyconfigs/g/GCC/GCC-4.9.2.eb (module: GCC/4.9.2)\n * [x] /home/example/easyconfigs/i/icc/icc-2015.1.133-GCC-4.9.2.eb (module: icc/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/ifort/ifort-2015.1.133-GCC-4.9.2.eb (module: ifort/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/iccifort/iccifort-2015.1.133-GCC-4.9.2.eb (module: iccifort/2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/impi/impi-5.0.2.044-iccifort-2015.1.133-GCC-4.9.2.eb (module: impi/5.0.2.044-iccifort-2015.1.133-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/iimpi/iimpi-7.2.3-GCC-4.9.2.eb (module: iimpi/7.2.3-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/imkl/imkl-11.2.1.133-iimpi-7.2.3-GCC-4.9.2.eb (module: imkl/11.2.1.133-iimpi-7.2.3-GCC-4.9.2)\n * [x] /home/example/easyconfigs/i/intel/intel-2015a.eb (module: intel/2015a)\n * [x] /home/example/easyconfigs/n/ncurses/ncurses-5.9-intel-2015a.eb (module: ncurses/5.9-intel-2015a)\n * [ ] /tmp/eb-QhM_qc/files_pr1330/CMake-3.0.0-intel-2015a.eb (module: CMake/3.0.0-intel-2015a)\n== temporary log file /tmp/eb-QhM_qc/easybuild-TPvMkJ.log has been removed.\n== temporary directory /tmp/eb-QhM_qc has been removed.\n</code></pre> <p>Again, note that locally available easyconfigs that are required to resolve dependencies are being picked up as needed.</p>"},{"location":"integration-with-github/#github_include_easyblocks_from_pr","title":"Using easyblocks from pull requests","text":"<p>(<code>--include-easyblocks-from-pr</code>, supported since EasyBuild v4.2.0)</p> <p>Via the <code>--include-easyblocks-from-pr</code> command line option, easyblocks that are added or modified by a particular pull request to the easybuild-easyblocks GitHub repository can be used (regardless of whether the pull request is merged or not).</p> <p>This can be useful to employ easyblocks that are not available yet in the active EasyBuild installation, or to test new contributions by combining <code>--include-easyblocks-from-pr</code> with <code>--from-pr</code> and <code>--upload-test-report</code> (see Uploading test reports).</p> <p>When <code>--include-easyblocks-from-pr</code> is used, EasyBuild will download all modified easyblocks to a temporary directory before processing them. Just like with <code>--include-easyblocks</code> (see Including additional easyblocks), the easyblocks that are included are preferred over the ones included in the EasyBuild installation.</p> <p>For example, to use the LAMMPS easyblock contributed via easyblocks pull request #1964 together with the LAMMPS v7Aug2019 easyconfigs contributed via easyconfigs pull request #9884:</p> <pre><code>$ eb --from-pr 9884 --include-easyblocks-from-pr 1964 --list-easyblocks=detailed\n== temporary log file in case of crash /tmp/eb-Eq2zsJ/easybuild-1AaWf8.log\nEasyBlock (easybuild.framework.easyblock)\n...\n|   |   |-- EB_LAMMPS (easybuild.easyblocks.lammps @ /tmp/included-easyblocks-rD2HEQ/easybuild/easyblocks/lammps.py)\n...\n</code></pre>"},{"location":"integration-with-github/#github_upload_test_report","title":"Uploading test reports","text":"<p>(<code>--upload-test-report</code>, supported since EasyBuild v1.13.0)</p>  <p>Note</p> <p>requires that a GitHub token was required <code>gist</code> permissions is available, cfr. Installing a GitHub token</p>  <p>For every installation performed with EasyBuild, a test report is generated. By default, the test report is copied in the installation directory, right next to the log file (see also Understanding EasyBuild logs).</p> <p>Using <code>--upload-test-report</code>, the test report can also be pushed to GitHub (as a gist, cfr. https://gist.github.com) to share it with others.</p> <p>Each test report includes:</p> <ul> <li>an overview of the easyconfigs being processed</li> <li>time &amp; date</li> <li>the exact <code>eb</code> command line that was used</li> <li>the full EasyBuild configuration that was in place</li> <li>information about the system on which EasyBuild was used (hostname,   OS, architecture, etc.)</li> <li>the list of modules that was loaded</li> <li>the full environment of the session in which <code>eb</code> was run (note: can   be filtered, see Filtering the environment details</li> </ul> <p>For each easyconfig that failed to install a partial log will be uploaded as a separate gist, and a link to this gist will be included in the test report.</p> <p>If <code>--upload-test-report</code> is combined with <code>--from-pr</code>, a comment referring to the test report (incl. a brief summary) will be placed in the respective pull request. This makes it a very powerful tool when testing contributions.</p>  <p>Note</p> <p>If you want to easily access a test report without uploading it to GitHub, use <code>--dump-test-report</code>.</p>  <p>Example:</p> <pre><code>$ eb --from-pr 3153 --rebuild --upload-test-report\n== temporary log file in case of crash /tmp/eb-aqk20q/easybuild-wuyZBV.log\n== processing EasyBuild easyconfig /tmp/eb-aqk20q/files_pr3153/EasyBuild/EasyBuild-2.8.1.eb\n== building and installing EasyBuild/2.8.1...\n...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/software/EasyBuild/2.8.1/easybuild/easybuild-EasyBuild-2.8.1-20160603.090702.log\n== Test report uploaded to https://gist.github.com/1cb2db8a2913a1b8ddbf1c6fee3ff83c and mentioned in a comment in easyconfigs PR#3153\n== Build succeeded for 1 out of 1\n== Temporary log file(s) /tmp/eb-aqk20q/easybuild-wuyZBV.log* have been removed.\n== Temporary directory /tmp/eb-aqk20q has been removed.\n</code></pre> <p>The resulting test report can be viewed at https://gist.github.com/1cb2db8a2913a1b8ddbf1c6fee3ff83c .</p>  <p>Note</p> <p>It is common to use <code>--rebuild</code> in combination with <code>--upload-test-report</code>, to ensure that all easyconfigs in the pull request are rebuilt, resulting in a complete test report.</p>"},{"location":"integration-with-github/#github_test_report_env_filter","title":"Filtering the environment details","text":"<p>(<code>--test-report-env-filter</code>)</p> <p>Since the environment of the session in which <code>eb</code> was used may contain sensitive information, it can be filtered through <code>--test-report-env-filter</code>.</p> <p>This configuration option takes a regular expression that is used to determine which environment variables can be included in the test report (based on their name). Environment variables for which the name matches the specified regular expression will not be included in the test report.</p> <p>An example of a typical setting:</p> <pre><code>export EASYBUILD_TEST_REPORT_ENV_FILTER='^SSH|USER|HOSTNAME|UID|.*COOKIE.*'\n</code></pre>"},{"location":"integration-with-github/#github_review_pr","title":"Reviewing easyconfig pull requests","text":"<p>(<code>--review-pr</code>)</p> <p>A useful tool when reviewing pull requests for the easybuild-easyconfigs repository that add new or update existing easyconfig files is <code>--review-pr</code>.</p> <p>The 'files' tab in the GitHub interface shows the changes being made to existing files; using <code>--review-pr</code> the differences with one or more other similar easyconfig files, for example the one(s) with the same toolchain (version) and/or software version, can also be evaluated.</p> <p>This is very useful to quickly see how easyconfig files in pull requests differ from existing easyconfig files, and to maintain consistency across easyconfig files where desired.</p> <p>The <code>--review-pr</code> output consists of a 'multidiff' view per easyconfig file that is being touched by the specified pull request. The exact format of the output depends on whether EasyBuild is configured to allow colored output (enabled by default, see <code>--color</code>).</p>"},{"location":"integration-with-github/#search-criteria-for-similar-easyconfigs","title":"Search criteria for similar easyconfigs","text":"<p>The set of existing similar easyconfig files is determined by specific search criteria; the first one that results in a non-empty set of easyconfigs is retained.</p> <p>The search criteria consists of a combination of the software version criterion with additional restrictions.</p> <p>The software version criterion is one of the criterions below (considered in order), with <code>x.y.z</code> the software version of the easyconfig file from the pull request:</p> <ul> <li>exact same software version</li> <li>same major/minor software version (same <code>x</code> and <code>y</code>)</li> <li>same major software version (same <code>x</code>)</li> <li>no (partial) version match (so consider any version)</li> </ul> <p>The addition restrictions are the following (also considered in order):</p> <ul> <li>matching versionsuffix and toolchain name/version</li> <li>matching versionsuffix and toolchain name (any toolchain version)</li> <li>matching versionsuffix (any toolchain name/version)</li> <li>matching toolchain name/version (any versionsuffix)</li> <li>matching toolchain name (any versionsuffix, toolchain version)</li> <li>no extra requirements (any versionsuffix, toolchain name/version)</li> </ul>"},{"location":"integration-with-github/#github_merge_pr","title":"Merging easyconfig pull requests","text":"<p>(<code>--merge-pr</code>, supported since EasyBuild v3.3.1)</p> <p>EasyBuild maintainers need to take the Requirements for pull requests into account.</p> <p>They can merge a pull request to the <code>easybuild-easyconfigs</code> repository via <code>eb --merge-pr</code>, which will first verify whether the pull request meets the prescribed requirements (at least the ones that can be verified automatically).</p> <p>For example, for a pull request that is not eligible for merging yet:</p> <pre><code>$ eb --merge-pr 4725\n== temporary log file in case of crash /tmp/eb-ba7rVp/easybuild-fBfcwN.log\n\neasybuilders/easybuild-easyconfigs PR #4725 was submitted by vanzod, you are using GitHub account 'example'\n\nChecking eligibility of easybuilders/easybuild-easyconfigs PR #4725 for merging...\n* targets develop branch: OK\n* test suite passes: FAILED =&gt; not eligible for merging!\n* last test report is successful: (no test reports found) =&gt; not eligible for merging!\n* approved review: MISSING =&gt; not eligible for merging!\n* milestone is set: no milestone found =&gt; not eligible for merging!\n\nWARNING: Review indicates this PR should not be merged (use -f/--force to do so anyway)\n</code></pre> <p>When a PR is considered eligible for merging, EasyBuild will go ahead and merge it:</p> <pre><code>$ eb --merge-pr 4829\n== temporary log file in case of crash /tmp/eb-F9a3oB/easybuild-3B2wdq.log\n\neasybuilders/easybuild-easyconfigs PR #4829 was submitted by SethosII, you are using GitHub account 'example'\n\nChecking eligibility of easybuilders/easybuild-easyconfigs PR #4829 for merging...\n* targets develop branch: OK\n* test suite passes: OK\n* last test report is successful: OK\n* approved review: OK (by boegel)\n* milestone is set: OK (3.3.1)\n\nReview OK, merging pull request!\n\nAdding comment to easybuild-easyconfigs issue #4829: 'Going in, thanks @SethosII!'\nMerged easybuilders/easybuild-easyconfigs pull request #4829\n</code></pre>  <p>Note</p> <p><code>eb --merge-pr</code> can also be run in dry run mode, by also using one of the following options: <code>--dry-run</code>, <code>-D</code>, <code>--extended-dry-run</code>, <code>-x</code>.</p> <p>This results in the same checks being performed but skips the actual merging of the pull request, resulting in messages like:</p> <pre><code>$ eb --merge-pr 4829 --dry-run\n\n...\n\nReview OK, merging pull request!\n\n[DRY RUN] Adding comment to easybuild-easyconfigs issue #4829: 'Going in, thanks @SethosII!'\n[DRY RUN] Merged easybuilders/easybuild-easyconfigs pull request #4829\n</code></pre>"},{"location":"integration-with-github/#github_new_update_pr","title":"Submitting new and updating pull requests","text":"<p>(<code>--new-pr</code>, <code>--update-pr</code>, supported since EasyBuild v2.6.0)</p> <p>EasyBuild provides two simple yet powerful features that make contributing to the central EasyBuild repositories significantly easier and less error-prone, especially for people who are not very familiar with <code>git</code> and/or GitHub yet:</p> <ul> <li><code>--new-pr</code> to create new pull requests</li> <li><code>--update-pr</code> to update existing pull requests</li> </ul>"},{"location":"integration-with-github/#github_preview_pr","title":"Previewing easyconfig pull requests","text":"<p>(<code>--preview-pr</code>, supported since EasyBuild v3.5.0)</p> <p>It is very useful to quickly see how easyconfig files in pull requests differ from existing easyconfig files, and to maintain consistency across easyconfig files where desired.</p> <p>Maintainers will use <code>--review-pr</code> as part of the review process once the PR is submitted (see Reviewing easyconfig pull requests), but it is now possible to preview that output before submitting a PR, eventually fixing any inconsistencies in advance.</p> <p>To preview a PR before submitting, simply use <code>--preview-pr</code> with the list of files to submit:</p> <pre><code>eb --preview-pr example.eb example.patch \n</code></pre> <p>Besides accepting local files instead of a PR number, <code>--preview-pr</code> works the same as <code>--review-pr</code>, as described in Comparing with existing easyconfigs.</p>"},{"location":"integration-with-github/#github_new_pr","title":"Submitting pull requests","text":"<p>(<code>--new-pr</code>)</p>  <p>Note</p> <p>Submitting pull requests using <code>--new-pr</code> only works for the <code>easybuild-easyconfigs</code> repository, for now. For other repositories, see the manual procedure documented at Pull requests.</p>  <p>To create a new pull request, the <code>--new-pr</code> command line option can be used, provided that the necessary requirements are fulfilled (see Requirements).</p> <p>In its simplest form, you just provide the location of the file(s) that you want to include in the pull request:</p> <pre><code>eb --new-pr test.eb\n</code></pre> <p>This takes care of all the steps required to make a contribution, i.e.:</p> <ul> <li>set up a working copy of the relevant EasyBuild repository (e.g.,   <code>easybuild-easyconfigs</code>)</li> <li>create a new 'feature' branch, starting from the up-to-date <code>develop</code>   branch</li> <li>renaming easyconfig files according to their <code>name</code>, <code>version</code>,   <code>versionsuffix</code> and <code>toolchain</code></li> <li>moving easyconfig files to the right location in the repository (e.g.   <code>easybuild/easyconfigs/e/EasyBuild/</code>)</li> <li>staging and committing the files in the feature branch</li> <li>pushing the feature branch to your fork of the relevant EasyBuild   repository on GitHub</li> <li>creating the pull request, targeting the <code>develop</code> branch of the   central EasyBuild repository (e.g.   <code>easybuilders/easybuild-easyconfigs</code>)</li> </ul> <p>It should be clear that automating this whole procedure with a single simple <code>eb</code> command greatly lowers the bar for contributing, especially since it even alleviates the need for interacting directly with <code>git</code> entirely!</p> <p>The working copy of the EasyBuild repository is created in a temporary location, and cleaned up once the pull request has been created. EasyBuild does not make changes to an existing working copy you may have in place already (cfr. Specify location of working directories).</p>  <p>Note</p> <p>When modifying existing files via <code>--new-pr</code>, you must specify a (meaningful) commit message using <code>--pr-commit-msg</code>, see Controlling pull request metadata.</p>"},{"location":"integration-with-github/#example","title":"Example","text":"<p>For example, to create a pull request for a new version of, let's say, EasyBuild:</p> <pre><code>$ eb --new-pr example.eb\n== temporary log file in case of crash /tmp/eb-mWKR9u/easybuild-cTpf2W.log\n== copying /home/example/git-working-dirs/easybuild-easyconfigs...\n== fetching branch 'develop' from https://github.com/easybuilders/easybuild-easyconfigs.git...\n\nOpening pull request\n* target: easybuilders/easybuild-easyconfigs:develop\n* from: boegel/easybuild-easyconfigs:20160530131447_new_pr_EasyBuild281\n* title: \"{tools}[dummy/dummy] EasyBuild v2.8.1\"\n* description:\n\"\"\"\n(created using `eb --new-pr`)\n\n\"\"\"\n* overview of changes:\n .../easyconfigs/e/EasyBuild/EasyBuild-2.8.1.eb     | 35 ++++++++++++++++++++++\n 1 file changed, 35 insertions(+)\n\nOpened pull request: https://github.com/easybuilders/easybuild-easyconfigs/pull/3153\n</code></pre> <p>Yes, it's that easy!</p>"},{"location":"integration-with-github/#github_update_pr","title":"Updating existing pull requests","text":"<p>(<code>--update-pr</code>)</p>  <p>Note</p> <p>Updating pull requests using <code>--update-pr</code> only works for the <code>easybuild-easyconfigs</code> repository, for now. For other repositories, see the manual procedure documented at Pull requests.</p>  <p>Similarly to creating new pull requests, existing pull requests can be easily updated using <code>eb --update-pr</code> (regardless of whether or not they were created with <code>--new-pr</code>).</p> <p>The usage is equally simple, for example to update pull request <code>#1234</code> just list the changed/new file(s):</p> <pre><code>eb --update-pr 1234 example.eb\n</code></pre> <p>Again, this take care of the whole procedure required to update an existing pull request:</p> <ul> <li>set up a working copy of the relevant EasyBuild repository (e.g.,   <code>easybuild-easyconfigs</code>)</li> <li>determining the branch corresponding to the pull request, which should   be updated by pushing a new commit to it</li> <li>checking out that branch</li> <li>renaming easyconfig files according to their <code>name</code>, <code>version</code>,   <code>versionsuffix</code> and <code>toolchain</code></li> <li>moving easyconfig files to the right location in the repository (e.g.   <code>easybuild/easyconfigs/e/EasyBuild/</code>)</li> <li>staging and committing the (changed/new) files</li> <li>pushing the updated branch to GitHub</li> </ul> <p>Again, not a single <code>git</code> command to be executed; the only thing that is required is the ID of the pull request that should be updated.</p> <p>Just like with <code>--new-pr</code>, this is done in a temporary working copy of the repository, no changes are made to a possible existing working copy.</p>  <p>Note</p> <p>When using <code>--update-pr</code> you must specify a (meaningful) commit message via <code>--pr-commit-msg</code>, see Controlling pull request metadata.</p>"},{"location":"integration-with-github/#example_1","title":"Example","text":"<p>For example, to update pull request #3153 with a changed easyconfig file:</p> <pre><code>$ eb --update-pr 3153 example.eb\n== temporary log file in case of crash /tmp/eb-gO2wJu/easybuild-37Oo2z.log\n== Determined branch name corresponding to easybuilders/easybuild-easyconfigs PR #3153: 20160530131447_new_pr_EasyBuild281\n== copying /home/example/git-working-dirs/easybuild-easyconfigs...\n== fetching branch '20160530131447_new_pr_EasyBuild281' from https://github.com/boegel/easybuild-easyconfigs.git...\nOverview of changes:\n easybuild/easyconfigs/e/EasyBuild/EasyBuild-2.8.1.eb | 3 +++\n 1 file changed, 3 insertions(+)\n\nUpdated easybuilders/easybuild-easyconfigs PR #3159 by pushing to branch boegel/20160530131447_new_pr_EasyBuild281\n</code></pre>"},{"location":"integration-with-github/#github_new_update_pr_patches","title":"Including patch files in easyconfigs pull requests","text":"<p>Next to providing one or more easyconfig files to add/update via <code>--new-pr</code> or <code>--update-pr</code>, you can also include patch files that are required by those easyconfig files.</p> <p>EasyBuild will try and figure out where each patch file should be located (i.e. in the same directory as the easyconfig files that require that patch file), by scanning the provided easyconfigs (or, if needed, scanning all existing easyconfig files).</p> <p>For example:</p> <pre><code>eb --new-pr example.eb example.patch --pr-commit-msg \"just an example\"\n</code></pre>  <p>Note</p> <p>When providing one or more patch files, you must specify a (meaningful) commit message via <code>--pr-commit-msg</code>, see Controlling pull request metadata.</p>"},{"location":"integration-with-github/#github_new_update_pr_delete","title":"Deleting easyconfig files or patches","text":"<p>Next to adding easyconfigs files or patches, or modifying existing ones, you can also specify to delete particular files, by including a colon character <code>:</code> before the name of the file.</p> <p>For example:</p> <pre><code>eb --new-pr :example-1.0.eb --pr-commit-msg \"delete example-1.0.eb easyconfig file\"\n</code></pre>  <p>Note</p> <p>When deleting existing files, you must specify a custom commit message using <code>--pr-commit-msg</code>, see also Controlling pull request metadata.</p>"},{"location":"integration-with-github/#github_controlling_pr_metadata","title":"Controlling pull request metadata","text":"<p>You can control the metadata for pull requests using the following configuration options:</p> <ul> <li><code>--pr-branch-name</code>: branch name for new pull requests</li> <li><code>--pr-commit-msg</code>: commit message to use when creating new or updating   existing pull requests</li> <li><code>--pr-descr</code>: pull request description</li> <li><code>--pr-title</code>: pull request title</li> </ul> <p>EasyBuild will use sensible defaults for each of these, see below.</p>"},{"location":"integration-with-github/#default-branch-name-for-new-pull-requests","title":"Default branch name for new pull requests","text":"<p>The branch name for new pull requests will be composed from:</p> <ul> <li>a timestamp, down to the second in an attempt to make it unique<ul> <li>example: <code>20160513141133</code> for a pull request created on May 13th     2016, 2:11:33 PM</li> </ul> </li> <li>a label <code>new_pr</code></li> <li>the software name and version of the first easyconfig file, with some   filtering (e.g. remove <code>.</code>'s)<ul> <li>example: <code>GCC530</code> for GCC v5.3.0</li> </ul> </li> </ul> <p>Full example: <code>20160513141133_new_pr_GCC530</code></p> <p>Although there is usually no reason to change this default, it can be done if desired using <code>--pr-branch-name</code> when opening a new pull request with <code>--new-pr</code>.</p>"},{"location":"integration-with-github/#default-commit-message","title":"Default commit message","text":"<p>EasyBuild will try to generate an appropriate default commit message when only new easyconfigs are being added via <code>--new-pr</code>.</p> <p>When existing easyconfigs are being modified, patch files are being added/updated or <code>--update-pr</code> is used, a custom (meaningful) commit message must be provided via <code>--pr-commit-msg</code> (see Controlling pull request metadata).</p>"},{"location":"integration-with-github/#default-pull-request-description","title":"Default pull request description","text":"<p>By default, the pull description will only contain the following text:</p> <pre><code>(created using eb --new-pr)\n</code></pre> <p>It is generally advised to provide more descriptive information, although the changes made by the pull request may be self-explanatory (e.g. when only adding new easyconfig files).</p> <p>To change this default text, you can either use <code>--pr-descr</code> or edit the description via the GitHub interface after the pull request has been opened.</p> <p>Particularly useful information to specify here is dependencies on other pull requests, by copy-pasting the respective URLs with a short descriptive message like '<code>depends on PR &lt;URL&gt;</code>'.</p>"},{"location":"integration-with-github/#default-pull-request-title","title":"Default pull request title","text":"<p>The pull request title is derived from the easyconfig files being changed/added, taking into account the recommendation for easyconfig pull requests to clearly specify module class, toolchain, software name/version, as follows: <code>{&lt;module_class&gt;}[&lt;toolchain&gt;] &lt;software_name&gt; v&lt;software_version&gt;</code>.</p> <p>For example, when opening a pull request for an easyconfig for Python 2.7.11 with the <code>intel/2016a</code> toolchain, the default pull request title will be something like: <code>{lang}[intel/2016a] Python v2.7.11</code> .</p> <p>If multiple easyconfig files are provided, the respective software names/versions will be included separated by a <code>,</code>, up until the first 3 easyconfig files (to avoid excessively lengthy pull request titles).</p> <p>In case (only) existing easyconfig files are being changed, it's advisable to provide a more descriptive title using <code>--pr-title</code>.</p>"},{"location":"integration-with-github/#github_configuring_new_update_pr","title":"Configuring <code>--new-pr</code> and <code>--update-pr</code>","text":"<p>By default, <code>--new-pr</code> and <code>--update-pr</code> affect pull requests to the central <code>easybuilders/easybuild-easyconfigs</code> repository.</p> <p>However, this can be changed with the following configurations options:</p> <ul> <li><code>--pr-target-account</code> (default: <code>easybuilders</code>): target GitHub account   for new pull requests</li> <li><code>--pr-target-branch</code> (default: <code>develop</code>): target branch for new pull   requests</li> <li><code>--pr-target-repo</code> (default: <code>easybuild-easyconfigs</code>): target   repository for new pull requests</li> </ul>"},{"location":"integration-with-github/#github_synergy_new_update_pr_dry_run","title":"Synergy with <code>--dry-run</code>/<code>-D</code> and <code>--extended-dry-run</code>/<code>-x</code>","text":"<p>Both <code>--new-pr</code> and <code>--update-pr</code> are 'dry run-aware', in the sense that you can combine them with either <code>--dry-run</code>/<code>-D-</code> or <code>--extended-dry-run</code>/<code>-x</code> to preview the pull request they would create/update without actually doing so.</p> <p>For example:</p> <pre><code>$ eb --new-pr EasyBuild-2.9.0.eb -D\n== temporary log file in case of crash /tmp/eb-1ny69k/easybuild-UR1Wr4.log\n== copying /home/example/git-working-dirs/easybuild-easyconfigs...\n== fetching branch 'develop' from https://github.com/easybuilders/easybuild-easyconfigs.git...\n\nOpening pull request [DRY RUN]\n* target: easybuilders/easybuild-easyconfigs:develop\n* from: boegel/easybuild-easyconfigs:20160603105641_new_pr_EasyBuild290\n* title: \"{tools}[dummy/dummy] EasyBuild v2.9.0\"\n* description:\n\"\"\"\n(created using `eb --new-pr`)\n\n\"\"\"\n* overview of changes:\n .../easyconfigs/e/EasyBuild/EasyBuild-2.9.0.eb     | 35 ++++++++++++++++++++++\n 1 file changed, 35 insertions(+)\n</code></pre> <p>The only difference between using <code>--dry-run</code> and <code>--extended-dry-run</code> is that the latter will show the full diff of the changes (equivalent to <code>git diff</code>), while the former will only show a summary of the changes (equivalent to <code>git diff --stat</code>, see example above).</p>"},{"location":"locks/","title":"Locks","text":""},{"location":"locks/#locks","title":"Locks to prevent duplicate installations running at the same time","text":"<p>Easybuild creates a lock before starting the installation of an easyconfig file, to avoid a collision between multiple installations running at the same time.</p> <p>If an EasyBuild session tries to install an easyconfig file when a lock for that installation already exists, it will be automatically aborted with an error like \"<code>Lock ... already exists, aborting!</code>\".</p>  <p>Note</p> <p>Locking of installations was implemented in EasyBuild version 4.2.0 .</p>"},{"location":"locks/#locks_implementation","title":"Locking implementation details","text":"<p>Easybuild will create a lock when starting an installation if no corresponding lock exists yet, regardless of whether the installation was requested explicitly or is performed to resolve a dependency.</p> <p>The name of the lock corresponds to the full path of the installation directory, with slashes (<code>/</code>) and dashes (<code>-</code>) replaced by underscores (<code>_</code>), and with an additional <code>.lock</code> added at the end.</p> <p>Locks are created in the locks directory.</p> <p>The lock created by EasyBuild is an empty directory (rather than a file), because that can be created more atomically on modern filesystems.</p> <p>For example, if <code>OpenFOAM-7-foss-2019b.eb</code> is being installed to <code>/apps/easybuild/software</code>, an empty directory that serves as a lock for this installation will be created at <code>/apps/easybuild/software/.locks/_apps_easybuild_software_OpenFOAM_7_foss_2019b.lock</code> (assuming the default locks directory is used).</p> <p>A lock is automatically removed by Easybuild when the installation ends, regardless of whether the installation was successful or not. Therefore, new installations of the same easyconfig will be aborted in case of:</p> <ul> <li>another installation for the same easyconfig is in progress;</li> <li>a previous installation of the same easyconfig was abruptly interrupted;</li> </ul>"},{"location":"locks/#locks_removing","title":"Removing locks","text":"<p>If a previous installation was abruptly interrupted and a lock was left in place, it can be easily removed using the <code>rmdir</code> command (since the lock is actually an empty directory).</p>"},{"location":"locks/#locks_configuration_options","title":"Configuration options related to installation locks","text":"<p>The behaviour of the locking mechanism in Easybuild can be tuned with the following configuration options:</p>"},{"location":"locks/#locks_ignore","title":"Ignoring locks","text":"<p>(<code>--ignore-locks</code>)</p> <p>Using the <code>--ignore-locks</code> configuration option, you can instruct EasyBuild to ignore any existing locks. Locks that exist are left untouched, even if the installation completes successfully.</p> <p>Use this with caution, since installations may be (partially) overwritten if another EasyBuild session is also performing those installations!</p>"},{"location":"locks/#locks_wait","title":"Waiting for locks to be removed","text":"<p>(<code>--wait-on-lock</code>)</p> <p>Using the <code>--wait-on-lock</code> configuration option, you can change how EasyBuild deals with existing locks, by specifying how frequently EasyBuild should check whether an existing lock was removed. By specifying a non-zero value <code>S</code>, you can indicate how many seconds EasyBuild should wait before checking again whether the lock is still in place.</p>  <p>Note</p> <p>EasyBuild will wait indefinitely for an existing lock to be removed if <code>--wait-on-lock</code> is set to a non-zero value...</p> <p>If the lock is never removed, the EasyBuild session will never terminate; it will keep checking every <code>S</code> seconds whether the lock is still in place.</p>  <p>By default, EasyBuild will abort the installation with an error like \"<code>Lock ... already exists, aborting!</code>\" if a corresponding lock already exists, which is equivalent to setting <code>--wait-on-lock</code> to zero (<code>0</code>), implying that no waiting should be done at all.</p>"},{"location":"locks/#locks_dir","title":"Locks directory","text":"<p>If desired, an alternate location where locks should be created and checked for can be specified via the <code>--locks-dir</code> configuration option.</p>  <p>Note</p> <p>Keep in mind that a path on a shared filesystem should be used, to ensure that active EasyBuild sessions running on different systems use the same locks directory.</p>  <p>By default, locks are created in a hidden subdirectory <code>.locks</code> in the top-level <code>software</code> installation directory; that is, the <code>software</code> subdirectory of the <code>installpath</code> configuration setting of the active EasyBuild session.</p>"},{"location":"log-files/","title":"Understanding EasyBuild logs","text":"<p>EasyBuild thoroughly keeps track of the executed build and install procedures. This page details some of the specifics, to help you making sense of them.</p>"},{"location":"log-files/#basic-information","title":"Basic information","text":"<p>During an invocation of the <code>eb</code> command, a temporary log file is provided. This log can be consulted in case any problems occur during the process. Right before completing successfully, EasyBuild will clean up this temporary log file.</p> <p>A separate log file is created for each build and install procedure that is performed. After each successful installation, this application log file is copied to the install directory for future reference.</p> <p>By default, the application log file is copied to a subdirectory of the installation prefix named <code>easybuild</code>, and has a filename like <code>easybuild-HPL-2.0-20141103.104412.log</code> for example, which corresponds to the filename template <code>easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log</code>. This aspect can be tweaked via the <code>--logfile-format</code> configuration option.</p> <p>Example:</p> <pre><code>$ eb HPL-2.0-goolf-1.4.10.eb\n== temporary log file in case of crash /tmp/easybuild-rHHgBu/easybuild-XD0Ae_.log\n[...]\n== building and installing HPL/2.0-goolf-1.4.10...\n[...]\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/.local/easybuild/software/HPL/2.0-goolf-1.4.10/easybuild/easybuild-HPL-2.0-20141103.104412.log\n== Build succeeded for 1 out of 1\n== temporary log file /tmp/easybuild-rHHgBu/easybuild-XD0Ae_.log has been removed.\n== temporary directory /tmp/easybuild-rHHgBu has been removed.\n</code></pre>  <p>Note</p> <p>Enabling debug mode using the <code>--debug</code> or <code>-d</code> command line option ensures that all details of the executed build and installation procedure are included in the log file, but will also result is significantly bigger and more verbose logs.</p>   <p>Tip</p> <p>Always include a reference to a log file (even if partial) when reporting a potential bug in EasyBuild. A particularly useful way of doing so is by creating a Gist (https://gist.github.com/), and sharing the corresponding URL. This is much better than sending a lengthy log file via email, since it can be easily shared across different communication channels (mailing list, IRC, IM, etc.).</p>"},{"location":"log-files/#navigating-log-files","title":"Navigating log files","text":"<p>Extracting the information you're interested in from an EasyBuild log file may be a daunting task, especially for debug logs. The information and guidelines in this section should make navigating logs less scary.</p>"},{"location":"log-files/#log-message-format","title":"Log message format","text":"<p>Each log message as emitted by EasyBuild follows a well-defined format. Example:</p> <pre><code>== 2014-11-03 13:34:31,906 main.EB_HPL INFO This is EasyBuild 1.15.2 (framework: 1.15.2, easyblocks: 1.15.2) on host example.\n</code></pre> <p>Each log line consists of the following parts:</p> <ul> <li>a prefix label <code>==</code>, which is useful to discriminate between     EasyBuild log messages and the output of executed shell commands;</li> <li>date and time information (e.g., <code>2014-11-03 13:34:31,906</code>);</li> <li>the Python module/class/function that is responsible for the log     message (e.g., <code>main.EB_HPL</code>);</li> <li>the log level (e.g., <code>INFO</code>);</li> <li>and a string with the actual log message at the end</li> </ul>"},{"location":"log-files/#useful-handles-in-log-files","title":"Useful handles in log files","text":"<p>Next to looking for a particular search pattern (e.g., <code>[Ee]rror</code>), there are a couple of handles that can be used to jump around in log files.</p>"},{"location":"log-files/#step-markers","title":"Step markers","text":"<p>For each step performed in the build and installation process, corresponding log messages is emitted. For example:</p> <pre><code>== 2014-11-03 13:34:48,816 main.EB_HPL INFO configuring...\n== 2014-11-03 13:34:48,817 main.EB_HPL INFO Starting configure step\n[...]\n== 2014-11-03 13:34:48,823 main.EB_HPL INFO Running method configure_step part of step configure\n</code></pre> <p>This allows you to navigate a log file step by step, for example using the <code>_step</code> search pattern.</p>"},{"location":"log-files/#executed-shell-commands","title":"Executed shell commands","text":"<p>For each executed shell command, log messages are included with the full command line, the location where the command was executed and the command's output and exit code. For example:</p> <pre><code>== 2014-11-03 13:34:48,823 main.run DEBUG run_cmd: running cmd /bin/bash make_generic (in /tmp/user/easybuild_build/HPL/2.0/goolf-1.4.10/hpl-2.0/setup)\n== 2014-11-03 13:34:48,823 main.run DEBUG run_cmd: Command output will be logged to /tmp/easybuild-W85p4r/easybuild-run_cmd-XoJwMY.log\n== 2014-11-03 13:34:48,849 main.run INFO cmd \"/bin/bash make_generic\" exited with exitcode 0 and output:\n</code></pre> <p>If you are primarily interested in the different commands as they were executed by EasyBuild, you can use <code>INFO cmd</code> (or <code>run_cmd</code>, in debug logs) as a search pattern.</p>  <p>Note</p> <p>Next to the configure/build/install commands, EasyBuild also runs a couple of other commands to obtain system information, or to query the modules tool. Typically, a single invocation of <code>eb</code> involves executing a dozen or so different shell commands, minimally.</p>"},{"location":"maintainers/","title":"EasyBuild maintainers","text":""},{"location":"maintainers/#maintainers_criteria","title":"Criteria","text":"<p>EasyBuild maintainers should meet the following criteria:</p> <ul> <li>being sufficiently familiar with the contribution procedure (see Contributing)</li> <li>frequently contributing to the EasyBuild GitHub repositories</li> <li>being an active member of the EasyBuild community for a significant amount of time, i.e.:<ul> <li>following the EasyBuild mailing list and participating in discussions (see Getting help)</li> <li>actively participating in the EasyBuild IRC or Slack channel (see Getting help);</li> <li>(occasionally) joining in on the EasyBuild conference calls (see https://github.com/easybuilders/easybuild/wiki/Conference-calls)</li> </ul> </li> <li>having access to a working setup for submitting test reports (see Test reports for easyconfig contributions (<code>--upload-test-report</code>))</li> </ul>"},{"location":"maintainers/#maintainers_roles","title":"Roles","text":""},{"location":"maintainers/#maintainers_release_manager","title":"Release managers","text":"<p>The release managers are responsible for releasing new stable EasyBuild versions on a regular basis, with the help of the other EasyBuild maintainers.</p> <p>Sebastian, Miguel &amp; Kenneth have been working together to get EasyBuild releases out the door on a regular basis (about once every 6 weeks, see https://pypi.org/project/easybuild/#history).</p> <ul> <li>Sebastian Achilles (JSC)<ul> <li>GitHub: @SebastianAchilles - e-mail: <code>s.achilles (at) fz-juelich.de</code> - IRC/Slack: <code>Sebastian Achilles</code></li> </ul> </li> <li>Miguel Dias Costa (National University of Singapore)<ul> <li>GitHub: @migueldiascosta - e-mail: <code>migueldiascosta (at) nus.edu.sg</code> - IRC/Slack: <code>migueldiascosta</code></li> </ul> </li> <li>Kenneth Hoste (HPC-UGent)<ul> <li>GitHub: @boegel - e-mail: <code>kenneth.hoste (at) ugent.be</code> - IRC/Slack: <code>boegel</code></li> </ul> </li> </ul>"},{"location":"maintainers/#maintainers_easybuild_repo","title":"Maintainers","text":"<p>The EasyBuild maintainers all have admin access to the different EasyBuild GitHub repositories:</p> <ul> <li>https://github.com/easybuilders/easybuild (documentation (https://easybuild.readthedocs.io), EasyBuild website, <code>easybuild</code> metapackage)</li> <li>https://github.com/easybuilders/easybuild-framework (EasyBuild framework)</li> <li>https://github.com/easybuilders/easybuild-easyblocks (central repository for easyblocks)</li> <li>https://github.com/easybuilders/easybuild-easyconfigs (central repository for easyconfigs)</li> </ul> <p>(maintainers are listed in alphabetical order, by last name)</p> <ul> <li>Sebastian Achilles (JSC)<ul> <li>GitHub: @SebastianAchilles - e-mail: <code>s.achilles (at) fz-juelich.de</code> - IRC/Slack: <code>Sebastian Achilles</code></li> </ul> </li> <li>Damian Alvarez (JSC)<ul> <li>GitHub: @damianam - e-mail: <code>d.alvarez (at) fz-juelich.de</code> - IRC/Slack: <code>dalvarez</code></li> </ul> </li> <li>Simon Branford (BEAR - University of Birmingham)<ul> <li>GitHub: @branfosj - e-mail: <code>s.j.branford (at) bham.ac.uk</code> - IRC/Slack: <code>Simon</code></li> </ul> </li> <li>Miguel Dias Costa (National University of Singapore)<ul> <li>GitHub: @migueldiascosta - e-mail: <code>migueldiascosta (at) nus.edu.sg</code> - IRC/Slack: <code>migueldiascosta</code></li> </ul> </li> <li>Alex Domingo (Vrije Universiteit Brussel)<ul> <li>GitHub: @lexming - e-mail: <code>alex.domingo.toro (at) vub.be</code> - IRC/Slack: <code>lexming</code></li> </ul> </li> <li>Bob Dr\u00f6ge (University of Groningen)<ul> <li>GitHub: @bedroge - e-mail: <code>b.e.droge (at) rug.nl</code> - IRC/Slack: <code>Bob Dr\u00f6ge</code></li> </ul> </li> <li>Pablo Escobar (sciCORE, University of Basel)<ul> <li>GitHub: @pescobar - e-mail: <code>pablo.escobarlopez (at) unibas.ch</code> - IRC/Slack: <code>pescobar</code></li> </ul> </li> <li>Fotis Georgatos (SDSC)<ul> <li>GitHub: @fgeorgatos - e-mail: <code>kefalonia (at) gmail.com</code> - IRC/Slack: <code>fotis</code></li> </ul> </li> <li>Jasper Grimm (University or York)<ul> <li>GitHub: @jfgrimm - e-mail: <code>jasper.grimm (at) york.ac.uk</code> - IRC/Slack: <code>Jasper</code></li> </ul> </li> <li>Bal\u00e1zs Hajgat\u00f3 (HPC-UGent)<ul> <li>GitHub: @hajgato - e-mail: <code>balazs.hajgato (at) ugent.be</code> - IRC/Slack: <code>hajgato</code></li> </ul> </li> <li>Kenneth Hoste (HPC-UGent)<ul> <li>GitHub: @boegel - e-mail: <code>kenneth.hoste (at) ugent.be</code> - IRC/Slack: <code>boegel</code></li> </ul> </li> <li>Adam Huffman (Big Data Institute, University of Oxford)<ul> <li>GitHub: @verdurin - e-mail: <code>adam.huffman (at) gmail.com</code> - IRC/Slack: <code>verdurin</code></li> </ul> </li> <li>Samuel Moors (Vrije Universiteit Brussel)<ul> <li>GitHub: @smoors - e-mail: <code>samuel.moors (at) vub.be</code> - IRC/Slack: <code>smoors</code></li> </ul> </li> <li>Alan O'Cais (CECAM)<ul> <li>GitHub: @ocaisa - e-mail: <code>alan.ocais (at) cecam.org</code> - IRC/Slack: <code>ocaisa</code></li> </ul> </li> <li>Mikael \u00d6hman (Chalmers University of Technology)<ul> <li>GitHub: @Micket - e-mail: <code>micketeer (at) gmail.com</code> - IRC/Slack: <code>micketeer</code></li> </ul> </li> <li>Bart Oldeman (ComputeCanada)<ul> <li>GitHub: @bartoldeman - e-mail: <code>bart.oldeman (at) calculquebec.ca</code> - IRC/Slack: <code>bartoldeman</code></li> </ul> </li> <li>Ward Poelmans (Vrije Universiteit Brussel)<ul> <li>GitHub: @wpoely86 - e-mail: <code>wpoely86 (at) gmail.com</code> - IRC/Slack: <code>wpoely86</code></li> </ul> </li> <li>\u00c5ke Sandgren (Ume\u00e5 University, Sweden)<ul> <li>GitHub: @akesandgren - e-mail: <code>ake.sandgren (at) hpc2n.umu.se</code> - IRC/Slack: <code>ake_s</code></li> </ul> </li> <li>Caspar Van Leeuwen (SURFsara, Netherlands)<ul> <li>GitHub: @casparvl - e-mail: <code>caspar.vanleeuwen (at) surfsara.nl</code> - IRC/Slack: <code>Caspar Van Leeuwen</code></li> </ul> </li> <li>Davide Vanzo (Microsoft)<ul> <li>GitHub: @vanzod - e-mail: <code>davide.vanzo (at) microsoft.com</code> - IRC/Slack: <code>vanzod</code></li> </ul> </li> <li>Lars Viklund (Ume\u00e5 University, Sweden)<ul> <li>GitHub: @zao - e-mail: <code>lars.viklund (at) umu.se</code> - IRC/Slack: <code>zao</code></li> </ul> </li> </ul>"},{"location":"manipulating-dependencies/","title":"Manipulating dependencies","text":"<p>A couple of different ways are available to manipulate the list of dependencies that are specified for the software packages being installed.</p>"},{"location":"manipulating-dependencies/#filter_deps","title":"Filtering out dependencies using <code>--filter-deps</code>","text":"<p>To avoid that certain dependencies are being installed, a list of software names can be specified to <code>--filter-deps</code>. Any time a dependency with a name from this list is specified, it will be simply filtered out by EasyBuild, and thus disregarded when resolving dependencies, loading modules for the dependencies in the build environment, and including '<code>module load</code>' statements in the generated module files.</p> <p>This can be useful when particular tools and libraries are already provided by OS packages (or in some other way), and should not be reinstalled as modules by EasyBuild.</p> <p>For example:</p> <ul> <li> <p>overview of dependencies of HDF5:</p> <pre><code>$ eb HDF5-1.8.13-intel-2015a.eb -D\n...\n* [ ] $CFGS/i/intel/intel-2015a.eb (module: intel/2015a)\n* [ ] $CFGS/z/zlib/zlib-1.2.8-intel-2015a.eb (module: zlib/1.2.8-intel-2015a)\n* [ ] $CFGS/s/Szip/Szip-2.1-intel-2015a.eb (module: Szip/2.1-intel-2015a)\n* [ ] $CFGS/h/HDF5/HDF5-1.8.13-intel-2015a.eb (module: HDF5/1.8.13-intel-2015a)\n</code></pre> </li> <li> <p>overview of dependencies of HDF5, with zlib and Szip excluded:</p> <pre><code>$ eb HDF5-1.8.13-intel-2015a.eb --filter-deps=zlib,Szip -D\n...\n* [ ] $CFGS/i/intel/intel-2015a.eb (module: intel/2015a)\n* [ ] $CFGS/h/HDF5/HDF5-1.8.13-intel-2015a.eb (module: HDF5/1.8.13-intel-2015a)\n</code></pre> </li> </ul>"},{"location":"manipulating-dependencies/#filter_deps_by_version","title":"Filtering dependencies based on version","text":"<p>Since EasyBuild v3.8.0, filtering dependencies based on their version is also supported.</p> <p>For each entry in <code>--filter-deps</code>, the expected format is either:</p> <ul> <li><code>&lt;name&gt;</code>: a software name without any version specification, to indicate that this dependency   should always be filtered out (regardless of its version)</li> <li>examples: <code>X11</code>, <code>zlib</code></li> <li><code>&lt;name&gt;=&lt;version&gt;</code>: a software name and version, to indicate that a particular version of this dependency   should be filtered out</li> <li>examples: <code>zlib=1.2.8</code>, <code>ncurses=5.9</code></li> <li><code>&lt;name&gt;=&lt;lower_limit&gt;:&lt;upper_limit&gt;</code>: a software name and a version range, to indicate that any version   of this dependency that falls within the specified range should be filtered out</li> </ul> <p>When a version range is specified, a lower limit and/or upper limit can be specified (separated by <code>:</code>). In other words, the version range can be open ended. The <code>:</code> separator is strictly required.</p> <p>For both limits, you must indicate whether it is either:</p> <ul> <li>inclusive, by using <code>[</code> for the lower limit, and <code>]</code> for the upper limit</li> <li>exclusive, by using <code>]</code> for the lower limit, and <code>[</code> for the upper limit</li> </ul> <p>Examples:</p> <ul> <li>to filter out <code>zlib</code> version <code>1.2</code> up until <code>1.2.99</code> (incl.), use: <code>zlib=[1.2:1.2.99]</code></li> <li>to filter out <code>ncurses</code> version 5.0 or newer, use: <code>ncurses=[5.0:</code></li> <li>to filter out any version of <code>CMake</code> that is older than <code>4.0</code>, use: <code>CMake=:4.0[</code></li> </ul>"},{"location":"manipulating-dependencies/#hide_deps","title":"Installing dependencies as hidden modules using <code>--hide-deps</code>","text":"<p>Selected software packages can be marked to be installed as hidden modules (i.e., modules that are not visible via '<code>module avail</code>', but can be loaded) whenever they are included as a dependency, via the <code>--hide-deps</code> configuration option.</p> <p>For example (note the preceding '<code>.</code>' in the last part of the module names for zlib and Szip):</p> <pre><code>$ eb HDF5-1.8.13-intel-2015a.eb --hide-deps=zlib,Szip -D\n...\n* [ ] $CFGS/i/intel/intel-2015a.eb (module: intel/2015a)\n* [ ] $CFGS/z/zlib/zlib-1.2.8-intel-2015a.eb (module: zlib/.1.2.8-intel-2015a)\n* [ ] $CFGS/s/Szip/Szip-2.1-intel-2015a.eb (module: Szip/.2.1-intel-2015a)\n* [ ] $CFGS/h/HDF5/HDF5-1.8.13-intel-2015a.eb (module: HDF5/1.8.13-intel-2015a)\n</code></pre>  <p>Note</p> <p>Using Lmod (version &gt;= 5.7.5), hidden modules can be made visible in the output of '<code>module avail</code>' using the <code>--show-hidden</code> option.</p> <p>For example:</p> <pre><code>$ module avail bzip2\n\nUse \"module spider\" to find all possible modules.\nUse \"module keyword key1 key2 ...\" to search for all possible modules matching any of the \"keys\".\n\n$ module --show-hidden avail bzip2\n----- /home/example/.local/easybuild/modules/all -----\nbzip2/.1.0.6\n\nUse \"module spider\" to find all possible modules.\nUse \"module keyword key1 key2 ...\" to search for all possible modules matching any of the \"keys\".\n</code></pre>"},{"location":"manipulating-dependencies/#minimal_toolchains","title":"Using minimal toolchains for dependencies","text":"<p>By default, EasyBuild will try to resolve dependencies using the same toolchain as the one that is used for the software being installed, unless a specific toolchain is specified for the dependency itself (see Dependencies).</p> <p>Using the <code>--minimal-toolchains</code> configuration option, you can instruct EasyBuild to consider subtoolchains for dependencies in the reverse order (from the bottom of the toolchain hierarchy to the top). This can be useful to refrain from having to frequently hardcode specific toolchains in order to avoid having the same dependency version installed with multiple toolchains that are compatible with each other. Although hardcoding the toolchain for dependencies will work fine, it severely limits the power of other EasyBuild features, like <code>--try-toolchain</code> for example.</p> <p>When instructed to use minimal toolchains, EasyBuild will check whether an easyconfig file is available (in the robot search path, see Searching for easyconfigs: the robot search path) for that dependency using the different subtoolchains of the toolchain specified for the 'parent' software. Subtoolchains are considered 'bottom-up', i.e. starting with the most minimal subtoolchain (typically a compiler-only toolchain), and then climbing up towards the toolchain that is specified for the software being installed.</p> <p>Note that if a specific toolchain is specified for a particular dependency, EasyBuild will stick to using it, even when instructed to use minimal toolchains. Also note that as of v3.0, if no easyconfig exists to resolve a dependency using the default toolchain EasyBuild will search for the dependency using a compatible subtoolchain (the difference being that the search order is from the top of the toolchain hierarchy to the bottom).</p>"},{"location":"manipulating-dependencies/#minimal_toolchains_system","title":"Considering <code>system</code> as minimal toolchain","text":"<p>The System toolchain is only considered as the most minimal subtoolchain if the <code>--add-system-to-minimal-toolchains</code> configuration option is enabled. By default, this configuration option is disabled.</p>"},{"location":"manipulating-dependencies/#minimal_toolchains_existing_modules","title":"Taking existing modules into account","text":"<p>You can instruct EasyBuild to take existing modules into account when determining which subtoolchain should be used for each of the dependencies, using the <code>--use-existing-modules</code> configuration option.</p> <p>By default existing modules are ignored, meaning that the EasyBuild dependency resolution mechanism will pick a minimal toolchain for each dependency solely based on the available easyconfig files (if the <code>--minimal-toolchains</code> configuration option is enabled, that is).</p> <p>With <code>--use-existing-modules</code> enabled, EasyBuild will first check whether modules exist for the dependencies that were built with the toolchain or any of the subtoolchains (searching top-down). If so, the toolchain of the first encountered existing module will determine the toolchain being selected. If not, the toolchain to use will be determined based on the available easyconfig files.</p>"},{"location":"manipulating-dependencies/#minimal_toolchains_example","title":"Example","text":"<p>Consider the following (partial) easyconfig file for Python v2.7.9 with the <code>foss/2015b</code> toolchain:</p> <pre><code>name = 'Python'\nversion = '2.7.9'\n\ntoolchain = {'name': 'foss', 'version': '2015b'}\n\ndependencies = [\n    ('zlib', '1.2.8'),\n]\n</code></pre> <p>When the <code>--minimal-toolchains</code> configuration option is enabled, EasyBuild will also consider the subtoolchains <code>GCC/4.9.3</code> and <code>gompi/2015b</code> of the <code>foss/2015b</code> toolchain (in that order) as potential minimal toolchains when determining the toolchain to use for dependencies.</p> <p>So, for the zlib v1.2.8 dependency included in the example above, the following scenarios are possible:</p> <ul> <li>without the use of <code>--minimal-toolchains</code>, the default behaviour of EasyBuild is to first consider the   <code>foss/2015b</code> toolchain for zlib v1.2.8, if no such easyconfig file is found, it will continue searching using the   <code>gompi/2015b</code> toolchain, and finally the <code>GCC/4.9.3</code> toolchain</li> <li>if (only) <code>--minimal-toolchains</code> is enabled, EasyBuild will search for an easyconfig file for   zlib v1.2.8 using the <code>GCC/4.9.3</code> toolchain; if no such easyconfig file is found, it will continue searching   using the <code>gompi/2015b</code> toolchain, and finally the <code>foss/2015b</code> toolchain</li> <li>if <code>--add-system-to-minimal-toolchains</code> is also enabled, EasyBuild will try locating an easyconfig file for   zlib v1.2.8 that uses the <code>system</code> toolchain prior to considering the <code>GCC/4.9.3</code> toolchain</li> <li>additionally, with <code>--use-existing-modules</code> enabled, EasyBuild will first check whether a <code>zlib</code> module for   version 1.2.8 built with the (sub)toolchains being considered exists; if not, it will search for an easyconfig file   for zlib as outlined above</li> </ul>"},{"location":"packaging-support/","title":"Packaging support","text":"<p>Note</p> <p>Packaging support was added as an experimental feature in EasyBuild v2.2.0 (cfr. Experimental features). Since EasyBuild v2.5.0, it is considered stable.</p>"},{"location":"packaging-support/#packaging_prereq","title":"Prerequisites","text":"<p>EasyBuild leverages FPM to create binary packages (RPMs, Debian files, etc.).</p> <p>Hence, FPM must be available in some way or another. One way is via EasyBuild, for example by installing a module for FPM using one of the available easyconfig files.</p> <p>EasyBuild will also take care of installing Ruby for you (which is required for FPM itself):</p> <pre><code>$ export EASYBUILD_PREFIX=/home/example\n\n$ eb FPM-1.3.3-Ruby-2.1.6.eb --robot\n[...]\n== building and installing Ruby/2.1.6...\n[...]\n== COMPLETED: Installation ended successfully\n[...]\n== building and installing FPM/1.3.3-Ruby-2.1.6...\n[...]\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/software/FPM/1.3.3-Ruby-2.1.6/easybuild/easybuild-FPM-1.3.3-20150524.181859.log\n== Build succeeded for 2 out of 2\n\n$ module load FPM/1.3.3-Ruby-2.1.6\n\n$ fpm --version\n1.3.3\n</code></pre>"},{"location":"packaging-support/#packaging_config","title":"Configuration options","text":"<p>Several configuration options related to packaging support are available.</p> <ul> <li><code>--package</code>:<ul> <li>enables packaging; other options will be void unless this option     is enabled</li> </ul> </li> <li><code>--package-tool=&lt;tool&gt;</code>:<ul> <li>specifies which tool you wish to package with; for now, only     <code>fpm</code> is supported (and is set as default)</li> </ul> </li> <li><code>--package-type=&lt;type&gt;</code>:<ul> <li>specifies which type of package you wish to build, which is     passed through to <code>fpm</code> (as target type); examples include:     <code>rpm</code> (default), <code>deb</code>, ... (see     https://github.com/jordansissel/fpm/wiki#overview)</li> </ul> </li> <li><code>--package-naming-scheme=&lt;PNS&gt;</code>:<ul> <li>specifies which package naming scheme to use; default:     <code>EasyBuildPNS</code></li> </ul> </li> <li><code>--packagepath</code>:<ul> <li>specifies destination path of packages being built</li> </ul> </li> <li><code>--package-release</code>:<ul> <li>specifies the package release (default: <code>1</code>); typically, this     should be an integer value</li> </ul> </li> </ul>  <p>Note</p> <p>Changing the package naming scheme should be done with caution. For example, RPM will only allow one package of a particular name to be installed, so if you wish multiple versions of a package to be installed at the same time you need to ensure variables like the software version are included in the package name.</p>"},{"location":"packaging-support/#packaging_usage","title":"Usage","text":"<p>To make EasyBuild generate packages, just use <code>--package</code>. By default, this will make EasyBuild leverage FPM to create RPMs:</p> <pre><code>$ export EASYBUILD_PREFIX=/home/example\n$ eb --package Perl-5.20.1-GCC-4.9.2-bare.eb --robot\n[...]\n== building and installing Perl/5.20.1-GCC-4.9.2-bare...\n== fetching files...\n== creating build dir, resetting environment...\n== unpacking...\n== patching...\n== preparing...\n== configuring...\n== building...\n== testing...\n== installing...\n== taking care of extensions...\n== postprocessing...\n== sanity checking...\n== cleaning up...\n== creating module...\n== packaging...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/software/Perl/5.20.1-GCC-4.9.2-bare/easybuild/easybuild-Perl-5.20.1-20150527.023522.log\n== Build succeeded for 1 out of 1\n</code></pre> <p>Packages will be located in the directory indicated by the <code>--packagepath</code> configuration option; by default, this corresponds to <code>$prefix/packages</code>.</p> <p>By default, the package will have the following properties:</p> <pre><code>$ rpm -qip --requires --provides /home/example/packages/Perl-5.20.1-GCC-4.9.2-bare.eb2.2.0-1.x86_64.rpm\nName        : Perl-5.20.1-GCC-4.9.2-bare\nVersion     : eb2.2.0\nRelease     : 1\nArchitecture: x86_64\nInstall Date: (not installed)\nGroup       : default\nSize        : 64539427\nLicense     : unknown\nSignature   : (none)\nSource RPM  : Perl-5.20.1-GCC-4.9.2-bare.eb2.2.0-1.x86_64.src.rpm\nBuild Date  : Tue 07 Jul 2015 11:27:54 PM EDT\nBuild Host  : 59e46bbf1cd0\nRelocations : /\nPackager    : &lt;easybuild@59e46bbf1cd0&gt;\nVendor      : easybuild@59e46bbf1cd0\nURL         : http://example.com/no-uri-given\nSummary     : no description given\nDescription :\nno description given\nGCC-4.9.2-dummy-dummy\nrpmlib(PartialHardlinkSets) &lt;= 4.0.4-1\nrpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1\nrpmlib(CompressedFileNames) &lt;= 3.0.4-1\nPerl-5.20.1-GCC-4.9.2-bare\nPerl-5.20.1-GCC-4.9.2-bare = eb2.2.0-1\nPerl-5.20.1-GCC-4.9.2-bare(x86-64) = eb2.2.0-1\n</code></pre>"},{"location":"packaging-support/#packaging_skip","title":"Packaging existing installations","text":"<p>To create packages for existing software installations (performed using EasyBuild), combine <code>--package</code> with <code>--skip --rebuild</code>:</p> <pre><code>$ eb --package Perl-5.20.1-GCC-4.9.2-bare.eb --skip --rebuild\n[...]\n== building and installing Perl/5.20.1-GCC-4.9.2-bare...\n== fetching files...\n== creating build dir, resetting environment...\n== unpacking [skipped]\n== patching [skipped]\n== preparing...\n== configuring [skipped]\n== building [skipped]\n== testing [skipped]\n== installing [skipped]\n== taking care of extensions...\n== postprocessing [skipped]\n== sanity checking...\n== cleaning up...\n== creating module...\n== packaging...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/software/Perl/5.20.1-GCC-4.9.2-bare/easybuild/easybuild-Perl-5.20.1-20150527.041734.log\n== Build succeeded for 1 out of 1\n</code></pre>"},{"location":"partial-installations/","title":"Partial installations","text":"<p>Several ways of performing partial installations are supported. These may be useful when debugging a particular issue with the installation procedure being performed by EasyBuild, updating existing software installations or module files, or after changing the EasyBuild configuration (e.g., switching to module files in Lua syntax or a different module naming scheme).</p>"},{"location":"partial-installations/#partial_installation_stop","title":"Stopping the installation procedure after a step using <code>-s</code>/<code>--stop</code>","text":"<p>To stop the installation procedure after a specific step in the installation procedure, the <code>-s</code>/<code>--stop</code> command line option can be used; the name of the step must be supplied as an argument.</p> <p>The following step names are recognized (listed in execution order): <code>fetch</code>, <code>ready</code>, <code>source</code>, <code>patch</code>, <code>prepare</code>, <code>configure</code>, <code>build</code>, <code>test</code>, <code>install</code>, <code>extensions</code>, <code>package</code>, <code>postproc</code>, <code>sanitycheck</code>, <code>cleanup</code>, <code>module</code>, <code>testcases</code>.</p> <p>Example usage:</p> <pre><code>$ eb GCC-4.9.2.eb --stop configure\n== temporary log file in case of crash /tmp/eb-X2Z0b7/easybuild-mGxmNb.log\n== processing EasyBuild easyconfig /home/example/GCC-4.9.2.eb\n== building and installing GCC/4.9.2...\n== fetching files...\n== creating build dir, resetting environment...\n== unpacking...\n== patching...\n== preparing...\n== configuring...\n== COMPLETED: Installation STOPPED successfully\n== Results of the build can be found in the log file /dev/shm/example/GCC/4.9.2/dummy-dummy/easybuild/easybuild-GCC-4.9.2-20150430.091644.log\n== Build succeeded for 1 out of 1\n== temporary log file(s) /tmp/eb-X2Z0b7/easybuild-mGxmNb.log* have been removed.\n== temporary directory /tmp/eb-X2Z0b7 has been removed.\n</code></pre>"},{"location":"partial-installations/#partial_installation_fetch","title":"Fetching sources with <code>--fetch</code>","text":"<p>It may be useful to be able to batch-download sources on a machine where no modules tool is installed. The <code>--fetch</code> option, which is equivalent with <code>--stop fetch --ignore-osdeps</code>, addresses this requirement.</p> <p>Example usage:</p> <pre><code>$ eb GCCcore-6.2.0.eb --fetch\n== temporary log file in case of crash /tmp/eb-1ZZX2b/easybuild-NSmm5P.log\n== processing EasyBuild easyconfig /home/example/GCCcore-6.2.0.eb\n== building and installing GCCcore/6.2.0...\n== fetching files...\n== COMPLETED: Installation STOPPED successfully\n== Results of the build can be found in the log file(s) /dev/shm/example/GCC/4.9.2/dummy-dummy/easybuild/easybuild-GCCcore-6.2.0-20180330.170523.log\n== Build succeeded for 1 out of 1\n== Temporary log file(s) /tmp/eb-1ZZX2b/easybuild-NSmm5P.log* have been removed.\n== Temporary directory /tmp/eb-1ZZX2b has been removed.\n</code></pre>  <p>Note</p> <p><code>--fetch</code> can be used in conjunction with the <code>--robot</code> and <code>--robot-path</code> options to download sources of the whole dependency tree of an easyconfig (see Enabling dependency resolution, <code>--robot</code> / <code>-r</code> and <code>--robot-paths</code>).</p>   <p>Note</p> <p>Sources will be downloaded in the default location (see Source path (<code>--sourcepath</code>)), unless EasyBuild is configured via the <code>--sourcepath</code> option.</p>"},{"location":"partial-installations/#partial_installation_skip","title":"Installing additional extensions using <code>-k</code>/<code>-skip</code>","text":"<p>For software applications that may include Extensions, it is often required to install one or more additional extensions without having to reinstall the software package (and all extensions) from scratch. For this purpose, the <code>-k</code>/<code>--skip</code> command line option is available.</p> <p>To actually skip an existing software installation and all installed extensions, a corresponding module must be available already; if not, the installation procedure will be performed from scratch. To trigger the installation of missing extensions, <code>--rebuild</code> ( or <code>--force</code>, see Forced reinstallation) must be used as well; without it, the installation procedure will be skipped as a whole (since the module is already available).</p> <p>When <code>--skip</code> is combined with <code>--rebuild</code>, EasyBuild will:</p> <p>i) ensure that all (extension) sources are available (and try to fetch them if needed); ii) prepare the build environment; iii) check which extensions have not been installed yet; iv) install the missing extensions; v) run the sanity check (which includes checking that all extensions are available) vi) regenerate the module file (since it contains a list of installed extensions)</p> <p>Example usage:</p> <pre><code>$ eb Python-2.7.9-intel-2015a.eb --skip\n...\n== Python/2.7.9-intel-2015a is already installed (module found), skipping\n== No easyconfigs left to be built.\n== Build succeeded for 0 out of 0\n</code></pre> <pre><code>$ eb Python-2.7.9-intel-2015a.eb --skip --rebuild\n...\n== building and installing Python/2.7.9-intel-2015a...\n...\n== configuring [skipped]\n== building [skipped]\n== testing [skipped]\n== installing [skipped]\n== taking care of extensions...\n...\n== sanity checking...\n== cleaning up...\n== creating module...\n== COMPLETED: Installation ended successfully\n</code></pre>  <p>Note</p> <p>Upgrading of extensions to a newer version does not work (yet) using <code>--skip</code>, because the way in which extensions are checked for availability, i.e. the extensions filter, is (usually) version-agnogstic.</p>   <p>Note</p> <p>The '<code>skipsteps</code>' easyconfig parameter has a different purpose, i.e. to specify which installation steps should always be skipped when the installation of a particular software package is performed, no matter whether the software or corresponding module is already available or not.</p>   <p>Note</p> <p>When <code>--skip</code> is used, a backup is created for all existing module files that are regenerated. To disable backing up of module files, use <code>--disable-backup-modules</code> (see also Backing up of existing modules (<code>--backup-modules</code>)).</p>"},{"location":"partial-installations/#module_only","title":"Only (re)generating (additional) module files using --module-only","text":"<p>Since EasyBuild v2.1, it is possible to only (re)generate the module file that matches the specifications in the easyconfig file, using <code>--module-only</code>. Depending on the use case, additional options should be supplied.</p> <p>Usually <code>--rebuild</code> is also required, either to ignore the existing module file (if the module is available under the same name as the one being (re)generated), or to skip the sanity check that verifies the software installation (if no software installation is available).</p> <p>Combining <code>--module-only</code> with <code>--installpath-modules</code> is also a common use case, to generate the module file in a (test) location other than the software installation prefix (see Software and modules install path (--installpath, --installpath-software, --installpath-modules)).</p>  <p>Note</p> <p>Although <code>--module-only</code> was already supported in EasyBuild v2.1.0, we strongly recommend to use EasyBuild v2.1.1 or a more recent version, because of some critical bug fixes with respect to <code>--module-only</code>.</p>  <p>Use cases:</p> <ul> <li>Only (re)generating (existing) module file</li> <li>Generating additional module files</li> </ul>  <p>Note</p> <p>When <code>--module-only</code> is used, a backup is created for all existing module files that are regenerated. To disable backing up of module files, use <code>--disable-backup-modules</code> (see also Backing up of existing modules (<code>--backup-modules</code>)).</p>"},{"location":"partial-installations/#module_only_only_regenerate","title":"Only (re)generating (existing) module file","text":"<p>To only generate a module file (i.e., skip actually building and installing the software), or to regenerate an existing module file, <code>--module-only</code> can be used.</p> <p>In the former case, enabling <code>--rebuild</code> is required because the sanity check step that verifies whether the installation produced the expected files and/or directories is not skipped unless forced. In the latter case, <code>--rebuild</code> must be used to make EasyBuild ignore that the module is already available according to the modules tool.</p> <p>Example usage:</p> <ul> <li> <p>only generate module file:</p> <pre><code>$ module avail GCC\n---------------------------- /home/example/.local/modules/all ----------------------------\nGCC/4.8.2\n\n$ eb GCC-5.1.0.eb --module-only --rebuild\n...\n== building and installing GCC/5.1.0...\n== fetching files [skipped]\n...\n== configuring [skipped]\n== building [skipped]\n== testing [skipped]\n== installing [skipped]\n...\n== sanity checking [skipped]\n== cleaning up [skipped]\n== creating module...\n== COMPLETED: Installation ended successfully\n...\n\n$ module avail GCC\n\n---------------------------- /home/example/.local/modules/all ----------------------------\nGCC/4.8.2     GCC/5.1.0\n</code></pre> </li> <li> <p>regenerate existing module file:</p> <pre><code>$ module avail GCC/4.8.2\n\n---------------------------- /home/example/.local/modules/all ----------------------------\nGCC/4.8.2\n\n$ ls -l /home/example/.local/modules/all/GCC/4.8.2\n-rw-rw-r-- 1 example example 1002 Jan 11 17:19 /home/example/.local/modules/all/GCC/4.8.2\n\n$ eb GCC-4.8.2.eb --module-only --rebuild\n...\n== building and installing GCC/4.8.2...\n...\n== sanity checking [skipped]\n== creating module...\n== COMPLETED: Installation ended successfully\n...\n\n$ ls -l /home/example/.local/modules/all/GCC/4.8.2\n-rw-rw-r-- 1 example example 1064 Apr 30 10:54 /home/example/.local/modules/all/GCC/4.8.2\n</code></pre> </li> </ul>"},{"location":"partial-installations/#module_only_additional","title":"Generating additional module files","text":"<p>Generating an additional module file, next to the one(s) already available, is also supported. This can achieved by combining <code>--module-only</code> with additional configuration options that apply to the module generation.</p> <p>Examples:</p> <ul> <li> <p>to generate a module file in Lua syntax, next to an already existing module file in Tcl syntax,   <code>--module-only --module-syntax=Lua</code> can be used:</p> <pre><code>$ module avail GCC/4.8.2\n\n---------------------------- /home/example/.local/modules/all ----------------------------\nGCC/4.8.2\n\n$ ls -l /home/example/.local/modules/all/GCC/4.8.2*\n-rw-rw-r-- 1 example example 1064 Apr 30 10:54 /home/example/.local/modules/all/GCC/4.8.2\n\n$ eb GCC-4.8.2.eb --modules-tool=Lmod --module-only --module-syntax=Lua --rebuild\n...\n== building and installing GCC/4.8.2...\n...\n== sanity checking [skipped]\n== creating module...\n== COMPLETED: Installation ended successfully\n...\n\n$ ls -l /home/example/.local/modules/all/GCC/4.8.2*\n-rw-rw-r-- 1 example example 1064 Apr 30 10:54 /home/example/.local/modules/all/GCC/4.8.2\n-rw-rw-r-- 1 example example 1249 Apr 30 11:56 /home/example/.local/modules/all/GCC/4.8.2.lua\n</code></pre>  <p>Note</p> <p>Since only Lmod can consume module files in Lua syntax, it must be used as a modules tool; see also Module files syntax (<code>--module-syntax</code>).</p> <p>Only changing the syntax of the module file does not affect the module name, so Lmod will report the module as being available. Hence, <code>--rebuild</code> must be used here as well.</p>  </li> <li> <p>to generate a module file using a different naming scheme, <code>--module-only</code> can be combined with   <code>--module-naming-scheme</code>:</p> <pre><code>$ eb --installpath-modules=$HOME/test/modules --module-only --module-naming-scheme=HierarchicalMNS --rebuild\n...\n== building and installing Core/GCC/4.8.2...\n...\n== sanity checking [skipped]\n== creating module...\n== COMPLETED: Installation ended successfully\n\n$ module unuse $HOME/.local/modules/all\n$ module use $HOME/test/modules/all\n$ module avail\n\n---------------------------- /home/example/test/modules/all ----------------------------\nCore/GCC/4.8.2\n</code></pre>  <p>Note</p> <p>Modules that are generated used different module naming schemes should never be mixed, hence the use of <code>--installpath-modules</code>, see also Direct options: <code>--installpath-software</code> and <code>--installpath-modules</code>.</p>   <p>Note</p> <p>The modules files generated using the specified module naming scheme will most likely not be tied to an existing software installation in this case (unless the software installation was already there somehow), since the name of the subdirectory of the software installation prefix is also governed by the active module naming scheme. This is also why <code>--rebuild</code> must be used in the example above (to skip the sanity check that verifies the software installation).</p> <p>Thus, this is only useful to assess how the module tree would look like under a particular module naming scheme; the modules themselves are useless since they point to empty installation directories.</p> <p>To tie a module file generated using to an existing software installation that was performed under a different module naming scheme, a simple module naming scheme can be implemented that mixes two modules naming schemes, by providing the name of the software installation subdirectory using one scheme, and the module names (and other metadata for module files) with the other.</p> <p>An example of such a module naming scheme is <code>MigrateFromEBToHMNS</code>, which allows to generate module files using the hierarchical module naming scheme implemented by <code>HierarchicalMNS</code> for the software installed in subdirectories following the default EasyBuild module naming scheme <code>EasyBuildMNS</code>. The <code>MigrateFromEBToHMNS</code> module naming scheme is available since EasyBuild v2.2.0.</p>  </li> </ul>"},{"location":"progress-bars/","title":"Progress bars","text":"<p>(supported since: EasyBuild v4.5.0)</p>"},{"location":"progress-bars/#general-information-on-progress-bars","title":"General information on progress bars","text":"<p>EasyBuild will show progress bars for various aspects of the installation progress by default, if the <code>Rich</code> Python package is available.</p> <p>The progress bars shown by EasyBuild are dynamic: they are only visible when they are relevant.</p> <p>Note that for most progress bars each step is treated as being equal even though the time taken for the various steps varies. There are many factors that impact how long an individual installation step, installing an easyconfig, or installing an extension may and this makes it very difficult to get a good estimate on how much time will be needed. The download progress bar is an exception here (as long as the size of the file to download could be determined first).</p>"},{"location":"progress-bars/#types-of-progress-bars","title":"Types of progress bars","text":"<p>EasyBuild will show different progress bars to show the progress for different aspects of the installation process.</p>"},{"location":"progress-bars/#overall-progress-bar-status-bar","title":"Overall progress bar (status bar)","text":"<p>The progress bar at the bottom, also known as the status bar, shows the overall progress in installing software for the currently active EasyBuild session.</p> <p>From left to right, the following information is included:</p> <ul> <li>The total amount of time that this EasyBuild session has spent on installing software.</li> <li>The number of easyconfigs that have been processed already, the total number of easyconfigs   being processed, and a count of easyconfigs that failed to installed so far (if there are any).</li> <li>The list of already processed easyconfigs, along with the result:<ul> <li><code>OK</code> (in green) for a successful installation;</li> <li><code>FAILED</code> (in red) for a failed installation;</li> </ul> </li> </ul> <p>Processed easyconfigs are shown in reversed order: most recently processed easyconfigs are listed first.</p> <p>If EasyBuild is configured to continue processing easyconfigs when an installation failed (for example when using <code>--upload-test-report</code>), failing easyconfigs are listed before easyconfigs that were installed successfully, to highlight failing installations.</p> <p>The status bar is not shown if only a single easyconfig file is being installed, and is hidden automatically as soon as the EasyBuild session finishes.</p>"},{"location":"progress-bars/#easyconfig-progress-bar","title":"Easyconfig progress bar","text":"<p>A dedicated progress bar is shown for every easyconfig file that is installed, right above the status bar (if present), which shows:</p> <ul> <li>The name of the module that is being installed.</li> <li>The currently active installation step.</li> <li>The number of completed installations steps, as well as the total number of installation steps for this easyconfig.</li> <li>A visual progress bar that represents the progress in installing this easyconfig.</li> <li>The total amount of time spent on installing this easyconfig so far.</li> </ul> <p>The progress bar for a specific easyconfig file will be hidden as soon as the installation finishes (regardless of whether it was successful or not).</p>"},{"location":"progress-bars/#download-progress-bars","title":"Download progress bars","text":"<p>When EasyBuild is downloading one or more files, a dedicated progress bar will be visible:</p> <ul> <li>For large downloads: the name of the file being downloaded,   a visual progress bar, the amount of data downloaded so far,   the amount of data to download in total, the average download speed,   and the estimated time remaining to complete the download (based on average download speed).</li> <li>If there are multiple files being downloaded: an overview of how   many files have been downloaded already, and how many need to be downloaded in total.</li> </ul> <p>The download progress bars will be hidden as soon as the downloading has been completed (or has failed).</p>"},{"location":"progress-bars/#extensions-progress-bar","title":"Extensions progress bar","text":"<p>When extensions are being installed for a particular easyconfig, a dedicated progress bar will pop up for the <code>extensions</code> step, which shows:</p> <ul> <li>The name of the extension that is currently being installed.</li> <li>The number of extensions installed so far, and the total number of extensions to install.</li> <li>A visual progress bar that represents the progress for installing extensions so far.</li> <li>The total amount of time spent installing extensions for this easyconfig.</li> </ul>"},{"location":"progress-bars/#relevant-configuration-options","title":"Relevant configuration options","text":""},{"location":"progress-bars/#output-style","title":"<code>output-style</code>","text":"<p>The <code>output-style</code> configuration option determines the output style of the <code>eb</code> command.</p> <p>Setting <code>output-style</code> to '<code>rich</code>' results in rich output being produced, which includes progress bars. This also makes <code>Rich</code> a required dependency for EasyBuild.</p> <p>Using '<code>basic</code>' as value for <code>output-style</code> results in basic output (no progress bars).</p> <p>By default <code>output-style</code> is set to '<code>auto</code>', which implies using the <code>Rich</code> Python package to produce rich output (incl. progress bars) if is available, and falling back to using the basic output style if <code>Rich</code> is not available.</p>"},{"location":"progress-bars/#show-progress-bar","title":"<code>show-progress-bar</code>","text":"<p>The <code>show-progress-bar</code> configuration option (enabled by default) controls whether or not progress bars are shown, regardless of the active output style and whether <code>Rich</code> is available.</p>"},{"location":"python-2-3-compatibility/","title":"Compatibility with Python 2 and Python 3","text":"<p>Starting with EasyBuild v4.0, the EasyBuild framework and easyblocks are compatible with both Python versions 2 and 3. More specifically, the following Python versions are currently supported:</p> <ul> <li>Python 2.6.x (support was removed in EasyBuild v4.4.0)</li> <li>Python 2.7.x</li> <li>Python 3.5.x</li> <li>Python 3.6.x</li> <li>Python 3.7.x</li> <li>Python 3.8.x (requires EasyBuild v4.1.0)</li> </ul>"},{"location":"python-2-3-compatibility/#py2_py3_compatibility_EB_VERBOSE","title":"Determining which Python version EasyBuild is using via <code>$EB_VERBOSE</code>","text":"<p>To determine which Python version is being used to run EasyBuild, you can define the <code>$EB_VERBOSE</code> environment variable.</p> <p>For example:</p> <pre><code>$ export EB_VERBOSE=1\n$ eb --version\n&gt;&gt; Considering 'python'...\n&gt;&gt; No 'python' found in $PATH, skipping...\n&gt;&gt; Considering 'python3'...\n&gt;&gt; 'python3' version: 3.6.9, which matches Python 3 version requirement (&gt;= 3.5)\n&gt;&gt; Selected Python command: python3 (/usr/local/bin/python3)\n&gt;&gt; python3 -m easybuild.main --version\nThis is EasyBuild 4.0.0 (framework: 4.0.0, easyblocks: 4.0.0) on host example.\n</code></pre>"},{"location":"python-2-3-compatibility/#py2_py3_compatibility_EB_PYTHON","title":"Controlling which <code>python</code> command EasyBuild will use via <code>$EB_PYTHON</code>","text":"<p>The <code>eb</code> command will consider different <code>python</code> commands, and check the Python version corresponding with the command before selecting one. The commands considered are (in order):</p> <ul> <li><code>python</code></li> <li><code>python3</code></li> <li><code>python2</code></li> </ul> <p>Before considering these commands, <code>eb</code> will first consider the command name specified via the <code>$EB_PYTHON</code> environment variable (if defined), so you can always control which Python version is being used if desired.</p> <p>For example:</p> <pre><code>$ export EB_PYTHON=python3.7\n$ export EB_VERBOSE=1\n$ eb --version\n&gt;&gt; Considering 'python3.7'...\n&gt;&gt; 'python3.7' version: 3.7.2, which matches Python 3 version requirement (&gt;= 3.5)\n&gt;&gt; Selected Python command: python3.7 (/usr/local/bin/python3.7)\n&gt;&gt; python3.7 -m easybuild.main --version\nThis is EasyBuild 4.0.0 (framework: 4.0.0, easyblocks: 4.0.0) on host example.\n</code></pre>"},{"location":"python-2-3-compatibility/#the-easybuildtoolspy2vs3-package","title":"The <code>easybuild.tools.py2vs3</code> package","text":"<p>To facilitate this, the <code>easybuild.tools.py2vs3</code> package was introduced in EasyBuild v4.0. When importing a function from this package, you will automatically get a version of the function that is compatible with the Python version being used to run EasyBuild.</p> <p>Through this approach we can hide subtle differences between Python 2 and 3, while avoiding code duplication and Python version checks throughout the codebase, as well as avoid requiring packages like <code>six</code> or <code>future</code> (which facilitate maintaining compatibility with Python 2 and 3, but are also a bit of a burden).</p> <p>The <code>easybuild.tools.py2vs3</code> package provides two major classes of items (listed below in alphabetical order):</p> <ul> <li>functions from the Python standard library which should be imported     from different locations in Python 2 and 3</li> <li>wrappers for functionality in the Python standard library which     behaves differently in Python 2 and 3</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_ascii_letters","title":"<code>ascii_letters</code>","text":"<ul> <li>Python 2: corresponds to <code>string.letters</code></li> <li>Python 3: corresponds to <code>string.ascii_letters</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_ascii_lowercase","title":"<code>ascii_lowercase</code>","text":"<ul> <li>Python 2: corresponds to <code>string.lowercase</code></li> <li>Python 3: corresponds to <code>string.ascii_lowercase</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_build_opener","title":"<code>build_opener</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.build_opener</code> function</li> <li>Python 3: corresponds to <code>urllib.request.build_opener</code> function</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_configparser","title":"<code>configparser</code>","text":"<ul> <li>Python 2: corresponds to <code>ConfigParser.configparser</code> module</li> <li>Python 3: corresponds to <code>configparser</code> module</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_create_base_metaclass","title":"<code>create_base_metaclass</code>","text":"<p>Function to create a metaclass that can be used as a base class, implemented in a way that is compatible with both Python 2 and 3.</p>"},{"location":"python-2-3-compatibility/#py2vs3_extract_method_name","title":"<code>extract_method_name</code>","text":"<p>Function to method name from lambda function, implemented in a way that is compatible with both Python 2 and 3.</p>"},{"location":"python-2-3-compatibility/#py2vs3_HTTPError","title":"<code>HTTPError</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.HTTPError</code></li> <li>Python 3: corresponds to <code>urllib.request.HTTPError</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_HTTPSHandler","title":"<code>HTTPSHandler</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.HTTPSHandler</code></li> <li>Python 3: corresponds to <code>urllib.request.HTTPSHandler</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_json_loads","title":"<code>json_loads</code>","text":"<ul> <li> <p>Python 2: wraps <code>json.loads</code> function</p> </li> <li> <p>Python 3: wraps <code>json.loads</code> function, taking into account that for Python versions older than 3.6</p> <ul> <li>a value of type <code>string</code> (rather than <code>bytes</code>) is required as argument</li> </ul> </li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_mk_wrapper_baseclass","title":"<code>mk_wrapper_baseclass</code>","text":"<p>Function to create a wrapper base class using the specified metaclass, implemented in a way that is compatible with both Python 2 and 3.</p>"},{"location":"python-2-3-compatibility/#py2vs3_OrderedDict","title":"<code>OrderedDict</code>","text":"<ul> <li>Python 2.6: corresponds to <code>easybuild.tools.ordereddict.OrderedDict</code></li> <li>Python 2.7: corresponds to <code>collections.OrderedDict</code></li> <li>Python 3: corresponds to <code>collections.OrderedDict</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_reload","title":"<code>reload</code>","text":"<ul> <li>Python 2: corresponds to <code>reload</code> built-in function</li> <li>Python 3: corresponds to <code>importlib.reload</code> function</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_raise_with_traceback","title":"<code>raise_with_traceback</code>","text":"<p>Function to raise an error with specified message and traceback, implemented in a way that is compatible with both Python 2 and 3.</p>"},{"location":"python-2-3-compatibility/#py2vs3_Request","title":"<code>Request</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.Request</code></li> <li>Python 3: corresponds to <code>urllib.request.Request</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_subprocess_popen_text","title":"<code>subprocess_popen_text</code>","text":"<ul> <li>Python 2: wrapper for <code>subprocess.Popen</code></li> <li>Python 3: wrapper for <code>subprocess.Popen</code> while forcing text mode     (using <code>universal_newlines=True</code>)</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_std_urllib","title":"<code>std_urllib</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib</code> package</li> <li>Python 3: corresponds to <code>urllib.request</code> package</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_string_type","title":"<code>string_type</code>","text":"<ul> <li>Python 2: corresponds to <code>basestring</code> built-in string type</li> <li>Python 3: corresponds to <code>str</code> built-in string type</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_StringIO","title":"<code>StringIO</code>","text":"<ul> <li>Python 2: corresponds to <code>StringIO.StringIO</code> class</li> <li>Python 3: corresponds to <code>io.StringIO</code> class</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_urlencode","title":"<code>urlencode</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib.urlencode</code> function</li> <li>Python 3: corresponds to <code>urllib.parse.urlencode</code> function</li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_URLError","title":"<code>URLError</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.URLError</code></li> <li>Python 3: corresponds to <code>urllib.request.URLError</code></li> </ul>"},{"location":"python-2-3-compatibility/#py2vs3_urlopen","title":"<code>urlopen</code>","text":"<ul> <li>Python 2: corresponds to <code>urllib2.urlopen</code></li> <li>Python 3: corresponds to <code>urllib.request.urlopen</code></li> </ul>"},{"location":"release-notes/","title":"EasyBuild release notes","text":"<p>The latest version of EasyBuild provides support for building and installing 2,798 different software packages, including 37 different (compiler) toolchains. It contains 248 software-specific easyblocks and 37 generic easyblocks, alongside 15,535 easyconfig files.</p>  <p>Note</p> <p>See also the concise overview of major changes in EasyBuild v4.0.</p>"},{"location":"release-notes/#release_notes_eb462","title":"EasyBuild v4.6.2 (October 21st 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for easystack file that contains easyconfig     filenames + implement parsing of configuration options     (#4021)</li> <li>skip over unset <code>$EB_PYTHON</code>/<code>$EB_INSTALLPYTHON</code> in eb wrapper     script     (#4080)</li> <li>add <code>GITHUB_RELEASE</code> and <code>GITHUB_LOWER_RELEASE</code> templates     (#4084)</li> <li>add <code>%(cuda_cc_cmake)s</code> template     (#4087)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make <code>check_sha256_checksums</code> verify all checksums if they're     specified as a dict value     (#4076)</li> <li>replace use of symlink with copied files in <code>alt_location</code> tests     to fix failing EasyBuild installation on BeeGFS     (#4083)</li> <li>fix trying to generate RPATH wrappers for Clang     (#4088)</li> <li>make sure that GitPython version is a proper version before     checking minimal required version     (#4090,     #4091)</li> <li>first look for patch in <code>alt_location</code> when it is specified     (#4093)</li> </ul> </li> <li>other changes:<ul> <li>make scripts executable     (#4081)</li> <li>make <code>--inject-checksums</code> inject dictionary value for checksums     which maps filename to SHA256 checksum     (#4085)</li> <li>update to v3 of actions/checkout and actions/setup-python in CI     workflows     (#4089)</li> <li>use <code>SYSTEM</code> template constant in dependencies instead of <code>True</code>     in framework tests     (#4094)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>2 new software-specific easyblock:<ul> <li>CUDA compatibility libraries     (#2764)     and mamba     (#2808)</li> </ul> </li> <li>minor enhancements and updates, including:<ul> <li>update OpenFOAM easyblock to support OpenFOAM 10 + clean up     variant/version checks     (#2766)</li> <li>added support for ESMPy in ESMF     (#2789)</li> <li>enhance OpenBLAS easyblock to support running LAPACK test     suite + checking how many tests fail     (#2801)</li> <li>make numexpr easyblock aware of toolchain with GCC + imkl     (#2810)</li> <li>add sanity check commands for netCDF     (#2811)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>handle problems copying symlink that points to CUDA folder that     is not created for non CUDA builds of SuiteSparse     (#2790)</li> <li>don't install docs (to avoid trouble with Java) + add Rocky     support for ABAQUS     (#2792)</li> <li>correctly count the number of failing tests (not failing test     suites) in PyTorch builds     (#2794,     #2803)</li> <li>fix docstring for PyTorch easyblock     (#2795)</li> <li>handle iterative builds with MakeCp easyblock     (#2798)</li> <li>accept both <code>None</code> and empty value for optarch to let OpenCV     detect host CPU     (#2804)</li> <li>enhance EasyBuildMeta easyblock: auto-enable installing with     pip + fix setup.py of easyconfigs package so installation with     setuptools &gt;= 61.0 works     (#2805)</li> <li>use <code>python -m pip</code> instead of <code>pip</code> in PythonPackage easyblock     (#2807)</li> </ul> </li> <li>other changes:<ul> <li>make the test output from PythonPackage less verbose by     disabling default search for error patterns done by <code>run_cmd</code>     (#2797)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add easyconfig for intel/2022.09 toolchain     (#16435)</li> <li>added example easyconfig files for 25 new software packages:<ul> <li>AGAT     (#16261),     AMAPVox     (#16438),     Avogadro2     (#16257),     buildingspy     (#16308),     CDBtools     (#16436),     Compress-Raw-Zlib     (#16307),     CUDAcompat     (#15892),     CWIPI     (#16342),     enchant-2     (#16082,     #16319),     f90wrap     (#16346),     Imath     (#16276),     Mamba     (#16432),     Miller     (#16221),     nghttp2     (#16096),     ngtcp2     (#16098),     NVSHMEM     (#16254),     pairsnp     (#16331),     paladin     (#16320),     PyMOL     (#16394),     python-irodsclient     (#16328),     ruffus     (#16428),     TELEMAC-MASCARET     (#16274),     torchdata     (#16344),     Waylandpp     (#16092),     x13as     (#16163)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Amber 22.0, AMS 2022.102, ASE 3.22.1, atools 1.5.1, Beast 2.6.7,     biogeme 3.2.10, Boost.Python 1.79.0, ccache 4.6.3, dbus-glib     0.112, Delly 1.1.5, ESMF 8.3.0, expat 2.4.9, FDS 6.7.9, file     5.43, FLTK 1.3.8, FTGL 2.4.0, gc 8.2.2, GitPython 3.1.27, Go     1.18.3, GPAW 22.8.0, Guile 3.0.8, htop 3.2.1, hunspell 1.7.1,     IPython 8.5.0, jq 1.6, Julia 1.8.2, LDC 1.30.0, libcint 5.1.6,     libconfig 1.7.3, libreadline 8.2, LibSoup 3.0.7, LIBSVM 3.30,     libwebp 1.2.4, likwid 5.2.2, MariaDB 10.9.3, matplotlib 3.5.2,     ncdu 1.17, netcdf4-python 1.6.1, Nextflow 22.10.0, NFFT 3.5.3,     Nipype 1.8.5, numactl 2.0.16, onedrive 2.4.21, OpenCV 4.6.0,     OpenEXR 3.1.5, OpenJPEG 2.5.0, OpenMM 7.7.0, OpenPGM 5.2.122,     OpenSSL 1.1.1q, Perl 5.36.0, Pillow-SIMD 9.2.0, pkgconf 1.9.3,     PostgreSQL 14.4, PyCharm 2022.2.2, PyTorch 1.12.0, PyTorch     1.12.0, PyTorch-Lightning 1.7.7, RDFlib 6.2.0, SAMtools 1.16.1,     scikit-learn 1.1.2, Score-P 7.1, SDL2 2.0.22, spaln 2.4.12,     spglib-python 2.0.0, SuiteSparse 5.13.0, SUNDIALS 6.3.0, sympy     1.11.1, tensorboard 2.10.0, torchvision 0.13.1, TRIQS 3.1.1,     TRIQS-cthyb 3.1.0, TRIQS-dft_tools 3.1.0, TRIQS-tprf 3.1.1,     TRUST4 1.0.7, TurboVNC 3.0.1, typing-extensions 4.3.0, UCX     1.13.1, umap-learn 0.5.3, VEP 107, VMD 1.9.4a57, Wayland 1.21.0,     wxWidgets 3.2.1, xprop 1.2.5</li> </ul> </li> <li>minor enhancements, including:<ul> <li>configure recent pocl versions with <code>-DLLC_HOST_CPU=native</code> to     avoid CPU auto-detection     (#16246)</li> <li>add multi-dep exception to easyconfigs test suite for     ncbi-vdb-3.0.0 which requires HDF5 1.10.x     (#16316)</li> <li>enable running of LAPACK tests for recent OpenBLAS easyconfigs +     add patch to fix failing LAPACK tests due to use of     <code>-ftree-vectorize</code>     (#16406)</li> <li>add <code>GITHUB_(LOWER_)RELEASE</code> to known constants in <code>setup.cfg</code>     (#16422)</li> <li>add AMAPVox extension to R v4.2.1     (#16439)</li> <li>add OpenEXR dependency to POV-Ray 3.7.0.10     (#16408)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add patch for OpenBLAS 0.3.7-0.3.12 to fix miscomputation on     POWER     (#16199)</li> <li>skip flaky test in PyTorch 1.9.0     (#16258)</li> <li>add <code>--with-versioned-syms</code> to ncurses 6.2 and 6.3     (#16270)</li> <li>add missing pkg-config build dependency to Guile     (#16317)</li> <li>add patches to fix incompatibilites between ASE and other     packages in 2022a toolchain     (#16332)</li> <li>add patches to fix PyTorch 1.11 on POWER     (#16339)</li> <li>add patches for Ambertools 21 to Amber 20.11 to work with     updated Amber easyblock     (#16343)</li> <li>use Intel MPI from EasyBuild toolchain in AMS     (#16363)</li> <li>fix execution permissions for <code>bin/ngm*</code> for NextGenMap v0.5.5     (#16383)</li> <li>fix using provided Qhull and freetype dependencies for     matplotlib 3.5.2 by creating <code>mplsetup.cfg</code> rather than     <code>setup.cfg</code>     (#16396)</li> <li>fix GitHub download link in for libpsl 0.21.1     (#16397)</li> <li>stick to http in source URL for <code>stride.tar.gz</code> in VMD 1.9.4a51     easyconfigs due to problems with SSL certificate     (#16403)</li> <li>add patch to detect available cores and remove unneeded deps for     Unicycler 0.5.0     (#16407)</li> <li>add missing ICU + libunistring dependencies for libpsl 0.21.1 w/     GCCcore/10.3.0     (#16410)</li> <li>add patch to GCC 11.x + 12.x to fix vectorizer bug     (#16411)</li> <li>fix checksum for GULP 6.1     (#16423)</li> <li>add bzip2 and libxml2 as dependencies for netCDF 4.9.0     (#16450)</li> </ul> </li> <li>other changes:<ul> <li>drop Java dep from ABAQUS 2022     (#16314)</li> <li>deprecate use of <code>True</code> in favour of <code>SYSTEM</code> for     system-toolchain dependencies in easyconfigs using a recent     toolchain version (&gt;2019b)     (#16384)</li> <li>update easyconfigs to use <code>SYSTEM</code> template constant instead of     <code>True</code> in dependencies     (#16386,     #16418)</li> <li>update libxml2 + libxslt easyconfigs to use <code>gnome.org</code> source     URL     (#16429)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb461","title":"EasyBuild v4.6.1 (September 12th 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add script to find dependencies of Python packages     (#3839)</li> <li>add <code>ai</code> default module class     (#4053)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix code style issues reported by recent flake8 linter     (#4049)</li> <li>stick to autopep8 &lt; 1.7.0 with Python 2.7     (#4055)</li> <li>ensure we call <code>EasyBlock.patch_step</code> for <code>postinstallpatches</code>     (#4063)</li> <li>fix leaked handles in <code>set_columns</code>, <code>complete_cmd</code>,     <code>run_cmd_qa</code>, <code>det_terminal_size functions</code> + tests     (#4066)</li> <li>fix <code>quote_str</code> when string with both <code>'</code> and <code>\"</code> ends with a     double quote     (#4068)</li> <li>fix type-checking of patches to allow dict values + correctly     handle patches specified as dict values in <code>--new-pr</code>     (#4070)</li> <li>relax toolchain test by accepting both <code>-march=native</code> (x86_64)     and <code>-mcpu=native</code> (aarch64)     (#4071)</li> </ul> </li> <li>other changes:<ul> <li>run python in the same process as <code>eb</code> wrapper script by using     <code>exec</code>     (#4048)</li> <li>add <code>get_linked_libs_raw</code> function, and use it from both     <code>check_linked_shared_libs</code> and <code>sanity_check_rpath</code>     (#4051)</li> <li>update CI workflows (except container tests) to use Ubuntu     20.04, since Ubuntu 18.04 is deprecated     (#4064)</li> <li>use <code>SYSTEM</code> constant for dependency that uses system toolchain     in dumped easyconfig     (#4069)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements and updates, including:<ul> <li>update LAMMPS easyblock for LAMMPS/23Jun22     (#2213)</li> <li>reduce the number of command line options for <code>cmake</code> command in     CMakeMake generic easyblock     (#2514)</li> <li>update libQGLViewer easyblock to take into account changes in     the shared library names depending on Qt versions they are     compiled with     (#2730)</li> <li>improve PLUMED detection in GROMACS easyblock     (#2749)</li> <li>make <code>$LD_LIBRARY_PATH</code> detection more robust for LAMMPS     (#2765)</li> <li>enhance NVHPC easyblock to avoid superfluous warning     (#2767)</li> <li>enhance PyTorch easyblock to also capture tests failing with     signal     (#2768)</li> <li>enhance PythonPackage easyblock to make sure all test command     output makes it to the EasyBuild log, also when     <code>return_output_ec=True</code>     (#2770)</li> <li>set <code>$NVHPC_CUDA_HOME</code> for NVHPC 22.7+     (#2776)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make Amber easyblock aware of FlexiBLAS     (#2720)</li> <li>update PyTorch easyblock to configure without breakpad support     on POWER     (#2763)</li> <li>use <code>lib*</code> in <code>post_install</code> step of FFTW.MPI easyblock to fix     paths not being found on Linux distros favouring lib64 (like     Suse/SLES)     (#2771)</li> <li>use <code>det_cmake_version</code> function to determine CMake version in     CMakeMake generic easyblock     (#2772)</li> <li>don't enable building of <code>ld.gold</code> when installing binutils on     a RISC-V system + don't configure GCC to use gold as default     linker on a RISC-V system     (#2780)</li> <li>tweak Amber(Tools) easyblock to run tests from top-level     directory     (#2781)</li> <li>fix version check for NVPTX library in sanity check of Clang     easyblock     (#2783)</li> </ul> </li> <li>other changes:<ul> <li>update CI workflows to use Ubuntu 20.04 (since Ubuntu 18.04 is     deprecated)     (#2779)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 37 new software packages:<ul> <li>AptaSUITE     (#8583),     BigDFT     (#15860),     colossalai     (#15971),     CrystFEL     (#8407),     Dakota     (#15883,     #16210),     FastFold     (#15972),     fastparquet     (#15020),     FOX-Toolkit     (#15986),     GLM-AED     (#15879),     hiredis     (#16071),     how_are_we_stranded_here     (#16220,     #16227),     indicators     (#16209),     JavaFX     (#8583),     json-fortran     (#15979),     jupyter-resource-usage     (#15834),     libev     (#16086),     libmad     (#16067),     libplinkio     (#13040),     LuaJIT2-OpenResty     (#16047),     MetaMorpheus     (#15825),     mgltools     (#16226),     miniasm     (#15858),     muMerge     (#16115),     nano     (#16198),     nghttp3     (#16097),     olaFlow     (#16021),     OpenFAST     (#15983,     #15983),     OpenFold     (#15971),     Phantompeakqualtools     (#15871),     pyGenomeTracks     (#16143),     QuickPIC     (#15978),     RheoTool     (#16077),     Satsuma2     (#16068),     SMC++     (#16017),     stripy     (#15866),     UCC-CUDA     (#15956),     VESTA     (#16217)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>alevin-fry 0.6.0, AmberTools 22.3, arrow-R 8.0.0, ASE 3.22.1,     BBMap 38.98, BCFtools 1.15.1, binutils 2.39, BLAST+ 2.13.0,     Bowtie2 2.4.5, BUSCO 5.4.3, CapnProto 0.10.2, Cartopy 0.20.3,     ccache 4.6.1, cclib 1.7.2, CDO 2.0.5, CellRanger-ATAC 2.1.0,     CoordgenLibs 3.0.1, cURL 7.84.0, cuTENSOR 1.6.0.3, einops 0.4.1,     Elk 8.5.2, Emacs 28.1, Embree 3.13.4, FFmpeg 4.4.2 + 5.0.1, fio     3.32, Flask 2.2.2, Flye 2.9.1, fmt 9.1.0, FORD 6.1.15,     FreeSurfer 7.3.2, GATE 9.2, GATK 4.2.6.1, GCC(core) 12.2.0, GDB     12.1, Geant4 11.0.2, GetOrganelle 1.7.6.1, gifsicle 1.93, GLFW     3.3.8, glib-networking 2.72.1, Globus-CLI 3.6.0, gnuplot 5.4.4,     gperftools 2.10, Graphviz 5.0.0, Gurobi 9.5.2, HDF5 1.12.2,     HTSlib 1.15.1, Hypre 2.25.0, Jansson 2.14, jax 0.3.14, Kalign     3.3.2, kim-api 2.3.0, LAMMPS 23Jun2022, libcerf 2.1, libdwarf     0.4.1, Libint 2.7.2, libQGLViewer 2.8.0, LibSoup 2.74.0, libzip     1.9.2, Lua 5.4.4, lxml 4.9.1, maeparser 1.3.0, matplotlib 3.5.2,     MATSim 14.0, MDAnalysis 2.2.0, medaka 1.6.0, Megalodon 2.5.0,     Mercurial 6.2, MetaEuk 6, Mini-XML-3.3.1, MUMmer 4.0.0rc1, MUMPS     5.5.1, netCDF-Fortran 4.6.0, NGSpeciesID 0.1.2.1, ont-remora     1.0.0, OpenFOAM v2206, OTF2 3.0, parallel 20220722, ParaView     5.10.1, patchelf 0.15.0, Perl 5.36.0, pftoolsV3 3.2.12, PLINK     2.00a3.6, pretty-yaml 21.10.1, PRSice 2.3.5, pugixml 1.12.1,     Pyomo 6.4.2, PyOpenCL 2021.2.13, Pysam 0.19.1, PyStan 3.5.0,     PyYAML 6.0, RDKit 2022.03.5, scikit-bio 0.5.7, scikit-build     0.15.0, scikit-learn 1.1.2, scikit-optimize 0.9.0, SCOTCH 7.0.1,     SIONlib 1.7.7, SISSO 3.1, spglib-python 2.0.0, Stacks 2.62,     Stata 17, SUMO 1.14.1, tbb 2021.5.0, tqdm 4.64.0, Transformers     4.21.1, Trycycler 0.5.3, Unicycler 0.5.0, Valgrind 3.19.0,     ViennaRNA 2.5.1, VTune 2022.3.0.eb, wxPython 4.1.1, x264     20220620, Z3 4.10.2, zfp 1.0.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add alternate download URL for Voro++     (#15898)</li> <li>add extra symlinks and sanity checks for libtinfo in ncurses     (#15903)</li> <li>include some easyconfig constants in flake8 configuration file     (#16040)</li> <li>add pigz dependency for cutadapt v3.4 + v3.5     (#16056)</li> <li>add sanity check commands for recent gettext versions (&gt;=     0.20.x)     (#16091)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use correct Matlab Runtime Compiler (v8.4) for FreeSurfer v7.1.1     (#13375)</li> <li>fix set-alias statements for MaxQuant v2.0.3.0     (#15743)</li> <li>add Autotools build dependency to R 4.2.0 w/ foss 2021b     (#15822)</li> <li>add patch for BLIS to fix auto-detection of POWER     (#15826)</li> <li>downgrade SPAdes dependency to v3.13.1 for Unicycler 0.4.9 since     v3.15.3 is too new     (#15840)</li> <li>explicitly enable HDF5 from kallisto v0.46.2 onwards     (#15843)</li> <li>add CVE patch for XZ 5.2.5 + attempt to fix symbol patch for all     OSs     (#15856)</li> <li>use build environment set by EasyBuild and add missing     dependency on zlib to minimap2     (#15859)</li> <li>add missing dependencies and execute tests on Trycycler v0.5.2     (#15864)</li> <li>add patch for AlphaFold v2.2.2 to fix NaN problem with jax 0.3.9     (#15874)</li> <li>exclude (flaky) <code>fault_tolerance_test</code> and fix non-x86 build for     TensorFlow 2.7.1     (#15882)</li> <li>work around miscompilation of OpenBLAS on POWER by compiling     with <code>-fstack-protector-strong</code>     (#15885)</li> <li>fix tests on POWER9 for BLIS 0.9.0 + fix auto-detect for POWER10     for BLIS (AMD) v2.0 + v3.0     (#15889)</li> <li>add and fix patches for PyTorch 1.9.0 on POWER     (#15919)</li> <li>exclude Binary, PackedBinary and JAR easyblocks from binutils     build requirements     (#15932)</li> <li>consistently add libffi + elfutils dependencies to recent Clang     easyconfigs     (#15935,     #16225)</li> <li>add patch to fix broken test on POWER for numpy in SciPy-bundle     2022.05     (#15968)</li> <li>refactor checksum test for extensions to use     <code>collect_exts_file_info</code>     (#15973)</li> <li>fix dependency on FOX Toolkit in SUMO     (#15986)</li> <li>add missing SciPy-bundle dependency for rMATS-turbo     (#15988)</li> <li>explicitly download wannier90 source tarball from wannier90     GitHub repository in QuantumESPRESSO 7.1 easyconfigs     (#15993)</li> <li>restore ploteig in EIGENSOFT 7.2.1     (#15996)</li> <li>add alternative checksum for plot3Drgl extension in R v4.1.x +     v4.2.0 easyconfigs     (#16011)</li> <li>add patch to fix missing sync in LINCS and SETTLE CUDA kernels     for GROMACS 2020     (#16027)     and 2021     (#16026)</li> <li>exclude failing test in TensorFlow 2.4.1     (#16042)</li> <li>skip NASA performance and remote server tests in netCDF v4.9.0     (#16050,     #16158)</li> <li>use versioned symbols in ncurses built with system toolchain (by     adding <code>--with-versioned-syms</code> configure option)     (#16064)</li> <li>add patch to fix pkgconfig file for Blitz++ v1.0.2     (#16102)</li> <li>add missing BCFtools dependency for recent medaka versions     (#16107)</li> <li>add GTK2 v2.24.33 as a dependency for Ghostscript v9.56.1     (#16112)</li> <li>fix checksum for Stacks v2.62 (due to silent re-release without     version bump)     (#16134)</li> <li>fix libsanitzer for glibc 2.36 to build GCCcore 11.3.0     (#16145)</li> <li>fix top level Makefile for AmberTools 20 and enable tests     (#16150)</li> <li>add missing patches + enable running tests for AmberTools 21     with intel/2021a     (#16151)     and intel/2021b     (#16152)</li> <li>replace HDF5 v1.13.1 with v1.12.1 as dependency, since we     shouldn't use odd minor versions of HDF5 which are not stable     releases     (#16153)</li> <li>remove modextrapaths to add top-level install directory to     <code>$PATH</code>for recent InterProScan easyconfigs (now done by default     by Binary easyblock)     (#16167)</li> <li>fix sources + source URL + homepage for Molekel v5.4.0     (#16219)</li> <li>consistently add maeparser + CoordgenLibs dependencies to     OpenBabel 3.1.1 easyconfigs     (#16231)</li> <li>fix checksum for CUDA 11.4.1 aarch64 installer     (#16234)</li> <li>remove incorrect comment for Boost dependency in OpenBabel 3.1.1     easyconfigs     (#16238)</li> <li>add direct Pango dependency in recent ImageMagick easyconfigs     (#16237)</li> </ul> </li> <li>other changes:<ul> <li>remove superfluous <code>-DCMAKE_BUILD_TYPE=Release</code>, use of     <code>build_type = Release</code>, or enabling <code>separate_build_dir</code> from     easyconfigs using CMakeMake easyblock     (#13384)</li> <li>synchronize ncurses easyconfigs using system toolchain     (#15903)</li> <li>stick to Java/11 as dependency for Bazel 5.1.1 (which is     available for x86_64, aarch64, ppc64le)     (#15906)</li> <li>speed up OpenMPI 4.1.4 configure by not running     <code>autogen.pl --force</code>, but only running required Autotools     commands     (#15957)</li> <li>replace sed commands by upstreamed patches for BLIS built with     intel-compilers toolchain     (#15958)</li> <li>simplify AlphaFold foss/2021a easyconfigs by using a fleshed out     patched OpenMM dependency     (#15981)</li> <li>update Java/11 to 11.0.16 and Java/17 to 17.0.4     (#16001)</li> <li>remove unnecessary patch in recent JupyterLab     (#16030)</li> <li>update CI workflows to use Ubuntu 20.04 (since Ubuntu 18.04 is     deprecated)     (#16070)</li> <li>make check for toolchain value in dependency spec in easyconfigs     test suite aware that dumped easyconfig uses <code>SYSTEM</code> constant     (#16126)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb460","title":"EasyBuild v4.6.0 (July 8th 2022)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>allow searching for sources/patches in alternative location by     specifying '<code>alt_location</code>' in source/patch spec     (#3994)</li> <li>show URLs used for download attempts in trace output     (#4026)</li> <li>add support for setting environment variables via '<code>pushenv</code>'     with <code>modextravars</code>     (#4030)</li> <li>add support for OneAPI compilers using toolchain option     '<code>oneapi</code>'     (#4031,     #4032,     #4039)</li> <li>make <code>check_linked_shared_libs</code> more robust by taking into     account that '<code>ldd</code>' may fail     (#4033)</li> <li>fall back to sequential extension install if parallel install is     not implemented     (#4034)</li> <li>add support for using template values in name/version of     extensions     (#4036)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make sure that <code>ARCH</code> constant has '<code>aarch64</code>' (rather than     '<code>arm64</code>') as value on macOS ARM     (#4018)</li> <li>tweak '<code>eb</code>' wrapper script to correctly handle errors when     python command being considered fails to run     (#4019)</li> <li>tweak <code>is_patch_for</code> function to make it more robust     (#4028)</li> </ul> </li> <li>other changes:<ul> <li>update Lmod used to run tests to version 8.7.6     (#4027,     #4030)</li> <li>tweak <code>apply_patch</code> to not create <code>.orig files</code> (by default)     when applying patch files     (#4038)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for STAR-CCM+     (#1613)</li> <li>minor enhancements and updates, including:<ul> <li>update Siesta EasyBlock to support GCC 10+ by adding     <code>-fallow-argument-mismatch</code> Fortran compiler option     (#2690)</li> <li>enable building of shared library for Libint 2.7+     (#2738)</li> <li>allow some PyTorch tests to fail + print warning if one or more     tests fail     (#2742)</li> <li>also support OpenSSL 3.0 in OpenSSL wrapper easyblock     (#2746)</li> <li>add more logging to <code>install_pc_files</code> method of OpenSSL wrapper     easyblock     (#2752)</li> <li>make WPS easyblock aware of <code>(pre)buildopts</code>     (#2754)</li> <li>add Abseil system dependency for TensorFlow 2.9+     (#2757)</li> <li>disable altivec when building FFTW versions &lt; 3.4 with     single-precision with GCC on POWER     (#2758)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make VEP easyblock compatible with <code>--sanity-check-only</code>     (#2743)</li> <li>update Rosetta easyblock to take into account that     <code>$LD_LIBRARY_PATH</code>, <code>$CPATH</code>, <code>$PATH</code> may not be defined     (#2744)</li> <li>only load temporary module file during sanity check for pybind11     for stand-alone installations, so it can be installed as     extension     (#2747)</li> <li>make sure that <code>CMakeMakeCp</code> uses correct build dir     (#2748)</li> <li>enhance Bazel easyblock to avoid writing to <code>$HOME</code> in sanity     check     (#2756)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li> <p>added easyconfigs for <code>foss/2022a</code>, <code>intel/2022a</code> common toolchains     (#15755)</p> <ul> <li>see also     https://docs.easybuild.io/en/latest/Common-toolchains.html</li> </ul> </li> <li> <p>add easyconfig for <code>gfbf/2022a</code> toolchain     (#15653,     #15755)</p> </li> <li> <p>added example easyconfig files for 24 new software packages:</p> <ul> <li>BLT     (#15624),     category_encoders     (#15638),     fio     (#10321),     FSON     (#15721),     G-PhoCS     (#7619),     GCTA     (#15649),     Gibbs2     (#15702),     InterProScan_data     (#15717),     Jorg     (#15346),     libopus     (#15682),     Minipolish     (#15713),     mm-common     (#15764),     MONA     (#15696),     NetPyNE     (#15606),     pfind     (#15685),     regionmask     (#15786),     samplot     (#15686),     SISSO     (#15766),     sklearn-pandas     (#15637),     STAR-CCM+     (#7398),     SWIPE     (#6795),     topaz     (#15739),     uncertainty-calibration     (#15612),     Virtuoso-opensource     (#14102)</li> </ul> </li> <li> <p>added additional easyconfigs for various supported software     packages, including:</p> <ul> <li>AlphaFold 2.2.2, Arriba 2.3.0, Arrow 8.0.0, Bracken 2.7,     CellRanger 7.0.0, Clp 1.17.7, CoinUtils 2.11.6, cppy 1.2.1,     deal.II 9.3.3, double-conversion 3.2.0, Doxygen 1.9.4, FLAC     1.3.4, fmt 7.1.1, FSL 6.0.5.1, GDAL 3.5.0, gdbm 1.21, geopandas     0.11.0, GEOS 3.10.3, Ghostscript 9.56.1, GLibmm 2.66.4, Groovy     4.0.3, GULP 6.1, h5py 3.7.0, HDF5 1.13.1, hifiasm 0.16.1,     IGMPlot 2.6.9b, ImageMagick 7.1.0-37, InterProScan 5.55-88.0,     IRkernel 1.3, jemalloc 5.3.0, JsonCpp 1.9.5, Julia 1.7.3,     Leptonica 1.82.0, libgeotiff 1.7.1, libgit2 1.4.3, libiconv     1.17, libRmath 4.2.0, libsigc++ 2.10.8, libsndfile 1.1.0, libxc     5.2.3, libxml++ 2.42.1, line_profiler 3.5.1, LittleCMS 2.13.1,     MaSuRCA 4.0.9, mayavi 4.7.4, MetaEuk 5, mold 1.3.0, NCCL     2.12.12, netCDF 4.9.0, nettle 3.8, networkx 2.8.4, NEURON 7.8.2,     NLopt 2.7.1, nodejs 16.15.1, NSPR 4.34, NSS 3.79, nsync 1.25.0,     nvtop 2.0.2, Osi 0.108.7, p4est 2.8, parasail 2.5, Pillow 9.1.1,     PLUMED 2.8.0, PnetCDF 1.12.3, PRISMS-PF 2.2, PROJ 9.0.0,     protobuf 3.19.4, protobuf-python 3.19.4, pyfaidx 0.7.0, PyOpenGL     3.1.6, pyproj 3.3.1, PyTorch 1.11.0, Qhull 2020.2, Qt5 5.15.5,     QuantumESPRESSO 7.1, Qwt 6.2.0, R 4.2.1, rasterio 1.2.10,     Ray-project 1.13.0, RE2 2022-06-01, redis-py 4.3.3, ReFrame     3.11.2, rioxarray 0.11.1, RNA-SeQC 2.4.2, Schrodinger 2022-2,     Shapely 1.8.2, Siesta 4.1.5, SimpleITK 2.1.1.2, SpectrA 1.0.1,     TensorFlow 2.7.1, Tk 8.6.12, Tkinter 3.10.4, Transformers     4.20.1, UCX-CUDA 1.12.1, utf8proc 2.7.0, WhatsHap 1.4, WPS     3.9.1, Xvfb 21.1.3</li> </ul> </li> <li> <p>minor enhancements, including:</p> <ul> <li>add extensions to R v4.2.0: hypergeo     (#15701),     rtdists     (#15734),     geeM     (#15810)</li> <li>add patch for GCCcore 11.3.0 to support using <code>-fuse-ld=mold</code>     (#15715)</li> <li>add patch for porefoam to fix hardcoded <code>mpirun</code> command and     take into account <code>$POREFOAM_MPIRUN_CMD</code>     (#15730)</li> </ul> </li> <li> <p>various bug fixes, including:</p> <ul> <li>switch to Rust 1.60.0 build dependency for bamtofastq, since     build fails with Rust 1.52.1     (#15636)</li> <li>avoid that pygmo v2.18.0 installs stuff in Python installation     directory + add custom sanity check paths to pygmo easyconfigs     (#15657)</li> <li>add patch for Mmg v5.6.0 to remove library CI tests that point     to external sources     (#15691)</li> <li>correct configopts in deal.II v9.1.1 easyconfig     (#15692)</li> <li>add missing Python dependency for HPDBSCAN to fix unresolved     <code>%(pyshortver)s</code> template     (#15694)</li> </ul> </li> <li> <p>other changes:</p>  <ul> <li>disable flaky GPU test for TensorFlow 2.6.0     (#15824)</li> </ul>  </li> </ul>"},{"location":"release-notes/#release_notes_eb455","title":"EasyBuild v4.5.5 (June 8th 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add toolchain definitions for <code>nvompi</code> (NVHPC + OpenMPI)     (#3969),     <code>nvpsmpi</code> (NVHPC + ParaStationMPI)     (#3970),     <code>gfbf</code> (GCC, FlexiBLAS, FFTW)     (#4006)</li> <li>add support for <code>FFTW.MPI</code> toolchain component (<code>$FFT*DIR</code>     variables)     (#4012)</li> <li>add support for customizing EasyBuild command used in jobs via     <code>--job-eb-cmd</code>     (#4016)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix copying of easyconfig file with <code>--copy-ec</code> without     <code>--rebuild</code> if module is already installed     (#3993)</li> <li>ignore deprecation warnings regarding cryptography in Python     3.6 + Blowfish with Python 3.10 in test suite output     (#3999)</li> <li>fix typo in debug log message in <code>easyblock.py</code>     (#4000)</li> <li>fix printing of list of attempted download URLs when url-encoded     characters are used in URL     (#4005)</li> <li>set <code>$FFT(W)_LIB_DIR</code> to imkl-FFTW's lib path in build     environment if usempi toolchain option is enabled     (#4011)</li> <li>correctly identify Apple Silicon M1 as Arm 64-bit by also     considering arm64 next to aarch64     (#4014)</li> <li>fix '<code>eb --show-system-info</code>' on Apple M1 system     (#4015)</li> </ul> </li> <li>other changes:<ul> <li>change '<code>eb</code>' command to <code>import easybuild.framework</code> to check     if EasyBuild framework is available     (#3995,     #3998)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for FFTW.MPI     (#2724)</li> <li>minor enhancements and updates, including:<ul> <li>update NEURON easyblock to use CMakeMake for recent versions     (#2304)</li> <li>enhance Clang easyblock to add support for building with AMDGPU     offload     (#2684,     #2729)</li> <li>update sanity check in OpenMPI easyblock to support OpenMPI     v5.0.0     (#2709)</li> <li>don't use <code>gold</code> linker by default for GCC &gt;= 11.3     (#2711)</li> <li>update sanity check in R easyblock for versions &gt;= 4.2.0, since     S.h is not included anymore     (#2713)</li> <li>update ABAQUS easyblock for ABAQUS 2022     (#2716)</li> <li>update LLVM easyblock for LLVM v14.0.x     (#2718)</li> <li>update Mesa easyblock to remove swr driver configopts for     versions 22+     (#2719)</li> <li>enhance Clang easyblock to support also installing Python     bindings     (#2721,     #2725)</li> <li>enhance SuperLU easyblock to support building on top of     FlexiBLAS and be compatible with SuperLU v5.3     (#2722)</li> <li>update TensorFlow easyblock for version 2.8.0     (#2723)</li> <li>modify FFTW's sanity check step to allow checking only for MPI     parts of FFTW installation     (#2724)</li> <li>add support to ConfigureMake for tweaking (first part of) test     command via '<code>test_cmd</code>'     (#2726,     #2737)</li> <li>enhance MrBayes easyblock with custom sanity check command     (#2727)</li> <li>update cudnnarch string templates used to compose source tarball     names from cuDNN 8.3.3 onwards     (#2728)</li> <li>add sanity check command to OpenSSL wrapper easyblock to verify     that system certificates are available to OpenSSL     (#2735)</li> <li>ignore exit code of <code>pkg-config</code> command in OpenSSL wrapper     easyblock, since with <code>pkgconf</code> they exit with a non-zero exit     code if the OS package is not installed     (#2736)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>remove system-compiled binutils dirs from <code>$LDFLAGS</code> in binutils     easyblock     (#2712)</li> <li>fix for FreeSurfer easyblock: define <code>$FREESURFER</code> needed by     recon_all     (#2717)</li> <li>also symlink <code>cert.pem</code> in from-source OpenSSL installation (if     it exists)     (#2735)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add candidates for 2022a common toolchains: <code>foss/2022.05</code>     (#15561),     intel/2022.05     (#15485)</li> <li>added example easyconfig files for 35 new software packages:<ul> <li>Albumentations     (#15302),     AMPtk     (#15435),     arosics     (#15249),     CellTypist     (#15530),     detectron2     (#15442),     EigenExa     (#15234),     Fastaq     (#15332),     FFTW.MPI     (#15561),     FreeBarcodes     (#15350),     gcloud     (#15443),     GST-plugins-bad     (#15446),     gsutil     (#15507),     GTK4     (#15447),     hector     (#15397),     i7z     (#15236),     libde265     (#15395),     libheif     (#15395),     ModelTest-NG     (#15448),     num2words     (#15473),     OGDF     (#15407),     panito     (#15314),     parameterized     (#15481),     purge_dups     (#15385),     redis-py     (#15475),     ruamel.yaml     (#15531),     SCGid     (#15065),     scPred     (#15575),     slow5tools     (#15457),     smooth-topk     (#15506),     SPOTPY     (#15326),     tmap     (#14601),     UCC     (#14291),     Wayland     (#11107),     XGrafix     (#15268),     XPLOR-NIH     (#15479)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABAQUS 2022, Arb 2.22.1, ARGoS 3.0.0, Arriba 2.2.1, astropy     5.0.4, ATK 2.38.0, Autotools 20220317, Bader 1.04, Bazel 4.2.2 +     5.1.1, BDBag 1.6.3, binutils 2.38, biom-format 2.1.12, BLIS     0.9.0, Boost 1.79.0, breseq 0.36.1, bx-python 0.8.13, cairo     1.17.4, CellRanger-ARC 2.0.1, CMake 3.23.1, cryoDRGN 1.0.0, CUDA     11.7.0, cuDNN 8.4.1.50, cURL 7.83.0, DBus 1.14.0, eggnog-mapper     2.1.7, elfutils 0.187, EvidentialGene 2022.01.14, expat 2.4.8,     FlexiBLAS 3.2.0, FLINT 2.8.4, fontconfig 2.14.0, freebayes     1.3.6, freeglut 3.2.2, freetype 2.12.1, FriBidi 1.0.12, GCC     9.5.0 + 11.3.0 + GCC 12.1.0, Gdk-Pixbuf 2.42.8, geopandas     0.10.2, git 2.36.0, GLib 2.72.1, GMAP-GSNAP 2021-21-17, Go     1.18.1, GObject-Introspection 1.72.0, Graphene 1.10.8,     GST-plugins-base 1.20.2, GStreamer 1.20.2, GTDB-Tk 2.0.0, GTK3     3.24.33, gzip 1.12, HarfBuzz 4.2.1, help2man 1.49.2, hwloc     2.7.1, hypothesis 6.46.7, Hypre 2.24.0, ICU 71.1, IGV 2.12.3,     IMB 2021.3, inferCNV 1.10.1, InterProScan 5.52, IQ-TREE 2.2.1,     jax 0.3.9, json-c 0.16, LAPACK 3.10.1, libarchive 3.6.1,     libdeflate 1.10, libdrm 2.4.110, libedit 20210910, libepoxy     1.5.10, libfabric 1.15.1, libglvnd 1.4.0, libjpeg-turbo 2.1.3,     libreadline 8.1.2, librsb 1.3.0.1, librsvg 2.52.8, libtool     2.4.7, libunwind 1.6.2, libxml2 2.9.13, LLVM 14.0.3, LocARNA     1.9.2.3, MACS2 2.2.7.1, magma 2.6.2, Mako 1.2.0, Mathematica     13.0.0, MCL 14.137, MCR R2022a.1, Mesa 22.0.3, Meson 0.62.1,     MIRA 5.0rc2, Mmg 5.6.0, mold 1.2.1, mosdepth 0.3.3, MrBayes     3.2.7a, MultiQC 1.12, MUMPS 5.5.0, muParser 2.3.3, ncurses 6.3,     neptune-client 0.16.2, Nextflow 22.04.0, Nim 1.6.6, NTPoly     2.7.1, OpenMPI 4.1.4, openpyxl 3.0.9, OpenSSL 1.1.1n,     OpenStackClient 5.8.0, OSU-Micro-Benchmarks 5.9, pagmo 2.18.0,     Pango 1.50.7, parallel-fastq-dump 0.6.7, PCRE2 10.40, Perl     5.34.1, Pillow 9.1.0, PLINK 2.00a3.1, PMIx 4.1.2, PyAMG 4.2.3,     pybind11 2.9.2, PyCairo 1.21.0, pygmo 2.18.0, PyGObject 3.42.1,     Python 3.10.4, R 4.2.0, RAxML-NG 1.1.0, R-bundle-Bioconductor     3.15, ReFrame 3.11.0, RNA-Bloom 1.4.3, rnaQUAST 2.2.2, Rust     1.60.0, Sambamba 0.8.2, SAMtools 1.15.1, ScaLAPACK 2.2.0,     SciPy-bundle 2022.05, SeqKit 2.2.0, Shapely 1.8.1.post1,     SpaceRanger 1.3.1, Spack 0.17.2, Spark 3.2.1, SQLite 3.38.3,     StringTie 2.2.1, SUMO 1.12.0, SuperLU 5.3.0, tbl2asn 20220427,     Tcl 8.6.12, TCLAP 1.2.5, tcsh 6.24.01, texlive 20220321, ToFu     1.5.0, UCX 1.12.1, util-linux 2.38, VEP 105, ViennaRNA 2.5.0,     vsc-mympirun 5.2.11, worker 1.6.13, X11 2022050, YAXT 0.9.2.1,     Z3 4.8.16, Zip 3.0, zlib 1.2.12, zstd 1.5.2</li> </ul> </li> <li>minor enhancements, including:<ul> <li>use OpenSSL wrapper dependency for CMake 3.18.4 with system     toolchain     (#15227)</li> <li>also build BLIS backend for FlexiBLAS v3.0.4 with GCC/10.3.0     (#15347)</li> <li>add extensions to R v4.1.2 + v4.2.0 easyconfigs:<ul> <li>Hmsc     (#15393),     MonteCarlo + RhpcBLASctl     (#15438),     chkptstanr     (#15540),     chkptstanr + MLmetrics + renv     (#15573)</li> </ul> </li> <li>add extensions to R-bundle-Bioconductor 3.14 easyconfig:     DNABarcodes     (#15405)</li> <li>use redist source_urls for cuDNN &gt; 7.5     (#15411)</li> <li>add download_instructions to Java 1.8 &gt; 200     (#15412)</li> <li>update Arrow to use EB versions of some dependencies and enable     all compression codecs     (#15512)</li> <li>add csh -&gt; tcsh symlink in recent tcsh easyconfigs     (#15571)</li> <li>allow external tools to be located elsewhere for ETE     (#15578)</li> <li>add additional sanity check commands for IQ-TREE v2.2.1     (#15596)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix source URL for freetype 2.6.5 with <code>foss/2016b</code>     (#14204)</li> <li>fix installation of easybuild-easyconfigs with setuptools&gt;=61     by explicitly declaring there are no Python packages     (#15206)</li> <li>use x.py to bootstrap Rust so that build options are properly     passed through     (#15211)</li> <li>fix RepeatMasker-4.1.2-p1 easyconfig by moving the database     configure command to postinstallcmds     (#15280,     #15615)</li> <li>add hwloc dependency to tbb v2021.4.0     (#15294)</li> <li>tweak find command used in preconfigopts in easyconfig for     pkg-config v0.29.2 with system toolchain to avoid descending     into other filesystems     (#15313)</li> <li>remove pkg-config use from SeqLib configure patch (avoids     problem due to faulty autoconf macro)     (#15316)</li> <li>update source URL for isl in GCCcore easyconfigs     (#15320)</li> <li>update source URLs for YAXT 0.9.x to fix download     (#15323)</li> <li>define <code>$HHLIB</code> as path to HH-suite installation directory,     required by Perl scripts     (#15324)</li> <li>add missing parallel and tbl2asn dependencies for prokka 1.14.5     (#15360,     #15381)</li> <li>add missing dependencies for libheif (libpng, libjpeg-turbo)     (#15408)</li> <li>switch to configuring build of libheif with CMake so libde265     dependency is picked up     (#15408)</li> <li>disable use of <code>-ftree-vectorize</code> for OpenFOAM v2112 with     <code>foss/2021b</code>     (#15495)</li> <li>add patch for OpenMPI 4.1.1 to support building using     <code>--with-cuda=internal</code>     (#15528,     #15589)</li> <li>add patch to fix support for external PMIx v3.1 in OpenMPI     v3.1.3     (#15566)</li> <li>also build shared library + fix <code>$PYTHONPATH</code> for gmsh 4.9.0     (#15579)</li> <li>add patch for GLib 2.68.2 to fix use of close_range     (#15594)</li> <li>fix download of thrift 0.12.0 for Arrow 0.16.0     (#15597)</li> <li>add Bison and flex build dependencies to SCOTCH 6.1.x     (#15618)</li> <li>add alternative checksums for class, nnet, spatial extensions in     R v4.2.0 easyconfig     (#15619)</li> <li>add missing dependencies + switch to non-static build for Arriba     v2.1.0     (#15623)</li> </ul> </li> <li>other changes:<ul> <li>add R dependency to vcflib 1.0.3, and move from GCC/11.2.0 to     <code>foss/2021b</code> toochain     (#15216)</li> <li>update fallback version for OpenSSL 1.1 wrapper to v1.1.1o     (#15592)</li> <li>install sklearn meta-package with scikit-learn v1.0.1     (#15613)</li> <li>switch from <code>pkg-config</code> to <code>pkgconf</code> as build dependency for     OpenSSL wrapper easyconfigs     (#15616,     #15617)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb454","title":"EasyBuild v4.5.4 (March 31st 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>warn about potentially missing patches in <code>--new-pr</code>     (#3759,     #3966)</li> <li>add support for '<code>clone_into</code>' field in git_config source spec     to specify different name for top-level directory     (#3949)</li> <li>add bash completion for easyconfigs from local dir but not robot     search path     (#3953)</li> <li>add a 'sync pr' message when the PR has a mergeable state but     is showing a failed status for the test suite on the last commit     (#3967)</li> <li>add <code>gmpit</code> toolchain definition (GCC + MPItrampoline)     (#3971)</li> <li>use '<code>zypper search -i</code>' to check whether specified OS     dependency is installed on openSUSE + make sure that rpm is     considered for checking OS dependencies on RHEL8     (#3973)</li> <li>add support for post-install patches     (#3974)</li> <li>add support for '<code>download_instructions</code>' easyconfig parameter     key to specify some download or installation steps for user in     case of complicated way of obtaining needed files     (#3976,     #3981)</li> <li>also try collecting AMD GPU info (via <code>rocm-smi</code>) for     <code>--show-system-info</code>     (#3978,     #3982)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ensure <code>--review-pr</code> can find dependencies included in PR     (#3979)</li> <li>run '<code>apt-get update</code>' in GitHub Actions workflow for     container tests to update container package list before     installing anything     (#3985)</li> </ul> </li> <li>other changes:<ul> <li>enable code linting check for all supported Python versions     (#3725)</li> <li>update copyright lines for 2022     (#3986)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements and updates, including:<ul> <li>update Clang-AOMP easyblock to add support for ROCm v5.0     (#2681)</li> <li>enable system SSL certificates in OpenSSL installations     (#2683)</li> <li>enhance MRtrix easyblock: build in parallel + enable OpenMP     support for MRtrix &gt;= 3.0     (#2685)</li> <li>avoid dependency on '<code>which</code>' command in sanity check for     Python, use '<code>command -v</code>' instead     (#2687)</li> <li>enhance Tarball easyblock to support using it for installing     extensions     (#2688)</li> <li>update wxPython easyblock to support wxPython v4.1     (#2689)</li> <li>enhance Gurobi easyblock to also update <code>$MATLABPATH</code>     (#2691)</li> <li>build single-file shared libraries for imkl so it can be used as     FlexiBLAS backend via <code>$FLEXIBLAS_LIBRARY_PATH</code>     (#2694)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>added regex to replace /lib/cpp with cpp in OpenFOAM's wmake     rules file     (#2331)</li> <li>set <code>$NINJAFLAGS</code> to make sure Ninja doesn't use all visible     cores when building Qt5     (#2338)</li> <li>update Siesta EasyBlock to use serial FFTW     (#2662)</li> <li>fix support for imkl for numexpr 2.8.0+ in numexpr easyblock     (#2678)</li> <li>make sure TensorFlow doesn't see the <code>nvptx-none</code> dir when     searching for <code>gcc</code> include dir     (#2682)</li> <li>force use of bash for Anaconda install script     (#2692)</li> <li>add guess for path to add to <code>$MANPATH</code> for intel-compilers     (#2696)</li> <li>change permissions of the Java build directory to avoid     permission denied error     (#2698)</li> <li>also consider <code>$MKLROOT/lib/pkgconfig</code> for <code>$PKG_CONFIG_PATH</code>     for imkl     (#2701)</li> <li>close log after installing Bundle component     (#2702)<ul> <li>fixes problem of log leaking across installations     (framework issue     #3533)</li> </ul> </li> <li>replace hardcoded /tmp to make sure that Bazel build respects     <code>$TMPDIR</code>     (#2703)</li> </ul> </li> <li>other changes:<ul> <li>minor code cleanup in numexpr easyblock     (#2679)</li> <li>update copyright lines for 2022     (#2705)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 29 new software packages:<ul> <li>Abseil     (#15102),     AMS     (#13155),     ArchR     (#15119),     CMAverse     (#14963),     CmdStanR     (#15198),     CONN     (#15052),     Devito     (#14984,     #15009),     GraphMap     (#10299),     gRPC     (#14728),     Hydra     (#15025),     jupyter-server-proxy     (#14844),     M1QN3     (#15002),     MAGeCK     (#15082),     matplotlib-inline     (#15084),     MEGAN     (#15064),     MNE-Python     (#15174),     ONNX     (#15158),     ONNX-Runtime     (#15158),     ont-remora     (#15162),     Optuna     (#15021),     patch     (#15035),     porefoam     (#15067),     presto     (#15119),     PyFrag     (#15184),     skorch     (#15175),     SlamDunk     (#15197),     SPM     (#15050),     STRique     (#14980),     XML-Compile     (#15177)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABAQUS 2021, AlphaFold 2.1.2, AmberTools 21, archspec 0.1.3,     Bandage 0.9.0, BLIS 3.1, c-ares 1.18.1, CCL 1.12.1, CharLS     2.3.4, Clang-Python-bindings 13.0.1, dcm2niix 1.0.20211006,     DFTB+ 21.1, DIRAC 22.0, ELPA 2021.11.001, FlexiBLAS 3.1.3,     FLUENT 2021R2, GATK 4.2.5.0, GetOrganelle 1.7.5.3, IgBLAST     1.18.0, IntelClusterChecker 2021.5.0, intervaltree-python 3.1.0,     ITSx 1.1.3, Julia 1.7.2, kallisto 0.48.0, KMC 3.2.1, libobjcryst     2021.1.2, libtree 3.0.3, loompy 3.0.7, matplotlib 3.5.1, MCR     R2022a, MDAnalysis 1.1.1+ 2.0.0, MDTraj 1.9.7, medaka 1.5.0,     meshalyzer 20200308, MRtrix 3.0.3, NiBabel 3.2.2, NLTK 3.7,     numexpr 2.8.1, ont-fast5-api 4.0.2, OpenAI-Gym 0.21.0, OpenBLAS     0.3.20, ORCA 5.0.3, parallel-fastq-dump 0.6.6, PIPITS 2.8, pocl     1.8, pycocotools 2.0.4, pyEGA3 4.0.0, pyobjcryst 2.2.1, RE2     2022-02-01, SAMtools 1.15, SBCL 2.2.1, shovill 1.1.0, SKESA     2.4.0, SOCI 4.0.3, sympy 1.9, TensorFlow 2.5.3, VirtualGL 3.0,     vsc-mympirun 5.2.10, VSEARCH 2.21.1, VTK 9.1.0, VTune 2022.2.0,     XGBoost 1.5.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add Flask-Session to Flask v1.1.4 and Flask v2.0.2     (#15027)</li> <li>add check to verify that patch files touched in PRs have a     description in place     (#15061)</li> <li>add extensions to R v4.1.2 easyconfig: hash     (#15098),     nabor + harmony     (#15117),     apluster, DataCombine, docstring, gdalUtils, openair, mstate,     SNFtool, and deps     (#15141)</li> <li>also install rMATS_P commands in rMATS-turbo easyconfig     (#15113)</li> <li>add extensions to Bioconductor v3.14 easyconfig: chromVAR     (#15118),     EnsDb.Hsapiens.v79     (#15154),     WGCNA     (#15178)</li> <li>add extensions to Perl v5.34.0 easyconfigs: Sys::Info,     HTML::Template, Log::Report     (#15176),     Sys::::Unknown, Sys::::Linux,     Unix::Processors     (#15190) <li>enable running of tests for MEME with <code>gompi/2021b</code>     (#15191,     #15199)</li>   <li>various bug fixes, including:<ul> <li>add missing xxd build dependency for recent PLUMED versions     (2.6.2, 2.7.x)     (#14847)</li> <li>downgrade dependency on nodejs + use jupyter-server-proxy in     jupyter-matlab-proxy and configurable-http-proxy easyconfigs     using <code>GCCcore/10.3.0</code> toolchain     (#14942)</li> <li>add additional valid checksum for extensions in R 4.1.0 and     4.1.2 easyconfigs: norm     (#14987),     optmatch     (#14993)</li> <li>avoid pollution in the tmp directory when running the AlphaFold     tests     (#14989)</li> <li>consistently enable usempi toolchain option in     OSU-Micro-Benchmarks easyconfigs     (#15039)</li> <li>fix GBprocesS easyconfig by switching to source tarball created     using <code>git_config</code>     (#15048)</li> <li>add patches for mauveAligner to fix build on RHEL8     (#15049)</li> <li>fix installation of RDKit by using <code>-DBoost_NO_BOOST_CMAKE=ON</code>     (#15051)</li> <li>add patch to fix linking error for imread extension in     scikit-image easyconfigs using intel toolchain     (#15054)</li> <li>avoid excessively long shebang in Autoconf/Automake Perl     scripts + promote Perl to runtime dependency + fix Perl shebang     for intltool     (#15055)</li> <li>fix <code>python</code> shebang in cutadapt script for cutadapt 1.18 w/     <code>GCCcore/8.3.0</code>     (#15059)</li> <li>don't use v2.1.0rc1 release candidate of gmpy2, stick to proper     release v2.1.2     (#15060)</li> <li>add M4 as build dependency for CCL-1.12     (#15075)</li> <li>configure libffi 3.4.2 with <code>--disable-exec-static-tramp</code> to     prevent segfaults     (#15086)</li> <li>set <code>XLA_PYTHON_CLIENT_ALLOCATOR=platform</code> for running tests in     jax CUDA easyconfigs     (#15097)</li> <li>remove disable flag for RTTI in snappy v1.1.9     (#15099)</li> <li>fix grconvert build for Grace 5.1.25 with <code>foss/2021a</code> by adding     libtirpc dependency + related patch     (#15121)</li> <li>clean up PSolver and futile easyconfigs and add dynamic libs     (#15148)</li> <li>enhance vcflib easyconfigs to also install scripts     (#15181)</li> <li>add patch to fix shared linking in vcflib     (#15203)</li> <li>fix failing sanity check for PRINSEQ     (#15205)</li> </ul> </li> <li>other changes:<ul> <li>use typing-extensions from Python v3.9.6 easyconfig in ArviZ and     PyMC3     (#15003)</li> <li>disable building of documentation for DBus 1.13.18     (#15010)</li> <li>consistently use system toolchain in EasyBuild easyconfigs     (#15126)</li> <li>use EasyBuild hwloc in likwid and move to GCC/intel-compiler     level due to Fortran modules     (#15149)</li> </ul> </li>"},{"location":"release-notes/#release_notes_eb453","title":"EasyBuild v4.5.3 (February 11th 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>also check for git in <code>--check-eb-deps</code>     (#3954)</li> <li>add end2end test for <code>eb --containerize</code>     (#3958)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>take into account that patch files can also be zipped when     checking filename extension for patches     (#3936)</li> <li>initialize <code>BACKUP_PKG_URL</code> with empty string in     <code>install_eb_dep.sh</code> script     (#3939)</li> <li>fix <code>get_os_name</code> and <code>get_os_version</code> to avoid reporting     <code>UNKNOWN</code> in output of <code>eb --show-system-info</code>     (#3942)</li> <li>consistently use <code>actions/setup-python@v2</code> in CI workflows     (#3944)</li> <li>switch to using <code>pip3</code> for installing EasyBuild in container     recipes generated by EasyBuild     (#3945)</li> <li>specify <code>easybuild.io</code> as EasyBuild homepage in <code>setup.py</code>     (#3947)</li> <li>avoid crash in <code>get_os_version</code> on modern SLES-based OSs     (#3955)</li> </ul> </li> <li>other changes:<ul> <li>indicate compatibility with Python 3.10 in <code>setup.py</code>     (#3940)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for reticulate R package     (#2668)</li> <li>minor enhancements and updates, including:<ul> <li>set CUDA target architecture(s) for GROMACS based on     <code>cuda_cc_semicolon_sep</code> template value     (#2655)</li> <li>add support to NAMD easyblock to opt out of building with CUDA     support even if CUDA is included as dependency     (#2666)</li> <li>update sanity check in CUDA easyblock: CUDA 11.6 no longer     includes samples     (#2669)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also run easyblocks test suite with Python 3.8-3.10 +     consistently use <code>actions/setup-python@v2</code> in CI workflows     (#2664)</li> <li>specify <code>easybuild.io</code> as EasyBuild homepage in <code>setup.py</code>     (#2667)</li> </ul> </li> <li>other changes:<ul> <li>remove vulnerable binaries from sanity check of HDF5, no longer     installed by default with HDF5 1.10.8     (#2670)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 25 new software packages:<ul> <li>Arcade-Learning-Environment     (#14753),     Bambi     (#14811),     CASTEP     (#14420),     Crumble     (#14785),     deepmedic     (#14953),     FoBiS     (#14771),     histolab     (#14945),     Iris     (#14788),     Jasmine     (#14789),     libexif     (#14823),     libgdiplus     (#14823),     MuJoCo     (#14965),     mujoco-py     (#14776,     #14965),     namedlist     (#14814),     OpenCensus-python     (#14837),     PyEVTK     (#14911),     pyradiomics     (#14851),     PyTorch-Lightning     (#14933),     Redis     (#14783),     rising     (#14952),     SoXt     (#14803),     SURVIVOR     (#14786),     tensorboard     (#14926),     xtensor     (#14944),     xxd     (#14846)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>aiohttp 3.8.1, AOCC 3.2.0, ArviZ 0.11.4, BeautifulSoup 4.10.0,     bokeh 2.4.2, Boost.Python 1.77.0, Bowtie 1.3.1, CheMPS2 1.8.11,     Clang 13.0.1, CLHEP 2.4.5.1, ConnectomeWorkbench 1.5.0, Crumble     0.8.3, CUDA 11.5.1 + 11.6.0, cutadapt 3.5, dask 2022.1.0,     deepdiff 5.7.0, deepTools 3.5.0, dm-tree 0.1.6, DROP 1.1.1,     ecCodes 2.24.2, Emacs 27.2, FDS 6.7.7, file 5.41, Flask 2.0.2,     FORD 6.1.6, GATE 9.1, Geant4 11.0.0, GEMMA 0.98.5, GnuTLS 3.7.3,     Go 1.17.6, gpustat 1.0.0b1, Graphviz 2.50.0, GROMACS 2021.5,     Guile 3.0.7, HDF5 1.10.8, imageio 2.13.5, JupyterLab 3.2.8, lftp     4.9.2, libBigWig 0.4.6, libpsml 1.1.10, libRmath 4.1.2, librsb     1.3.0.0, libtasn1 4.18.0, libunistring 1.0, likwid 5.2.1,     MaxQuant 2.0.3.0, MEGA 11.0.10.eb, MethylDackel 0.6.1, methylpy     1.2.9, minimap2 2.24, Mono 6.12.0.122, MUSCLE 5.1,     nanomax-analysis-utils 0.4.3, ncbi-vdb 2.11.2, NCIPLOT-4.0     20200624, Nextflow 21.10.6, NGS 2.11.2, nvtop 1.2.2, OpenCV     4.5.5, openslide-python 1.1.2, pftoolsV3 3.2.11, picard 2.26.10,     pydicom 2.2.2, pyFAI 0.20.0, Pysam 0.18.0, pytest-xdist 2.5.0,     Racon 1.5.0, RAxML 8.2.12, ReFrame 3.10.1, ROOT 6.24.06,     scikit-image 0.19.1, SDL2 2.0.20, SeqKit 2.1.0, Siesta 4.1.5,     SimpleITK 2.1.1, SqueezeMeta 1.5.0, tMAE 1.0.1, torchvision     0.11.3, Trim_Galore 0.6.7, typing-extensions 3.10.0.2</li> </ul> </li> <li>minor enhancements, including:<ul> <li>also install Python bindings for SHTns 3.5.1     (#14893)</li> <li>add catlearn extension to easyconfig for R v4.1.2     (#14940)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update TALYS sources to (hopefully) ensure constant checksums     (#14797)</li> <li>add missing graphite2 + HarfBuzz dependencies to Qt5 v5.15.2     (#14802)</li> <li>add missing UCX-CUDA dep to GROMACS for foss-2021a-CUDA-11.3.1     (#14859)</li> <li>specify <code>easybuild.io</code> as EasyBuild homepage in <code>setup.py</code>     (#14870)</li> <li>add alternative checksum for MASS, class, nnet, spatial     extensions in R 4.1.0     (#14873)     and R 4.1.2     (#14880)     easyconfigs</li> <li>add patch to fix Kraken2 ncbi <code>ftp</code>/<code>https</code> check in     <code>rsync_from_ncbi.pl</code> for versions 2.0.9-2.1.1     (#14889)</li> <li>disable building of tests/benchmarks for snappy 1.1.8 to avoid     failing build     (#14923)</li> <li>disable use of <code>-Werror</code> for recent NSS versions     (#14924)</li> <li>fix download URL in UDUNITS v2.2.28 easyconfigs     (#14954)</li> <li>remove unnecessary CUDAcore dependency from nvtop v1.2.1     easyconfig     (#14957)</li> <li>consistently apply patch for mapDamage 2.2.1 to use external     seqtk     (#14961)</li> <li>fix typo in templated source URL in RcppGSL 0.3.8 easyconfig:     <code>$(name)s</code> should be <code>%(name)s</code>     (#14962)</li> </ul> </li> <li>other changes:<ul> <li>update Java/17 wrapper to Java 17.0.2     (#14868)</li> <li>use <code>actions/setup-python@v2</code> in CI workflows + trim test     configurations for easyconfigs test suite: only test with Python     2.7 + 3.6 and Lmod 7.x + 8.x     (#14857,     #14881)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb452","title":"EasyBuild v4.5.2 (January 24th 2022)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>automatically prepend value for <code>env-for-shebang</code> configuration     setting with sysroot     (#3919)</li> <li>enhance <code>update_build_option</code> to return original value + add     support for <code>update_build_options</code>     (#3923)</li> <li>fix compatibility with Python 3.10     (#3926,     #3933)</li> <li>also take <code>/etc/os-release</code> into account in <code>get_os_name</code> and     <code>get_os_version</code>     (#3930)</li> <li>enhance <code>get_cpu_architecture</code> and <code>get_cpu_family</code> to be aware     of RISC-V     (#3931)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>relax pattern checks in <code>test_toy_exts_parallel</code>     (#3921)</li> <li>use <code>sources.easybuild.io</code> as backup URL for downloading     Environment Modules sources to run test suite     (#3928)</li> <li>make intelfftw toolchain component aware of GCCcore     (#3929)</li> </ul> </li> <li>other changes:<ul> <li>deprecate use of (actual) patch files that don't have a     filename ending with <code>.patch</code>     (#3920)</li> <li>remove version restriction for keyring in <code>requirements.txt</code> to     test with latest version     (#3925)</li> <li>simplify <code>requirements.txt</code> by removing Python 2.6 support     (#3927)</li> <li>only run GitHub tests when testing with Lua module syntax, to     avoid hitting GitHub rate limit when running tests     (#3938)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements and updates, including:<ul> <li>remove necessity for license for oneAPI versions (&gt;= 2021.x) in     itac easyblock     (#2492)</li> <li>add CUDA support in SuiteSparse easyblock     (#2627)</li> <li>use all available cores for running Perl test suite     (#2637)</li> <li>add option to not copy the license file for Gurobi     (#2639,     #2641)</li> <li>update AOCC easyblock to support version 3.2.0     (#2643)</li> <li>don't grep for specific version in <code>--version</code> output of Intel     compiler commands for versions 2022.x     (#2644)</li> <li>add support for enabling sanity checks for specific components     in the Bundle easyblock     (#2649)</li> <li>update Libint easyblock for LibInt v2.7.0 which requires     configuring via CMake     (#2650)</li> <li>update Mathematica easyblock for version 13     (#2652)</li> <li>add sanity check command for Bazel     (#2653)</li> <li>update NAMD easyblock to allow non-system csh     (#2654)</li> <li>enhance CUDA easyblock to create version independent pkgconfig     files     (#2656)</li> <li>add <code>util</code> subdirectory to <code>$PATH</code> for WPS     (#2658)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>convert version numbers to strictly numerical in Siesta     easyblock     (#2553)</li> <li>fix shebang of scripts in Perl installation if installation     prefix is too long     (#2640)</li> <li>enhance IntelBase easyblock to avoid crash when <code>$USER</code> is not     set     (#2642)</li> <li>fix quotes in definition of default platform macro and enhance     sanity check in GATE easyblock     (#2645)</li> <li>avoid excessively long shebang line in compile script for WRF     (#2648)</li> <li>fix checking of Intel Fortran compiler version in CP2K easyblock     for recent toolchains     (#2651)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfig for intel/2022.00 toolchain     (#14620)</li> <li>added example easyconfig files for 48 new software packages:<ul> <li>alevin-fry     (#14617),     AMD-uProf     (#14626),     ANGEL     (#11857),     atropos     (#7580),     Austin     (#14596),     AutoDock-GPU     (#14671),     AutoDock-Vina     (#14675),     boost_histogram     (#14516),     CAFE5     (#14603),     Calcam     (#7488),     Carma     (#14527),     Cogent     (#14278),     dlib     (#14556),     DualSPHysics     (#14632),     dune-core     (#14693),     dune-fem     (#14693),     DyMat     (#14615),     elbencho     (#14548),     Embree     (#7471),     ExaML     (#14530),     FMPy     (#14481),     genozip     (#14583),     hivtrace     (#14691),     intervaltree-python     (#8995),     IsoNet     (#14075),     MACSE     (#14709),     MetaPhlAn     (#12917),     MicrobeAnnotator     (#14549),     mold     (#14595),     numdiff     (#14609),     OpenFace     (#14556),     PhyloPhlAn     (#14564),     PREQUAL     (#14722),     PuLP     (#14581),     PyCalib     (#14616),     PyTorch3D     (#13240),     QCG-PilotJob     (#14337),     RaGOO     (#8995),     RAPSearch2     (#13199),     SCopeLoomR     (#14518),     ShengBTE     (#14557),     SHTns     (#14682),     STRUMPACK     (#14560),     TALYS     (#14716),     TN93     (#14691),     xxHash     (#14251),     yaml-cpp     (#14547),     Zgoubi     (#14516)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>annovar 20200607, antiSMASH 5.2.0, Armadillo 10.7.5, Arrow     6.0.1, Bismark 0.23.1, BLAST+ 2.12.0, cDNA_Cupcake 26.0.0,     CHERAB 1.3.0, CMake 3.22.1, CP2K 8.2, DIAMOND 2.0.13,     dotNET-Core-Runtime 6.0.1, dotNET-SDK 6.0.101, Extrae 3.8.3,     fastp 0.23.2, FreeSurfer 7.2.0, GffCompare 0.12.6, gmsh 4.9.0,     GTK3 3.24.31, h5py 3.6.0, igraph 0.9.5, Inspector 2022.0.0,     IQ-TREE 2.1.3, itac 2021.5.0.eb, Java/15 + Java/17, JUBE 2.4.2,     libdeflate 1.8, libxsmm 1.17, LSD2 2.3, MAGMA 1.09b, MATLAB     2021b, MinPath 1.6, MultiQC 1.11, MUSCLE 5.0.1428, numba 0.54.1,     NVHPC 21.11, OBITools 1.2.13, occt 7.5.0p1, openCARP 8.2, OpenCV     3.4.1, OpenFOAM v2112, ORCA 5.0.2, phonopy 2.12.0, Pillow 8.3.2,     Pillow-SIMD 8.3.2, PLUMED 2.7.3, poppler 22.01.0, PyQtGraph     0.12.3, python-igraph 0.9.8, PyZMQ 22.3.0, Raysect 0.7.1,     Rgurobi 9.5.0, scanpy 1.8.2, Schrodinger 2021, SqueezeMeta     1.0.0, statsmodels 0.13.1, texlive 20210324, VTune 2022.0.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add yaml-cpp dependency to Trilinos 12.12.1 with foss/2019b     (#14547)</li> <li>include output of failing code style check in message produced     by failing easyconfigs style test     (#14578)</li> <li>bundle LAPACKE with FlexiBLAS 3.0.4     (#14591),     #14769)</li> <li>add extensions to R v4.1.2 easyconfig: semTools, mirt, OpenMX     (#14634),     FactorCopula     (#14648),     rpact, ldbounds     (#14750)</li> <li>add extensions to R-bundle-Bioconductor 3.14: ExomeDepth     (#14684),     DSS     (#14748),     pathview     (#14806)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix <code>homepage</code> and <code>source_urls</code> for GLIMMER 3.02b     (#7945)</li> <li>fix source URL for Trilinos 12.12.1 with foss/2019b     (#14547)</li> <li>use proper Perl dependency for worker 1.6.12 with foss/2019a     (fixes installation on RHEL8 OS)     (#14565)</li> <li>fix checksum and versions of annovar v20191024     (#14579)</li> <li>add patch for Rust 1.52.2 and 1.54.0 to fix build when using     alternate sysroot     (#14584)</li> <li>retain version in filename for cromwell sources     (#14586)</li> <li>specify compiler to use in WildMagic easyconfig     (#14594)</li> <li>avoid need for git build dependency for recent x265 easyconfigs     (#14605)</li> <li>fix broken patch file for recent GPAW versions     (#14619)</li> <li>add alternative checksum for Siesta-4.1-MaX-1.0     (#14643)</li> <li>add missing PCRE dependency for pullseq + add sanity check     commands     (#14650)</li> <li>use <code>%(arch)s</code> template to avoid hardcoding <code>x86_64</code> in recent     XML-LibXML easyconfigs     (#14655)</li> <li>fix name for (binary) AutoDock-Vina v1.1.2     (#14675)</li> <li>add patch to fix memory leak in OpenMPI that heavily affects     CP2K, SIESTA, QuantumESPRESSO, VASP, ...     (#14726)</li> <li>set <code>$GRPC_PYTHON_BUILD_EXT_COMPILER_JOBS</code> for installing grcpio     extension included with:<ul> <li>TensorFlow 2.2.3-2.4.1 with 2020* toolchain     (#14729)     and 2.5.0+     (#14728)</li> <li>Ray-project     (#14730)</li> </ul> </li> <li>enforce using internal boost for bcl2fastq2 with a GCC 10.x     toolchain     (#14741)</li> <li>add patch for hard-coded checksum value of downloaded source     file in the source code of RDKit 2021.03.4     (#14743)</li> <li>also install <code>libaio.so.1</code> symlink in easyconfigs for libaio     v0.3.112     (#14745)</li> <li>do not use external libgcrypt or python for libxslt with recent     toolchains     (#14756)</li> <li>add patches to fix CVE-2021-23437 for Pillow     (#14765)     and Pillow-SIMD     (#14792)</li> <li>add libXfont2 patch to fix build when libbsd is present     (#14821)</li> </ul> </li> <li>other changes:<ul> <li>update Java 1.8 wrapper to 1.8.0_311 for x86_64     (#14644)</li> <li>bring gffread back down to GCCcore level for toolchain version     10.3.0     (#14660)</li> <li>update build dependencies for recent binutils + GCCcore     easyconfigs to avoid depending on M4 1.4.18 with system     toolchain     (#14731),     #14755)</li> <li>bump nbconvert extension in recent IPython easyconfigs to     version 6.4.0     (#14738)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb451","title":"EasyBuild v4.5.1 (December 13th 2021)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>also dump environment to reprod directory     (#3374)</li> <li>determine which extensions can be skipped in parallel (if     <code>--parallel-extensions-install</code> is enabled)     (#3890)</li> <li>fall back to sequential installation for extensions with unknown     dependencies when using <code>--parallel-extensions-install</code>     (#3906)</li> <li>allow oversubscription in sanity check for OpenMPI-based     toolchains     (#3909)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>don't try to ensure absolute path for path part of     <code>repositorypath</code>     (#3893,     #3899)</li> <li>fix typo in EULA agreement error message     (#3894)</li> <li>only remove lock if it was created in the same EasyBuild session     (not if it existed already)     (#3889)</li> <li>introduce <code>EasyBlock.post_init</code> method to correctly define     <code>builddir</code> variable when <code>build-in-installdir</code> mode is enabled     in easyconfig or easyblock     (#3900)</li> <li>also show download progress bar when using <code>--inject-checksums</code>     (#3905)</li> <li>pick up custom <code>extract_cmd</code> specified for extension     (#3907)</li> <li>make <code>test_run_cmd_async</code> more robust against fluke failures     (#3908)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for Clang-AOMP     (#2617)</li> <li>minor enhancements and updates, including:<ul> <li>enhance Rpm generic easyblock to support installing tarball of     RPMs (by unpacking it first) + take into account     <code>(pre)installopts</code>     (#2580)</li> <li>add option to control use of MKL-DNN in jaxlib easyblock     (#2619)</li> <li>update SAMtools easyblock to support installation of SAMtools     1.14     (#2620)</li> <li>add option to ignore PLUMED version check for GROMACS     (#2621)</li> <li>update Inspector easyblock for recent versions (&gt;= 2021, oneAPI     versions)     (#2624)</li> <li>enhance tbb easyblock by adding option to build Python bindings     (#2626)</li> <li>fix patching of <code>CMakeLists.txt</code> for Eigen v3.4     (#2633)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update CP2K easyblock to use <code>-D__MKL</code> for CP2K versions newer     than 2.3     (#2586)</li> <li>set OpenMPI configuration for ORCA sanity check     (#2596)</li> <li>allow oversubscription in OpenMPI sanity check     (#2611)</li> <li>set <code>wm_*</code> class variables in OpenFOAM easyblock constructor (to     fix <code>--sanity-check-only</code>)     (#2616)</li> <li>remove newline from easybuild-easyblocks package description     (required to avoid installation error with setuptools&gt;=59.0.0)     (#2623)</li> <li>avoid patching binary files + other enhancements for MUMmer     easyblock     (#2630)</li> <li>enable <code>build-in-installdir</code> mode in constructor of PETSc and     SLEPc easyblocks     (#2631)</li> <li>skip netcdf4-python tests that require network connectivity     (#2634)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 71 new software packages:<ul> <li>ANIcalculator     (#14478,     #14494,     #14510),     arrow-R     (#14267),     ASAP     (#14367),     BabelStream     (#14503),     bamtofastq     (#14391),     bcbio-gff     (#14322),     biom-format     (#13205),     Blosc2     (#14247),     boto3     (#14452),     Brotli-python     (#14528),     Brunsli     (#14247),     Clang-AOMP     (#14327),     CLEASE     (#14413),     CMSeq     (#14326),     cpu_features     (#14385),     cromwell     (#12125),     cxxopts     (#14487,     #14504),     dRep     (#14479),     DUBStepR     (#14495),     eht-imaging     (#14239),     einops     (#14373),     ELFIO     (#14488,     #14504),     elprep     (#14422),     epiScanpy     (#14447),     FMM3D     (#14257),     FORD     (#13653),     GPy     (#14380),     HIP     (#14339),     idemux     (#14499),     imagecodecs     (#14247),     InChI     (#13902),     jupyter-matlab-proxy     (#14270),     jxrlib     (#14247),     LBFGS++     (#14230),     LERC     (#14247),     libaec     (#14247),     libavif     (#14246),     LibLZF     (#14246),     libnsl     (#14494),     libtree     (#14501),     LPeg     (#14157),     Megalodon     (#14256),     nnU-Net     (#14249),     PAL2NAL     (#14430),     photontorch     (#14410),     pkgconf     (#14426),     pmx     (#14319),     PPanGGOLiN     (#14449),     ProFit     (#14340),     pugixml     (#14367,     #14492),     PySide2     (#13460),     Relate     (#14443),     ROCm     (#14355),     rocm-cmake     (#14327),     ROCm-CompilerSupport     (#14327),     rocminfo     (#14327),     rocm-smi     (#14354),     ROCR-Runtime     (#14327),     ROCT-Thunk-Interface     (#14327),     SCENIC     (#14260),     Shasta     (#14385),     SimNIBS     (#14257),     SMV     (#14157),     SRST2     (#14253),     STACEY     (#14293),     termcolor     (#14489,     #14504),     ThemisPy     (#14231),     TOBIAS     (#14452,     #14458),     zfp     (#14246),     zlib-ng     (#14246),     Zopfli     (#14246)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 9.6.2, ABRicate 1.0.0, AlphaFold 2.1.1, antiSMASH 6.0.1,     Arrow 6.0.0, astropy 4.3.1, BCFtools 1.14, BeautifulSoup 4.9.3,     Boost 1.77.0, bpp 4.4.0, Bracken 2.6.2, CapnProto 0.9.1,     CellRanger 6.1.2, Eigen 3.4.0, enaBrowserTool 1.6, ESMF 8.2.0,     Flye 2.9, FMRIprep 1.4.1, FSL 6.0.4, GATK 4.2.3.0, gc 8.2.0, GDB     11.1, git 2.33.1, Go 1.17.3, Gurobi 9.5.0, Horovod 0.23.0,     HTSlib 1.14, HyPhy 2.5.33, Infernal 1.1.4, Inspector 2021.4.0     ITK 5.2.1, jax 0.2.24, Julia 1.7.0, Kent_tools 422, king 2.2.7,     libdwarf 20210528, MAFFT 7.490, makeinfo 6.8, Mash 2.3,     matplotlib 3.4.3, MCR R2021b, minimap2 2.22, MUST 1.7.2, NCO     5.0.3, NCO 5.0.3, nlohmann_json 3.10.4, NVHPC 21.9, OpenMPI     4.0.7 + 4.1.2, panaroo 1.2.9, pangolin 3.1.16, pkgconfig 1.5.5,     plotly.py 5.4.0, pyfaidx 0.6.3.1, Pysam 0.17.0, PyTorch 1.10.0,     R 4.1.2, R-bundle-Bioconductor 3.14, ReFrame 3.9.1, rpy2 3.4.5,     scikit-image 0.18.3, scikit-learn 1.0.1 SimpleITK 2.1.0,     snakemake 6.10.0, SPAdes 3.15.3, tbb 2021.4.0, torchtext 0.10.0,     torchvision 0.11.1, tqdm 4.62.3, TRUST4 1.0.6, Trycycler 0.5.2,     Unicycler 0.4.9, UShER 0.5.0, WPS 4.3.1, xarray 0.20.1,     XlsxWriter 3.0.2, Yambo 5.0.4</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add RcisTarget + NMF extensions to R-bundle-Bioconductor 3.13     (#14259)</li> <li>add extensions for R v4.1.x:<ul> <li>geex + momentfit     (#14299);     StatMatch, leaflet, tmap + collapse     (#14328),     genoPlotR + penfa     (#14433),     adcovsim     (#14484)</li> </ul> </li> <li>add M3Drop extension to R-bundle-Bioconductor 3.14     (#14436)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>specify to use Python provided as dependency, remove     <code>separate_build_dir</code>, and fix URL in comment for Arrow 0.17.1     (#14263)</li> <li>fix <code>gettid</code> nameclash with glibc 2.30 in Bazel 0.25.2, 0.26.1,     0.29.1, and 1.1.0     (#14269)</li> <li>restore and fix sanity check commands in RStudio-Server 1.4     (#14275)</li> <li>add pkg-config build dependency to Python easyconfigs, to ensure     OpenSSL wrapper is detected     (#14316)</li> <li>add patch for UCX v1.11.2 to fix missing include statement for     <code>string.h</code>     (#14317)</li> <li>set <code>$DALTON_TMPDIR</code> to build directory to run Dalton tests     (#14341)</li> <li>add patch for libfabric v1.12.1 to fix <code>unknown link width 0x10</code>     warning     (#14387)</li> <li>add missing Automake dependency to PhyML 3.3.20200621     (#14397)</li> <li>add git as build dependency to Python 3.8.x and 3.9.x     easyconfigs (required for pbr extension)     (#14421)</li> <li>add missing XZ dependency to recent PROJ easyconfigs     (#14429)</li> <li>fix homepage/source URL for king v2.2.4     (#14444)</li> <li>add patch for GCCcore 9.1-9.3 to fix compatibility with recent     kernel headers     (#14453)</li> <li>add patch for GCCcore 10.1-11.1 to fix compatibility with recent     kernel headers     (#14454)</li> <li>add patch to fix CVE-2021-43527 in NSS     (#14497)</li> <li>pass tests on A* GPUs by setting <code>NVIDIA_TF32_OVERRIDE=0</code> in     jax 0.2.19     (#14502)</li> <li>add patch to fix broken (hanging) Mash binaries     (#14511)</li> <li>add missing Perl build dependency for Longshot     (#14535)</li> <li>add googletest build dependency for Highway     (#14536)</li> <li>seed in PCRE2 sources to fix broken MariaDB 10.5.8 + 10.6.4     easyconfigs     (#14537)</li> </ul> </li> <li>other changes:<ul> <li>rename R bindings for Arrow to arrow-R, so it can be used in a     lowercase module naming scheme     (#14262)</li> <li>comment out imkl build dependency for FlexiBLAS 3.0.4 with     GCC/11.2.0     (#14335)</li> <li>don't add <code>bin</code> subdir to <code>$PATH</code> via <code>modextrapaths</code> in     ReFrame easyconfigs     (#14415)</li> <li>consistently use 'Grace' software name + sync     <code>homepage</code>/<code>source_urls</code>     (#14493)</li> <li>move cxxopts, termcolor and ELFIO header only libraries to     <code>SYSTEM</code> toolchain     (#14504)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb450","title":"EasyBuild v4.5.0 (October 29th 2021)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add <code>--review-pr-max</code> and <code>--review-pr-filter</code> options to limit     easyconfigs used by <code>--review-pr</code> + retain order of easyconfigs     being compared with     (#3754)</li> <li>use Rich (if available) to show progress bars when installing     easyconfigs     (#3823,     #3826,     #3833,     #3835,     #3844,     #3864,     #3867,     #3882)<ul> <li>see also     https://docs.easybuild.io/en/latest/Progress_bars.html</li> </ul> </li> <li>add support for checking required/optional EasyBuild     dependencies via <code>eb --check-eb-deps</code>     (#3829)</li> <li>add support for collecting GPU info (via <code>nvidia-smi</code>), and     include it in <code>--show-system-info</code> and test report     (#3851)</li> <li>added support for <code>--insecure-download</code> configuration option     (#3859)</li> <li>make intelfftw toolchain component aware of imkl-FFTW module     (#3861)</li> <li>make sure the contrib/hooks tree is included in the source     tarball for easybuild-framework     (#3862)</li> <li>add <code>check_async_cmd</code> function to facilitate checking on     asynchronously running commands     (#3865,     #3881)</li> <li>add initial/experimental support for installing extensions in     parallel     (#3667,     #3878)<ul> <li>see also     https://docs.easybuild.io/en/latest/Installing_extensions_in_parallel.html</li> </ul> </li> <li>filter out duplicate paths added to module files, and print     warning when they occur     (#3770,     #3874)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ensure that path configuration options have absolute path values     (#3832)</li> <li>fix broken test by taking into account changed error raised by     Python 3.9.7 when copying directory via <code>shutil.copyfile</code>     (#3840)</li> <li>ensure newer location of CUDA stubs is taken into account by     RPATH filter     (#3850)</li> <li>replace <code>which</code> by <code>command -v</code> in <code>eb</code> wrapper script to avoid     dependency on <code>which</code> command     (#3852)</li> <li>refactor EasyBlock to decouple collecting of information on     extension source/patch files from downloading them     (#3860)<ul> <li>in this context, the <code>EasyBlock.fetch_extension_sources</code>     method was deprecated, and replaced by     <code>EasyBlock.collect_exts_file_info</code></li> </ul> </li> <li>fix library paths to add to <code>$LDFLAGS</code> for intel-compilers     toolchain component     (#3866)</li> <li>remove <code>--depth 1</code> from git clone when <code>commit</code> specified     (#3871,     #3872)</li> <li>make sure correct include directory is used for FlexiBLAS     toolchain component     (#3875)</li> <li>explicitly disable rebase when pulling develop branch to create     a merge commit, since not specifying how to reconcile divergent     branches is an error with Git 2.33.1 and newer     (#3879)</li> <li>tweak <code>test_http_header_fields_urlpat</code> to download from     <code>sources.easybuild.io</code> rather than <code>https://ftp.gnu.org</code>     (#3883)</li> </ul> </li> <li>other changes:<ul> <li>change <code>copy_file</code> function to raise an error when trying to     copy non-existing file     (#3836,     #3855,     #3877)</li> <li>only print the hook messages if EasyBuild is running in debug     mode     (#3843)</li> <li>deprecate old toolchain versions (pre-2019a common toolchains)     (#3876,     #3884)<ul> <li>see also     https://docs.easybuild.io/en/latest/Deprecated-easyconfigs.html#deprecated-toolchains</li> </ul> </li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for imkl-FFTW     (#2599)</li> <li>minor enhancements and updates, including:<ul> <li>add support for installing R extensions in parallel     (#2408)</li> <li>update MotionCor2 easyblock to consider to locations for built     binary     (#2541,     #2598)</li> <li>let GROMACS runtime logs show EasyBuild was used by setting     <code>-DGMX_VERSION_STRING_OF_FORK</code> configuration option     (#2571)</li> <li>adjust qa list in WIEN2k easyblock to handle new questions + fix     sanity check for v21.1     (#2572)</li> <li>enhance GCC easyblock to add support for AMD GPU offloading     (#2578)</li> <li>add support for specifying subdirectory for target installation     directory in CMakeMake     (#2579)</li> <li>enhance COMSOL easyblock to change permission on build directory     during extract step (to allow using patches)     (#2584)</li> <li>enhance FlexiBLAS easyblock to support building with Intel MKL     (imkl) as backend     (#2588)</li> <li>update MATLAB easyblock for 2021b (jre is no longer included)     (#2589)</li> <li>update OpenCV easyblock to detect GTK3 and GTK2 dependencies     (next to GTK+)     (#2591)</li> <li>avoid that path to CUDA install directory is added to <code>$PATH</code>     (#2593)</li> <li>enhance imkl easyblock to add support for installing with NVHPC     (#2595)</li> <li>enhance PETSc easyblock to run tests in parallel     (#2601)</li> <li>update ELSI easyblock to support two new external dependencies     (#2602)</li> <li>add custom custom easyconfig parameter <code>backends</code> in FlexiBLAS     easyblock to specify backends     (#2605)</li> <li>detect problem with compiling CPU detection code in configure     output in GROMACS easyblock     (#2609)</li> <li>use correct include directory for FlexiBLAS     (#2610)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>unset <code>$EASYBUILD_*</code> environment variables when running sanity     check in EasyBuildMeta easyblock + also unset     <code>$MODULES_LMCONFLICT</code> to avoid conflict when loading EasyBuild     module     (#2568)</li> <li>ensure that all ABAQUS components get installed for ABAQUS     2021.x (+ add support for enabling/disabling fe-safe)     (#2569)</li> <li>fix subdir path in VTune easyblock for 2021.x versions + add     sanity check command     (#2576)</li> <li>make sure custom easyblock for installing EasyBuild respects     requested version of Python (like <code>$EB_PYTHON</code>)     (#2581)</li> <li>restore RPATH wrappers for OpenMPI sanity check     (#2582)</li> <li>fix installation of libcp2k for recent CP2K versions     (#2585)</li> <li>make version regex in OpenSSL wrapper easyblock less strict     (version string does not always end with a letter)     (#2597)</li> <li>redefine <code>collect_exts_file_info</code> instead of now deprecated     fetch_extension_sources in OCaml easyblock     (#2603)</li> </ul> </li> <li>other changes:<ul> <li>don't use <code>--config=mkl</code> for TensorFlow 2.4+     (#2583)<ul> <li>this fixes some performance related issues for TensorFlow,     see     https://github.com/easybuilders/easybuild-easyblocks/issues/2577     and     https://github.com/easybuilders/easybuild-easyconfigs/issues/14120</li> </ul> </li> <li>fix support for recent imkl version in numexpr easyblock     (#2606)</li> <li>derive custom easyblock from MotionCor2 from PackedBinary     instead of EasyBlock     (#2607)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for foss/2021b     (#14217)     and intel/2021b     (#14218)     common toolchains<ul> <li>see also     https://docs.easybuild.io/en/latest/Common-toolchains.html</li> </ul> </li> <li>add easyconfig for gobff/2021a toolchain     (#14019,     #14038)</li> <li>added example easyconfig files for 39 new software packages:<ul> <li>abTEM     (#13974),     ARTS     (#9651),     AutoGeneS     (#13903),     bashplotlib     (#13942),     CIRI-long     (#13985),     DFT-D4     (#12803),     ELSI-RCI     (#14147),     ESL-Bundle     (#14179),     expecttest     (#14106),     fdict     (#14161),     flook     (#14161),     FreeTDS     (#13952),     HDBSCAN     (#14062),     imkl-FFTW     (#14195),     isoCirc     (#13982),     libfdf     (#14173),     libmbd     (#14129),     libpspio     (#14173),     libSBML     (#14050),     longread_umi     (#13987),     Mesa-demos     (#14123),     MixMHC2pred     (#14041),     NTPoly     (#14183),     OpenSceneGraph     (#14197),     panaroo     (#14203),     PEPT     (#14077),     pycoQC     (#14012),     python-docx     (#13930),     QD     (#14122),     radeontop     (#14124),     Rgurobi     (#14188),     RInChI     (#14049),     scGeneFit     (#13963),     swifter     (#14114),     TOML-Fortran     (#13929),     TRUST4     (#14035),     ucx-py     (#14051),     vawk     (#14040),     VMTK     (#14023)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>AlphaFold 2.0.1, artic-ncov2019 2021.06.24, BerkeleyGW 3.0.1,     bokeh 2.4.1, Boost.Python 1.76.0, canu 2.2, Cartopy 0.20.0, CP2K     8.2, CUDA 11.4.2, Dalton 2020.0, dask 2021.9.1, edlib 1.3.9,     ELSI 2.7.1, FFTW 3.3.10, GD 2.73, GDAL 3.3.2, GTDB-Tk 1.7.0,     ImageJ 1.52q, jax 0.2.20, Kraken2 2.1.2, leidenalg 0.8.7,     libfabric 1.13.2, libspatialindex 1.9.3, libxc 5.1.6, libxsmm     1.16.2, lifelines 0.26.3, Longshot 0.4.3, LSD2 2.2, MAFFT 7.487,     MEME 5.4.1, MotionCor2 1.4.4, NCCL 2.11.4, netCDF 4.8.1,     networkx 2.6.3, Nextflow 21.08.0, OpenBLAS 0.3.18, OpenCV 4.5.3,     OrthoFinder 2.5.4, OSU-Micro-Benchmarks 5.8, PhyML 3.3.20200621,     PostgreSQL 13.4, pygraphviz 1.7, pyproj 3.1.0,     python-Levenshtein 0.12.1, PyTorch-Geometric 2.0.1, QIIME2     2021.8.eb, Qiskit 0.31.0, QuantumESPRESSO 6.8, Racon 1.4.21,     rampart 1.2.0, rclone 1.56.0, RDKit 2021.03.4, SAMtools 1.13,     scanpy 1.8.1, scikit-allel 1.3.3, SciPy-bundle 2021.10, Seaborn     0.11.2, SHAPEIT4 4.2.2, spglib 1.16.2, UCX 1.11.2, UCX-CUDA     1.11.2, VSEARCH 2.18.0, Z3 4.8.12, zarr 2.10.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add JASPAR2020 to R-bundle-Bioconductor 3.13     (#13962)</li> <li>add Autotools as build dependency for CubeGUI-4.6     (#14109)</li> <li>add compiler/parallel/tcltk R libraries included in base     installation to extensions in recent R easyconfigs     (#14189,     #14190,     #14194)<ul> <li>required for parallel installation of extensions for these R     easyconfigs</li> </ul> </li> <li>also add location to MPI startup tests to <code>$PATH</code> in     OSU-Micro-Benchmarks easyconfigs     (#14126)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing Brotli dependency to freetype     (#13915,     #14002)</li> <li>add patch for OpenBLAS 0.3.15 to fix failing numpy tests on     aarch64     (#13923)</li> <li>fix source URL + add alternate checksum for ADMIXTURE 1.3.0     (#13933)</li> <li>just use <code>cp</code> to copy <code>stereo_chemical_props.txt</code> to AlphaFold     installation directory     (#13938)</li> <li>add UnZip build dependency to TensorFlow 2.4.1     (#13958),     2.5.0     (#13959)     and 2.6.0 easyconfigs     (#13960)</li> <li>add missing Python dependency for WIEN2k 21.1 + patch to fix     build failure for <code>lapw0_mpi</code> with libxc     (#13961)</li> <li>add additional valid checksum for lhs 1.1.1 extension in recent     R 4.0.x and 4.1.0 easyconfigs     (#13969)</li> <li>fix Fortran system call stdout/err redirection for WIEN2k v21.1     (#13972)</li> <li>add OpenSSL dependency to Kent_tools 418 easyconfig to fix a     link error     (#13989)</li> <li>make binutils a build-only dependency for Brotli + add sanity     check command     (#14004)</li> <li>fix installation of Racon v1.4.7 with gcccuda/2019b after move     of ClaraGenomicsAnalysis repository     (#14010)</li> <li>fix source URL for KEGG.db extension in R-bundle-Bioconductor     3.13 easyconfig (since it's a deprecated library now)     (#14013)</li> <li>add patch for BLIS 0.8.1 to fix dgemm FPE signalling on     Broadwell     (#14018)</li> <li>add patch to fix installation of TensorFlow 2.2.3 on POWER     (#14025)</li> <li>fix AmberTools v20 easyconfig using intel/2020a toolchain     (#14028)</li> <li>fix download + permissions of binary for USEARCH v11.0.667     (#14036)</li> <li>remove h5py 3.x dependency for Keras with 2020b toolchain, since     TensorFlow provides (and requires) h5py 2.x     (#14052)</li> <li>correctly specify install prefix for CUDA in     OSU-Micro-Benchmarks after renaming CUDAcore to CUDA for 2021a     (#14063)</li> <li>add patch to fix failing file system cache test for jax on     recent Linux kernels     (#14067),     #14070)</li> <li>fix compilation of BWA 0.7.17 with GCC/10.2.0 on POWER     (#14073)</li> <li>add missing dependencies for recent LibTIFF versions: XZ,     jbigkit, zstd     (#14079)</li> <li>add missing header file to existing versions of jbigkit     (#14081)</li> <li>fix source URL for SUNDIALS 5.x     (#14092,     #14096)</li> <li>add Perl and Python runtime dependencies to Bowtie2 2.4.4     (#14097)</li> <li>fix source URL for SCOTCH 6.1.0     (#14099)</li> <li>drop tcmalloc from SymEngine as it causes crashes with scipy     (#14119)</li> <li>fix homepage + description in SimpleITK easyconfigs     (#14125)</li> <li>add missing scripts from <code>utils</code> and <code>analysis_scripts</code> to <code>bin</code>     for cryoDRGN     (#14137)</li> <li>patch <code>rsync_from_ncbi.pl</code> in Kraken2 v2.1.2 to allow syncing     with NCBI servers over HTTPS     (#14148)</li> <li>skip <code>mkl_fused_batch_norm_op_test</code> test (broken on AMD EPYC     systems) for TensorFlow 2.5.0 and 2.6.0     (#14151,     #14153)</li> <li>fix incorrect module load message and update morphology plugin     of ImageJ 1.51k     (#14152)</li> <li>fix XCrySDen v1.6.2 linking to libdl and Togl     (#14160)</li> <li>add patch to fix PMIx detection in OpenMPI v4.0.3, v4.0.5,     v4.1.0     (#14177)</li> <li>add patch for OpenBLAS 0.3.17 + 0.3.18 to fix segfault triggered     by scipy tests     (#14178)</li> <li>fix spatstat.* downloads for Seurat v4.0.1     (#14199)</li> <li>add patch for GROMACS 2019.3 easyconfigs using CMake 3.15.3 to     fix CPU detection     (#14212)</li> </ul> </li> <li>other changes:<ul> <li>remove help2man build dependency for flex using system toolchain     (because it requires Perl)     (#13922)</li> <li>use proper dependency for python-Levenshtein in CIRI-long     easyconfig     (#13985)</li> <li>in-place updates for foss/2021b and intel/2021b common     toolchains<ul> <li>update to UCX(-CUDA) 1.11.2 as dependency for OpenMPI     v4.1.1 + NCCL v2.10.3     (#14090)</li> <li>update libfabric to 1.13.1 in OpenMPI and add it as a     dependency in PMIx for the upcoming foss 2021b toolchain     (#14164)</li> <li>update to OpenBLAS 0.3.18 as dependency for FlexiBLAS     3.0.4 with GCCcore/11.2.0 toolchain     (#14167)</li> <li>update libfabric to 1.13.2 in OpenMPI v4.1.1 + PMIx 4.1.0     for the upcoming foss/2021b toolchain     (#14176)</li> </ul> </li> <li>remove format mapping from homepage of Subread easyconfigs     (#14145)</li> <li>add BLIS and imkl (x86_64 only) builddependencies to FlexiBLAS     0.3.4 with GCC/11.2.0 toolchain     (#14225)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb442","title":"EasyBuild v4.4.2 (September 7th 2021)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add per-extension timing in output produced by <code>eb</code> command     (#3734)</li> <li>add definition for new toolchain <code>nvpsmpic</code> (NVHPC +     ParaStationMPI + CUDA)     (#3736)</li> <li>include list of missing libraries in warning about missing FFTW     libraries in <code>imkl</code> toolchain component     (#3776)</li> <li>check for recursive symlinks by default before copying a folder     (#3784)</li> <li>add <code>--filter-ecs</code> configuration option to filter out     easyconfigs from set of easyconfigs to install     (#3796)</li> <li>check type of <code>source_tmpl</code> value for extensions, ensure it's a     string value (not a list)     (#3799)</li> <li>also define <code>$BLAS_SHARED_LIBS</code> &amp; co in build environment     (analogous to <code>$BLAS_STATIC_LIBS</code>)     (#3800)</li> <li>report use of <code>--ignore-test-failure</code> in success message in     output     (#3806)</li> <li>add <code>get_cuda_cc_template_value</code> method to <code>EasyConfig</code> class     (#3807)</li> <li>add support for <code>fix_bash_shebang_for</code>     (#3808)</li> <li>pick up <code>$MODULES_CMD</code> to facilitate using Environment Modules     4.x as modules tool     (#3816)</li> <li>use more sensible branch name for creating easyblocks PR with     <code>--new-pr</code>     (#3817)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>remove Python 2.6 from list of supported Python versions in     <code>setup.py</code>     (#3767)</li> <li>don't add directory that doesn't include any files to <code>$PATH</code>     or <code>$LD_LIBRARY_PATH</code>     (#3769)</li> <li>make logdir writable also when <code>--stop</code>/<code>--fetch</code> is used and     <code>--read-only-installdir</code> is enabled     (#3771)</li> <li>fix forgotten renaming of <code>l</code> to <code>char</code> in <code>__init__.py</code> that is     created for included Python modules     (#3773)</li> <li>fix <code>verify_imports</code> by deleting all imported modules before     re-importing them one by one     (#3780)</li> <li>fix <code>ignore_test_failure</code> not set for Extension instances     (#3782)</li> <li>update <code>iompi</code> toolchain to <code>intel-compiler</code> subtoolchain for     oneAPI versions (&gt;= <code>iompi</code> 2020.12)     (#3785)</li> <li>don't parse patch files as easyconfigs when searching for where     patch file is used     (#3786)</li> <li>make sure git clone with a tag argument actually downloads a tag     (#3795)</li> <li>fix CI by excluding GC3Pie 2.6.7 (which is broken with Python 2)     and improve error reporting for option parsing     (#3798)</li> <li>correctly resolve templates for patches in extensions when     uploading to GitHub     (#3805)</li> <li>add <code>--easystack</code> to ignored options when submitting job     (#3813)</li> </ul> </li> <li>other changes:<ul> <li>speed up tests by caching checked paths in <code>set_tmpdir</code> + less     test cases for <code>test_compiler_dependent_optarch</code>     (#3802)</li> <li>speed up <code>set_parallel</code> method in <code>EasyBlock</code> class     (#3812)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>4 new software-specific easyblocks:<ul> <li>CRISPR-DAV     (#2487),     jaxlib     (#2545),     ORCA     (#2504),     RepeatModeler     (#2470)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>update ABAQUS easyblock to support installation of v2020     (#2034)</li> <li>enable make check and sanity check exec for OpenMPI     (#2444)</li> <li>fixed sanity check for later versions of Molpro     (#2499)</li> <li>add Ampere to known GPU architectures for Kokkos in LAMMPS     easyblock     (#2510)</li> <li>update sanity check in ESMF easyblock to take into account new     binary names from version 8.1.0 onwards     (#2512)</li> <li>use <code>report_test_failure</code> in TensorFlow easyblock     (#2519)</li> <li>add support for imkl 2021.x in easyblocks for<ul> <li>Amber     (#2527),     BerkeleyGW     (#2528),     CP2K     (#2529),     FreeFEM     (#2530),     GROMACS     (#2531),     numexpr     (#2532)</li> </ul> </li> <li>add <code>install_src</code> option and enhance <code>buildcmd</code> option in     PythonPackage easyblock     (#2534)</li> <li>make sure AOCC commands like clang/flang pick up <code>GCCcore</code> as     GCC toolchain     (#2538)</li> <li>create <code>CMakeConfig</code> files for tbb &gt;= 2020     (#2539)</li> <li>find source dir for libunwind when building ldd for Clang     versions &gt;= 12.0.1     (#2540)</li> <li>fix motorBike test in sanity check for OpenFOAM 9     (#2544)</li> <li>generate and install pkg-config files for OpenSSL wrapper     (#2549)</li> <li>don't run <code>setup.py config</code> for numpy &gt;= 1.21, since it's no     longer supported     (#2554)</li> <li>update WIEN2k easyblock to handle new Intel versions, WIEN2k     v21, Perl dependency, and tuning of dimension parameters     (#2558)</li> <li>remove PCRE from list of system libraries for TensorFlow 2.6.0     (#2559)</li> <li>add support for also installing Tosca component in ABAQUS     (#2560)</li> <li>update ABAQUS easyblock to support installing of version 2021     with hot fixes     (#2562)</li> <li>update sanity check in VTune easyblock for 2021.x versions     (#2563)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>handle failure of running <code>nvidia-smi</code> in TensorFlow tests     (#2506)</li> <li>remove Python 2.6 from list of supported Python versions in     <code>setup.py</code>     (#2507)</li> <li>clean up installation of Tkinter     (#2509)</li> <li>remove redundant <code>$CPATH</code> entry of tbb modules + fix     <code>--module-only</code>     (#2511)</li> <li>honor <code>--ignore-test-failure</code> in PythonPackage     (#2516)</li> <li>use correct GTK+ version for OpenCV based on dependencies     (#2520)</li> <li>ensure Python prep is done in sanity check + support debug     builds in TensorFlow easyblock     (#2522)</li> <li>correct cleanup of single-letter local variable in <code>__init__</code> of     <code>easybuild.easyblocks</code>     (#2524)</li> <li>reset runtest to <code>None</code> in CMakePythonPackage     (#2536)</li> <li>set <code>$I_MPI_ROOT</code> correctly for 2021.x in impi easyblock     (#2537)</li> <li>let Bundle easyblock pick up custom easyblock for components     based on name if no easyblock is specified explicitly     (#2543,     #2547)</li> <li>explicitly use only OpenBLAS for PyTorch if MKL is not used     (#2448)</li> <li>keep symlinks in cuDNN installations     (#2550)</li> <li>use <code>${BLAS,LAPACK}_SHARED_LIBS</code> in GROMACS easyblock for     FlexiBLAS-based toolchains     (#2552)</li> <li>copy the list to avoid changing the original lists in     <code>DEFAULT_TARGETS_MAP</code> for Clang and LLVM     (#2556)</li> <li>fix <code>pathsep</code> <code>join</code> bug that breaks installation of CUDA     versions &lt; 10.1 if <code>$PERL5LIB</code> is defined     (#2561)</li> </ul> </li> <li>other changes:<ul> <li>simplify Boost easyblock     (#2513)</li> <li>remove deprecated options from PythonPackage     (#2535)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfig for foss/2021.07 (candidate for foss/2021b)     (#13788)     and iomkl/2021a     (#13521)     toolchains</li> <li>added example easyconfig files for 79 new software packages:<ul> <li>AlphaFold     (#13867),     andi     (#13768),     aria2     (#13709),     AUTO-07p     (#13831),     babl     (#13216),     BAli-Phy     (#13484),     biogeme     (#13735),     Bio-SearchIO-hmmer     (#13419),     BuDDy     (#13907),     c-ares     (#13709),     CellRank     (#13408),     Coin     (#13818),     Co-phylog     (#13769),     cppy     (#13823),     CREST     (#13648),     CRISPR-DAV     (#13139),     CSBLAST     (#13794),     DGL     (#13793),     DistributedStream     (#13659),     Excel-Writer-XLSX     (#13139),     FBPIC     (#13500),     freebayes     (#12859),     freud-analysis     (#13354),     fumi_tools     (#13517),     GEGL     (#13216),     GIMP     (#13216),     glib-networking     (#13216),     GOATOOLS     (#13364,     #13629),     gofasta     (#13651),     GTK2     (#13900),     GTK3     (#13900),     Highway     (#13453),     hipSYCL     (#13837),     ISA-L     (#13663),     jax     (#13760),     JSON-GLib     (#13216),     Kalign     (#13463),     LADR     (#13351),     lDDT     (#13794),     libdivsufsort     (#13768),     libjxl     (#13453,     #13829),     libmypaint     (#13216),     libtecla     (#13908),     lie_learn     (#13793),     longestrunsubsequence     (#13800),     Maude     (#13909),     mimalloc     (#13726),     MINPACK     (#13802),     Mish-Cuda     (#13759,     #13784),     muparserx     (#13779),     nlohmann_json     (#13777),     OpenStackClient     (#13644),     OSPRay     (#12852),     pandapower     (#13687),     pangolin     (#13733,     #13848),     PSIPRED     (#13794),     PYPOWER     (#13689),     PyPSA     (#13673),     PyRosetta     (#13793),     pysamstats     (#13139),     pytest-benchmark     (#13622),     python-isal     (#13663),     QCxMS     (#13650),     RepeatModeler     (#13126),     Schrodinger     (#11698),     sklearn-som     (#13699),     SoQt     (#13818),     spdlog     (#13778),     SpectrA     (#13743),     SymEngine-python     (#13652),     SyRI     (#13800),     torchinfo     (#13662),     TRAVIS-Analyzer     (#13503),     UShER     (#13708),     Vampire     (#13352),     VBZ-Compression     (#13536),     VisPy     (#13468),     wgsim     (#13475),     Yices     (#13906)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABAQUS 2020.eb, ANTs 2.3.5, AOCC 3.1.0, Arb 2.19.0, archspec     0.1.2, Armadillo 10.5.3, ASE 3.22.0, Autotools 20210726,     BamTools 2.5.2, bgen 4.1.3, Biopython 1.79, bitarray 1.5.3,     Boost 1.76.0, Bowtie2 2.4.4, bpytop 1.0.67, Cartopy     0.19.0.post1, Centrifuge 1.0.4, Clang 12.0.1, CMake 3.21.1,     CRISPResso2 2.2.1, CUDA 11.4.1, cuDNN 8.2.2.26, cURL 7.78.0,     cutadapt 3.4, DIAMOND 2.0.11, DROP 1.1.0, Dsuite 20210718, dtcmp     1.1.2, ecCodes 2.22.1, Elk 7.2.42, ESMF 8.1.1, expat 2.4.1,     fastq-tools 0.8.3, Fiona 1.8.20, FLINT 2.7.1, g2clib 1.6.3,     g2lib 3.2.0, GCC(core) 11.2.0, GDCM 3.0.8, GDRCopy 2.3,     GenomeTools 1.6.2, GffCompare 0.12.2, gffread 0.12.7, GLib     2.69.1, GMT 6.2.0, Go 1.16.6, GPAW 21.6.0, Gradle 6.9.1.eb,     GROMACS 2021.3, HarfBuzz 2.8.2, HDF5 1.12.1, Horovod 0.22.1,     hwloc 2.5.0, hypothesis 6.14.6, igraph 0.9.4, ImageMagick 7.1.0,     IMOD 4.11.5, IPython 7.26.0, Java 16, Julia 1.6.2, JupyterHub     1.4.1, JupyterLab 3.1.6, Kent_tools 418, lavaan 0.6-9, libfabric     1.13.0, libffcall 2.4, libffi 3.4.2, libgeotiff 1.7.0, libRmath     4.1.0, LIBSVM 3.25, LibTIFF 4.3.0, likwid 5.2.0, LLVM 12.0.1,     LMDB 0.9.29, magma 2.6.1, MariaDB 10.6.4, MATIO 1.5.21,     matplotlib 3.4.2, MEGA 10.0.5, Mesa 21.1.7, Meson 0.59.1, Metal     2020-05-05, Mini-XML 3.2, molmod 1.4.8, MPICH 3.4.2, nanopolish     0.13.3, NCCL 2.10.3, ncdu 1.16, NCO 5.0.1, neptune-client     0.10.5, netcdf4-python 1.5.7, networkx 2.5.1, nodejs 14.17.6,     NSPR 4.32, NSS 3.69, NVHPC 21.7, OpenBLAS 0.3.17, OpenEXR 3.1.1,     OpenFOAM 9, OpenFOAM v2106, OpenMM 7.5.1, OpenMolcas 21.06,     openpyxl 3.0.7, Pango 1.48.8, parallel 20210722, Paraver 4.9.2,     ParaView 5.9.1, patchelf 0.13, PCRE2 10.37, PCRE 8.45, Perl     5.34.0, PETSc 3.15.1, petsc4py 3.15.0, Pillow 8.3.1, Pillow-SIMD     8.3.1, plotly.py 5.1.0, PLUMED 2.7.2, PMIx 4.1.0, poppler     21.06.1, PostgreSQL 13.3, preseq 3.1.2, pybind11 2.7.1, pyFFTW     0.12.0, PyGEOS 0.10.2, Pyomo 6.0.1, PyQt5 5.15.4, pyshp 2.1.3,     Python 3.9.6, python-igraph 0.9.6, QTLtools 1.3.1, RAxML-NG     1.0.3, R-bundle-Bioconductor 3.13, re2c 2.2, ReFrame 3.8.0.,     RStudio-Server 1.4.1717, Rust 1.54.0, Scalasca 2.6, scVelo     0.2.3, Shapely 1.8a1, shrinkwrap 1.1.0, SLEPc 3.15.1, slepc4py     3.15.1, snakemake 6.6.1, snappy 1.1.9, snippy 4.6.0, snpEff     5.0e, SOCI 4.0.2, SpaceRanger 1.3.0, Spack 0.16.2, spatialreg     1.1-8, spglib-python 1.16.1, SQLite 3.36, STAR 2.7.9a,     statsmodels 0.12.2, StringTie 2.1.7, Subread 2.0.3, SymEngine     0.7.0, TensorFlow 2.6.0, TetGen 1.6.0, Tkinter 3.9.6, torchtext     0.9.1, tqdm 4.61.2, UCX 1.11.0, UCX-CUDA 1.11.0, unrar 6.0.2,     util-linux 2.37, VTune 2021.6.0, WIEN2k 21.1, WPS 4.2, WRF 4.3,     X11 20210802, x264 20210613, xarray 0.19.0, XlsxWriter 1.4.4,     XML-Parser 2.46, zstd 1.5.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add extensions to recent R v4.x easyconfigs: PCAmatchR     (#13448),     hal9001     (#13451),     cobalt     (#13544),     CBPS     (#13549),     SBdecomp     (#13565),     lwgeom     (#13674),     naturalsort     (#13762),     finalfit + gtsummary     (#13766)</li> <li>add VBZ compress capability to nanopolish 0.13.3 (for fast5     files)     (#13536)</li> <li>add CMake build dependency to easyconfig for tbb 2020.03     (#13704)</li> <li>also build shared libs for MUMPS 5.3.5     (#13702)     and 5.4.0     (#13705)</li> <li>add dependency on pkg-config to OpenSSL wrappers     (#13765)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix LAMMPS 3Mar2020 easyconfigs using intel toolchain on AMD     CPUs by patching out hardcoded <code>-xHost</code>     (#11577)</li> <li>fix sanity check error for OpenCV v4.5.1 by adding (and using)     freetype and HarfBuzz dependencies     (#12517)</li> <li>add patches for TensorFlow 1.13.1 to fix installation     (#13326)</li> <li>remove Python 2.6 from list of supported Python versions in     <code>setup.py</code>     (#13349)</li> <li>switch back to Bundle easyblock for PyQt5 5.15.1 + add back     source URLs for components     (#13371)</li> <li>add pkg-config build dependency for GDAL 3.2.1     (#13383,     #13808),     Rust     (#13538),     GenomeTools     (#13805),     x264     (#13834)</li> <li>add missing Python 3 build dependency for Rust v1.52.1     (#13399)</li> <li>fix order of cffi extension in old Python easyconfigs     (#13400)</li> <li>patch out <code>__asm__</code> use in ctffind to avoid build failure on     ppc64le     (#13409)</li> <li>disable building man pages in Gdk-Pixbuf     (#13410)</li> <li>add missing Bio-Search-hmmer dependency for prokka     (#13419)</li> <li>avoid downloading old numpy version during install for h5py     (#13428)</li> <li>add patch for Qt5 5.8.0 to fix compilation failure in webkit     (#13434)</li> <li>avoid downloading and building freetype and qhull for matplotlib     3.4.2     (#13437)</li> <li>fix order of components in recent GTK+ easyconfigs to avoid     dependency on system GTK+ in GTK+ themes     (#13449)</li> <li>fix Python 2.7.13 easyconfigs by adding missing extensions     (#13456)</li> <li>add TensorFlow patch to fix crash on shutdown     (#13462)</li> <li>allow for non-x86_64 in <code>postinstallcmds</code> for CuPy     (#13501)</li> <li>disable default EULA acceptance in easyconfig for NVHPC v21.5     (#13516)</li> <li>fix error with p7zip's 7z command not finding <code>7z.dll</code>     (#13542)</li> <li>patch MaxBin2 Perl script to use provided Perl dependency     (#13551)</li> <li>add missing zlib dependency to libarchive     (#13579)</li> <li>fix pkgconfig version in patch for bzip 1.0.8 (+ add easyconfig     with GCCcore/11.2.0 toolchain)     (#13581)</li> <li>fix build of DIRAC 19.0 easyconfig with high compiler     optimizations     (#13613)</li> <li>fix source URLs and add alternative checksum for Hypre 2.15.1     (since it moved to a different GitHub repo)     (#13616)</li> <li>add new source URL for Mesa easyconfigs using 2017b toolchain     (#13617)</li> <li>avoid <code>MPICXX</code> dependency in SimpleElastics ITK     (#13623)</li> <li>add upstream patch for GCC 9.x, 10.x, 11.x to avoid spurious FPE     on avx512 (affects UCX)     (#13628)</li> <li>add patch for ctffind 4.1.14 to declare functions without return     as void (fixes segfault)     (#13665)</li> <li>enable EGL in recent libepoxy ECs     (#13684)</li> <li>remove unused <code>buildcmd</code> from libgpuarray easyconfigs     (#13720)</li> <li>add patch to fix building Qt5.10.1 against newer glibc     (#13730)</li> <li>add Python 3 as a builddependency to recent fontconfig     easyconfigs     (#13731)</li> <li>update source_URL in BLAST 2.2.26 easyconfig     (#13732)</li> <li>restore error message on failing easyconfigs test suite,     required by bot to determine end of output of test suite     (#13745,     #13770)</li> <li>add Perl build dependency to recent Clang easyconfigs     (#13746)</li> <li>disable using system Valgrind in the json-c tests     (#13750)</li> <li>use Archive source URL for spatstat.geom extension in Seurat     (#13761)</li> <li>add ld.gold relocts patch to binutils 2.30     (#13785)</li> <li>add missing Python + Zip build dependencies for old Bazel     versions used as build dep for TensorFlow 1.12.0 + 1.13.1     (#13786)</li> <li>add alternative checksum for AFNI 18.3.00     (#13790)</li> <li>update tensorflow-probability easyconfigs to include <code>--release</code>     flag in <code>installopts</code>     (#13810)</li> <li>fix source URL for DB 18.1.32     (#13813)</li> <li>add missing cppy build dependency for matplotlib 3.4.2     (#13823)</li> <li>disable bash completion in recent x264 easyconfigs     (#13834)</li> <li>add Perl as build dependency for ELPA 2021.05.001 + patch to fix     hardcoded <code>/usr/bin/perl</code>     (#13835)</li> <li>add archive source URL to Spark 3.x easyconfigs to fix broken     download     (#13842)</li> <li>fix PCRE dependency for GDAL 3.2.1 and 3.3.0, don't use PCRE2     (#13861)</li> <li>add Perl build dependency for HMMER 3.3.2 + patch to ensure it     is used     (#13870)</li> <li>stick to intel-compilers toolchain for DFT-D3 v3.2.0     (#13878)</li> <li>add missing flex build dependency for leidenalg     (#13884)</li> <li>update CMake build dependency for Eigen 3.3.4 + 3.3.5     (#13889)</li> <li>fix source URL for Yasm 1.3.0 (+ add missing checksum)     (#13901)</li> <li>update to more recent Meson build dependency for GCCcore/8.3.0     easyconfigs to fix failing RPATH sanity check     (#13910)</li> <li>fix shebang for RepeatMasker 4.1.2-p1 Perl script     (#13911)</li> </ul> </li> <li>other changes:<ul> <li>use custom ORCA easyblock in easyconfigs for ORCA v4.x     (#13348)</li> <li>move archived easyconfig files to correct <code>__archive__</code> folder     (#13422)</li> <li>rename NINJA to TWL-NINJA to avoid nameclash     (#13529)</li> <li>remove superfluous <code>configopts</code> and add sanity checks/checksums     in CLHEP easyconfigs     (#13614)</li> <li>remove superfluous <code>-DCMAKE_BUILD_TYPE</code> configuration option in     Arrow easyconfigs     (#13615)</li> <li>switch ITK easyconfigs to CMakePythonPackage easyblock, also     enable <code>-DITK_USE_SYSTEM_HDF5</code> configuration option, fix     download URLs     (#13619)</li> <li>use <code>build_type</code> instead of <code>-DCMAKE_BUILD_TYPE=RELEASE</code> in     <code>configopts</code> in MMseqs2 easyconfigs     (#13620)</li> <li>avoid using system GTK+3 and remove <code>-DCMAKE_BUILD_TYPE=RELEASE</code>     configure option in OpenCV easyconfigs     (#13621)</li> <li>remove <code>-DCMAKE_BUILD_TYPE=RELEASE</code> configure option and add     checksums in LLVM easyconfigs     (#13624)</li> <li>create libtinfo symlinks in easyconfigs for ncurses with system     toolchain     (#13658),     6.1     (#13661)     and 6.2     (#13660)</li> <li>increase test timeouts for PyTorch 1.8.1 and 1.9.0     (#13700)</li> <li>rename CUDAcore to CUDA for v11.3.1 and v11.4.1 after merging     foss/fosscuda, to ensure that <code>get_software_root('CUDA')</code> used     in easyblocks works     (#13874)</li> <li>use CUDA instead of CUDAcore in recent NVHPC comments     (#13875)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb441","title":"EasyBuild v4.4.1 (July 6th 2021)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>enhance detection of patch files supplied to <code>eb</code> command with     better error messages     (#3709)</li> <li>add per-step timing information     (#3716)</li> <li>add <code>module-write hook</code>     (#3728)</li> <li>add <code>ignore-test-failure</code> configuration option to ignore failing     test step     (#3732)</li> <li>add toolchain definition for nvompic (NVHPC + OpenMPI)     (#3735)</li> <li>warn about generic milestone in <code>--review-pr</code> and <code>--merge-pr</code>     (#3751)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>don't override <code>COMPILER_MODULE_NAME</code>, inherited from <code>Ffmpi</code>,     in Fujitsu toolchain definition     (#3721)</li> <li>avoid overwriting <code>pr_nr</code> in <code>post_pr_test_report</code> for reports     with <code>--include-easyblocks-from-pr</code>     (#3724,     #3726)</li> <li>fix crash in <code>get_config_dict</code> when copying modules that were     imported in easyconfig file (like <code>import os</code>)     (#3729)</li> <li>parse C standard flags in <code>CFLAGS</code> for Fujitsu compiler     (#3731)</li> <li>fix error message for <code>--use-ccache</code>     (#3733)</li> <li>error out when passing a list to <code>run_cmd*</code> to avoid running     wrong command unintended, unless <code>shell=True</code> is used     (#3737)</li> <li>minor fixes to output of test reports when using multiple PRs     (#3741)</li> <li>fix location for modules installed with intel-compilers     toolchain in HierarchicalMNS by always checking toolchain     compiler name against template map     (#3745)</li> <li>avoid checking <code>msg</code> attribute of <code>GitCommandError</code>     (#3756)</li> <li>consider sources provided as dict in     <code>EasyBlock.check_checksums_for</code>     (#3758)</li> <li>don't make changes to software installation directory when     using <code>--sanity-check-only</code>     (#3761)</li> <li>honor specified easyblock for extensions     (#3762)</li> </ul> </li> <li>other changes:<ul> <li>make sure that tests requiring a github token have <code>github</code> in     the test name so that they can be easily filtered     (#3730)</li> <li>deprecate EasyBuild bootstrap script     (#3742)</li> <li>use temporary download folder in     <code>test_http_header_fields_urlpat</code>     (#3755)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>5 new software-specific easyblocks:<ul> <li>AOMP     (#2435,     #2462,     #2464),     FreeFEM     (#1969),     NCCL (built from source)     (#2337,     #2460),     torchvision     (#2467),     UCX plugins     (#2491)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>enhance Amber easyblock to support installing Amber via CMake     (#2445)</li> <li>enhance ConfigureMake generic easyblock to add support for     building multiple build targets     (#2449,     #2479,     #2480)</li> <li>enhance sanity check for Clang to verify if CUDA offload library     was produced     (#2454)</li> <li>update custom easyblock for Boost to always build single and     multi threaded versions     (#2456)</li> <li>enhance <code>sitecustomize.py</code> in Python easyblock to support     overriding core Python packages, and allowing overriding in     virtualenv     (#2458,     #2483)</li> <li>update CMakeMake to handle old and new Boost/Boost.Python builds     using custom easyblock for Boost     (#2461)</li> <li>add file prefix option to XALT easyblock     (#2463)</li> <li>enhance Java easyblock to define <code>%(jdkarch)s</code> template     (#2472)</li> <li>adjust Perl easyblock to only check for a <code>man</code> subdirectory if     groff is a dependency     (#2474)</li> <li>support arbitrary version strings in OpenSSL wrapper and add     <code>minimum_openssl_version</code> option     (#2475)</li> <li>enhance Python easyblock to explicitly disable installing     core-pip when <code>install_pip</code> is not <code>True</code>     (#2476)</li> <li>enhance intel-compiler easyblock to include multipath include     dir in <code>$CPATH</code>     (#2477)</li> <li>enhance Hypre easyblock to enable CUDA support     (#2482)</li> <li>update Xmipp easyblock for new version (v3.20.07)     (#2486)</li> <li>enhance FFTW easyblock to skip tests if <code>--mpi-tests</code> EasyBuild     configuration option is disabled     (#2490)</li> <li>use <code>PYPI_SOURCE</code> as the default for <code>source_urls</code> of extensions     of Python easyconfigs     (#2493)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>only use siterc fix for NVHPC &lt; 21.3     (#2453)</li> <li>fix CPU-only runtime for dpcpp-generated executables in custom     easyblock for intel-compilers     (#2457)</li> <li>always add <code>distinct_host_configuration=false</code> to build command     for TensorFlow     (#2459)</li> <li>disable installation of bundled BioPerl and HTSLib if they are     dependencies of VEP     (#2468)</li> <li>don't use list value for command to detect installed Python     packages in TensorFlow easyblock     (#2469)</li> <li>change Bundle easyblock to also collect <code>altroot</code> and     <code>altversion</code> in the module step so they are set when running     <code>--module-only</code>     (#2485)</li> <li>always strip output from <code>gcc -print-multiarch</code> in     intel-compilers easyblock     (#2489)</li> <li>don't overwrite all of <code>exts_default_options</code> in TensorFlow     easyblock     (#2494)</li> <li>enhance GCC easyblock to make sure that system GCC provides LTO     support, and disable LTO when building MPFR if not     (#2498)</li> <li>rework the dependency handling of OpenMPI to use explicit     configure options to disable features if required dependency is     not provided     (#2500,     #2501)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 39 new software packages:<ul> <li>AMPHORA2     (#13003),     AOMP     (#12909),     CAMPARI     (#13152),     CSB     (#12877),     dijitso     (#10719),     DosageConvertor     (#13278),     dSFMT     (#12971),     exiv2     (#13204),     FEniCS     (#10719),     FreeFEM     (#9902),     futhark     (#12921),     futile     (#12864),     gappa     (#13186),     GenomeWorks     (#13083,     #13092),     gexiv2     (#13204),     HAL     (#13267),     hipify-clang     (#12961),     inline     (#12029),     libcint     (#13214),     LTR_retriever     (#13125),     mapDamage     (#13172),     MbedTLS     (#13061),     microctools     (#13010),     Nektar++     (#12664),     NINJA     (#13125),     OBITools3     (#12969),     ont-fast5-api     (#13033),     OpenMM-PLUMED     (#13268),     phototonic     (#13241),     PyFoam     (#12675),     RagTag     (#13247),     RcppGSL     (#13172),     RECON     (#13123),     RepeatScout     (#13124),     retworkx     (#13228),     UCX-CUDA     (#13260),     unimap     (#13247),     Vala     (#13204),     WhatsHap     (#12989)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Amber 20.11, BBMap 38.90, Beast 2.6.4, BLIS 3.0 (AMDo fork),     Bonito 0.4.0, CellRanger-ARC 2.0.0, CellRanger-ATAC 2.0.0, Check     0.15.2, CubeGUI 4.6, CubeLib 4.6, CubeWriter 4.6, cuDNN     8.2.1.32, CVXOPT 1.2.6, DOLFIN 2019.1.0.post0, eggnog-mapper     2.1.4, ELPA 2021.05.001, FDS 6.7.6, FFC 2019.1.0.post0, FFmpeg     4.3.2, FIAT 2019.1.0, flatbuffers 2.0.0, flatbuffers-python 2.0,     FLTK 1.3.6, gc 8.0.4, GCC 8.4.0 + 9.4.0, GDAL 3.3.0, Gdk-Pixbuf     2.42.6, geopy 2.1.0, Ghostscript 9.54.0, git 2.32.0, GitPython     3.1.18, GLFW 3.3.4, gmsh 4.8.4, gnuplot 5.4.2, GnuTLS 3.7.2, Go     1.16.5, GObject-Introspection 1.68.0, gperftools 2.9.1,     GraphicsMagick 1.3.36, Graphviz 2.47.2, GSL 2.7, GTK+ 2.24.33,     Guile 2.2.7, h5py 3.2.1, HarfBuzz 2.8.1, Horovod 0.22.0, Hypre     2.21.0, ICU 69.1, ImageMagick 7.0.11-14, IOR 3.3.0, IPython     7.25.0, IRkernel 1.2, ispc 1.16.0, JupyterLab 3.0.16, LDC     1.26.0, libcerf 1.17, libepoxy 1.5.8, libgd 2.3.1, libStatGen     1.0.15, libxc 5.1.5, LittleCMS 2.12, LMfit 1.0.2, Lua 5.4.3, M4     1.4.19, MCR R2021a.3, medaka 1.4.3, Mercurial 5.8, minimap2     2.20, MMseqs2 13, MrBayes 3.2.7, MUMPS 5.4.0, NCCL 2.9.9, netCDF     4.8.0, Nim 1.4.8, nodejs 14.17.0, Nsight-Compute 2021.2.0, numba     0.53.1, NVHPC 21.5.eb, nvtop 1.2.1, Octave 6.2.0, OPARI2 2.0.6,     openkim-models 20210128, OpenMPI 4.0.6, OTF2 2.3, p11-kit     0.24.0, Pango 1.48.5, parallel 20210622, petsc4py 3.12.0, picard     2.25.5, Pillow 8.2.0, PROJ 8.0.1, protobuf 3.17.3,     protobuf-python 3.17.3, PSolver 1.8.3, PySCF 1.7.6, pyspoa     0.0.8, pytest-xdist 2.3.0, PyTorch 1.9.0, PyYAML 5.4.1, Qhull     2020.2, Quandl 3.6.1, R 4.0.5 + R 4.1.0, Ragout 2.3, RE2     2021-06-01, ReFrame 3.6.2, RepeatMasker 4.1.2, rgdal 1.5-23,     RMBlast 2.11.0, Ruby 3.0.1, scikit-learn 0.24.2, Score-P 7.0,     Seurat 4.0.3, slepc4py 3.12.0, spoa 4.0.7, Subread 2.0.2,     Subversion 1.14.1, SuiteSparse 5.10.1, sympy 1.8, tensorboardX     2.2, TensorFlow 2.5.0, Tk 8.6.11, tmux 3.2a, torchtext 0.8.1,     torchvision 0.9.1, UDUNITS 2.2.28, UFL 2019.1.0, utf8proc 2.6.1,     VEP 103.1, VMD 1.9.4a51, vsc-mympirun 5.2.6, XCFun 2.1.1, Xvfb     1.20.11, Z3 4.8.11, ZeroMQ 4.3.4</li> </ul> </li> <li>minor enhancements, including:<ul> <li>update cuDNN 8.0.x easyconfigs with a download location     (#12368)</li> <li>add extensions to recent R easyconfigs: GxEScanR     (#13039),     cSEM     (#13208),     cubelyr + broom.mixed     (#13252),     grf     (#13261),     twang + xgboost     (#13284),     neuralnet     (#13330)</li> <li>add check to easyconfigs test suite to ensure OpenSSL wrapper is     used in easyconfigs using a recent toolchain     (#13079)</li> <li>add gipaw to QuantumESPRESSO/6.7     (#13087)</li> <li>add checksum for aarch64 installation file for CUDAcore     easyconfigs     (#13014,     #13097)</li> <li>add Perl dependency to makeinfo easyconfigs     (#13166)</li> <li>set minimal OpenSSL version to 1.1.1 for OpenSSL v1.1 wrapper     (#13188)</li> <li>add JIT support for CUDA 11 to PyTorch 1.7.1     (#13207)</li> <li>add <code>ninja --version</code> as sanity check command in Ninja     easyconfigs     (#13222)</li> <li>code cleanup + improvements for easyconfigs test suite     (#13257)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>download sources via git for XGBoost 20171120 easyconfig due to     use of submodules     (#6880)</li> <li>add elfutils as build dependency for Clang 8.0.x and 9.0.1     (#13015)     and Clang 11.0.1     (#13008)     easyconfigs that have a CUDA dependency</li> <li>add missing CMake option to Geant4 v10.7.1 in order to actually     use external CLHEP     (#13019)</li> <li>add new checksum for mvabund extension to R v4.0.4 eaysconfigs     (#13020,     #13021)</li> <li>add patch to fix numpy <code>test_ccompiler_opt</code> in SciPy-bundle     v2021.05     (#13042)</li> <li>add patch to fix installation of HDF 4.2.15 on aarch64     (#13059)</li> <li>make sure that MbedTLS' Makefile uses <code>python</code> rather than     <code>python2</code>     (#13061)</li> <li>fix checksum for snpEff 5.0     (#13062)</li> <li>fix source URL for LIBSVM 3.24 by downloading from GitHub     (#13076)</li> <li>add <code>preinstallopts</code> for minimap2 to fix installation on aarch64     (#13080)</li> <li>add patch for GCC 10.2.0 to fix internal compiler error on     aarch64     (#13086)</li> <li>switch to NCCL 2.8.3 built from source for CuPy, Horovod,     libgpuarray, PyTorch and TensorFlow using fosscuda/2020b     (#13103)</li> <li>add astor to dependencies of TensorFlow with 2019b     (#13111)     and 2020b     (#13103,     #13112)     toolchains</li> <li>break cyclic dependency between groff, makeinfo and Perl by     adding Perl-minimal and makeinfo-minimal easyconfigs     (#13163 -     #13165)</li> <li>add missing rgdal dep to R-INLA     (#13179)</li> <li>add patch to fix <code>uniq</code> operation in TensorFlow 2.4.1     (#13181)</li> <li>add Perl build dependency for PnetCDF 1.12.1     (#13183)</li> <li>disable own avx detection of libfabric v1.12.1     (#13215)</li> <li>add GCCcore-[1-9][0-9].x to     <code>test_dep_versions_per_toolchain_generation</code>     (#13243,     #13249,     #13251)</li> <li>add patch to fix installation of TensorFlow 2.0.x     (#13248)</li> <li>add patch for recent GCCcore versions to fix compatibility with     CUDA 11     (#13290)</li> <li>fix install step for glew     (#13297)</li> <li>update Boost 1.74.0 easyconfigs to use <code>tagged_layout</code> rather     than <code>boost_multi_thread</code>     (#13300)</li> <li>avoid using PMIx from system instead of PMIx dependency     specified via <code>--with-pmix</code> for OpenMPI 4.x     (#13307)</li> <li>add patch for GCCcore 10.3.0 to prevent issues when compiling     with nvcc     (#13310)</li> <li>add patch for OpenMPI 4.0.x to fix building against (system) UCX     version &gt; 1.7     (#13329)</li> <li>fix build of manta 1.6.0 on top of Boost 1.74.0     (#13338)</li> <li>fix recent taxator-tk easyconfigs by adding (back)     <code>-DBoost_NO_BOOST_CMAKE=ON</code> configure option     (#13342)</li> </ul> </li> <li>other changes:<ul> <li>disable <code>debuginfod</code> for elfutils to minimize required     dependencies     (#13034)</li> <li>add bare Python 3.9.5 easyconfig and use that as builddep for     LLVM 11.1.0     (#13035)</li> <li>remove misleading comment from Python &gt;= 3.7 easyconfigs,     libffi is now also required for Python itself (no longer     bundled)     (#13041)</li> <li>use new custom easyblock in torchvision easyconfigs     (#13102)</li> <li>remove superfluous TensorFlow patch     (#13223)</li> <li>cleanup of easyconfigs for (bundles) of Python packages: remove     default <code>PYPI_SOURCE</code> source URLs + use <code>PythonBundle</code> rather     than <code>Bundle</code> easyblock     (#13253,     #13295,     #13336)</li> <li>update <code>README</code> with instructions for MATLAB easyconfigs     (#12597)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb440","title":"EasyBuild v4.4.0 (June 2nd 2021)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>enhance <code>apply_regex_substitutions</code> to allow specifying action     to take in case there are no matches     (#3440)</li> <li>performance improvements for easyconfig parsing and eb startup     (#3555)</li> <li>add support for downloading easyconfigs from multiple PRs with     <code>--from-pr</code>     (#3605,     #3707,     #3708)</li> <li>add support for prepending custom library paths in RPATH section     via <code>--rpath-override-dirs</code>     (#3650)</li> <li>allow amending easyconfig parameters which are not the default     (#3651)</li> <li>update HierarchicalMNS for Intel OneAPI compilers     (#3653)</li> <li>add support for <code>--sanity-check-only</code>     (#3655)</li> <li>add support for running commands asynchronously via <code>run_cmd</code> +     <code>complete_cmd</code> functions     (#3656)</li> <li>add support for using oneAPI versions of 'intel' toolchain     components     (#3665)</li> <li>add toolchain definition for gofbf (foss with FlexiBLAS rather     than OpenBLAS)     (#3666)</li> <li>add support for using <code>ARCH</code> constant in easyconfig files     (#3670)</li> <li>honor keyboard interrupt in <code>eb</code> command     (#3674)</li> <li>add toolchain definition for Fujitsu toolchain     (#3677,     #3704,     #3712,     #3713,     #3714,     #3717)</li> <li>extend sanity check step to check whether specific libraries are     not linked into installed binaries/libraries     (#3678)<ul> <li>via <code>banned-linked-shared-libs</code> and     <code>required-linked-shared-libs</code> EasyBuild configuration     options</li> <li>via <code>banned_linked_shared_libs</code> and     <code>required_linked_shared_libs</code> methods in toolchain support</li> <li>via <code>banned_linked_shared_libs</code> and     <code>required_linked_shared_libs</code> methods in easyblock</li> <li>via <code>banned_linked_shared_libs</code> and     <code>required_linked_shared_libs</code> easyconfig parameters</li> </ul> </li> <li>add <code>locate_solib</code> function to locate Linux shared libraries     (#3682)</li> <li>add system agnostic function to locate shared libraries     (#3683)</li> <li>add <code>update_build_option</code> function to update specific build     options after initializing the EasyBuild configuration     (#3684)</li> <li>allow opting out of recursively unloaded of modules via     recursive_module_unload easyconfig parameter     (#3689)</li> <li>check for correct version values when parsing easystack file     (#3693)</li> <li>run post-install commands specified for a specific extension     (#3696)</li> <li>add support for <code>--skip-extensions</code>     (#3702)</li> <li>include PR title in output produced by <code>--merge-pr</code>     (#3706)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>avoid metadata greedy behaviour when probing for external module     metadata (mostly relevant for integration with Cray Programming     Environment)     (#3559)</li> <li>catch problems early on if <code>--github-user</code> is not specified for     <code>--new-pr</code> &amp; co     (#3644)</li> <li>re-enable write permissions when installing with     <code>read-only-installdir</code>     (#3649)</li> <li>also run sanity check for extensions when using <code>--module-only</code>     (#3655)</li> <li>improve logging when failing to load class from <code>exts_classmap</code>     (#3657)</li> <li>fix use of <code>--module-only</code> on existing installations without     write permissions     (#3659)</li> <li>correct help text for <code>subdir-user-modules</code>     (#3660)</li> <li>avoid picking up easyblocks outside of sandbox in framework     tests     (#3680)</li> <li>use unload/load in <code>ModuleGeneratorLua.swap_module</code>, since     <code>swap</code> is not supported by Lmod     (#3685)</li> <li>update HierarchicalMNS to also return     'Toolchain/&lt;name&gt;/&lt;version&gt;' as <code>$MODULEPATH</code> extension     for cpe* Cray toolchains     (#3686)</li> <li>make <code>EasyConfigParser.get_config_dict</code> return a copy rather     than a reference     (#3692)</li> <li>make sure that <code>$TAPE</code> is unset when using piped tar     (#3698)</li> <li>fix extending message for changed files in <code>new_pr_from_branch</code>     (#3699)</li> <li>enhance <code>sched_getaffinity</code> function to avoid early crash when     counting available cores on systems with more than 1024 cores     (#3701)</li> <li>correctly strip extension from filename in <code>extract_cmd</code> and     <code>back_up_file</code> functions     (#3705)</li> </ul> </li> <li>other changes:<ul> <li>deprecate adding a non-existing path to <code>$MODULEPATH</code>     (#3637)</li> <li>bump cryptography requirement from 3.2.1 to 3.3.2     (#3643,     #3648)</li> <li>test bootstrap script in separate workflow, and limit test     configurations a bit     (#3646)</li> <li>update <code>setup.py</code> to indicate compatibility with Python 3.8 and     3.9     (#3647)</li> <li>replace <code>log_error</code> parameter of <code>which()</code> by <code>on_error</code>     (#3661,     #3664)</li> <li>don't skip sanity check for <code>--module-only --rebuild</code>     (#3645)</li> <li>move <code>disable_templating</code> function into the EasyConfig class     (#3668)</li> <li>pin GitPython version for Python&lt;3.6, don't test bootstrap     script against Python 3.8/3.9     (#3675)</li> <li>tweak foss toolchain definition to switch from OpenBLAS to     FlexiBLAS in foss/2021a     (#3679)</li> <li>suggest missing SSH key when not able to read from remote     repository in <code>--check-github</code>     (#3681)</li> <li>drop support for Python 2.6     (#3715)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>3 new software-specific easyblocks:<ul> <li>FlexiBLAS     (#2369,     #2422,     #2424,     #2426)</li> <li>dm-reverb     (#2413)</li> <li>custom easyblock to install OpenSSL wrapper for OpenSSL     installed in OS, with fallback to build and install OpenSSL from     source if not available in OS     (#2429)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>also add <code>-pthread</code> to <code>prebuildopts</code> of cryptography     (#2270)</li> <li>don't unpack Python wheel (*.whl) files by default in generic     PythonPackage easyblock     (#2366,     #2442)</li> <li>enable installation of samples for CUDA &gt; 10.1     (#2374)</li> <li>add option to disable pip connecting to PyPi (enable use of     <code>--no-index</code>)     (#2390)</li> <li>update MotionCor2 easyblock to handle new version and be aware     of CUDAcore     (#2394)</li> <li>make it possible to force disabling kernel features in Qt     easyblock     (#2403)</li> <li>update imkl easyblock to support oneAPI versions (&gt;= 2021.x)     (#2407)</li> <li>add<code>\"gurobi_cl --help</code> as default sanity check command for     Gurobi     (#2411)</li> <li>enhance BWA easyblock to copy includes and libraries     (#2417)</li> <li>allow <code>default</code> versions to be defined by ModuleRC easyblock     (#2418)</li> <li>enhance MesonNinja and CMakeMake easyblocks to create unused     build dir when <code>separate_build_dir</code> is set     (#2419)</li> <li>enable <code>sanity_pip_check</code> by default for Python easyconfigs if     pip &gt;= 9.0 will be installed     (#2423)</li> <li>enhance FFTW easyblock to support SVE CPU feature and building     with Fujitsu compiler     (#2425)</li> <li>make ScaLAPACK easyblock aware of FlexiBLAS     (#2427)</li> <li>update imkl easyblock to unpack example tarballs and set     <code>$MKL_EXAMPLES</code> (+ some code cleanup)     (#2430)</li> <li>update list of system libs for TensorFlow 2.5     (#2432)</li> <li>allow disabling MPI tests when installing Intel MPI (impi) via     <code>--disable-mpi-tests</code>     (#2440)</li> <li>exclude bottleneck tests in PyTorch     (#2450)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ensure lib subdirectory is found in stage 2 of GCC     installation + fall back to lib64     (#2339)</li> <li>fix permission on MATLAB installer config file so it can be     written to     (#2385)</li> <li>fix problem with installing older CUDA versions that uses the     Perl based installer     (#2387)</li> <li>enhance Python easyblock: add option to install pip with core     Python, tweak defaults, create unversioned pip symlink     (#2388)</li> <li>fix <code>installopts</code> before installing the extension in GROMACS     easyblock     (#2391)</li> <li>updated numpy easyblock to use <code>read_file</code> for patch     (#2395)</li> <li>use explicit build toolset and compiler path in Boost easyblock     (#2402)</li> <li>replace hardcoded <code>2021.1.1</code> with <code>self.version</code> in impi     easyblock     (#2405)</li> <li>set <code>$SANDCASTLE</code> when running PyTorch tests to disable some     tests as-if we are on Facebook's CI     (#2412)</li> <li>make GROMACS easyblock work with <code>--module-only</code>     (#2414)</li> <li>make sure OpenFOAM sanity checks don't require builddir write     permissions     (#2415)</li> <li>make Tkinter easyblock work with <code>--module-only</code>     (#2416)</li> <li>also disable altivec with FFTW 3.3.9 on POWER     (#2437)</li> <li>make sure that <code>self.python_cmd</code> is set before using it in     <code>PythonPackage.sanity_check_step</code>     (#2447)</li> </ul> </li> <li>other changes, including:<ul> <li>update <code>setup.py</code> to indicate compatibility with Python 3.8 and     3.9     (#2384)</li> <li>use <code>on_error</code> rather than deprecated <code>log_error</code> named argument     for <code>which</code> function     (#2406)</li> <li>remove <code>cuda_compute_capabilities</code> from custom easyconfig     parameters for Clang, LAMMPS and TensorFlow (now supported as     general easyconfig parameter)     (#2433)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new Fujitsu toolchain: FCC/4.5.0     (#12999,     #12995,     #13007),     ffmpi/4.5.0     (#13000)     and Fujitsu/21.05     (#13001,     #13007)</li> <li>add easyconfigs for updates of common toolchains: foss/2021a     (#12867,     #12975),     intel/2021a     (#12885,     #12975)<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Common-toolchains.html</li> </ul> </li> <li>added easyconfig for gomkl/2021a toolchain     (#12987)</li> <li>added example easyconfig files for 58 new software packages:<ul> <li>Archive-Zip     (#12651),     BirdNET     (#12737,     #12712,     #12737),     cell2location     (#12448),     cryoDRGN     (#12704),     dm-reverb     (#12824),     DROP     (#12559,     #12801,     #12950),     fastahack     (#12841),     fermi-lite     (#12856),     filevercmp     (#12841),     FlexiBLAS     (#12476),     freetype-py     (#12918),     fsom     (#12841),     garnett     (#12529),     gawk     (#12716),     gemmi     (#12855),     georges     (#12570),     hifiasm     (#12897),     intervaltree     (#12838),     LDC     (#12671),     libidn2     (#12670),     librosa     (#10477),     librsb     (#12780),     line_profiler     (#12556),     loompy     (#12804),     mmtf-cpp     (#12580),     mongolite     (#12632),     msgpack-c     (#12580),     multichoose     (#12839),     networkTools     (#12810),     NewHybrids     (#12528),     Octopus-vcf     (#12598),     onedrive     (#12671),     p4-phylogenetics     (#12549),     pagmo     (#12678),     pyfaidx     (#12872),     pyfasta     (#12952),     pygmo     (#12678),     pysheds     (#12791),     R-INLA     (#12955,     #12927,     #12955),     RegTools     (#12874),     request     (#12448),     rMATS-turbo     (#12982),     scanpy     (#12731),     SeqLib     (#12856),     SeuratData     (#12993),     SeuratWrappers     (#12994),     smithwaterman     (#12841),     snp-sites     (#12900),     SSW     (#12856),     tabixpp     (#12837),     TagDust     (#11599),     TALON     (#12963),     tMAE     (#12559),     TranscriptClean     (#12952),     umap-learn     (#12448),     vcflib     (#12841),     xESMF     (#12799),     XlsxWriter     (#12820)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 9.4.1, apex 20210420, astropy 4.2.1, binutils 2.36.1,     BLIS 0.8.1, Bonito 0.3.8, BUSCO 5.1.2, canu 2.1.1, carputils     20210513, CastXML 0.4.3, ccache 4.2.1, CDO 1.9.10, CIRCexplorer2     2.3.8, CLHEP 2.4.4.0, CMake 3.20.1, CNVkit 0.9.8, CUDA(core)     11.3.0, CuPy 8.5.0, cURL 7.76.0, DFA 2.1.2, Doxygen 1.9.1, Eigen     3.3.9, FastANI 1.33, FFTW 3.3.9, GATK 4.2.0.0, GCC 10.3.0 +     11.1.0, GDB 10.2, gdc-client 1.6.0, GDRCopy 2.2, Geant4 10.7.1,     Geant4-data 20210510, GeneMark-ET 4.65, glew 2.2.0, GLib 2.68.2,     GLPK 5.0, GMP 6.2.1, Go 1.16.3, Graphviz 2.47.0, GROMACS 2021.2,     GStreamer 1.18.4, GTDB-Tk 1.5.0, Gurobi 9.1.2, HMMER 3.3.2,     Horovod 0.21.3, hwloc 2.4.1, hypothesis 6.13.1, IGV 2.9.4, impi     2021.2.0, imkl 2021.2.0, intel-compilers 2021.2.0, JasPer     2.0.28, Julia 1.6.1, Kraken2 2.1.1, KronaTools 2.8, libarchive     3.5.1, libdeflate 1.7, libdrm 2.4.106, libfabric 1.12.1,     libreadline 8.1, libRmath 4.0.0, libsndfile 1.0.31, LIBSVM 3.24,     LibTIFF 4.2.0, libunwind 1.5.0, libwebp 1.2.0, LLVM 11.1.0, LMDB     0.9.28, LUMPY 0.3.1, lz4 1.9.3, Mako 1.1.4, MATLAB 2021a, Mesa     21.1.1, meshalyzer 2.2, Meson 0.58.0, MetaBAT 2.15, metaWRAP     1.3, minimap2 2.18, Molden 6.8, MotionCor2 1.4.2, ncview 2.1.8,     NetPIPE 5.1.4, nettle 3.7.2, NiBabel 3.2.1, Nilearn 0.7.1, Nim     1.4.6, Ninja 1.10.2, NLopt 2.7.0, NSS 3.65, numactl 2.0.14,     NWChem 7.0.2, OpenBLAS 0.3.15, openCARP 6.0, OpenEXR 3.0.1,     OpenMM 7.5.0, OpenMPI 4.1.1, OpenSSL 1.1 (wrapper),     OSU-Micro-Benchmarks 5.7.1, Pandoc 2.13, parallel 20210322,     parasail 2.4.3, PAUP 4.0a168, PCRE2 10.36, Perl 5.32.1, pigz     2.6, PMIx 3.2.3, Primer3 2.5.0, PRSice 2.3.3, py-aiger 6.1.14,     pybind11 2.6.2, PyCharm 2021.1.1, pydot 1.4.2, pyproj 3.0.1,     PySAT 0.1.7.dev1, PyTorch 1.8.1, python-parasail 1.2.4, Pylint     2.7.4, Python 3.9.5, Qt5 5.15.2, R-keras 2.4.0, rasterio 1.2.3,     RAxML-NG 1.0.2, rclone 1.54.1, re2c 2.1.1, ReFrame 3.5.2, Rmath     4.0.4, Rust 1.52.1, Sambamba 0.8.0, samblaster 0.1.26, samclip     0.4.0, scikit-allel 1.3.2, SciPy-bundle 2021.05, SCons     4.1.0.post1, snakemake 6.1.0, SQLite 3.35.4, SRPRISM 3.1.2, Tcl     8.6.11, TCLAP 1.2.4, tmux 3.2, tqdm 4.60.0, UCX 1.10.0, Valgrind     3.17.0, WannierTools 2.5.1, wget 1.21.1, wxWidgets 3.1.4, X11     20210518, x264 20210414, x265 3.5, xorg-macros 1.19.3, YAXT     0.9.0, zarr 2.8.1, zstd 1.4.9</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add additional extensions to R v4.0.3 and v4.0.4: miceadds,     visdat, UpSetR, naniar, stringdist, image.binarization     (#12735),     lassosum     (#12821),     lslx, regsem, semPLS     (#13005)</li> <li>add GenABEL to R-bundle-Bioconductor     (#12822)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>disable automatic acceptance of NVHPC EULA     (#12014)</li> <li>enhance RStudio-Server, add patch to inherit environment     variables, add sanity check commands to verify installation     (#12544)</li> <li>add fix to scipy to handle <code>NaN</code> arguments to <code>vi</code> function     (#12551)</li> <li>copy all binaries + examples &amp; co for PAML v4.9j     (#12567)</li> <li>add patch to fix hardcoded <code>num_cores</code> in DMCfun extension     included with R 4.0.x     (#12583)</li> <li>backport Charm++ patch for NAMD/2.14 on intel/2020a to handle     newer glibc     (#12594)</li> <li>add setuptools_scm and pytest-runner extensions to Pylint     easyconfigs     (#12599)</li> <li>fix typo in Delly easyconfig to actually do parallel build     (#12633)</li> <li>fix potential memory leak in OpenBLAS 0.3.12     (#12649)</li> <li>consistently use pip to install Python packages in recent Python     easyconfigs     (#12650)</li> <li>replace bintray source url for Groovy     (#12652)</li> <li>add missing Python &amp; Perl dependencies to AUGUSTUS v3.4.0 with     foss/2020b     (#12662)</li> <li>fix wget dependency: use libidn2 rather than libidn     (#12670)</li> <li>fix source URLs for recent ELPA versions     (#12700)</li> <li>override host compiler check in CUDAcore     (#12701)</li> <li>add Python build dependency to libpsl 0.21.0 easyconfigs     (#12715)</li> <li>fix error in libgpg-error 1.36 with gawk builtin     (#12716)</li> <li>add libtool build dependency to leidenalg     (#12741)</li> <li>fix source URLs for Boost 1.71.0 - 1.74.0 easyconfigs     (#12743)     and Boost.Python     (#12744)</li> <li>add patches for PyTorch 1.7.1 avoiding failures on POWER and     A100     (#12753)</li> <li>add patch for OpenPGM 5.2.122 eaysconfigs to fix non-existent     directory in *.pc (pkgconfig) file     (#12774)</li> <li>add missing Perl build dependency to recent wget easyconfigs     (#12787)</li> <li>make sure Python dependency is used in preCICE 2.x easyconfigs     (#12793)</li> <li>don't skip source step in FastTree easyconfigs + fix SHA256     checksum for FastTree 2.1.11     (#12794)</li> <li>add patch for rhdf5filters extension in Bioconductor 3.12 bundle     to fix installation on aarch64     (#12836)</li> <li>add IceLake detection to OpenBLAS 0.3.12 and 0.3.15     (#12865)</li> <li>fix checksum for MaxBin 2.2.7     (#12869)</li> <li>run <code>make clean</code> before building FragGeneScan, to clean up     object files included in source tarball     (#12870)</li> <li>clean up install of KronaTools     (#12871)</li> <li>add UCX dependency to OneAPI versions of impi     (#12873)</li> <li>correct description in libdeflate easyconfig     (#12886)</li> <li>override Makefile with hardcoded <code>CC=cc</code> in UnZip easyconfigs     (#12887)</li> <li>fix compatibility of FLAIR v1.5.1-20200630 with rpy2 v3.x     (#12899)</li> <li>fix test step for libxc 4.3.4 and 5.1.x when using RPATH linking     (#12912)</li> <li>fix source URLs in BLAST 2.10.x easyconfigs     (#12914)</li> <li>add missing xproto build dependency to imake easyconfig     (#12930)</li> <li>add patch to fix GCC 10.2.0 rejecting valid code on PPC     (#12948)</li> <li>in easyconfig tests, check version of dependencies named Python,     not if dependencies with certain versions are named Python     (#12962)</li> <li>update easyconfigs for binutils 2.35 to use binutils 2.35.2     source tarball instead to pick up bug fixes     (#12967,     #12988)</li> <li>fix download URL for DB 18.1.40     (#12974)</li> <li>fix test failure in TensorFlow 2.4.1 on recent CUDA drivers     (#12979)</li> <li>fix error in <code>configopts</code> for netCDF and HDF5 and add missing     dependencies of ABINIT 9.x     (#12981)</li> <li>add patch to fix buffer overflow in OpenMPI 4.1.x     (#12983)</li> </ul> </li> <li>other changes:<ul> <li>update <code>setup.py</code> to indicate compatibility with Python 3.8 and     3.9     (#12565)</li> <li>add <code>-Java</code> versionsuffix for Hadoop easyconfig using     GCCcore/10.2.0 toolchain, since it depends on Java 1.8     (#12709)</li> <li>remove unnecessary workaround for missing version of     OpenDataCube and Spyder for 2020+ toolchains     (#12757)</li> <li>remove <code>unpack_sources = False</code> from recent easyconfigs that use     a *.whl file as source     (#12783)</li> <li>whitelist Seaborn 0.10.1 for NanoComp 1.13.1 and NanoPlot 1.33.0     (#12790)</li> <li>add check to make sure that source step is not being skipped     (#12807)</li> <li>use <code>EasyConfig.disable_templating</code> method in test suite     (#12848)</li> <li>disable usNIC by default in libfabric to avoid problems due to     linking to both libnl and libnl-3     (#12854)</li> <li>use OpenSSL wrapper as dependency in easyconfigs using     GCCcore/10.3.0 toolchain     (#12922,     #12944)</li> <li>dump easyconfig before initializing easyblock in order to     compare it with original easyconfig     (#12925)</li> <li>remove postinstallcmds from imkl 2020.x easyconfigs, easyblock     now installs examples     (#12937)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb434","title":"EasyBuild v4.3.4 (Apr 9th 2021)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for filtering dependencies by using <code>False</code> as     version     (#3506)</li> <li>add <code>create_unused_dir</code> function to create a directory which     does not yet exist     (#3551)</li> <li>avoid running expensive <code>module use</code> and <code>module unuse</code> commands     when using Lmod as modules tool, update <code>$MODULEPATH</code> directly     instead     (#3557,     #3633)</li> <li>create CUDA cache (for JIT compiled PTX code) in build dir     instead of <code>$HOME</code>     (#3569)</li> <li>add \"Citing\" section to module files     (#3596)</li> <li>add support for using fallback <code>arch=*</code> key in dependency     version specified as arch-&gt;version mapping     (#3600)</li> <li>also check for pending change requests and mergeable_state in     <code>check_pr_eligible_to_merge</code>     (#3604)</li> <li>ignore undismissed <code>changes requested</code> review if there is an     <code>approved</code> review by the same user     (#3607,     #3608)</li> <li>sort output of <code>eb --search</code> in natural order (respecting     numbers)     (#3609)</li> <li>enhance <code>eb</code> command to ensure that <code>easybuild.main</code> can be     imported before settling on python* command to use     (#3610)</li> <li>add <code>--env-for-shebang</code> configuration option to define the <code>env</code>     command to use for shebangs     (#3613)</li> <li>add templates for architecture independent Python wheels     (#3618)</li> <li>mention easyblocks PR in gist when uploading test report for     it + fix <code>clean_gists.py</code> script     (#3622)</li> <li>also accept regular expression value for <code>--accept-eula-for</code>     (#3630)</li> <li>update <code>validate_github_token</code> function to accept GitHub token     in new format     (#3632)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix <code>$BLAS_LIB_MT</code> for OpenBLAS, ensure <code>-lpthread</code> is included     (#3584)</li> <li>use <code>--opt=val</code> for passing settings from config file to option     parser to avoid error for values starting with <code>-</code> or <code>--</code>     (#3594)</li> <li>avoid raised exception when getting output from interactive     command in <code>run_cmd_qa</code>     (#3599)</li> <li>add option to write file from file-like object and use in     <code>download_file</code>     (#3614)</li> <li>make sure that path to <code>eb</code> is always found by tests     (#3617)</li> </ul> </li> <li>other changes:<ul> <li>add <code>pick_default_branch</code> function to clean up duplicate code in     <code>tools/github.py</code>     (#3592)</li> <li>refactor the CI configuration to use inclusion instead of     exclusion     (#3616)</li> <li>use develop branch when testing push access in <code>--check-github</code>     (#3629)</li> <li>deprecate <code>--accept-eula</code>, rename to <code>--accept-eula-for</code>     (#3630)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>make OpenCV easyblock aware of protobuf, libwebp and OpenEXR     dependencies provided via EasyBuild     (#2346)</li> <li>update CP2K easyblock w.r.t. running regtest for CP2K v8.1     (#2350)</li> <li>update GROMACS easyblock for GROMACS/2021 with CUDA     (#2353)</li> <li>adjust call to <code>python-config</code> for Python &gt;= 3.8 in VMD     easyblock     (#2355)</li> <li>enhance cuDNN and CUDA easyblocks to support <code>aarch64</code>     (#2356)</li> <li>pass down compiler flags provided by EasyBuild in g2clib     easyblock     (#2357)</li> <li>update VTune easyblock for version 2020     (#2359)</li> <li>make WRF and WPS easyblocks aware of <code>(pre)configopts</code>     (#2361)</li> <li>add Clang version 12.0.0 for AOCC 3.0.0 to mapping in custom     easyblock for AOCC     (#2362)</li> <li>use <code>PYPI_SOURCE</code> as the default for source_urls of     PythonPackage     (#2364,     #2370)</li> <li>enhance PythonPackage easyblock to catch faulty version (0.0.0)     for installed Python packages     (#2367,     #2377)</li> <li>enhance BWA easyblock: pass compiler flags + use <code>filetools</code>     functions     (#2368)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>set <code>$R_LIBS_SITE</code> rather than <code>$R_LIBS</code> when installing R     packages     (#2326)</li> <li>update PETSc easyblock to take into account that ScaLAPACK     installation may not have header files + fix building in     parallel     (#2348)</li> <li>disable CMake user package repository in CMakeMake generic     easyblock     (#2351)</li> <li>update LAPACK easyblock to keep control of compiler options for     versions &gt;= 3.9.0     (#2358)</li> <li>also set <code>$TORCH_CUDA_ARCH_LIST</code> for PyTorch tests     (#2363)</li> <li>enhance Hadoop easyblock to avoid copying same native library     twice     (#2371)</li> <li>fix pip extension download pattern for PythonPackage easyblock     (#2372)</li> <li>make the CUDA stub libs take preference over system libs when     linking     (#2373)</li> <li>improve Python package version check and add     <code>unversioned_packages</code> easyconfig parameter     (#2377)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfig for goblf/2020b toolchain     (#12381,     #12535)</li> <li>added example easyconfig files for 41 new software packages:<ul> <li>amplimap     (#12205),     BEEF     (#12104),     bpp     (#12036),     Brotli     (#11651),     CDAT     (#12322),     cicero     (#12252),     CIF2Cell     (#12258),     CompareM     (#9377),     DL_POLY_4     (#12324),     DMCfun     (#12412),     ESMPy     (#12339),     FLAC     (#12300),     gdbm     (#12322),     GPyOpt     (#12524),     json-c     (#12344),     libcdms     (#12322),     libdrs     (#12322),     libogg     (#12285),     libvorbis     (#12300),     LncLOOM     (#12287),     LPJmL     (#12344),     maze     (#12354),     MetaEuk     (#12188),     mrcfile     (#12497),     Myokit     (#12261),     NCCL-tests     (#12415),     pyABC     (#12329),     PyCifRW     (#12258),     PyOD     (#12507),     pyro-api     (#12447),     pyro-ppl     (#12447),     R-opencv     (#12226),     Ratatosk     (#12443),     RevBayes     (#12419),     sansa     (#12354),     scikit-cuda     (#12352),     Seeder     (#9057),     suave     (#12354),     voltools     (#12497),     vorbis-tools     (#12300),     YACS     (#12309)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>AOCC 3.0.0, Arriba 2.1.0, ArviZ 0.11.1, arpack-ng 3.8.0 BCFtools     1.12, BEDTools 2.30.0, BUSCO 5.0.0, BioPerl 1.7.8, Blosc 1.21.0,     Boost.Python 1.74.0, bitarray 1.2.1, bokeh 2.2.3, CP2K 8.1,     CUDAcore 11.2.2, CellRanger 6.0.0, Clang 11.0.1, DIAMOND 2.0.7,     Delly 0.8.7, dask 2021.2.0, dm-tree 0.1.5, Elk 7.0.12, Extrae     3.8.0, FLUENT 2021R1, FabIO 0.11.0, Fiji 20201104, Flye 2.8.3,     FreeSurfer 7.1.1, GDAL 3.2.1, GEOS 3.9.1, GLFW 3.3.3, GMAP-GSNAP     2020-12-17, GROMACS 2021, GetOrganelle 1.7.4, gmsh 4.7.1, HTSeq     0.11.3, HTSlib 1.12, Hypre 2.20.0, hyperopt 0.2.5, iVar 1.3.1,     igraph 0.9.1, Jansson 2.13.1, Kent_tools 411, LAPACK 3.9.1, LAST     1179, LibSoup 2.72.0, libxc 5.1.3, MAFFT 7.475, MCR R2020a.6 +     R2020b.5 + R2021a.0.eb, MDTraj 1.9.5, MUMPS 5.3.5, MaSuRCA     4.0.1, Mercurial 5.7.1, Monocle3 0.2.3, NGS 2.10.9, NVHPC 21.2,     NetLogo 6.2.0, Nextflow 21.03.0, ncbi-vdb 2.10.9,     OSU-Micro-Benchmarks 5.7, OpenCV 4.5.1, OpenEXR 2.5.5, OptiX     7.2.0, PETSc 3.14.4, PLUMED 2.7.0, PROJ 7.2.1, PyAMG 4.0.0,     PyCUDA 2020.1, PyCairo 1.20.0, PyOpenCL 2021.1.2,     PyTorch-Geometric 1.6.3, p7zip 17.03, pFUnit 4.2.0, picard     2.25.1, pocl 1.6, preCICE 2.2.0, protobuf 2.5.0, pymatgen     2022.0.4, python-igraph 0.9.0, Qtconsole 5.0.2, R 4.0.4, RASPA2     2.0.41, RDFlib 5.0.0, ReFrame 3.5.1, Ruby 2.7.2, rnaQUAST 2.2.0,     SAMtools 1.12, SDL2 2.0.14, SIMPLE 3.0.0, SPAdes 3.15.2,     SUNDIALS 5.7.0, Seurat 4.0.1, Spark 3.1.1, scikit-image 0.18.1,     silx 0.14.0, spglib 1.16.1, sympy 1.7.1, tensorboardX 2.1,     tensorflow-probability 0.12.1, tmux 3.1c, USEARCH 11.0.667, VTK     9.0.1, VTune 2020_update3</li> </ul> </li> <li>minor enhancements, including:<ul> <li>verify checksum of all patch files in easyconfigs test suite     (#12221)</li> <li>add libwebp and OpenEXR dependencies for OpenCV 4.2.0 easyconfig     with foss/2020a     (#12227)</li> <li>add sanity check commands for vorbis-tools     (#12304)</li> <li>add extensions to R-bundle-Bioconductor 3.12: motifmatchr     (#12390),     OUTRIDER + FRASER     (#12510)</li> <li>add DMCfun extension for R v4.0.3 + v4.0.4     (#12409)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing GNU time dependency to WRF 4.0.2 built with     foss/2018b     (#12179)</li> <li>add archive <code>source_urls</code> for Hadoop and Spark     (#12220)</li> <li>add missing Python build dep for SeqAn 2.4.0     (#12222)</li> <li>add missing pkg-config build dependency to VCFtools 0.1.16     (#12245),     GObject-Introspection-1.64.0     (#12298),     libsndfile     (#12303)</li> <li>set <code>$HTSLIB_DIR</code> in HTSlib for use by EnsEMBLCoreAPI &amp;     Bio-DB-HTS     (#12253)</li> <li>bump JasPer version to latest 2.0.24 for 2020b generation of     easyconfigs + remove easyconfigs for ancient JasPer 2.0.1.4 with     GCCcore/10.2.0     (#12277,     #12288)</li> <li>bump pip to 20.3.4 in Python 2.7.18 easyconfig to fix unicode     error     (#12293)</li> <li>skip sanity check test in IPython-7.18.1-GCCcore-10.2.0.eb     (#12294)</li> <li>add missing Perl and Autotools build dependencies in recent WRF     easyconfigs     (#12301)</li> <li>add missing groff build dependency for Perl 5.30.0 and 5.32.0     (#12307)</li> <li>add linkcomm + rnetcarto extensions to R v4.0.3     (#12311)</li> <li>add dependency on Flask in all ASE v3.21.1 easyconfigs     (#12312)</li> <li>remove hard-coded <code>-xHost</code> from MMseqs2-11-e1a1c     (#12317)</li> <li>revised outdated easyconfigs for libcerf + replaced obsolete     homepages and source urls     (#12323)</li> <li>consistently include <code>new_archive</code> source URL in Qt5     easyconfigs + add missing checksums     (#12325,     #12426)</li> <li>fix source URL and add alternate checksum for Hypre 2.14.0     (#12337)</li> <li>add patch for recent netCDF easyconfigs to fix MPI_Info_f2c     issue with OpenMPI     (#12340)</li> <li>add SourceForge fallback source URL for recent freetype     easyconfigs     (#12341)</li> <li>revert to Seaborn 0.10.1 as dependency for NanoPlot 1.33.0     (#12345)</li> <li>use <code>-D_USE_METIS_5p1</code> in OpenSees v3.2.0 patch to correctly     build on top of METIS v5.1.0     (#12403)</li> <li>make sure that path to <code>eb</code> is always found by tests     (#12436)</li> <li>stop tests changing the EasyBuild easyconfigs     (#12454)</li> <li>use pip to install pkgconfig 1.5.1     (#12455)</li> <li>add CI test checking if the Python default <code>source_urls</code> are     used and fix CI check where <code>use_pip=False</code> was ignored     (#12456,     #12471)</li> <li>fix source URLs in Arrow 0.x easyconfigs     (#12475)</li> <li>fix numpy tests for recent SciPy-bundle easyconfig on POWER     (#12481)</li> <li>don't download hwloc during FIRESTARTER build     (#12482)</li> <li>avoid 0.0.0 install version for various Python apps     (#12519,     #12522)</li> <li>enable USER_SDPD package and disable building docs in LAMMPS     3Mar2020     (#12527)</li> <li>update <code>$R_LIBS_SITE</code> rather than <code>$R_LIBS</code> in easyconfigs     installing R packages     (#12534)</li> <li>add Python 3 build dep for HMMER 3.3.x test step     (#12536)</li> </ul> </li> <li>other changes:<ul> <li>rename opencv_contrib and update to OpenCV v3.4.1 with contrib     <code>versionsuffix</code>     (#12229)</li> <li>fix minor style issues in POV-Ray v3.7.0.8 easyconfigs     (#12342)</li> <li>enable <code>-fPIC</code> for g2clib     (#12349)</li> <li>consistently include Keras-Applications and Keras-Preprocessing     extensions in Keras 2.3.1 easyconfigs     (#12375)</li> <li>remove <code>PYPI_SOURCE</code> source URL from easyconfigs using     PythonPackage or PythonBundle     (#12541,     #12452,     #12453)</li> <li>require <code>sanity_pip_check</code> for all Python package/bundles     (#12464)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb433","title":"EasyBuild v4.3.3 (Feb 23rd 2021)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>advise PR labels in <code>--review-pr</code> and add support for     <code>--add-pr-labels</code>     (#3177)</li> <li>add support for using customized HTTP headers in <code>download_file</code>     (#3472,     #3583)</li> <li>also take toolchain dependencies into account when defining     template values     (#3541,     #3560)</li> <li>add support for <code>--accept-eula</code> configuration option +     <code>accept_eula</code> easyconfig parameter     (#3535,     #3536,     #3546)</li> <li>detect <code>SYSTEM</code> toolchain as special case in easystack files     (#3543)</li> <li>enhance <code>extract_cmd</code> function to use <code>cp -a</code> for shell scripts     (.sh)     (#3545)</li> <li>allow use of alternate envvar(s) to <code>$HOME</code> for user modules     (#3558)</li> <li>use https://sources.easybuild.io as fallback source URL     (#3572,     #3576)</li> <li>add toolchain definition for <code>iibff</code> toolchain     (#3574)</li> <li>add <code>%(cuda_cc_space_sep)s</code> and <code>%(cuda_cc_semicolon_sep)s</code>     templates     (#3578)</li> <li>add support for intel-compiler toolchain (&gt;= 2021.x versions,     oneAPI)     (#3581,     #3582)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add <code>--init</code> and <code>--recursive</code> options to <code>git submodule update</code>     command that is used when creating source tarball for specific     commit     (#3537)</li> <li>filter out duplicate paths in RPATH wrapper script     (#3538)</li> <li>don't clean up imported modules after verifying imports of     included Python modules     (#3544)</li> <li>avoid no-op changes to <code>$LD_*</code> environment variables in     ModulesTool     (#3553)</li> <li>fix UTF-8 encoding errors when running EasyBuild with Python     3.0.x-3.6.x     (#3565)</li> <li>create <code>lib64</code> symlink as a relative symlink     (#3566)</li> <li>don't reuse variable name in the loop to fix adding extra     compiler flags via toolchainopts     (#3571)</li> <li>symlink <code>lib</code> to <code>lib64</code> if it doesn't exist     (#3580)</li> <li>include <code>%(mpi_cmd_prefix)s</code> and <code>%(cuda_*)s</code> templates in     output of <code>--avail-easyconfig-templates</code>     (#3586)</li> </ul> </li> <li>other changes:<ul> <li>rename <code>EasyBlock._skip_step</code> to <code>EasyBlock.skip_step</code>, to make     it part of the public API     (#3561)</li> <li>make symlinking of <code>posix_c.so</code> to <code>posix.so</code> in test suite     configuration conditional     (#3570)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>2 new software-specific easyblocks:<ul> <li>AOCC     (#2295),     Intel compilers (v2021.x, oneAPI)     (#2305)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>run motorBike tutorial case as sanity check for recent     (community) OpenFOAM versions     (#2201)</li> <li>add foamMonitor to sanity checks of OpenFOAM     (#2256)</li> <li>create versioned symlinks for CMake commands + create symlink     for <code>cmake3</code> in PyTorch easyblock if <code>cmake3</code> command is not     found     (#2259)</li> <li>improve Bazel easyblock: add support for running tests, enable     static linking, use build dir rather than <code>tmpdir</code>, verbose     output     (#2285)</li> <li>add support for skipping steps in Python packages installed as     extension + print progress on individual steps for installing     Python packages as extensions     (#2290)</li> <li>update BerkeleyGW easyblock to support GCC 10 and fftlib     (#2297)</li> <li>update QuantumESPRESSO easyblock to support GCC 10     (#2298)</li> <li>update Clang easyblock to add support for building extra tools +     leveraging hwloc and Z3 as optional dependencies     (#2310)</li> <li>add support for running TensorFlow CPU and GPU tests     (#2263,     #2292,     #2312)</li> <li>update impi easyblock for impi 2021.x (oneAPI)     (#2313)</li> <li>update QuantumESPRESSO easyblock to handle v6.7     (#2319)</li> <li>update OpenFOAM easyblock for changes in v2012     (#2321)</li> <li>add sanity check commands to GCC (including LTO support)     (#2322)</li> <li>update FLUENT sanity check for v2021R1     (#2334)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>filter out user packages in LAMMPS easyblock if corresponding     dependency isn't included + only set <code>-DUSER-INTEL</code> on x86_64     systems     (#2254)</li> <li>unify handling of <code>pylibdirs</code> and don't add duplicated     <code>$PYTHONPATH</code> in PythonBundle     (#2281)</li> <li>enhance Amber easyblock to fix running of <code>update_amber</code> script     when <code>python</code> command is not available in OS     (#2282)</li> <li>guard <code>module unload</code> statements in modules for Cray*     toolchains     (#2286)</li> <li>set <code>$PYTHONNOUSERSITE</code> in <code>PythonBundle.extensions_step</code> to     avoid picking up on Python packages installed in $HOME     (#2289)</li> <li>create less temporary directories for TensorFlow by (only) using     <code>--output_user_root</code>     (#2293)</li> <li>fix logic w.r.t. enabling Python support in PETSc     (#2299)</li> <li>make <code>builddeps</code> a list of names in SLEPc easyblock     (#2300)</li> <li>make <code>builddeps</code> a list of names in Trilinos easyblock     (#2301)</li> <li>make sure the installation of <code>libiberty.a</code> in the binutils     easyblock goes into a populated directory     (#2308)</li> <li>fix for building GCC with <code>--sysroot</code> on ppc64le     (#2315)</li> <li>fix OpenFOAM sanity check on POWER     (#2320)</li> <li>use library search paths of compiler for RPATH when building     binutils with system compiler + enhance sanity check by running     <code>--version</code> for binutils commands     (#2323,     #2327)</li> <li>pass <code>$CXXFLAGS</code> to PDT's configure script via <code>-useropt</code>     (#2324)</li> <li>pass down compilation flags from build environment for ESMF     (#2325)</li> <li>update URLs for test data for WRF to <code>https</code>     (#2335)</li> <li>read MATLAB configuration file in binary mode to avoid UTF-8     encoding errors when using Python 3.6     (#2340)</li> <li>fix Boost sanity check on POWER     (#2291)     and aarch64     (#2341)</li> </ul> </li> <li>other changes, including:<ul> <li>rework module-only tests to use unique software name (rather     than 'foo')     (#2287)</li> <li>prefer default value for extra options in easyblock tests     (#2280,     #2302)</li> <li>add check for accepted EULA in custom easyblock for NVHPC     (#2311)</li> <li>update optional feature support of TensorFlow     (#2314)</li> <li>make symlinking of <code>posix_c.so</code> to <code>posix.so</code> in test suite     configuration conditional     (#2330)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add easyconfig for new iibff toolchain: iibff/2020b     (#12185)</li> <li>added easyconfigs for 6 new toolchains:<ul> <li>gobff/2020b     (#12098),     goblf/2018b     (#6615),     gomkl/2020b     (#12198),     iimkl/2018a     (#6092),     iomkl/2019b     (#11981),     iomkl/2020b     (#12009)</li> </ul> </li> <li>added example easyconfig files for 72 new software packages:<ul> <li>AOCC     (#11868),     CHERAB     (#7141),     CaDiCaL     (#11966),     CellRanger-ARC     (#12114),     CuPy     (#11749),     DFA     (#11979),     FIGARO     (#11924),     FIRESTARTER     (#12160),     FIt-SNE     (#8630),     GPyTorch     (#12010),     GSEA     (#10395),     GetOrganelle     (#11948),     Glucose     (#11965),     GraPhlAn     (#10707),     ITSx     (#10558),     Kaleido     (#11998),     LAPACK     (#6615),     LSD2     (#11903),     Lingeling     (#11964),     MPB     (#7026),     MiniCARD     (#11963),     MiniSat     (#11962),     NGSpeciesID     (#11918),     NanopolishComp     (#11823),     Nsight-Compute     (#12043),     Nsight-Systems     (#12042),     PHANOTATE     (#8667),     PIPITS     (#10558),     PyClone     (#11940),     PySAT     (#12000),     RNAmmer     (#7262),     Raysect     (#7141),     SICER2     (#12200),     SOCI     (#12045),     SeisSol     (#7194),     SignalP     (#11862),     Stack     (#11310),     SuperLU_DIST     (#11693),     Teneto     (#12056),     Transformers     (#12032),     YANK     (#11742),     Z3     (#12013),     bgen     (#7456,     #11867),     bgen-reader     (#7456,     #11867),     bpytop     (#12040),     byobu     (#11932),     chi2comb     (#11867),     cuTENSOR     (#11914),     dd     (#11978),     decona     (#11891),     dicom2nifti     (#11955),     eccodes-python     (#12083),     fftlib     (#11944),     flatbuffers-python     (#12148),     fpocket     (#11980),     gh     (#11851),     intel-compilers (oneAPI)     (#11982),     libGDSII     (#7026),     libpci     (#11871),     liknorm     (#7456,     #11867),     limix     (#7456,     #11867),     logaddexp     (#11867),     neptune-client     (#11985),     plinkQC     (#12068),     preCICE     (#11886),     py-aiger     (#11999),     py-aiger-bdd     (#11999),     pytest-xdist     (#11883,     #11893),     samblaster     (#7378),     terastructure     (#12197),     typing-extensions     (#11636),     webin-cli     (#8674)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ack 3.4.0, AmberTools 20, AMD-LibM 3.6.0-4, AMD-RNG 2.2,     AMD-SecureRNG 2.2, annovar 20191024, ASE 3.21.1, AUGUSTUS 3.4.0,     Bazel 3.7.2, bcgTree 1.1.0, BLAST+ 2.11.0, Bonito 0.3.5, Bowtie2     2.4.2, causalml 0.8.0-20200909, CGAL 5.2, ConnectomeWorkbench     1.4.2, CUDAcore 11.2.1, cuDNN 8.0.5.39, dcm2niix 1.0.20201102,     DendroPy 4.5.2, DIAMOND 0.9.36 + 2.0.6, ecCodes 2.20.0, ELPA     2020.11.001, Emacs 27.1, FusionCatcher 1.30, gensim 3.8.3, GHC     8.6.5, gnuplot 5.4.1, GPAW 21.1.0, Graphviz 2.44.1, GROMACS     2020.5, Gurobi 9.1.0, HH-suite 3.3.0, HMMER 3.3.2, HTSlib 1.11,     Horovod 0.21.1, imbalanced-learn 0.7.0, impi 2021.1.1, inferCNV     1.3.3, ITK 5.1.2, IQ-TREE 2.1.2, JasPer 2.0.24, JUBE 2.4.1,     libgit2 1.1.0, libzip 1.7.3, likwid 5.1.0, MariaDB 10.5.8,     medaka 1.2.0, Meep 1.6.0, mkl-service 2.3.0, MPICH 3.3.2,     muParser 2.3.2, NanoComp 1.13.1, NanoPlot 1.33.0, networkx 2.5,     NLTK 3.5, numba 0.52.0, NVHPC 20.11, nvtop 1.1.0, OpenCoarrays     2.9.2, OpenFOAM v2012, OpenJPEG 2.4.0, OpenMPI 4.1.0, parasail     2.4.2, PLUMED 2.6.2, PostgreSQL 13.2, pydicom 2.1.2, PyMC3     3.11.0, python-parasail 1.2.2, PyTorch 1.7.1, QIIME2 2020.11,     QuantumESPRESSO 6.7, QuickFF 2.2.7, R 4.0.3,     R-bundle-Bioconductor 3.12, ReFrame 3.4.1, RMBlast 2.10.0, RSEM     1.3.3, Salmon 1.4.0, scikit-build 0.11.1, SciPy-bundle 2020.03     w/ Python 2.7.18, Seaborn 0.11.1, SEPP 4.4.0, SHAPEIT4 4.2.0,     SpaceRanger 1.2.2, Stacks 2.54, STAR 2.7.7.a, statsmodels     0.12.1, SuiteSparse 5.8.1, tbb 2020.3, TensorFlow 1.15.5 +     2.4.1, Theano 1.1.2, torchvision 0.8.2, V8 3.4.0, Wannier90     3.1.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>enable building of QtWebEngine in Qt5 easyconfig using     foss/2017b or intel/2017b     (#7302)</li> <li>enable NVPTX offload in GCCcore 9.3.0 easyconfig     (#11839)</li> <li>also build shared library in recent HDF easyconfigs     (#11847)</li> <li>add support for HDF4 to GDAL v3.0.2 and v3.0.4     (#11855)</li> <li>add patch for magma 2.5.4 with fosscuda/2019b to allow any     <code>sm_*</code> value to be passed via <code>GPU_TARGET</code>     (#11861)</li> <li>add missing M4 build dependency to recent SuiteSparse versions     (#11869)</li> <li>enable tests for most recent Bazel versions (3.x)     (#11894)</li> <li>enable gipaw in QuantumESPRESSO 6.6 easyconfig     (#11905)</li> <li>add RCAL + sensemakr extensions to R 4.0.0     (#11921)</li> <li>add additional extensions to R v4.0.3 easyconfig     (#11922,     #12057)</li> <li>improve sanity_check_paths for AMD-LibM     (#11933)</li> <li>symlink <code>include</code>/<code>lib</code> subdirs + enhance <code>sanity_check_paths</code>     for AMD-RNG v2.2-4     (#11934)</li> <li>improve <code>sanity_check_paths</code> for AMD-SecureRNG     (#11935)</li> <li>update Clang 10+ dependencies &amp; build extra tools     (#12013)</li> <li>add Inline extension to recent Perl easyconfigs (5.30+)     (#12029)</li> <li>add EnsDb.Hsapiens.v86 to Bioconductor 3.11     (#12078)</li> <li>add sanity check command for bam-readcount v0.8.0 to check     <code>--version</code> output     (#12092)</li> <li>add EnsDb.Hsapiens.v75 + Signac extensions to     R-bundle-Bioconductor 3.12     (#12174)</li> <li>add tensorboard profile plugin to recent TensorFlow 2.x     easyconfigs     (#12136,     #12137)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>added missing space in <code>configopts</code> in ParaView 5.8.0     easyconfigs using 2020a toolchain     (#10989)</li> <li>use bfd linker for glibc 2.30     (#11331)</li> <li>add missing moduleclass in UCLUST easyconfig     (#11477)</li> <li>don't disable optarch for Clang 11.0.0     (#11814)</li> <li>add patch to fix miscompilation bug on POWER for GCC 8.x and 9.x     (#11837)</li> <li>fix compilation of TensorFlow 2.3.1 with CUDA and glibc 2.26 on     POWER     (#11859)</li> <li>disable building of manpages for GDCM to fix installation     problem with docbook     (#11866)</li> <li>add patch for LLVM 6.0.0 to fix missing exported symbol     <code>LLVMInitializeInstCombine</code>     (#11873)</li> <li>fix name of source file for GDRCopy v2.1     (#11887)</li> <li>fix Tombo to work with rpy2 v3 when creating DataFrames     (#11892)</li> <li>fix GCCcore 8.1.0 w.r.t. removed <code>sys/ustat.h</code> in glibc 2.28     (#11896)</li> <li>add git as a dependency to GitPython version 3.x     (#11902)</li> <li>fix undefined <code>__ieee128</code> on ppc64le with glibc 2.26 for magma     (#11930)     and PyTorch     (#11936)</li> <li>update Hypre git location for PETSc 3.11.0 using downloaded     dependencies     (#11947)</li> <li>fix source URL in expat easyconfigs (and consistently add custom     <code>sanity_check_paths</code>)     (#11960)</li> <li>use libpng provided by EasyBuild in VTK to fix build issue on     ppc64le     (#11990)</li> <li>add missing pkg-config build dependency for     GObject-Introspection v1.66.1     (#11949)</li> <li>add missing plotly-orca dependency for NanoPlot     (#11967,     #12015)</li> <li>add patch for Boost 1.74.0 to fix missing include file     (#12007)</li> <li>fix for <code>error: 'runtime_error' is not a member of 'std'</code> in     qtlocation for Qt5 v5.14.2     (#12012)</li> <li>fix homepage for gnuplot 5.2.8, use <code>http://</code> since homepage is     not reachable via <code>https://</code>     (#12047)</li> <li>fix OS dependencies for libfabric     (#12058)</li> <li>fix vector <code>mul</code> and <code>div</code> with broadcasts in <code>-masm=intel</code> mode     in GCCcore v9.3.0     (#12065)</li> <li>add missing ESMF dependency in NCO easyconfigs     (#12071,     #12072)</li> <li>add patch to fix version for bam-readcount 0.8.0     (#12075)</li> <li>add missing Perl build dep for (recent) libcerf versions,     required for <code>pod2html</code> command     (#12085)</li> <li>add missing bzip2 dependency to recent ncbi-vdb easyconfigs     (#12120)</li> <li>add missing Perl build dependency for BLIS 0.8.0     (#12146)</li> <li>use <code>https://sources.easybuild.io</code> as fallback source URL for     UDUNITS     (#12049,     #12156,     #12182)</li> <li>correct the GCC version check to allow IBM VSX builds of GROMACS     2020.4 and 2020.5     (#12159)</li> <li>add missing mkl-service dependency for Theano built with     intel/2019b + enhance sanity check     (#12172)</li> <li>add patches to fix test problems with p4est 2.2     (#12028)</li> <li>fix build of Bison using older system GCC (v4.x)     (#12203)</li> <li>fix lack of optimisation for SHAPEIT4 v4.1.3     (#12206)</li> <li>add missing gnuplot dependency for OpenFOAM from v2.4.0 to v6     (#11801,     #12208)</li> <li>fix source URL for libspatialite     (#12213)</li> <li>add <code>archive</code> fallback source URL to MAGMA easyconfigs     (#12214)</li> <li>fix checksum for patch in make 4.2.1 easyconfig using     GCC/7.3.0-2.30     (#12223)</li> </ul> </li> <li>other changes:<ul> <li>replace easyconfigs for bpp-core/bpp-phyl/bpp-seq v2.4.1 with a     single easyconfig for BioPP v2.4.1 (using Bundle easyblock)     (#11609)</li> <li>add CESM-deps to whitelist in check for custom     <code>sanity_check_paths</code>     (#11916)</li> <li>include '-4' in version for AMD-SecureRNG v2.2-4     (#11934,     #11935)</li> <li>switch to using python-parasail and tqdm dependencies in Bonito     easyconfigs     (#11937)</li> <li>rename orca to plotly-orca     (#12015)</li> <li>remove duplicate extensions in R 3.5.x easyconfigs, and add test     to detect such issues     (#12059)</li> <li>remove Python dependency from ecCodes v2.17.0 since it doesn't     provide Python bindings     (#12084)</li> <li>update Java/1.8 wrapper to Java 1.8.0_281     (#11928,     #12088)</li> <li>update Bison (build) dependency for flex built with system     compiler to v3.5.3     (#12111)</li> <li>make symlinking of <code>posix.so</code> in test suite configuration     conditional     (#12123)</li> <li>move make 4.3 easyconfigs to GCCcore toolchain     (#12166)</li> <li>move most recent BLIS and libFLAME easyconfigs from GCC to     GCCcore     (#12168)</li> <li>rename SNAP to SNAP-HMM and update easyconfig     (#12218)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb432","title":"EasyBuild v4.3.2 (December 10th 2020)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>add (experimental) support for specifying easyconfig files via an     \"easystack\" file     (#3479,     #3511,     #3515,     #3517,     #3520,     #3521)<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Easystack-files.html</li> </ul> </li> <li>add definition for new <code>gobff</code> toolchain using BLIS and LibFLAME     (#3505)</li> <li>various enhancements, including:<ul> <li>add support for toolchain options like <code>extra_cxxflags</code> to     specify extra compiler options     (#2193)</li> <li>fix combination of <code>--copy-ec</code> and <code>--from-pr</code>     (#3482)</li> <li>enhance <code>copy_files</code> function: support single file target, error     on empty input list, support verbose mode     (#3483)</li> <li>cache result of <code>fetch_files_from_pr</code> function (mainly to speed     up framework test suite)     (#3484)</li> <li>add <code>locate_files</code> function to filetools module     (#3485)</li> <li>add support for <code>%(module_name)s</code> template value     (#3497)</li> <li>clarify input format for <code>--cuda-compute-capabilities</code> in     <code>eb --help</code> output     (#3509)</li> <li>add support for skipping unit tests (test step) via     <code>--skip-test-step</code>     (#3524)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also ignore <code>vsc.*</code> imports coming from from     <code>pkg_resources/__init__.py</code> (setuptools) in fake vsc namespace     (#3491)</li> <li>don't pass username in <code>github_api_get_request</code> when no GitHub     token is available     (#3494)</li> <li>also inject <code>-rpath</code> options for all entries in <code>$LIBRARY_PATH</code>     in <code>RPATH</code> wrappers     (#3495)</li> <li>avoid <code>TypeError</code> being raised by <code>list_toolchains</code>     (#3499)</li> <li>check if PR is already merged in <code>--merge-pr</code>     (#3502)</li> <li>graciously handle wrong PR id in <code>fetch_pr_data</code>     (#3503)</li> <li>fix regression in <code>apply_regex_substitutions</code>: also accept list     of paths to patch     (#3507)</li> <li>update installation procedure for EasyBuild in generated     Singularity container recipes     (#3510)</li> <li>fix GitHub Actions workflow for test suite: run outside of repo     checkout + also test bootstrap script with Python 3.9     (#3518)</li> <li>bump cryptography from 2.9.2 to 3.2 for Python 2 in     <code>requirements.txt</code>     (#3519)</li> <li>fix <code>eb --help=rst</code> when running with Python 3     (#3525)</li> </ul> </li> <li>other changes:<ul> <li>exclude test configurations with Lmod 7 and Python 3, except for     Python 3.6     (#3496)</li> <li>significantly speed up parsing of easyconfig files by only     extracting comments from an easyconfig file when they're     actually needed     (#3498)</li> <li>don't include <code>file</code>/<code>ldd</code>/<code>readelf</code> commands run during RPATH     sanity check in <code>--trace</code> output     (#3508)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>2 new software-specific easyblocks:<ul> <li>code-server     (#2255),     Metagenome-Atlas     (#2219)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add <code>-fallow-argument-mismatch</code> option when building CP2K 7.1 or     older with GCC 10.x     (#2223)</li> <li>update TensorFlow easyblock for upcoming TensorFlow 2.4     (#2225)</li> <li>add support for building Clang with OpenMP offload support     (#2229)</li> <li>enhance OpenMPI easyblock to catch any <code>--with-ucx*</code> configure     options     (#2230)</li> <li>take into account <code>preinstallopts</code> and <code>installopts</code> in custom     easyblock for NCL     (#2234)</li> <li>add support for <code>withnvptx</code> easyconfig parameter, to enable GPU     offloading, in GCC easyblock     (#2235)</li> <li>take into account versions like <code>4.x</code> in OpenFOAM easyblock     (#2239)</li> <li>also add <code>bin</code> subdir to <code>$PATH</code> when installing a Python     package     (#2244)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix two bugs in GROMACS easyblock when using GCC &amp; MKL for FFT     and BLAS/LAPACK     (#2212)</li> <li>fix version check in Qt5 easyblock w.r.t. disabling features on     old Linux kernel versions     (#2220)</li> <li>always define <code>$FCCPP</code> in QuantumESPRESSO easyblock (not just     when using Intel compilers)     (#2221)</li> <li>allow wxPython to be installed as an extension     (#2227,     #2275)</li> <li>only configure Python with <code>--enable-optimizations</code> when     compiling Python with (recent) GCC compiler     (#2228)</li> <li>fix sanity check for Boost MT libraries     (#2231)</li> <li>fix hardcoded path in NVHPC easyblock to support multiple     architectures     (#2233)</li> <li>fix <code>CPASSERT</code> test faults on RHEL8 in CP2K easyblock     (#2236)</li> <li>stop silently ignoring failing numpy tests, but include support     for ignoring (failing) numpy tests     (#2238,     #2271)</li> <li>append to module guesses in easyblocks for Chapel, icc, imkl and     impi (rather than overwriting guesses from parent easyblock)     (#2242)</li> <li>weed out duplicates when determining paths to <code>include-fixed</code>     subdirectory in GCC easyblock     (#2245)</li> <li>prepend all hardcoded <code>/usr/*</code> paths with sysroot in Python's     setup.py installation script     (#2246)</li> <li>don't try to patch newer versions of Bazel where the patches     won't apply     (#2249)</li> <li>fix setting of <code>$RUNPARALLEL</code> in HDF5 easyblock     (#2250)</li> <li>move <code>--build</code> and <code>--host</code> logic to <code>run_configure_cmd</code> in GCC     easyblock     (#2252)</li> <li>set <code>$UCX_TLS</code> in module for impi installation on top of UCX,     and allow it to be overwritten in impi easyconfig file     (#2253,     #2258)</li> <li>enhance PyTorch easyblock to ensure it finds MKL (via     <code>$MKLROOT</code>)     (#2257)</li> <li>use integer division to determine number MPI ranks to use in WRF     test step     (#2266)</li> <li>also specify <code>locincpth</code> and <code>glibpth</code> configure options for     Perl based on <code>--sysroot</code>     (#2268)</li> </ul> </li> <li>other changes, including:<ul> <li>add link to GCC mailing list thread confirming that binutils     should not be configured with     <code>--with-sysroot=$EASYBUILD_SYSROOT</code> when GCC is being configured     like that     (#2215)</li> <li>pass paths to patch one by one to <code>apply_regex_substitutions</code> in     GCC easyblock when <code>--sysroot</code> is set     (#2217)<ul> <li>workaround for regression in <code>apply_regex_substitutions</code>     introduced in EasyBuild v4.3.1 (which was fixed for v4.3.2)</li> </ul> </li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add easyconfigs for new gobff toolchain:     gobff/2020.11 + gobff/2020.06-amd     (#11761)</li> <li>add easyconfigs for updates of common toolchains:     foss/2020b, fosscuda/2020b,     intel/2020b, intelcuda/2020b<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Common-toolchains.html</li> </ul> </li> <li>added example easyconfig files for 41 new software packages:<ul> <li>alsa-lib     (#11658),     assimp     (#11759),     BioServices     (#11602),     carputils     (#11270),     cctools     (#11799),     code-server     (#11778),     CRISPResso2     (#11775),     elfutils     (#11783),     EMU     (#11641),     fgbio     (#11519),     Flink     (#11747),     FreeSASA     (#11699),     Geant4-data     (#11610),     geocube     (#11714),     IPM     (#11768,     #11772),     libmicrohttpd     (#11783),     libStatGen     (#7982),     libzeep     (#11687),     LLDB     (#11822),     meshalyzer     (#11270),     meshtool     (#11270),     Metagenome-Atlas     (#11620),     MLxtend     (#11601),     MRChem     (#11604),     MRCPP     (#11579),     mxml     (#11769),     mxmlplus     (#11771),     nanocompore     (#11690),     neon     (#11797),     Open-Data-Cube-Core     (#11713),     OpenSees     (#11613),     PEST++     (#11565),     pyFAI     (#11849),     pymca     (#11848),     RE2     (#11718),     scikit-bio     (#11660),     SpaceRanger     (#11776),     SplAdder     (#11607),     SWAT+     (#11615),     velocyto     (#11744),     WCT     (#11779)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>BBMap 38.87, Boost 1.74.0, CUDA 11.1.1, CellRanger 5.0.0.eb,     CheckM 1.1.3, Clang 11.0.0, cuDNN 8.0.4.30, DMTCP 2.6.0, FDS     6.7.5, FFmpeg 4.3.1, GROMACS 2020.4, Geant4 10.6.2, Ghostscript     9.53.3, GitPython 3.1.9, GlobalArrays 5.8, HDF5 1.10.7, h5py     3.1.0, hypothesis 5.41.5, JasPer 2.0.16, LittleCMS 2.11, libedit     20191231, libyaml 0.2.5, MPFR 4.1.0, magma 2.5.4, matplotlib     3.3.3, NCCL 2.8.3, NLopt 2.6.2, Nextflow 20.10.0, netCDF-Fortran     4.5.3, OpenBLAS 0.3.12, OpenMolcas 20.10, Pillow 8.0.1, PnetCDF     1.12.1, PyYAML 5.3.1, packmol 20.2.2, protobuf 3.14.0, psycopg2     2.8.6, pybind11 2.6.0, pycocotools 2.0.2, Qt5 5.14.2, RAxML-NG     1.0.1, RSeQC 4.0.0, rioxarray 0.1.1, SCOTCH 6.1.0, SciPy-bundle     2020.11, SentencePiece 0.1.94, StringTie 2.1.4, SuperLU 5.2.2,     scikit-learn 0.23.2, snakemake 5.26.1, tqdm 4.51.0, vsc-mympirun     5.2.5, x264 20201026</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add extension to R-bundle-Bioconductor 3.11: snpStats     (#11586),     SCANVIS     (#11638)</li> <li>add extensions to R 4.0.0: coloc, Exact, lmom, gld, DescTools     (#11587);     nlsem     (#11733);     mitools, survey, tableone, jstable     (#11841)</li> <li>add gxmapi extension (Python bindings) to GROMACS 2020.4     (#11640)</li> <li>add missing extensions for QIIME2 to Perl 5.30.2 and 5.32.0     easyconfigs     (#11654)</li> <li>enable NVPTX offload support in GCCcore 10.2.0 easyconfig     (#11720)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>prevent Minimac4 easyconfig from downloading libStatGen from     GitHub     (#7982)</li> <li>limit build parallelism for RAxML-NG to avoid build failure     (#10363)</li> <li>fix <code>source_urls</code> in Geant4 easyconfigs     (#11596)</li> <li>add alternate checksum for extensions in R easyconfigs:     KernSmooth     (#11600),     codetools     (#11616,     #11736)</li> <li>fix BBMap version check in FusionCatcher v1.20     (#11608)</li> <li>add patch for TensorFlow 2.3.1 to fix installation on Arm64     (#11614)</li> <li>add patch for GCCcore 10.2 to fix <code>__has_include</code> regression     (#11627)</li> <li>change default <code>bitmaptype</code> for IRkernel to cairo     (#11645)</li> <li>set <code>$JUPYTER_PATH</code> to make Jupyter find the ipywidgets     extension in recent IPython easyconfigs     (#11649)</li> <li>add missing dependencies + fix moduleclass in CheckM easyconfigs     (should be bio)     (#11662)</li> <li>use Python 2 build dep for nodejs 12.19.0     (#11679)</li> <li>use correct OS deps in UCX     (#11702)</li> <li>in-place update to magma 2.5.4 for PyTorch 1.2.0     (#11723)</li> <li>in-place update to magma 2.5.4 for PyTorch easyconfigs using     fosscuda/2019b toolchain     (#11726)</li> <li>add missing Java dep to Prokka     (#11732)</li> <li>add patch to fix possible memory leak in OpenBLAS 0.3.3+     (#11745)</li> <li>do not treat warnings as errors in Java v1.8_191-b26-OpenJDK     (POWER)     (#11755)</li> <li>add missing PEAR dependency in easyconfig for GBprocesS v2.3 +     enhance sanity check     (#11767)</li> <li>add missing gnuplot dependency in OpenFOAM easyconfigs     (#11770,     #11800)</li> <li>consistently add Java as a dep for prokka 1.14.5     (#11782)</li> <li>stick to http download URL in fetchMG easyconfig (https doesn't     work)     (#11788)</li> </ul> </li> <li>other changes:<ul> <li>rename XCfun to XCFun     (#11603)</li> <li>rename ambiguous Ray easyconfigs to Ray-assembler and     Ray-project     (#11727)</li> <li>change 'rstudio' name to 'RStudio-Server' to agree with     official name and better reflect what it provides     (#11764)</li> <li>rename Sumo to SUMO for consistency     (#11791)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb431","title":"EasyBuild v4.3.1 (October 29th 2020)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>further GCC toolchain fixes for aarch64     (#3433)</li> <li>take into account <code>--include-easyblocks-from-pr</code> when uploading     test reports     (#3446)</li> <li>add path to pkg-config files in sysroot to <code>$PKG_CONFIG_PATH</code>     when <code>--sysroot</code> is specified     (#3451)</li> <li>add support for NVHPC compiler + toolchain (based on PGI)     (#3454)</li> <li>check for _VERSION and _PREFIX Cray environment variables with     both software and module name     (#3460)</li> <li>allow including easyblocks from multiple PRs     (#3480,     #3481)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>avoid <code>UnicodeDecodeError</code> in <code>apply_regex_substitutions</code> when     patching files that include non-UTF-8 characters     (#3450)</li> <li>avoid appending lib stubs pattern to RPATH filter over and over     again     (#3452)</li> <li>fix missing string template on error for incorrect extension     <code>sources</code> value     (#3461)</li> <li>fix compatibility with Python 3.9 by renaming fancy root logger     (#3465)</li> <li>also remove empty checksums list specified in easyconfig file     when using <code>--inject-checksums</code>     (#3466)</li> <li>avoid confusing error log message when determining impi version     while trying to define value for <code>%(mpi_cmd_prefix)s</code> template     (#3474)</li> <li>unset <code>$LD_LIBRARY_PATH</code> when checking for OS dependencies with     <code>rpm</code> &amp; co     (#3477)</li> <li>don't change directory in <code>download_repo</code> function in     <code>tools.github</code>     (#3486)</li> <li>take <code>source_urls</code>, <code>checksums</code>, <code>patches</code> into account when     extension source is specified via <code>sources</code>     (#3487)</li> </ul> </li> <li>other changes:<ul> <li>consider <code>$EB_INSTALLPYTHON</code> in <code>eb</code> command to specify <code>python</code>     command to use for running EasyBuild     (#3428)</li> <li>use only the sub folder name for <code>createSubmoduleDeps</code> script     (#3464)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>2 new software-specific easyblocks:<ul> <li>CFDEMcoupling     (#1439),     NVHPC     (#2190)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>support having PyQt5 installed as part of Qt5 in QScintilla     easyblock     (#2040)</li> <li>update TensorFlow easyblock to put Bazel build files in build     directory + avoid unnecessary runtime patching     (#2166)</li> <li>update CBLAS easyblock for toolchains that include imkl     (#2175)</li> <li>add workaround for duplicate prefix path in Eigen CMake config     (#2176)</li> <li>enable <code>CTEST_OUTPUT_ON_FAILURE</code> for CMakeMake test step     (#2181)</li> <li>add XLA build support to TensorFlow easyblock     (#2182)</li> <li>also consider libfabric dep (<code>--with-ofi</code>) when setting default     OpenMPI configure options     (#2184)</li> <li>make easyblock for installing CMake aware of <code>--sysroot</code>     (#2187)</li> <li>make OpenBLAS respect the parallelism set by easybuild     (#2191)</li> <li>handle option of building Michigan State University CCT3 &amp;     CCSD3A methods in GAMESS_US easyblock     (#2194)</li> <li>add support to RubyGem easyblock for installing zipped gems     (#2203)</li> <li>update ScaLAPACK easyblock to support installation with CMake     for recent versions (&gt;= v2.1.0)     (#2205)</li> <li>update Score-P easyblock to add support for NVHPC toolchain     (#2206)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add <code>torch/lib</code> subdirectory in Python lib dir to     <code>$LD_LIBRARY_PATH</code> for PyTorch installations     (#2183)</li> <li>update MUMmer easyblock to use <code>apply_regex_substitutions</code> and     <code>copy_file</code> functions     (#2185)</li> <li>configure OpenMPI 4.x with <code>--without-verbs</code> when using UCX     (#2188)</li> <li>take into account that zlib may be listed in <code>--filter-deps</code> in     custom easyblock for XML R package     (#2189)</li> <li>add sanity check commands to Clang easyblock and print warning     for missing ncurses     (#2193)</li> <li>enhance OpenFOAM easyblock to add symlinks for libraries to     ensure <code>mpi</code> versions have preference over <code>dummy</code> versions     (#2196)</li> <li>leverage installed OpenSSL/BoringSSL when cURL is used as a     dependency for TensorFlow     (#2197)</li> <li>add <code>-ffree-line-length-none</code> to gfortran flags in Siesta     easyblock     (#2204)</li> <li>respect <code>--disable-mpi-tests</code> in Siesta easyblock     (#2207)</li> </ul> </li> <li>other changes, including:<ul> <li>set <code>$EB_INSTALLPYTHON</code> in module generated for EasyBuild rather     than setting <code>$EB_PYTHON</code>, to allow overriding Python command to     be used for running EasyBuild with <code>$EB_PYTHON</code>     (#2109)</li> <li>remove unused custom easyblock for DIRAC     (#2192,     #2198)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for 2 new toolchains:<ul> <li>fosscuda/2020a     (#11424)     and intelcuda/2020a     (#11425)</li> </ul> </li> <li>added example easyconfig files for 75 new software packages:<ul> <li>Bsoft     (#6551,     #11537),     causallift     (#11436),     CAVIAR     (#11158),     CCfits     (#11505),     Cereal     (#11506),     CFDEMcoupling     (#6465),     Check     (#11295),     chewBBACA     (#11418),     COMSOL     (#11513),     CUDAcore     (#11295),     Dalton     (#5808),     DIRAC     (#11414),     ESMValTool     (#6329),     eSpeak-NG     (#11236),     ExifTool     (#11521),     FabIO     (#11517),     festival     (#11236),     fetchMG     (#11283),     FHI-aims     (#11198),     Flexbar     (#11305),     FRUIT     (#6613),     FRUIT_processor     (#6631),     Gaussian     (#4247),     GBprocesS     (#11512),     GDRCopy     (#11295),     Genome_Profiler     (#6066),     groff     (#11200),     ILAMB     (#11309),     kedro     (#11436),     leidenalg     (#11407),     libav     (#6194),     libmo_unpack     (#6329),     libobjcryst     (#11321),     makeinfo     (#11368),     mauveAligner     (#11395),     MBROLA     (#11236),     MDSplus-Java     (#10705),     MDSplus-Python     (#10705),     MyCC     (#11283),     nanomax-analysis-utils     (#11517),     Nek5000     (#6408),     NVHPC     (#11391),     OPERA-MS     (#11410),     ORFfinder     (#7031),     phonemizer     (#11236),     Pingouin     (#11280),     Pint     (#11151),     pydantic     (#11151),     pyobjcryst     (#11321),     PyOpenCL     (#11517),     pyspoa     (#11438),     QtPy     (#11517),     Qtconsole     (#11517),     rasterio     (#11468),     rasterstats     (#11468),     ReMatCh     (#6067),     Ruby-Tk     (#6613),     SBCL     (#11413),     scikit-uplift     (#11432),     SDL     (#6202),     SDL2     (#6203),     SDL2_image     (#6203),     SDL_image     (#6202),     SeqKit     (#11538),     silx     (#11517),     SiNVICT     (#11404),     sonic     (#11236),     speech_tools     (#11236),     Statistics-R     (#11274),     SUMO     (#11435),     tidybayes     (#11335),     treatSens     (#11431),     tsne     (#11283),     wandb     (#11450),     WisecondorX     (#11399)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 9.2.1, ASE 3.20.1, Autotools 20200321, Bazel 3.6.0,     Biopython 1.78, CCL 1.12, CMake 3.18.4, CUDA 11.0.2, cURL     7.72.0, deepdiff 5.0.2, fmt 7.0.3, GATK 4.1.8.1, GLib 2.66.1,     GROMACS 2020.3, GTK+ 3.24.23, git 2.28.0, HMMER 3.3.1, Horovod     0.20.3, ICU 67.1, IPython 7.18.1, ichorCNA 0.3.2, JupyterHub     1.1.0, JupyterLab 2.2.8, LLVM 11.0.0, libarchive 3.4.3,     libcircle 0.3, libevent 2.1.12, libfabric 1.11.0, libglvnd     1.3.2, libunwind 1.4.0, libxcb 1.13, MAFFT 7.471, MDSplus     7.96.12, MEGAHIT 1.2.9, MMseqs2 11-e1a1c, Mako 1.1.3, Mesa     20.2.1, Meson 0.55.3, medaka 1.1.3, mpifileutils 0.10.1, NASM     2.15.05, NSPR 4.29, NSS 3.57, Ninja 1.10.1, nettle 3.6, nglview     2.7.7, nodejs 12.19.0, OpenImageIO 2.1.12.0, OpenRefine 3.4.1,     OpenSSL 1.1.1h, PCRE2 10.35, PSI4 1.3.2, Pango 1.47.0, PyGEOS     0.8, PyOpenGL 3.1.5, PyQt5 5.15.1, PyQtGraph 0.11.0, PyRETIS     2.5.0, Python 3.8.6, pandas 1.1.2, phonopy 2.7.1, picard 2.22.1,     pixman 0.40.0, protobuf 3.13.0, pyEGA3 3.4.0, pytest 6.0.1,     ReFrame 3.2. re2c 2.0.3, SAMtools 1.11, SCons 4.0.1, SQLite     3.33.0, Spyder 4.1.5, Subversion 1.14.0, sbt 1.3.13,     spglib-python 1.16.0, spoa 4.0.0, TINKER 8.8.1, TRIQS 3.0.0,     Taiyaki 5.1.0, TensorFlow 2.3.1, Tkinter 2.7.18 + 3.8.6,     torchvision 0.7.0, UCX 1.9.0, V8 3.2.0, VirtualGL 2.6.2, vsc     mympirun 5.2.0 X11 20201008, XGBoost 1.2.0, XZ 5.2.5, Xerces-C++     3.2.3, xarray 0.16.1, ZeroMQ 4.3.3, zstd 1.4.5</li> </ul> </li> <li>minor enhancements, including:<ul> <li>use more EasyBuild installed dependencies for TensorFlow 2.2.0     (#11224)</li> <li>add additional extensions to R 4.0.0 easyconfig     (#11340,     #11430,     #11487)</li> <li>add additional extensions to Bioconductor 3.11 bundle     (#11341,     #11488)</li> <li>make libtirpc easier to use as replacement of rpc in glibc (for     RHEL8)     (#11355)</li> <li>add libevent, libfabric and PMIx dependencies to OpenMPI 4.0.3     (for foss/2020a &amp; iomkl/2020a)     (#11387,     #11568)</li> <li>build LibTIFF with <code>-fPIC</code>     (#11527)</li> <li>update Java/1.8 wrapper to also support aarch64     (#11545)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add Python 3 as build dep for Xvfb 1.20.8 easyconfigs     (#10745)</li> <li>patch out bug in collective primitive in TensorFlow 2.2.0     (#11175)</li> <li>add missing groff build dependency for Perl (provides nroff tool     requires to install man pages)     (#11200)</li> <li>add pocl dependency to GDAL easyconfig using fosscuda/2019b     toolchain to make sure it builds on POWER     (#11273)</li> <li>add libtirpc as a build dep for HDF to fix installation on RHEL8     (#11279)</li> <li>fix build problems with make 4.2.1 on RHEL8     (#11282,     #11371)</li> <li>change <code>$LIBS</code> in Ghostscript 9.27 easyconfig to include     location of zlib library to link with     (#11291)</li> <li>remove <code>--no-dist-info</code> configuration option for SIP in recent     PyQt5 easyconfigs     (#11307)</li> <li>make sure correct zlib is used in recent Ghostscript easyconfigs     (#11319)</li> <li>remove GLog and GFlags from PyTorch 1.2.0     (#11327),     1.3.1     (#11325),     1.4.0     (#11322)     and 1.6.0     (#11323)</li> <li>use PyTorch easyblock for PyTorch 1.3.1     (#11325)</li> <li>add missing git build dependency for OpenImageIO 2.0.12     (#11328)</li> <li>fix HDF 4.2.14 easyconfigs for RHEL8     (#11330)</li> <li>add patch to fix installation of LAMMPS 7Aug2019 on AMD Epyc     systems     (#11334)</li> <li>fix dependency on Bowtie of v0.x in seq2HLA easyconfigs     (#11339)</li> <li>fix installation of Hadoop v2.10.0 on RHEL8     (#11358)</li> <li>add patch to fix installation of Sailfish v0.10.1 on RHEL8     (#11364)</li> <li>add patch to fix installation of FuSeq v1.1.2 on RHEL8     (#11365)</li> <li>fix installation of Qt5 5.14.1 on top of zlib provided by     Gentoo + stick to Python 2 as build dep     (#11385,     #11386)</li> <li>add patch for LAME configure script to make it check for correct     ncurses symbol     (#11388)</li> <li>add protobuf-python as a dependency and corresponding sanity     check to PyTorch 1.6     (#11390)</li> <li>fix Multiwfn 3.6 installation on RHEL8     (#11402)</li> <li>fix OpenFOAM 2.3.1 installation with intel/2019b on RHEL8     (#11409)</li> <li>fix broken worker easyconfigs     (#11412)</li> <li>add ncurses runtime dependency to Clang easyconfigs     (#11415,     #11416,     #11419,     #11472)</li> <li>fix installation of Bioconductor 3.11 bundle on aarch64     (#11417)</li> <li>add patch to libunwind fixing a failure on POWER     (#11421)</li> <li>fix infinite loop build bug on ppc64le for R 4.0.0     (#11428)</li> <li>fix compilation of Qt5 v5.12.3 and v5.13.1 on Ubuntu 20.04     (#11434)</li> <li>fix PyVCF easyconfig, only supports Python 2     (#11437)</li> <li>add patches to fix miscomputation (on POWER) and performance     issues for OpenBLAS     (#11443,     #11444,     #11445)</li> <li>add missing DB dependency (required for DB_File) to easyconfigs     for Perl     (#11451,     #11452)</li> <li>fix dbarts extension in R v4.0.0 easyconfigs for non-x86_64     (#11453)</li> <li>use Homebrew source mirror to auto-download sources for DB     v18.1.25 and v18.1.32     (#11454)</li> <li>add missing UnZip dependency for Python 3.8.2     (#11458)</li> <li>add support for building OpenBLAS on ARM TSV110 with GCC 8.3     (#11464)</li> <li>allow Kent_tools to build when MySQL installed at the OS level     (#11471)</li> <li>add missing <code>moduleclass</code> to easyconfigs for:<ul> <li>Arlequin 3.5.2.2     (#11473),     MEGAHIT 1.2.8     (#11474)     and 1.2.9     (#11475),     PyCUDA 2019.1.2     (#11476)</li> </ul> </li> <li>fix source for SQLite 3.31.1     (#11483)</li> <li>fix installation of worker 1.6.11 with intel/2019b on RHEL 8.2     (#11498)</li> <li>fix checksum in NAMD 2.12 easyconfigs + add source URL     (#11515)</li> <li>add BLAS/LAPACK check to GPAW patch adding EasyBuild     configuration files     (#11523)</li> <li>backport fixes for Score-P v6.0     (#11540)</li> <li>add XZ build dep to easyconfigs for libarchive v3.4.0 and v3.4.2     (#11561)</li> <li>add patch for OpenMPI 3.1.4 adding device parameters for     ConnectX-6     (#11575)</li> </ul> </li> <li>other changes:<ul> <li>update README on constructing source file for MATLAB     (#6341)</li> <li>remove easyconfigs for Taiyaki that depend on PyTorch 1.3.1,     since latest version still requires PyTorch 1.2.0     (#11301)</li> <li>make CI error messages less confusing (\"is\" -&gt; \"should be\")     (#11314)</li> <li>remove extensions from R-bundle-Bioconductor 3.11 easyconfigs     that are also included in R 4.0.0     (#11429)</li> <li>cache M4 source tarball to avoid test failures because of     download problems     (#11469)</li> <li>rename jupyterhub to JupyterHub     (#11571)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb430","title":"EasyBuild v4.3.0 (September 13th 2020)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add script to create <code>sources</code> entries for git submodules     (#3369,     #3436)</li> <li>add templates for CUDA compute capabilities     (#3382)<ul> <li><code>%(cuda_compute_capabilities)s</code>, <code>%(cuda_sm_comma_sep)s</code>,     <code>%(cuda_sm_space_sep)s</code></li> </ul> </li> <li>add EasyBuild configuration option <code>--generate-devel-module</code>     (#3388)<ul> <li>to allow disabling generating of \"devel\" modules via     <code>--disable-generate-devel-module</code></li> </ul> </li> <li>set up a minimal build environment when using system compiler     (#3399)<ul> <li>by default, <code>$CC</code> is set to <code>gcc</code> and <code>$CXX</code> is set to <code>g++</code>     when using <code>system</code> toolchain</li> <li>minimal build environment can be customized via     <code>--minimal-build-env</code> configuration option</li> </ul> </li> <li>add <code>--sysroot</code> configuration option to specify alternative     location of system root     (#3419)<ul> <li>this is useful when installing software in a Gentoo Prefix     environment (for example)</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>allow including easyblocks from multiple locations, by combining     <code>--include-easyblocks</code> and <code>--include-easyblocks-from-pr</code>     (#3311)</li> <li>also escape backslashes in <code>quote_py_str()</code>     (#3386)</li> <li>use one argument <code>module swap</code> statements in Tcl modulefiles     (required by Modules 4.2.3+)     (#3397)</li> <li>fix copying of (non-existing) file with <code>apply_patch</code>     (#3400)</li> <li>create symlink from <code>lib64</code> to <code>lib</code> subdir in installation     directories to avoid that GCC prefers <code>/lib64</code> system     directories     (#3401)</li> <li>fix default value for <code>lib64_fallback_sanity_check</code> build option     (#3402)</li> <li>correctly determine commit status in <code>--merge-pr</code>     (#3406)</li> <li>stop installing ccache wrapper for Fortran compiler     (#3409)</li> <li>fix issues with applying PR patch in <code>--from-pr</code>     (#3414)</li> <li>make <code>RPATH</code> wrapper script more robust by using     <code>python -E -s -S</code> to run <code>rpath_args.py</code>     (#3422)</li> <li>don't inject <code>-Wl,-rpath</code> options when <code>-x c++-header</code> compiler     option is used     (#3424)</li> <li>fix lack of <code>-mno-recip</code> on aarch64 by tweaking GCC options used     when <code>precise</code> toolchain option is enabled     (#3425)</li> <li>make sure <code>self.start_dir</code> is set in <code>ExtensionEasyBlock</code>     (#3426,     #3435)</li> <li>exclude local variables from typo check in easyconfig files     (#3427)</li> </ul> </li> <li>other changes:<ul> <li>stick to cryptography 2.9.2 when using Python 2.7 to avoid     broken test suite in CI     (#3392)</li> <li>automatically enable <code>--ignore-locks</code> with <code>--fetch</code>     (#3404)</li> <li>switch to status badge based on tests run in GitHub Actions CI     in README     (#3415)</li> <li>make <code>flake8</code> code style checks pass     (#3416,     #3417)</li> <li>limit Travis to only test with Python 2.6 + Lmod 7     (#3418)</li> <li>ignore deprecation warning raised for cryptography when using     Python 3.5 produced by output of test suite     (#3423)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>2 new software-specific easyblocks:<ul> <li>pybind11     (#2115),     PyTorch     (#2104)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>update MATLAB easyblock to use new binary installer for versions     &gt;= 2020a     (#2058)</li> <li>add <code>use_pip_requirement</code> custom easyconfig parameter to     PythonPackage easyblock to allow providing a requirements file     to the <code>pip</code> command, as a source     (#2064)</li> <li>update CP2K easyblock for recent versions (&gt;= 7.0)     (#2069)</li> <li>add <code>multi_deps</code> support into custom easyblock for QScintilla     (#2077)</li> <li>update Mothur easyblock for v1.44.0 and higher     (#2084)</li> <li>update MotionCor2 easyblock to add support for v1.3.2     (#2100)</li> <li>update Tinker easyblock to handle skipping of tests depending on     version and link with <code>fftw_omp</code>     (#2102)</li> <li>launch test &amp; sanity check commands through <code>mpirun</code> for     netcdf4-python if MPI support is enabled     (#2106)</li> <li>check for installation of pip &amp; setuptools in Python 3.4+     (#2108)</li> <li>update QuantumESPRESSO easyblock to support version 6.6     (#2112)</li> <li>allow NAMD to be built on POWER, and also use the CUDA arch info     (#2113,     #2123)</li> <li>update Libint easyblock for versions &gt;= 2.6.0 + add custom     easyconfig parameter to enable Fortran support     (#2116)</li> <li>update TensorFlow easyblock to use system/EasyBuild installed     libraries     (#2117,     #2165,     #2163,     #2172)</li> <li>add support in NAMD easyblock to pass additional C++ compiler     options for building Charm++ component with + wrap them in     single quotes     (#2118)</li> <li>automatically add required <code>-G Ninja</code> option when using     CMakeNinja easyblock + add <code>generator</code> custom easyconfig     parameter for CMakeMake     (#2120)</li> <li>make several easyblocks aware of <code>--sysroot</code> EasyBuild     configuration option: binutils     (#2147,     #2159),     CMakeMake     (#2152),     GCC     (#2143),     Perl     (#2142),     Python     (#2148,     #2149)</li> <li>make Mesa easyblock aware of aarch64     (#2153)</li> <li>enhance sanity check in custom Doxygen easyblock to catch broken     installation     (#2171)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make TensorFlow easyblock ignore the <code>PKG_REVISION</code> identifier     if NCCL version if it exists     (#2085)</li> <li>remove version check against the <code>version.txt</code> file in CUDA     easyblock     (#2097)</li> <li>add <code>lib</code> symlink in tbb installation directory when building     from source     (#2103)</li> <li>handle GNUInstallDirs special cases in CMakeMake easyblock     (#2105,     #2124)</li> <li>patch ELPA's <code>manual_cpp</code> script to fix hardcoded     <code>/usr/bin/python</code>     (#2107)</li> <li>make TensorFlow easyblock also set <code>$GCC_HOST_COMPILER_PREFIX</code>     to specify binutils location     (#2110)</li> <li>ensure stand-alone Python package being installed is in view     when running <code>pip check</code> by loading fake module first     (#2114)</li> <li>be more patient when running interactive configure script for     WRF     (#2119)</li> <li>make sure <code>self.start_dir</code> is set to a full path before     constructing installation command in RPackage easyblock     (#2125)</li> <li>correctly check whether <code>modinc</code> easyconfig parameter is set to     <code>True</code> in CP2K easyblock     (#2138)</li> <li>update PSI easyblock to correctly find Python and enable     PCMSolver/CheMPS2     (#2141)</li> <li>fix running GROMACS tests when using <code>eb --rpath</code>     (#2144,     #2154)</li> <li>remove existing Python installation directory if both     <code>eb --rpath</code> and <code>--enable-optimizations</code> configuration option     are used     (#2146)</li> <li>ensure <code>libQt5Core.so</code> is compatible with older Linux kernels by     disabling <code>renameat2</code> and <code>getentropy</code> features     (#2151)</li> <li>solve issue where pybind11 picks up on the system Python instead     of one provided by a module     (#2158)</li> <li>fix Qt5 easyblock to support installation on Arm/aarch64     (requires platform to be <code>linux-g++</code>)     (#2160)</li> <li>fix OpenFOAM easyblock to support installation on Arm/aarch64     systems     (#2162)</li> <li>explicitly enable/disable CUDA options in PyTorch easyblock +     fix download check in sanity check + fix for disabling of     *NNPACK on POWER systems     (#2164)</li> <li>fix sanity check in Mathematica easyblock for 11.x versions     older than 11.3     (#2168)</li> <li>unset <code>$COLUMNS</code> if it is set to <code>0</code> before running Perl's     configure script     (#2169)</li> </ul> </li> <li>other changes:<ul> <li>filter out Python in SLEPc configure     (#2101)</li> <li>switch to status badge based on tests run in GitHub Actions CI     in README     (#2126)</li> <li>fix code style issues to make <code>flake8</code> checks pass     (#2128 -     #2137,     #2140,     #2145,     #2155)</li> <li>limit test configurations in Travis CI to only Python 2.6     (#2139)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for 2 new toolchains:<ul> <li>gomkl/2020a and iomkl/2020a     (#11036)</li> </ul> </li> <li>added example easyconfig files for 49 new software packages:<ul> <li>almosthere     (#11152),     arcasHLA     (#10867),     BioPP     (#11113),     Bracken     (#10829),     BUFRLIB     (#11140),     Calib     (#11111),     CellRanger-ATAC     (#11186),     edlib     (#10470,     #11246),     flatbuffers     (#11109),     gengetopt     (#11117),     graphite2     (#11168),     HeFFTe     (#10990),     hierfstat     (#11249),     immunedeconv     (#11136),     ioapi     (#10959),     itpp     (#10958),     LiBis     (#11059),     libosmium     (#11024),     limix-bgen     (#11152),     minibar     (#10470,     #11246),     misha     (#11127),     MOABS     (#10747),     moonjit     (#11163),     NGLess     (#11128),     nsync     (#11109),     openCARP     (#11117),     OpenForceField     (#11048),     OpenMMTools     (#11046),     OpenMS     (#10994),     PennCNV     (#10986),     plantcv     (#10968),     PlasmaPy     (#10732),     Portcullis     (#11038),     PycURL     (#11169),     PyGEOS     (#11110),     pySCENIC     (#11115),     Reapr     (#9296),     RnBeads     (#11142),     sf     (#11248),     SLiM     (#11172),     stars     (#11215,     #11248),     Sumo     (#11071),     Telescope     (#10943),     tensorflow-probability     (#10312),     texlive     (#11168),     tidymodels     (#11010),     Trycycler     (#11207),     umi4cPackage     (#11127),     variant_tools     (#11169)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Bazel 3.4.1, Bonito 0.2.2, binutils 2.35, CP2K 7.1, Clang     10.0.1, ccache 3.7.11, ctffind 4.1.14, datamash 1.5, ELPA     2020.05.001, Emacs 26.3, Flye 2.8.1, GCC(core) 10.2.0,     googletest 1.10.0, HDF 4.2.15, Horovod 0.19.5, imageio 2.9.0,     JUBE 2.4.0, Julia 1.5.1, Kent_tools 401, Libint 2.6.0, libxsmm     1.16.1, MDSplus 7.96.8, MDTraj 1.9.4, MariaDB 10.4.13, Meson     0.55.1, MotionCor2 1.3.2, NAMD 2.14, NCO 4.9.3, OpenFOAM 8,     OpenMPI 4.0.5, OptiX 6.5.0, Pandoc 2.10, Perl 5.32.0, PostgreSQL     12.4, PyCUDA 2019.1.2, PyFR 1.9.0, PyTorch 1.6.0, PyZMQ 18.1.1,     patchelf 0.12, pocl 1.5, pycocotools 2.0.1, pyproj 2.6.1.post1,     QuantumESPRESSO 6.6, RDKit 2020.03.3, rgdal 1.5, Salmon 1.3.0,     Spark 3.0.0, scikit-image 0.17.1, scipy 1.4.1, snpEff 5.0, sympy     1.6.2, TINKER 8.7.2, tqdm 4.47.0, Unicycler 0.4.8, VMD 1.9.4a43</li> </ul> </li> <li>minor enhancements, including:<ul> <li>also build Python libraries for ParaView 5.8.0     (#10927)</li> <li>add extensions to recent Bioconductor easyconfigs:     FlowSorted.Blood.EPIC     (#11021),     DRIMSeq + stageR     (#11053)</li> <li>add extensions to recent R easyconfigs: AICcmodavg + biomod2     (#11030),     qqman     (#11052),     poLCA     (#11081),     coxed     (#11094),     testit + data.tree     (#11135),     celestial + fasterize     (#11206)</li> <li>add Config::Simple extension to Perl 5.30.x easyconfigs     (#11051)</li> <li>update TensorFlow v2.1.0     (#11109)     and v2.0.0     (#11233)     easyconfigs to provide more dependencies via EasyBuild</li> <li>add CUDA compute capabilities to torchvision-0.5.0     (#11241)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>patch to fix exporting images with PyQtGraph v0.10.0     (#10848)</li> <li>add missing Python dependency to PETSc 3.11.1     (#10907)     and PETSc 3.12.x     (#10908)     easyconfigs</li> <li>use CMakeMake easyblock for installing magma to avoid C++11     related failures on POWER     (#10929)</li> <li>fix source URL for Graphviz v2.40.1     (#10944)</li> <li>fix <code>lapack.h</code> for use with C++ in OpenBLAS 0.3.9 easyconfigs     (#10960)</li> <li>add missing build dep on M4 for 2019b versions of netCDF-Fortran     (#10972)</li> <li>update easyconfig for PyTorch 1.4 to use custom easyblock and     run on POWER     (#11000)</li> <li>create symlinks to incorrectly named directories in     OpenBabel-3.1.1 so <code>$BABEL_LIBDIR</code> and <code>$BABEL_DATADIR</code> work     properly     (#11004)</li> <li>add missing Python build dep to recent ELPA easyconfigs     (#11011)</li> <li>use <code>is_generic_easyblock</code> from filetools in easyconfigs test     suite     (#11020)</li> <li>fix sources in Portcullis v1.2.2 easyconfigs     (#11038)</li> <li>add patch for FFTW 3.3.8 to avoid use of <code>-no-gcc</code> when building     with Intel compilers, to fix installation on CentOS 8 (cfr.     #10932)     (#11050)</li> <li>add missing Python build dep for BEDTools 2.29.x     (#11054)</li> <li>add missing SciPy-bundle and Kent_tools (for bedPartition     command) dependencies to FLAIR     (#11057)</li> <li>add patch to fix bug in LiBiS v20200428 easyconfig     (#11059)</li> <li>use FFTW provided via EasyBuild for ScaFaCoS     (#11060)</li> <li>fix undefined reference to <code>qfloat16::mantissatable</code> in Qt5.14.1     (#11063)</li> <li>add alternative checksum for rstantools 2.0.0 extension     (#11081)</li> <li>update checksums for R 3.6.0 packages and add patch for ppc     (#11088)</li> <li>install scikit-learn 0.23.1 as a bundle and include required     threadpoolctl extension     (#11089)</li> <li>update pybind11 easyconfigs to use custom easyblock to install     with pip     (#11091)</li> <li>add recent six as extension to archspec installed on top of     Python 3.7.4     (#11092)</li> <li>add missing Seaborn dependency to LiBis easyconfig     (#11095)</li> <li>add missing dependencies for OpenPIV + switch to PythonBundle     easyblock and include progressbar2 as extension     (#11096)</li> <li>add missing argparse dep to TEtranscripts easyconfig     (#11097)</li> <li>add missing pkg-config build dep in Octave 5.1.0 easyconfigs     (#11100)</li> <li>don't statically link MUSCLE, to avoid requiring that     glibc-static is installed in OS     (#11102)</li> <li>add missing pkg-config build dependency in recent     R-bundle-Bioconductor easyconfigs     (#11104)</li> <li>add patch to h5py 2.8.0     (#11119)     and 2.9.0     (#11118)     easyconfigs to avoid MPI_Init on <code>import h5py</code></li> <li>add patch to support libbfd 2.34 API change in Score-P 6.0     (#11123)</li> <li>use pip to install protobuf-python in 2019b toolchain (requires     re-downloading source tarball!)     (#11143,     #11260)</li> <li>add missing Keras-Applications extension to TensorFlow 2.2.0     easyconfigs with <code>foss*/2019b</code> toolchain     (#11156)</li> <li>add missing pocl dependency in R 3.6.0     (#11157)</li> <li>update Meson build dep to 0.55.1 for GLib, X11, Mesa &amp; co to fix     aggressive RPATH stripping     (#11178)</li> <li>disable generating of man pages in recent libdrm easyconfigs to     avoid installation failure if docbook-xsl is not installed     (#11182)</li> <li>add fontconfig and bzip2 as direct dependencies for Qt5 to fix     installation with <code>--rpath</code>     (#11183)</li> <li>fix failing <code>make check</code> for MPFR 4.x     (#11187)     and GMP     (#11188)     when installing with <code>eb --rpath</code></li> <li>add pkg-config as a build dependency for libglvnd     (#11189)</li> <li>add missing libiconv dep in recent Doxygen easyconfigs     (#11191,     #11257)</li> <li>enhance Java/11 wrapper to also support for aarch64/Arm     (#11192)</li> <li>add pkg-config as a build dependency to Ghostscript 9.52, needed     on aarch64/arm     (#11194)</li> <li>add patch for pycrypto extension in recent Python easyconfigs to     remove hardcoded <code>/usr/include</code> which causes problems when     <code>eb --sysroot</code> is used     (#11202)</li> <li>fix installation of R v3.6.3 and v4.0.0 with foss/2020a on Arm     (aarch64)     (#11213)</li> <li>update PyTorch 1.4 easyconfigs to use custom easyblock (and do     less downloading during installations)     (#11219)</li> </ul> </li> <li>other changes:<ul> <li>don't require custom <code>sanity_check_paths</code> for CUDA bundle     easyconfigs     (#10936)</li> <li>move intervaltree and sortedcontainers to main Python     easyconfigs     (#10969,     #10970)</li> <li>disable qtwayland in Qt5 v5.14.1     (#11107)</li> <li>remove mklml (small MKL) from PyTorch 1.3.1 and 1.4.0     easyconfigs     (#11019)</li> <li>use pip to install h5py 2.10.0     (#11044)</li> <li>stop testing easyconfig PRs with Travis, only use GitHub Actions     from now on     (#11008,     #11055)</li> <li>switch to Kent_tools built from source as dep for FusionCatcher     (#11057)</li> <li>fall back to using PR target branch when determining \"merge     base\" between PR branch &amp; target branch fails in test suite     (#11069)</li> <li>rename gtest to googletest     (#11082)</li> <li>rename sdsl-lite to SDSL (to use one single name)     (#11084)</li> <li>stop using <code>remove_usr_bin</code> patch in TensorFlow easyconfig, no     longer required with updated TensorFlow easyblock     (#11087)</li> <li>extend timeout for libxc-4.3.4 to avoid failing tests     (#11126)</li> <li>move GitHub Actions status badge to top of README     (#11138)</li> <li>fix code style issues in test     (#11146)</li> <li>enable <code>flake8</code> on CI and fix issues     (#11147)</li> <li>prefer gc GitHub site for source downloads     (#11208)</li> <li>prefer <code>https</code> over <code>ftp</code> in <code>source_urls</code> of IgBLAST easyconfig     (#11244)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb422","title":"EasyBuild v4.2.2 (July 8th 2020)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for using <code>sources</code> and <code>git_config</code> for extensions     in <code>exts_list</code>     (#3294)</li> <li>add support for software minver template (like <code>%(pyminver)s</code>,     etc.)     (#3344,     #3345)</li> <li>add support for updating dictionary or tuple easyconfig     parameters with <code>self.cfg.update</code>     (#3356)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix crash in <code>--avail-easyconfig-constants</code> when using     <code>--output-format=rst</code> + ensure sorted output     (#3341)</li> <li>always take into account <code>builddependencies</code> when generating     template values, also when we're not iterating over     <code>builddependencies</code>     (#3346)</li> <li>fix running command as <code>easybuild</code> user in generated Singularity     definition file     (#3347)</li> <li>allow ignoring <code>versionsuffix</code> in <code>--try-update-deps</code>     (#3350,     #3353)</li> <li>retain order of paths when generating <code>prepend_path</code> statements     for module file (don't sort them alphabetically)     (#3367)</li> <li>also put easyblocks used by extensions in <code>reprod</code> directory     (#3375)</li> <li>also copy template values in <code>EasyConfig.copy</code> method to ensure     they are defined when installing extensions     (#3377)</li> <li>skip lines that start with <code>module-version</code> when determining     whether a module exists in <code>ModulesTool.exist</code>     (#3379)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>3 new software-specific easyblocks:<ul> <li>LLVM     (#2065),     Scipion     (#1847),     XALT     (#1942)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>use <code>wclean -platform</code> instead of <code>wcleanPlatform</code> for OpenFOAM     v2006 &amp; newer     (#2088)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>only build OpenCV with IPP support on x86_64 systems     (#2056)</li> <li>make sure <code>CFLAGS</code> and <code>MYCFLAGS</code> are used in Lua easyblock     (#2062)</li> <li>also accept <code>exist_lic</code> as valid value for <code>license_file</code> in     IntelBase easyblock     (#2067)</li> <li>fix minor bug in shared libs handling and correctly setup     SuiteSparse variables in Trilinos easyblock     (#2071)</li> <li>make sure <code>PythonBundle</code> uses correct <code>python</code> command in     extensions filter + also add <code>lib64/python*/site-packages</code> to     <code>$PYTHONPATH</code> (if it exists)     (#2075,     #2081)</li> <li>fix build environment for WRF by patching shebang in compile     script     (#2079)</li> <li>fix order of <code>intel64/lib</code> paths in generated module for impi     (and drop <code>intel64/lib/release_mt</code>)     (#2080)</li> <li>set <code>$XDG_CACHE_HOME</code> to avoid abuse of <code>$HOME/.cache/pip</code> when     installing DOLFIN     (#2082)</li> <li>make VMD easyblock Python 3 compatible     (#2083)</li> <li>rename include-fixed subdirectory in GCC installation to avoid     problems after OS upgrade     (#2087,     #2093,     #2094)</li> <li>use glob pattern to determine name of Mathematica installation     script     (#2089)</li> <li>use <code>mpirun</code> for sanity check commands in LAMMPS easyblock     (#2096)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for 2 new toolchains:<ul> <li>golf/2020a     (#10672)</li> <li>intel/2020.06, based on intel/2020a but with impi 2018 update 5     (#10864)</li> </ul> </li> <li>added example easyconfig files for 36 new software packages:<ul> <li>AmrPlusPlus     (#9919),     arrow     (#10882),     attrdict     (#10827),     Cartopy     (#10685),     dm-tree     (#10775),     dotNET-SDK     (#10661),     FLAIR     (#10860),     fastqsplitter     (#10706),     GLFW     (#10709),     git-extras     (#10440),     hl7apy     (#10728),     hyperopt     (#10735),     IgBLAST     (#10889),     IntelDAAL     (#9848),     ichorCNA     (#10595),     MARS     (#10691),     MITObim     (#10897),     MUST     (#10849),     mhcnuggets     (#9743),     PAUP     (#10830),     Percolator     (#10665),     PyBerny     (#10885),     poetry     (#10884),     pycocotools     (#10806),     python-hl7     (#10673),     SHAPEIT4     (#10814),     SYMPHONY     (#10058),     SunPy     (#10676),     sdsl-lite     (#10691),     TEtranscripts     (#10909,     #10921),     Tombo     (#10646),     tensorboardX     (#10774),     Unidecode     (#10828),     WHAM     (#10736),     XALT     (#9792),     Xvfb     (#10512)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Armadillo 9.900.1, astropy 4.0.1, BLAST+ 2.10.1, BioPerl 1.7.7,     Blitz++ 1.0.2, Bonito 0.2.0, bokeh 2.0.2, CFITSIO 3.48, CGAL     4.14.3, CLHEP 2.4.1.3, cutadapt 2.10, dask 2.18.1, Elk 6.3.2,     GATE 9.0, GLM 0.9.9.8, GRASS 7.8.3, Geant4 10.6, geopandas     0.8.0, giflib 5.2.1, HDF5 1.12.0, HISAT2 2.2.0, Hadoop 2.10.0,     IPython 7.15.0, inferCNV 1.2.1, Julia 1.4.2, LibSoup 2.70.0,     MATIO 1.5.17, MRtrix 3.0.0, Mathematica 12.1.1 MultiQC 1.9, NGS     2.10.5, NiBabel 3.1.0, Nipype 1.4.2, ncbi-vdb 20.10.7, numba     0.50.0, OpenBabel 3.1.1, OpenFOAM v2006, PDT 3.25.1, PRSice     2.3.1, ParaView 5.8.0, ParmEd 3.2.0, PyQt5 5.13.2, Pysam     0.16.0.1, parallel 20200522, plotly.py 4.8.1, pybedtools 0.8.1,     ROOT 6.20.04, ReFrame 3.0, Roary 3.13.0, rjags 4-10, rstudio     1.3.959, SPAdes 3.14.1, SRA-Toolkit 2.10.8, Saxon-HE 9.9.1.7,     Seaborn 0.10.1, Seurat 3.1.5, SimPEG 0.14.1, Spark 2.4.5,     StringTie 2.1.3, scikit-allel 1.2.1, scikit-learn 0.23.1, snpEff     4.3t, Valgrind 3.16.1, VarScan 2.4.4, vsc-mympirun 5.1.0,     WebKitGTK+ 2.27.4, wxPython 4.0.7.post2, zarr 2.4.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add extensions to R 4.0.0 easyconfig: drgee + stdReg     (#10833),     copCAR     (#10911),     ngspatial     (#10913),     drugCombo     (#10914)</li> <li>add extensions to R-bundle-Bioconductor 3.11 easyconfig:     BSgenome.Cfamiliaris.UCSC.canFam3     (#10840),     SingleR     (#10904)</li> <li>include extra extension and support for MPI in MAFFT v7.453 and     v7.470     (#10853)</li> <li>add Array::Transpose to Perl     (#10878)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix dependencies and configuration of CoinUtils ecosystem     (#10450)</li> <li>fix Togl configure patch so that it completely ignores     <code>TCL_SRC_DIR</code> and <code>TK_SRC_DIR</code>     (#10662)</li> <li>change Xerces-C++ to official CMakeMake build (fixes missing     links to curl)     (#10664)</li> <li>add <code>-fPIC</code> to <code>toolchainopts</code> in easyconfig for Lua 5.3.5 with     system toolchain     (#10671)</li> <li>remove hardcoded X86 target in LLVM easyconfigs     (#10677)</li> <li>switch to https <code>homepage</code> and <code>source_urls</code> in libGLU     easyconfigs     (#10686)</li> <li>add patch for h5py 2.10.0 to avoid triggering <code>MPI_Init</code> at     import     (#10687)</li> <li>add alternative checksum for pkgmaker, doRNG, cobs extension in     R 3.6.0 easyconfigs     (#10692)</li> <li>update UDUNITS <code>source_urls</code> to https sources     (#10693)</li> <li>add missing M4 to netCDF-Fortran easyconfigs using 2020a     toolchain     (#10695,     #10697)</li> <li>add Rgraphviz patch to R-bundle-Bioconductor easyconfigs     (#10710)</li> <li>add M4 builddependency to SuiteSparse 2019b easyconfigs     (#10720)</li> <li>make sure WHAM is built with correct compiler     (#10736)</li> <li>define <code>MAX_JOBS</code> in easyconfigs of PyTorch from v1.1.0 to     v1.4.0     (#10772)</li> <li>add dm-tree and lz4 as dependencies to Ray v0.8.4     (#10775)</li> <li>fix source URL in recent ant easyconfigs     (#10790)</li> <li>bump versions of GO.gb/org.Hs.eg.db/PFAM.db extensions in     Bioconductor 3.11 bundle, since sources for old versions have     disappeared     (#10791)</li> <li>add patch to Armadillo easyconfigs using the foss toolchain to     prevent it from picking up MKL if installed system-wide     (#10812)</li> <li>add missing kerneltree extension in FLAIR easyconfig     (#10860)</li> <li>fix source URLs in Eigen 3.2.     (#10872)     and 3.3.     (#10869)     easyconfigs</li> <li>refer to issue in GitHub repo in configparser patch, since     Bitbucket repo is disappearing     (#10873)</li> <li>switch to github.com source URL for MetaPhlAn     (#10874)</li> <li>switch to GitHub sources for ScientificPython 2.9.4     (#10875)</li> <li>switch to GitHub source URL for HPDBSCAN     (#10876)</li> <li>download x265 3.2/3.3 sources from     <code>bitbucket.org/multicoreware/x265_git</code>     (#10905)</li> <li>fix download URL for libatomic in gc 7.6.12 easyconfigs     (#10915)</li> <li>fix <code>sanity_check_paths</code> in CFITSIO-3.48-GCCcore-9.3.0.eb     easyconfig     (#10917)</li> <li>add missing dependencies for geopandas 0.7.0     (#10923)</li> </ul> </li> <li>other changes:<ul> <li>rename OpenPyXL 2.6.4 easyconfig to openpyxl     (#10916)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb421","title":"EasyBuild v4.2.1 (May 20th 2020)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>also mention CPU architecture (x86_64, POWER) in comment for     test reports     (#3281)</li> <li>add support for enhancing existing sanity check in easyconfigs,     as opposed to overwriting paths/commands     (#3288)</li> <li>clean up locks when EasyBuild session is cancelled with a signal     like <code>SIGTERM</code>     (#3291,     #3321)</li> <li>add <code>find_glob_pattern</code> function to <code>filetools</code> module     (#3297)</li> <li>add constants for common OS dependencies (<code>OS_PKG_IBVERBS_DEV</code>,     <code>OS_PKG_OPENSSL_DEV</code>, ...)     (#3309,     #3334)</li> <li>flesh out <code>get_mpi_cmd_template</code> function from <code>Mpi.mpi_cmd_for</code>     method     (#3312)</li> <li>add variable <code>moddependpaths</code> to specify extra <code>$MODULEPATH</code>     entry to consider for loading dependency modules     (#3324)</li> <li>allow copying of tweaked easyconfigs when using <code>--try-*</code> with     <code>--copy-ec</code>     (#3332)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make <code>ModulesTool.exist</code> more robust w.r.t. module wrappers,     aliases, defaults, etc.     (#3216,     #3337)</li> <li>clean up rst output of <code>--list-toolchains</code>     (#3246)</li> <li>cast CPU arch name provided by archspec to a regular string     (#3286)</li> <li>get <code>pr_title</code> and <code>pr_descr</code> build_options in     <code>new_pr_from_branch</code> instead of <code>new_pr</code> (and commit_msg in     both)     (#3298)</li> <li>make <code>pypi_source_urls</code> more robust by using <code>HTMLParser</code> rather     than <code>xml.etree.ElementTree</code>     (#3303,     #3329)</li> <li>fix broken test for <code>--include-easyblocks-from-pr</code>     (#3304)</li> <li>don't use <code>distutils.dir_util</code> in <code>copy_dir</code>     (#3310)</li> <li>print trace message for sanity check command before running it     (#3316)</li> <li>fix problems with processing of easyconfigs using a Cray*     toolchain when there are no actual external modules     (#3319)</li> <li>make <code>test_find_eb_script</code> more robust in case <code>$EB_SCRIPT_PATH</code>     is already set     (#3320)</li> <li>fix several small problems with <code>--try-update-deps</code>     (experimental feature)     (#3325,     #3326,     #3330)</li> <li>add <code>--disable-job</code> in <code>eb</code> command used in jobs, to prevent     infinite job cycle     (#3328)</li> <li>avoid empty entries in <code>$LD_LIBRARY_PATH</code> and other path-like     environment variables     (#3333)</li> </ul> </li> <li>other changes:<ul> <li>fix code style issues in <code>easybuild.tools</code> + add <code>flake8</code>     linting test     (#3282)</li> <li>introduce <code>contextmanager</code> for disabling templating and reduce     resolving errors     (#3287)</li> <li>add <code>change_into_dir</code> named argument to <code>extract_file</code> + print     deprecation warning if it's not specified     (#3292)</li> <li>improve <code>install_eb_dep.sh</code> script to install EasyBuild     dependencies in CI environment     (#3314)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>add generic easyblock for installing Go packages: <code>GoPackage</code>     (#2042)</li> <li>minor enhancements, including:<ul> <li>update <code>config.guess</code> for all R packages, required installing     R + extensions on Linux/POWER systems     (#1949)</li> <li>add support for <code>preinstallopts</code> and install in subdirectory to     <code>Tarball</code> generic easyblock     (#1989,     #2049)</li> <li>rewrite <code>GROMACS</code> easyblock to install all four variations     (single/double precision, with/without MPI) in the same     directory     (#1991)</li> <li>add custom <code>subdir_version</code> easyconfig parameter for FLUENT     (#2021)</li> <li>use updated <code>config.guess</code> in <code>GCC</code> easyblock     (#2033,     #2059)</li> <li>add extra question pattern to support installing CPLEX 12.10     (#2038)</li> <li>add support for building NWChem on top of external     GlobalArrays + also define <code>$LAPACK_LIB</code> (required for NWChem     7.x)     (#2043)</li> <li>execute minimal test in sanity check commands in <code>impi</code>     easyblock     (#2045)</li> <li>update for <code>MotionCor2</code> easyblock for v1.3.1     (#2046)</li> <li>fixes + enhancements for <code>PETSc</code> easyblock     (#2048)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use correct version in <code>ELPA</code> preprocessor flag used for     QuantumESPRESSO v6.x     (#2027)</li> <li>generically find the arch folder and add top-level bin/lib     symlinks in <code>PDT</code> &amp; <code>TAU</code> easyblocks     (#2029)</li> <li>fix typo in <code>LAMMPS</code> easyblock preventing disabling the     <code>USER-INTEL</code> package via <code>configopts</code>     (#2031)</li> <li>let <code>CMakeMake</code> remove <code>easybuild_obj</code> build directory if it     already exists     (#2032)</li> <li>include own lib dir in <code>RPATH</code> before system lib dirs in     <code>binutils</code> easyblock     (#2044)</li> <li>clean <code>$CPATH</code> before building ROOT to avoid clash between     external LLVM loaded as a dependency and internal LLVM used by     ROOT     (#2047)</li> <li>don't let <code>extract_file</code> change directory in various easyblocks     (#2051)</li> <li>make <code>postinstallcmds</code> available to Mathematica easyconfigs +     add bin/Executables to <code>$PATH</code>     (#2052)</li> <li>fix the extra dirs added to PATH in <code>FreeSurfer</code> easyblock     (#2053)</li> <li>correct download url for test data in <code>WPS</code> easyblock     (#2055)</li> <li>fix typo in warning in <code>TensorFlow</code> easyblock     (#2057)</li> <li>fix failing sanity check under <code>--module-only</code> in <code>GCC</code>     easyblock     (#2059)</li> </ul> </li> <li>other changes:<ul> <li>add configure options for CubeLib/CubeWriter dependencies in     <code>Score-P</code> easyblock     (#2030)</li> <li>remove local <code>find_glob_pattern</code> in <code>Blender</code> &amp; <code>ROOT</code>     easyblocks, use function provided by <code>filetools</code> instead     (#2037)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new common toolchains: foss/2020a     (#10483,     #10492),     intel/2020a     (#10494)</li> <li>added example easyconfig files for 66 new software packages:<ul> <li>Alpha     (#9994),     antiSMASH     (#10589),     Arlequin     (#10620),     artic-ncov2019     (#10459),     augur     (#10405),     AutoMap     (#10419),     Bio-EUtilities     (#10037),     CaSpER     (#10593),     cdbfasta     (#10547),     cddlib     (#10429),     CoCoALib     (#10429)     dftd3-lib     (#10351),     DoubletFinder     (#10603),     E-ANTIC     (#10429),     FastViromeExplorer     (#10571),     FIX     (#8870),     FusionCatcher     (#10134),     geopandas     (#10322),     goalign     (#10469),     gotree     (#10459),     gretl     (#10413),     harmony     (#10604),     HDF-EOS     (#10534),     HDF-EOS5     (#10536),     HMMER2     (#10588),     HyPo     (#10642),     king     (#10365),     libdeflate     (#10459),     libfabric     (#10616),     libgit2     (#10453),     libuv     (#10444),     mbuffer     (#10524),     MDAnalysis     (#10545),     MEM     (#10605),     MESS     (#10597),     metaerg     (#10037),     MinCED     (#10037),     MitoZ     (#7735),     nauty     (#10429),     nifti2dicom     (#10598),     NLMpy     (#10029),     ntCard     (#10502),     NTL     (#10431),     pIRS     (#10508),     popscle     (#10550),     ProtHint     (#10549),     protozero     (#10495),     pysndfx     (#10452),     PyVCF     (#10564),     PyWavelets     (#10501),     rampart     (#10459),     rickflow     (#10641),     RNA-Bloom     (#10502),     root_numpy     (#10424),     rstudio     (#10619),     ScaFaCoS     (#10537),     Scythe     (#10524),     SDSL     (#10642),     SHAP     (#10379),     SNPomatic     (#10524),     SoX     (#10452),     swissknife     (#10037),)     Taiyaki     (#10573),     TCLAP     (#10598),     torchaudio     (#10516),     wtdbg2     (#10524)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ADF 2019.303, BRAKER 2.1.5, Bazel 2.0.0, Bonito 0.1.4,     Boost.Python 1.72.0, Bowtie2 2.4.1, CMake 3.16.4, CPLEX 12.10,     CVXOPT 1.2.4, Coreutils 8.32, cURL 7.69.1, DFTB+ 19.1, ecCodes     2.17.0, expat 2.2.9, FFmpeg 4.2.2, FriBidi 1.0.9, GATK 4.1.5.0,     GCC(core) 10.1.0, GDAL 3.0.4, GEOS 3.8.1, GLib 2.64.1, GMP     6.2.0, GROMACS 2020.1, GTK+ 3.24.17, GenomeThreader 1.7.3,     GffCompare 0.11.6, Ghostscript 9.52, GlimmerHMM 3.0.4c,     GlobalArrays 5.7.2, gmpy2 2.1.0b4, gmsh 4.5.6, gpustat 0.6.0,     gradunwarp 1.2.0, HDF5 1.10.6, hwloc 2.2.0, hypothesis 5.6.0,     ICU 66.1, IPython 7.13.0, ImageMagick 7.0.10, Julia 1.4.1, KMC     3.1.2rc1, Kraken2 2.0.9, LMfit 1.0.0, Longshot 0.4.1, libarchive     3.4.2, libffcall 2.2, libffi 3.3, libgd 2.3.0, libjpeg-turbo     2.0.4, librsvg 2.48.4, libsigsegv 2.12, lrslib 7.0a, MEME 5.1.1,     MPC 1.1.0, Mako 1.1.2, Mesa 20.0.2, Meson 0.53.2, MotionCor2     1.3.1, MultiQC 1.8, matplotlib 3.2.1, NGS-Python-2.10.4, NGS     2.10.4, NSPR 4.25, NSS 3.51, NWChem 7.0.0, Nextflow 20.04.1,     Ninja 1.10.0, Normaliz 3.7.4, nanopolish 0.13.1, ncbi-vdb 2.10.4     netCDF 4.7.4, OpenBLAS 0.3.9, OpenEXR 2.4.1, OpenMPI 4.0.3,     OpenSSL 1.1.1e, openpyxl 3.0.3, PAPI 6.0.0, PCRE 8.44, PCRE2     10.34, PLUMED 2.6.0, PMIx 3.1.5, PROJ 7.0.0, Perl 5.30.2, Pillow     7.0.0, PyYAML 5.3, Python 2.7.18 + 3.8.2, parallel 20200422, Qt5     5.14.1, R-bundle-Bioconductor 3.11, R 3.6.3 + 4.0.0, RMBlast     2.9.0, Racon 1.4.13, Ray 0.8.4, Rust 1.42.0, re2c 1.3, rioxarray     0.0.24, rootpy 1.0.1, rstudio 1.2.5042, SCons 3.1.2, SDL2     2.0.10, SIONlib 1.7.6, SQLite 3.31.1, SRA-Toolkit 2.10.4, Salmon     1.2.0, ScaLAPACK 2.1.0, SciPy-bundle 2020.03, Stacks 2.53,     StringTie 2.1.1, SuiteSparse 5.7.1, snappy 1.1.8, spaln 2.4.03,     sympy 1.5.1, Tcl 8.6.10, TensorFlow 2.2.0, Tk 8.6.10, Tkinter     3.8.2, tbl2asn 20200302, torchvision 0.5.0, UCX 1.8.0, UMI-tools     1.0.1, utf8proc 2.5.0, util-linux 2.35, worker 1.6.12, wxWidgets     3.1.3, X11 20200222, XZ 5.2.5, x264 20191217, x265 3.3, zsh 5.8,     zstd 1.4.4</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add additional extensions for recent versions of R     (#10359,     #10585,     #10586,     #10621)     and R-bundle-Bioconductor     (#10585,     #10596,     #10621)</li> <li>add additional extensions for recent versions of Perl     (#10412,     #10546,     #10623)</li> <li>include LLVM linker in Clang 7.0.1 on GCC     7.3.0-2.30(#10458)</li> <li>include static lib and header in nimimap2 easyconfigs for     foss-2018b and GCC-8.2.0*     (#10464)</li> <li>add alternate checksum for EMBOSS     (#10607)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix incorrect checksums for Amber patches     (#8870)</li> <li>add patches to fix installation of R 3.6.2 on POWER     (#9830)</li> <li>add missing build dep. pkg-config in GObject-Introspection     1.63.1 w/ Python 3.7.4 easyconfig     (#10380)</li> <li>add Perl as a build dependency for recent Autoconf/Automake     easyconfigs     (#10408,     #10426)</li> <li>fix source_urls in ICU easyconfigs     (#10417)</li> <li>disable <code>USER-INTEL</code> package in LAMMPS easyconfigs using     intel/2019b, since it results in an installation that produces     incorrect results     (#10418)</li> <li>fix undefined reference to <code>qfloat16::mantissatable</code> in     Qt5-5.13.1-GCCcore-8.3.0     (#10425)</li> <li>get rid of double '-' in versionsuffix of torchtext easyconfig     (#10472)</li> <li>fix broken Mako easyconfigs     (#10480,     #10627)</li> <li>move builddependencies to dependencies in OTF2 and Score-P     easyconfigs     (#10496)</li> <li>add missing cURL dep for LAMMPS     (#10527)</li> <li>add Python 2 build dependency for OpenPGM     (#10539)</li> <li>use <code>OS_PKG_IBVERBS_DEV</code> constant for OS dependency in PyTorch     1.4.0 easyconfigs     (#10540)</li> <li>add missing Bison build dep in Graphviz easyconfigs     (#10541)</li> <li>use https in homepage for Mathematica 12.0.0 + clean up sanity     check commands (now done by easyblock)     (#10559)</li> <li>add missing PyVCF dependency for BAMSurgeon     (#10564)</li> <li>remove FFTW dependencies from LAMMPS easyconfigs, no longer     needed (MKL can be used too now)     (#10565)</li> <li>fix ITK v5.0.1 easyconfig w.r.t. locale and location of     libjpeg-turbo library     (#10592)</li> <li>add patch to fix missing <code>const</code> qualifiers for ncurses     (#10606)</li> <li>fix OS dependency for rstudio for Debian-based systems     (#10608)</li> <li>fix Rmath paths in easyconfig for FastQTL v2.184     (#10612)</li> <li>add symlink for Arlequin commands + fix sanity check commands     (#10620)</li> <li>fix recent binutils easyconfigs using system toolchain for     Fedora 32 / GCC 10     (#10633)</li> <li>replace '/path/to' with actual installation prefix in FuSeq     scripts     (#10640)</li> </ul> </li> <li>other changes:<ul> <li>check sdist with different Python versions in CI     (#10388)</li> <li>use Bison 3.3.2 as build dep for flex 2.6.4     (#10403)</li> <li>mention <code>http://</code> Pfam website rather than <code>ftp://</code> in load     message of BiG-SCAPE easyconfig     (#10439)</li> <li>archive old Singularity configs     (#10591)<ul> <li>Singularity is not well suited to install via EasyBuild     because it requires admin privileges to enable setuid</li> </ul> </li> <li>stop using old hpcugent URL for cloning framework/easyblocks     repos in CI     (#10635)</li> <li>use <code>SYSTEM</code> constant for toolchain in easyconfigs already use     <code>system</code> toolchain     (#10638)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb420","title":"EasyBuild v4.2.0 (April 14th 2020)","text":"<p>feature release</p> <p>framework</p> <ul> <li>add support for <code>--try-update-deps</code> (experimental feature), to     upgrade dependencies based on available easyconfigs     (#2599)</li> <li>adding locking to prevent two parallel builds of the same     installation directory     (#3009)<ul> <li>for more information, see     https://easybuild.readthedocs.io/en/latest/Locks.html</li> </ul> </li> <li>significantly speed up <code>-D/--dry-run</code> by avoiding useless     '<code>module show</code>'     (#3203)</li> <li>add support for creating an index &amp; using it when searching for     easyconfigs     (#3210)<ul> <li>for more information, see     https://easybuild.readthedocs.io/en/latest/Easyconfigs_index.html</li> </ul> </li> <li>additional GitHub integration features:<ul> <li>add support for targeting easyblocks and framework repositories     in <code>--new-pr</code>     (#1876,     #3189)</li> <li>add support for <code>--include-easyblocks-from-pr</code>     (#3206)</li> <li>for more information,     https://easybuild.readthedocs.io/en/latest/Integration_with_GitHub.html</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add a contrib/hooks dir with some examples of hooks used     (#2777)</li> <li>also mention working directory + input passed via stdin (if any)     in trace output of <code>run_cmd</code>     (#3168)</li> <li>probe external modules for missing metadata that is not provided     via extermal module metadata file     (#3174)</li> <li>also update <code>$CMAKE_PREFIX_PATH</code> and <code>$CMAKE_LIBRARY_PATH</code> in     generated module file     (#3176)</li> <li>optionally call <code>log.warning</code> in <code>print_warning</code>     (#3195)</li> <li>add an option to <code>git_config</code> to retain the <code>.git</code> directory     (#3197)</li> <li>allow use of <code>SYSTEM</code> as <code>--try-toolchain</code> option     (#3213)</li> <li>mention CPU arch name in comment for uploaded test report, if     it's known by <code>archspec</code>     (#3227)</li> <li>make <code>--merge-pr</code> take into account <code>--pr-target-branch</code>     (#3236)</li> <li>make <code>--check-contrib</code> print a warning when <code>None</code> is used for     checksums     (#3244)</li> <li>update <code>install-EasyBuild-develop.sh</code> script and create script     for 2020a merge sprint     (#3245)</li> <li>add template for <code>mpi_cmd_prefix</code>     (#3264)</li> <li>update <code>copy_dir</code> to include option to merge directories     (#3270)</li> <li>support template name for CUDA version     (#3274)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use correct module for <code>errors_found_in_log</code>     (#3119)</li> <li>fix <code>EasyConfig.update</code> code to handle both strings and lists as     input     (#3170)</li> <li>fix removing temporary branch on <code>--check-github</code>     (#3182)</li> <li>fix shebang even if first line doesn't start with '<code>#!</code>'     (#3183)</li> <li>make bootstrap script work with Python 3     (#3186)</li> <li>read patch files as bytestring to avoid <code>UnicodeDecodeError</code> for     patches that include funky characters     (#3191)</li> <li>fix online check in <code>--check-github</code>: try repeatedly and with     different URLs to cater for HTTP issues     (#3194)</li> <li>don't crash when GitPython is not installed when using Python 3     (#3198)</li> <li>fix <code>os_name_map</code> for RHEL8     (#3201)</li> <li>don't add shebang to binary files     (#3208)</li> <li>use <code>checkout@v2</code> in GitHub Actions to fix broken re-triggered     tests     (#3219)</li> <li>don't filter out <code>None</code> values in to_checksums, leave them in     place     (#3225)</li> <li>fix defining of <code>$MPI_INC_*</code> and <code>$MPI_LIB_*</code> environment     variables for impi version 2019 and later     (#3229)</li> <li>use correct target account/repo when creating test report &amp;     posting comment in PR     (#3234)</li> <li>reorganize <code>EasyBlock.extensions_step</code> to ensure correct     filtering of extensions     (#3235)</li> <li>also support <code>%(installdir)s</code> and <code>%(builddir)s</code> templates for     extensions     (#3237)</li> <li>unset <code>$GITHUB_TOKEN</code> in Travis after installing token, to avoid     failing <code>test_from_pr_token_log</code>     (#3252)</li> <li>fix reporting when skipping extensions     (#3254)</li> <li>avoid API rate limit errors on online check in <code>--check-github</code>     (#3257)</li> <li>show easyconfig filenames for parallel build     (#3258)</li> <li>make <code>EasyConfig.dump</code> aware of toolchain hierarchy, to avoid     hardcoded subtoolchains in dependencies easyconfig parameters     (#3261)</li> <li>fix use of <code>--copy-ec</code> with a single argument, assume copy to     current working directory     (#3262)</li> <li>fix posting of comment in PR with <code>--upload-test-report</code>     (#3272)</li> <li>take into account dependencies marked as external modules when     composing template values like <code>%(pyver)s</code>     (#3273)</li> </ul> </li> <li>other changes:<ul> <li>increase timeout &amp; use <code>api.github.com</code> for connectivity check     in <code>check_github</code>     (#3192)</li> <li>restore <code>flake8</code> default ignores     (#3193)</li> <li>enable tracking of test suite coverage using coveralls     (#3204)</li> <li>make tests use <code>easybuilders/testrepository</code> rather than     <code>hpcugent/testrepository</code> after it was moved     (#3238)</li> <li>improve raised error in <code>remove_dir</code> and deprecate <code>rmtree2</code>     (#3228)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>7 new software-specific easyblocks:<ul> <li>BerkeleyGW     (#1951),     CMake     (#1936),     ELSI     (#1883),     LAMMPS     (#1964,     #1975,     #1978,     #1982,     #1997),     libdrm     (#1983),     Mesa     (#1892,     #2006),     SEPP     (#1998)</li> </ul> </li> <li>minor enhancements, including:<ul> <li>make ParMETIS easyblock compatible with custom <code>configopts</code>     (#1774)</li> <li>update Trinity easyblock for v2.9.0     (#1906)</li> <li>disable ROCM and Android workspace explicitly in TensorFlow     easyblock     (#1944)</li> <li>update QuantumESPRESSO easyblock for version 6.5     (#1947)</li> <li>update Siesta easyblock to support MaX-1.0 release     (#1954)</li> <li>update Ferret easyblock for versions &gt;= 7.5.0     (#1956)</li> <li>update XCrySDen easyblock to support Togl dependency     (#1959)</li> <li>pass value for <code>TARGET</code> specified in <code>buildopts</code> to <code>testopts</code>     and <code>installopts</code> in OpenBLAS easyblock     (#1960)</li> <li>fix netCDF(-Fortran) support in Siesta easyblock     (#1967,     1971)</li> <li>add <code>NCDF_PARALLEL</code> and METIS support to Siesta easyblock     (#1973)</li> <li>add support for <code>use_pip_extras</code> custom easyconfig parameter in     <code>PythonPackage</code> easyblock     (#1980)</li> <li>update Open Babel easyblock for version 3.0.0     (#1992)</li> <li>allow differing names for TensorFlow wheel     (#1995)</li> <li>make MATLAB runtime available from MATLAB     (#2008)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix linking of Hypre to external BLAS/LAPACK + support building     (only) static/shared library     (#1885)</li> <li>fix MPI-CXX dependency of PETSc     (#1917)</li> <li>limit amount of parallelism in TensorFlow easyblock     (#1934)</li> <li>support GCCcore and gcc4.8 (if that dir exists) in function     <code>get_tbb_gccprefix</code> in tbb easyblock     (#1943)</li> <li>restore default <code>flake8</code> warnings     (#1950)</li> <li>remove tests from <code>build_step</code> and raise error on failed tests     in OpenBLAS easyblock     (#1952,     #1955,     #1962)</li> <li>add optional <code>runtest</code> to the catch for <code>FATAL ERRORS</code> to     OpenBLAS easyblock     (#1958)</li> <li>ensure right '<code>python</code>' command is used to determine Python     lib dir when system Python is used with PythonBundle easyblock     (#1961)</li> <li>make sure <code>lib/python*/lib-dynload</code> exists in Python     installation     (#1966)</li> <li>in version 6.0 of TensorRT, <code>libnvinfer.a</code> is renamed     <code>libnvinfer_static.a</code>     (#1970)</li> <li>handle <code>configopts</code> without configure args in CMake easyblock     (#1974)</li> <li>use <code>checkout@v2</code> in GitHub Actions to fix broken re-triggered     tests     (#1976)</li> <li>don't insist that pylibdir always exists in OpenCV easyblock     (#1977)</li> <li>also set <code>$TRINITY_HOME</code> environment variable in Trinity     easyblock     (#1979)</li> <li>fix sanity check for OpenFOAM-Extend &gt;= 4.1     (#1981)</li> <li>fix pattern matching in regex subst for <code>I_MPI_ROOT</code> in impi     easyblock     (#1986)</li> <li>use <code>remove_dir</code> instead of deprecated <code>rmtree2</code> in various     easyblocks     (#1993)</li> <li>fix \"<code>AttributeError: module 'git' has no attribute 'Git'</code>\"     that may occur when using Python 3     (#1994)</li> <li>don't sanity check for <code>QtWebEngine</code> in Qt easyblock when     building for POWER     (#2000)</li> <li>fix installation of TensorFlow in some environments, by setting     <code>$PYTHONNOUSERSITE</code> (&amp; more)     (#2002,     #2020)</li> <li>make sure libxml2 is built with XZ provided as dependency     (#2005)</li> <li>look for Python version directories with suffixes in ROOT     easyblock     (#2010)</li> <li>enable TK, FLTK and OPENGL configure options in VMD easyblock     (#2013)</li> <li>update the contributing docs     (#2014)</li> <li>fix numexpr easyblock to allow (correctly) installing it as     extension     (#2022)</li> </ul> </li> <li>other changes:<ul> <li>simplify various CMakeMake-based easyblocks by enhancing     <code>CMakeMake</code> (w.r.t. <code>CMAKE_BUILD_TYPE</code>, shared vs static libs,     <code>-fPIC</code>)     (#1929)</li> <li>enable out of tree build by default in <code>CMakeMake</code> easyblock     (#1933)</li> <li>force building Clang without CUDA when it is not found as a     proper dependency     (#1968)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 114 new software packages:<ul> <li>ABRA2     (#10272),     ABRicate     (#10310),     ADIOS     (#10036),     aNCI     (#9929),     any2fasta     (#10310),     apex     (#10269),     archspec     (#9898),     ArviZ     (#10366),     autopep8     (#9626),     BAMSurgeon     (#10330),     BatMeth2     (#10323),     BiG-SCAPE     (#10352),     BinSanity     (#10001),     Bonito     (#10269),     BSMAPz     (#10283),     BSseeker2     (#10039),     BUStools     (#9838),     Cbc     (#10052),     Cgl     (#10048),     CGmapTools     (#10288),     Clp     (#10033),     CoinUtils     (#9937),     dtcwt     (#9695),     ELSI     (#9857),     EnsEMBLCoreAPI     (#8734),     fastq-pair     (#9894),     FigureGen     (#10076),     Fiona     (#10321),     FuSeq     (#10004),     GenomeTools     (#9797),     GraphMap2     (#10299),     GRASP     (#9896),     Groovy     (#9809),     gsport     (#9821),     gubbins     (#9689),     igv-reports     (#9977),     inferCNV     (#9686),     iVar     (#10291),     joypy     (#10212),     JupyterLab     (#9752),     kma     (#10259),     LAMMPS     (#10371),     lancet     (#10271),     libBigWig     (#10006),     libGridXC     (#9858),     libPSML     (#5859),     LtrDetector     (#10343),     manta     (#5104),     medImgProc     (#10228),     MedPy     (#9748),     Mini-XML     (#10036),     mkl_fft     (#9887),     Monocle3     (#9825),     MoreRONN     (#10255),     motionSegmentation     (#10228),     NanoComp     (#10212),     NanoFilt     (#10212),     nanoget     (#10212),     nanomath     (#10212),     NanoPlot     (#10212),     ngspice     (#9922),     ntEdit     (#9836),     ntHits     (#9833),     occt     (#9939),     OCNet     (#9955),     OpenAI-Gym     (#10347),     OpenPIV     (#9959),     OpenPyXL     (#10115),     orca     (#9518),     Osi     (#10361),     PartitionFinder     (#9983),     pauvre     (#10212),     polymake     (#9904),     pretty-yaml     (#10041)),     PRSice     (#9988),     pycodestyle     (#9626),     pydot     (#9899),     pygraphviz     (#9969),     pylift     (#10051),     PyMC3     (#10279),     pyparsing     (#9983),     PyRe     (#10095),     python-weka-wrapper3     (#9704),     PyTorch-Geometric     (#9995),     qcat     (#10244),     RAxML-NG     (#9990),     Ray     (#10302),     rclone     (#7934),     Red     (#9856),     rstanarm     (#9964),     scikit-build     (#9762),     scVelo     (#9805),     SECAPR     (#9721),     segmentation-models     (#10211),     SentencePiece     (#10192),     SEPP     (#10047),     Shapely     (#10309),     Singular     (#10030),     SLATEC     (#7529),     spatialreg     (#9767),     split-seq     (#9749),     spoa     (#9705),     SSN     (#9955),     STEAK     (#10337),     stpipeline     (#9736),     SVG     (#9905),     Togl     (#9868),     torchtext     (#10193),     units     (#9682),     UQTk     (#10279),     WildMagic     (#10044),     Winnowmap     (#10005),     xtb     (#9993),     Zip     (#9972)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABySS 2.1.5, Arrow 0.16.0, BCFtools 1.10.2, BEDTools 2.29.2,     BUSCO 4.0.5, BerkeleyGW 2.1.0, binutils 2.34, CVXPY 1.0.28,     CharLS 2.1.0, CheckM 1.1.2, Clang 10.0.0, CppUnit 1.15.1, canu     1.9, cutadapt 2.8, DIAMOND 0.9.30, davix 0.7.5, ELPA     2019.11.001, FastANI 1.3, FastQC 0.11.9, Ferret 7.5.0, GATK     4.1.4.1, GCCcore 9.3.0, GDB 9.1, GMAP-GSNAP-2019-09-12,     GObject-Introspection 1.63.1, GPAW 20.1.0, GROMACS 2020, GTDB-Tk     1.0.2, GTK+ 3.24.13, Go 1.14.1, Gradle 6.1.1, GraphicsMagick     1.3.34, Graphviz 2.42.2, Gurobi 9.0.1, gSOAP 2.8.100, gnuplot     5.2.8, gtest 1.10.0, HDDM 0.7.5, HTSlib 1.10.2, HarfBuzz 2.6.4,     Horovod 0.19.1, Hypre 2.18.2, IGV 2.8.0, IQ-TREE 1.6.12,     IRkernel 1.1, iccifort 2020.0.166, igraph 0.8.0, impi     2019.6.166, ispc 1.12.0, Java 13(.0.2), Julia 1.4.0, Keras     2.3.1, Kraken2 2.0.8-beta, kim-api 2.1.3, LAST 1045, LASTZ     1.04.03, LLVM 9.0.1 + 10.0.0, LMfit 0.9.14, LS-PrePost 4.7.8,     likwid 5.0.1, MAFFT 7.453, MATLAB 2019b, MMseqs2 10, Maven     3.6.3, Meson 0.53.1, MethylDackel 0.5.0, Mono 6.8.0.105, medaka     0.12.0, Nextflow 20.01.0, ncdf4 1.17, netcdf4-python 1.5.3,     nodejs 12.16.1, numba 0.47.0, numexpr 2.7.1, Octave 5.1.0,     OpenBLAS 0.3.8, OpenBabel 3.0.0, OpenCV 4.2.0, OpenFOAM-Extend     4.1-20191120, OrthoFinder 2.3.11, PETSc 3.12.4, PGI 19.10, PMIx     2.2.1, Pango 1.44.7, PyTables 3.6.1, PyTorch 1.4.0, parasail     2.4.1, pydicom 1.4.2, pyproj 2.4.2, Qhull 2019.1,     QuantumESPRESSO 6.5, R-bundle-Bioconductor 3.10, RDKit 2019.09.3     Racon 1.4.10, ReFrame 2.21, Ruby 2.7.1, rjags 4-9, rpy2 3.2.6,     SLEPc 3.12.2, SPAdes 3.14.0, SPAdes 3.14.0, STAR-Fusion 1.8.1,     STAR 2.7.3a, Seaborn 0.10.0, SeqAn 1.4.2, Seurat 3.1.2,     SimpleElastix 1.1.0, SimpleITK 1.2.4, Stacks 2.5, Stata 16,     StringTie 2.1.0, scikit-optimize 0.7.4, statsmodels 0.11.0,     TensorFlow 1.15.2 + 2.0.1, Tkinter 2.7.16, Trim_Galore 0.6.5,     Trimmomatic 0.39, Trinity 2.10.0, tbb 2020.2, tqdm 4.41.1,     XCrySDen 1.6.2, XGBoost 0.90, xarray 0.15.1, xmlf90 1.5.4</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add easyconfig for Java 11.0.6 on <code>ppc64le</code> and alter the Java     11 wrapper to support both x86_64 and ppc64le     (#9371)</li> <li>add additional extensions for R: <code>HiddenMarkov</code>     (#9685),     <code>lmerTest</code>     (#9853),     <code>VSURF</code> + <code>Rborist</code>     (#10355)</li> <li>change Mesa 19.1.7 + 19.2.1 easyconfigs to use custom easyblock     for Mesa     (#9764)</li> <li>build shared libs and install header files for Ghostscript     (#9785)</li> <li>add MUMPS as dependency in PETSc 3.12.4 easyconfigs     (#9880,     #9891)</li> <li>add Perl extensions: <code>Term::ReadLine::Gnu</code>     (#9901),     <code>URI::Escape</code> and <code>Set::IntervalTree</code>     (#10049)</li> <li>add dat directory to aNCI     (#9929)</li> <li>add patch to create a symlink from <code>libsvm.so.$(SHVER)</code> to     <code>libsvm.so</code> in LIBSVM easyconfigs     (#10045)</li> <li>build SUNDIALS with '<code>pic</code>'     (#10278)</li> <li>add <code>BSgenome.Hsapiens.UCSC.hg38</code> + <code>MEDIPS</code> extensions to     R-bundle-Bioconductor v3.10     (#10298)</li> <li>fix checksums for <code>mkl-dnn</code> and <code>tbb</code> extensions (moved to     oneAPI repo) in PyTorch easyconfigs     (#10367)</li> <li>update <code>Java/1.8</code> wrapper to <code>Java/1.8.0_241.eb</code>     (#10305)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use CMake for building double-conversion     (#9659)</li> <li>update recent libdrm easyconfigs to use custom easyblock &amp; avoid     hardcoded x86-specific sanity check     (#9694)</li> <li>add alternate checksum for OpenMolcas 18.09     (#9701)</li> <li>use Github to download releases for MariaDB-connector-c     (#9702)</li> <li>add <code>-DOMPI_SKIP_MPICXX</code> in <code>configopts</code> for MathGL, to avoid     using mpicxx during build     (#9703)</li> <li>make installing independent of build folder in pybind11     easyconfig     (#9738)</li> <li>add Lua as a dependency to gnuplot     (#9773)</li> <li>stick to <code>http://</code> source URLS for ISL in GCCcore easyconfigs,     since <code>https://</code> doesn't work     (#9784)</li> <li>add alternative checksums for     <code>farver</code>/<code>fracdiff</code>/<code>pkgmaker</code>/<code>rngtools</code>/<code>doRNG</code>/<code>cobs</code>     extensions in R 3.6.2 easyconfigs     (#9789)</li> <li>add patch for OpenBLAS 0.3.4 w/ GCC/8.2.0-2.31.1 to fix broken     tests     (#9865)</li> <li>revert removal of AVX512 vmovd with 64-bit operands in binutils     2.32 easyconfigs     (#9866)</li> <li>fix inline asm in dscal: mark x, x1 as clobbered, in OpenBLAS     0.3.8     (#9867)</li> <li>add missing <code>sanity_check_commands</code> to cutadapt v1.18 and v2.7     easyconfigs     (#9869)</li> <li>don't overwrite <code>configopts</code> in BLAST+ easyconfigs, append to     it     (#9875)</li> <li>add alternate checksum for <code>LaplacesDemon</code> in R 3.6.x     easyconfigs     (#9879,     #10382)</li> <li>fix redefining of preconfigopts in OpenCV easyconfigs     (#9895)</li> <li>use symlinks for terminfo files instead of hard links in ncurses     6.1 easyconfigs     (#9912)</li> <li>fix NCIPLOT build flags     (#9915)</li> <li>add missing patch to iccifort libxc easyconfigs     (#9918)</li> <li>use <code>checkout@v2</code> in GitHub Actions to fix broken re-triggered     tests     (#9925)</li> <li>re-enable building utils in Siesta 4.1-MaX-1.0 release     (#9936)</li> <li>fix homepage and source URLs in SLEPc easyconfigs by using https     (#9943)</li> <li>fix source URLs for rgeos after source tarball was moved to CRAN     archive     (#9954)</li> <li>add dependencies on Python 3 and SciPy-bundle in Trinity v2.9.1     easyconfig     (#9957)</li> <li>patch GCC <code>lisanitizer</code> for glibc 2.31     (#9966)</li> <li>add Zip as build dependency for recent Bazel versions     (#9972)</li> <li>fix checksums in Jellyfish v2.3.0 easyconfigs     (#9997)</li> <li>fix source URLs for ParMGridGen easyconfigs     (#10019)</li> <li>disable unintended Octave support in all libsndfile easyconfigs     (#10027)</li> <li>fix sources for LS-PrePost 4.6     (#10236)</li> <li>security update for vsc-mympirun 4.1.9     (#10185)</li> <li>configure libwebp to also install <code>libwebpmux</code>     (#10274)</li> <li>ensure that CVS easyconfigs are included in source tarball     produced by '<code>python setup.py sdist</code>'     (#10326)</li> <li>fix undefined reference error due to libxc 4.3.4 built with     CMake     (#10356)</li> <li>fix source_urls for tbb: use (new) official '<code>oneapi-src</code>'     GitHub repository     (#10361)</li> <li>update checksums and homepage in tbb easyconfigs     (#10285)</li> </ul> </li> <li>other changes:<ul> <li>use new custom easyblock in recent CMake easyconfigs     (#9871,     #9923)</li> <li>add check for redefined easyconfig parameters in easyconfig     tests     (#9876)</li> <li>use M4-1.4.18.eb for test installation in easyconfigs test suite     (#9926)</li> <li>use <code>https://</code> in <code>homepage</code>/<code>source_urls</code> of <code>zlib-1.2.11.eb</code>     (#10018)</li> <li>add <code>-GCCcore-9.2.0</code> versionsuffix for <code>intel/2020.00</code>     components     (#10083)</li> <li>add checksum of new tbb 2019_U9 source tarball, next to original     one + update homepage     (#10237)</li> <li>add comment informing about manually setting Gallium drivers in     easyconfigs for Mesa v19.1.7 and v19.2.1     (#10276)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb412","title":"EasyBuild v4.1.2 (March 16th 2020)","text":"<p>bugfix release</p>  <p>Note</p> <p>This release includes a bug fix for the leaking of your GitHub token in the EasyBuild (debug) log file.</p> <p>We strongly encourage that you revoke the GitHub tokens you are using currently, via https://github.com/settings/tokens, and to replace them using a new token (using <code>eb --install-github-token --force</code> ).</p> <p>More information in https://github.com/easybuilders/easybuild-framework/pull/3248.</p>  <p>framework</p> <ul> <li>fix gitdb dependency on Python 2.6 in test configuration     (#3212)</li> <li>fix broken test for --review-pr by using different PR to test with     (#3226)</li> <li>censor authorization part of headers before logging ReST API request     (#3248)</li> </ul> <p>easyblocks</p> <p>(no changes)</p> <p>easyconfigs</p> <p>(no changes)</p>"},{"location":"release-notes/#release_notes_eb411","title":"EasyBuild v4.1.1 (January 16th 2020)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add <code>check_log_for_errors</code> function (in <code>easybuild.tools.run</code>)     to detect and handle multiple errors     (#3118)</li> <li>implement support for <code>eb --show-ec</code> to show contents of     specified easyconfig file     (#3132)</li> <li>also update <code>$XDG_DATA_DIR</code> (share/) and <code>$GI_TYPELIB_PATH</code>     environment variables (lib/girepository-) in generated     module files     (#3133)</li> <li>add support for <code>--copy-ec</code> to copy easyconfig file to specified     location     (#3142)</li> <li>mention <code>--disable-*</code> option in <code>--help</code> output for boolean     options enabled by default     (#3151)</li> <li>add <code>--cuda-compute-capabilities</code> configuration option     (#3161)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ignore imports from <code>vsc</code> namespace made from pkgutil.py     (#3120)</li> <li>only actually change permissions using <code>os.chmod</code> in     <code>adjust_permissions</code> if the current permissions are not correct     already     (#3125)</li> <li>use <code>shutil.copyfile</code> to just copy file contents if target path     exists and is owned by someone else     (#3127)</li> <li>fix or avoid warnings that commonly arise in build log     (#3129)</li> <li>disable buffering in <code>asyncprocess.Popen</code> using <code>bufsize=0</code>, to     fix <code>run_cmd_qa</code> missing output     (#3130)</li> <li>update pip &amp; install wheel package in generated Singularity     container recipes     (#3136)</li> <li>avoid crash in <code>modify_env</code> &amp; unset <code>unset_env_vars</code> when using     (older versions) of Python 3.5 &amp; 3.6 by using <code>list(...)</code>     (#3140)</li> <li>take into account that lib64 could be a symlink to lib (or vice     versa) in <code>get_software_libdir</code> function     (#3141)</li> <li>only parse docstring if it exists in     <code>gen_easyblock_doc_section_rst</code> function     (#3144)</li> <li>only add useful entries for <code>$CPATH</code>, <code>$(LD_)LIBRARY_PATH</code> and     <code>$PATH</code> (non-empty directories)     (#3145,     #3152)</li> <li>fix <code>--list-software=detailed</code> when using Python 3 by leveraging     <code>sort_looseversions</code> function from <code>py2vs3</code> module     (#3146)</li> <li>ensure subdirectories in software install directory have correct     search (exec) permission     (#3147)</li> <li>take into account that a checksum value may be a tuple of valid     checksum in <code>EasyBlock.check_checksums</code>     (#3153)</li> </ul> </li> <li>other changes:<ul> <li>bump to Lmod 8.2.9 in GitHub CI config     (#3115)</li> <li>update copyright statements for 2020     (#3149)</li> <li>make Hound CI code style checker ignore \"Black would make     changes\" produced by flake8-black     (#3162)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for cryptography (to fix missing     <code>-pthread</code> for all versions)     (#1874)</li> <li>minor enhancements, including:<ul> <li>update WPS easyblock for v3.6 &amp; newer     (#1315)</li> <li>update FSL easyblock to support FSL v6.0.2 &amp; newer     (#1860)</li> <li>add <code>setup_cmake_env</code> function in CMakeMake easyblock which can     be leveraged in other easyblocks, and use it for OpenFOAM     (#1869)</li> <li>remove obsolete configure options for Python + build with     optimizations/LTO enabled for recent Python versions     (#1876)</li> <li>update WPS easyblock for recent versions: set <code>$WRF_DIR</code> to     point to location of WRF installation     (#1886)</li> <li>make sure <code>$LIBLAPACK_MT</code> is set before using it in ESMF     easyblock     (#1887)</li> <li>remove useless <code>PATH</code> entries + add <code>PKG_CONFIG_PATH</code> in imkl     easyblock     (#1900)</li> <li>enhance tbb easyblock to support building on POWER     (#1912)</li> <li>enhance TensorFlow easyblock to pick up on     <code>--cuda-compute-capabilities</code>, and issue a warning if no CUDA     compute capabilities are specified     (#1913)</li> <li>add custom easyconfig parameter <code>build_type</code> to generic     CMakeMake easyblock     (#1915,     #1922)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix for conda packages that rely on particular versions of     Python     (#1836)</li> <li>fix path for intel and netCDF lib directories in NCL easyblock     (#1862)</li> <li>fix CUDA 10.1 installation on POWER     (#1871)</li> <li>change Bazel easyblock to prefer using Java dependency rather     than included JDK (fix for POWER9)     (#1875)</li> <li>remove optarch warning in GROMACS for Cray toolchains     (#1879)</li> <li>also fix <code>$WM_COMPILE_OPTION</code> in OpenFOAM rc scripts to make     debug builds work correctly     (#1880)</li> <li>limit MPI ranks used for running WRF test cases to max. 4 +     include contents of rsl.error.0000 output file in case test     failed     (#1884)</li> <li>update <code>$PYTHONPATH</code> + add <code>python -c 'import mrtrix3'</code> as     sanity check command for recent MRtrix versions     (#1889)</li> <li>update sanity check in SAMtools easyblock for version 1.10     (#1890)</li> <li>make sure <code>$PYTHONNOUSERSITE</code> it set when performing sanity     check for (bundles of) Python package(s)     (#1891)</li> <li>fix install dir subdir for WPS v4.0+ that is considered for     <code>$PATH</code> and <code>$LD_LIBRARY_PATH</code>     (#1895)</li> <li>impi: don't rebuild libfabric if the source code is not present     (#1896)</li> <li>also copy component patches to self.cfg in Bundle generic     easyblock     (#1897)</li> <li>skip patch step in Bundle generic easyblock (per-component     patches are still applied)     (#1898)</li> <li>derive easyblock for iccifort only from icc easyblock (not     ifort), to avoid adding include subdir to <code>$CPATH</code>     (#1899)</li> <li>add <code>export LANG=C</code> to preinstallopts instead of install_script     path in CUDA easyblock     (#1902)</li> <li>stop setting updating <code>$CPATH</code> and <code>$LIBRARY_PATH</code> for GCC and     GCCcore, not required     (#1903)</li> <li>remove <code>$LIBRARY_PATH</code> entries in iccifort easyblock, already     known to icc et al     (#1904)</li> <li>use major/minor version of Python command being used if     <code>req_py_majver</code>/<code>req_py_minver</code> are not specified     (#1907)</li> <li>define <code>$EB_PYTHON</code> in module for EasyBuild installation, to     make sure correct Python version is used at runtime     (#1908)</li> <li>fix Python easyblock to allow configuring build of Python v3.8     (<code>Setup.dist</code> script was renamed to <code>Setup</code>)     (#1909)</li> <li>fix netCDF easyblock for version 4.4.0     (#1911)</li> <li>correct comment about when we set <code>RUNPARALLEL</code> in HDF5     easyblock     (#1914)</li> <li>do not sanity check on MATLAB compiler, since it requires a     separate license     (#1916)</li> <li>build HDF5 without MPI C++ extension to avoid breaking linkage     for C software that requires HDF5     (#1918,     #1919)</li> <li>override <code>set_pylibdirs</code> method in     <code>VersionIndependentPythonPackage</code> to hard set <code>self.pylibdir</code> to     'lib'     (#1924)</li> </ul> </li> <li>other changes:<ul> <li>increase timeout for interactive installation command in CUDA     easyblock to 1000 sec.     (#1878)</li> <li>disable running of <code>sudo apt-get update</code> in GitHub CI config,     since it's failing (and we don't really need it)     (#1882)</li> <li>stop requiring Python dep for SWIG, just configure with     <code>--without-python</code> if Python is not a dependency     (#1894)</li> <li>update copyright statements for 2020     (#1905)</li> <li>make Hound CI code style checker ignore \"Black would make     changes\" produced by flake8-black     (#1923)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 27 new software packages:<ul> <li>Autoconf-archive     (#9658),     breseq     (#9603),     CrossMap     (#9483),     CSBDeep     (#9560),     CNT-ILP     (#9323),     cytoolz     (#9453),     Faber     (#9553),     Fiji     (#8748),     GARLI     (#9404),     Globus-CLI     (#9565),     GtkSourceView     (#9526),     gradunwarp     (#9648),     gsettings-desktop-schemas     (#9529),     HyPhy     (#9405),     horton     (#7449),     IGMPlot     (#9438),     LEMON     (#9323),     Meld     (#9530),     mhcflurry     (#9554),     NCIPLOT     (#9419),     ncl     (#9632),     OpenSlide     (#9499),     openslide-python     (#9499),     pythran     (#9488,     #9594),     Qualimap     (#9411),     TinyDB     (#9555),     TreeShrink     (#9381)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Beast 1.10.4, Boost.Python 1.71.0, Clang 9.0.1, ESMF 8.0.0, FSL     6.0.3, fastp 0.20.0, freeglut 3.2.1, GDAL 3.0.2, GEOS 3.8.0,     GROMACS 2019.4, GSL 2.6, hwloc 2.1.0, Jellyfish 2.3.0, Julia     1.3.1, LibTIFF 4.1.0, libxml2 2.9.10, lxml 4.4.2, Mothur 1.43.0,     mayavi 4.7.1, molmod 1.4.5, netCDF-C++4 4.3.1, netCDF-Fortran     4.5.2, numactl 2.0.13, OpenFOAM 7, OpenFOAM v1912, OpenMM 7.4.1,     OpenMPI 4.0.2, PLUMED 2.5.3, PROJ 6.2.1, plotly.py 4.4.1, pocl     1.4, QuickFF 2.2.4, R 3.6.2 w/ foss/2019b and fosscuda/2019b,     ReFrame 2.20, SAMtools 1.10, SUNDIALS 5.1.0, SWIG 4.0.1, Salmon     1.0.0, SuiteSparse 5.6.0, snakemake 5.7.1, TensorFlow 2.1.0 w/     fosscuda/2019b, torchvision 0.4.2, WPS 4.1, WRF 4.1.3</li> </ul> </li> <li>added easyconfigs for <code>intel/2020.00</code> toolchain     (#9575)</li> <li>minor enhancements, including:<ul> <li>add POWER9 support to CUDA 10.1 easyconfigs     (#9442)</li> <li>build CMake in parallel     (#9543)</li> <li>use NCCL for GPU ops in Horovod 0.18.2 easyconfig     (#9562)</li> <li>update Java/1.8 wrapper to Java/1.8.0_231 (for x86_64)     (#9585)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix remote launch of broker and workers for SCOOP     (#9366)</li> <li>fix failing RPATH sanity check for NCL 6.6.2 due to missing     dependencies (+ add easyconfig using <code>foss/2018b</code>)     (#9388)</li> <li>add missing 'wheel' extensions to Spark 2.4.0 easyconfig using     <code>intel/2018b</code> toolchain     (#9424)</li> <li>add missing OS dependencies in Java 1.8 easyconfig used on POWER     systems     (#9454)</li> <li>fix build of recent Bazel versions on Power9 + stick to Java/1.8     as dependency     (#9455)</li> <li>fix CMake 3.15.3 build on Power (+ enable building in parallel)     (#9469)</li> <li>fix source URLs in xorg-macros easyconfigs     (#9477,     #9578)</li> <li>add missing wcwidth extension to Python 2.7.15 + 2.7.16     easyconfigs &amp; enable 'pip check' in sanity check     (#9479)</li> <li>remove (wrong) <code>GI_TYPELIB_PATH</code> and <code>XDG_DATA_DIRS</code> in various     easyconfigs     (#9528,     #9577,     #9615)</li> <li>use xorg-macros as dependency in X11 easyconfigs (rather than     installing it as a bundle component)     (#9546)</li> <li>fix lpsymphony extension for R-bundle-Bioconductor     (#9548)</li> <li>add correct 'old-versions' source URL to all Mesa easyconfigs     (#9569)</li> <li>add missing SHA256 checksums for Armadillo     (#9572)</li> <li>also define <code>$AUGUSTUS_BIN_PATH</code> and <code>$AUGUSTUS_SCRIPTS_PATH</code> in     generated module file for AUGUSTUS     (#9579)</li> <li>add SSL OS dependencies for GDAL 3.0.0     (#9586)</li> <li>add missing jupyter_contrib_core extension for IPython 7.7.0+ +     consistently include jupyter_nbextensions_configurator extension     (#9587)</li> <li>patch libcxx (Clang 8.0.0) on pcc64le for incomplete IBM128 long     double in GCC     (#9590)</li> <li>patch for GCCcore 8.2.0 to fix '__float128 is not supported     on this target' on ppc64le     (#9591)</li> <li>fix broken easyconfigs for cyvcf2 v0.11.5 by adding missing     'monotonic' extension     (#9601)</li> <li>use absolute path for extraction to allow relocating the build     dir for g2log-1.0     (#9604)</li> <li>add alternate SHA256 checksum for kallisto-0.43.1 after     re-release under same version without code changes     (#9611)</li> <li>add additional valid checksum for MASS 7.3-51.4 extension in R     3.6.0 easyconfigs     (#9621)</li> <li>update ctffind website     (#9622)</li> <li>make sure we use easybuild Clang in pocl easyconfigs     (#9624)</li> <li>make <code>postinstallcmds</code> independent of current working directory     in OpenCV 3.1.0 easyconfigs     (#9628)</li> <li>update <code>source_urls</code> to include old releases folder in libsodium     easyconfigs     (#9632)</li> <li>fix source URLs for ant v1.10.5 - v1.10.7     (#9633)</li> <li>update URLs to new location of libxc     (#9635)</li> <li>add alternate SHA256 checksum for rda_1.0.2-2.1 extension in R     3.6.0     (#9644)</li> <li>update source URLs in QCA 2.1.0 easyconfigs     (#9647)</li> <li>fix Python 3.5.1 easyconfig: bitstring 3.1.3 sources no longer     available on PyPI     (#9649)</li> <li>fix tesseract 4.1.0 dependencies     (#9650)</li> <li>make ICU 64.2 depend on Python3 instead of Python 2, to avoid     picking up system Python 3.x     (#9652)</li> <li>use <code>True</code> (boolean value) rather than <code>'True'</code> (string value)     for boolean easyconfig parameters     (#9657)</li> <li>fix pyfits easyconfig by adding missing d2to1 extension     (#9687)</li> </ul> </li> <li>other changes:<ul> <li>disable running of <code>sudo apt-get update</code> in GitHub CI config,     since it's failing (and we don't really need it)     (#9492)</li> <li>require that <code>sanity_pip_check</code> is enabled in new/changed     easyconfigs     (#9516,     #9576)</li> <li>update copyright statements for 2020     (#9598)</li> <li>allow missing '-Python-*' versionsuffix for existing     easyconfig files changed in PRs     (#9634)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb410","title":"EasyBuild v4.1.0 (December 4th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>performance improvements:<ul> <li>skip validation when copying EasyConfig object for extension     (#3071)</li> <li>correctly specify that ActiveMNS &amp; co are singleton classes     when using Python 3     (#3073)</li> <li>don't call out to prohibitively expensive     <code>getRootLoggerName</code> in <code>getLogger</code>, just use 'root'     instead     (#3074)</li> <li>fix inconsistent module path usage that leads to repeated     reloading in HMNS     (#3099)</li> </ul> </li> <li>add support for specifying different dependency version based on     processor architecture     (#3047)</li> <li>support use of glob patterns for paths to files with external     modules metadata     (#3075)</li> <li>take into account that external modules may not be visible     directly (due to module hierarchy)     (#3083)</li> <li>add support for including 'extensions' statement in Lua     modules with Lmod 8.2.8+     (#3085,     #3107,     #3110)</li> <li>add support for <code>--sync-pr-with-develop</code>     (#3087)</li> <li>add support for <code>--new-branch-github</code>, <code>--new-pr-from-branch</code>,     <code>--sync-branch-with-develop</code>, <code>--update-branch-github</code>     (#3103)</li> <li>fix typo in docstring for <code>new_branch_github</code>     (#3106)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>correctly handle <code>iccifortcuda</code> toolchain with standalone     <code>iccifort</code> in <code>det_toolchain_compilers</code>     (#3055)</li> <li>init git repo with <code>git.repo.clone()</code> instead of <code>copy_dir()</code>     (#3062)</li> <li>fix regular expression so depends-on statements are recognized     correctly in Tcl module files     (#3065)</li> <li>update GitPython to latest version that supports Python 2.6 in     requirements.txt to fix broken <code>test_new_update_pr</code>     (#3066)</li> <li>imply <code>--disable-pre-create-installdir</code> with     <code>--inject-checksums</code>     (#3069)</li> <li>handle patches in extensions more like normal patches     (#3067)</li> <li>take into account that <code>platform.linux_distribution</code> and     <code>platform.dist</code> was removed in Python 3.8     (#3078)</li> <li>always include mandatory easyconfig parameters in dumped     easyconfig     (#3081)</li> <li>hide backup module file when using Lmod 6.x (fixes     #9302)     (#3089)</li> <li>add better error message when mandatory key is missing from a     dictionary easyconfig parameter     (#3092)</li> <li>also create symlinks for default modules in class module folders     (#3093)</li> <li>fix semantics of <code>--set-default-module</code>: only set default for     specified easyconfigs, not for the ones that are installed as     dependencies via <code>--robot</code>     (#3094)</li> <li>fix various issues in extracting comments from original     easyconfig file and including them again in dumped easyconfig     (#3095)</li> <li>don't use <code>%(version)s</code> template in <code>exts_default_options</code> in     dumped easyconfig     (#3096)</li> <li>fix generated module statements in case only a single version is     listed in <code>multi_deps</code>     (#3097)</li> <li>fix broken <code>test_show_system_info</code> on macOS due to 'Python'     binary     (#3105)</li> <li>take into account that dependency version could be a dict rather     than a string value in template_constant_dict     (#3111)</li> </ul> </li> <li>other changes:<ul> <li>deprecate running EasyBuild with Python 2.6 via new     <code>check_python_version()</code> function     (#3076)</li> <li>deprecate support for using Lmod 6.x     (#3077)</li> <li>trim set of test configurations in Travis CI     (#3086)</li> <li>flesh out <code>env_vars_external_module</code> from     <code>Toolchain._simulated_load_dependency_module</code>     (#3088)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for cuDNN, to allow setting     <code>cudnnarch</code>     (#1855)</li> <li>refactored software-specific easyblock for Xmipp, based on Scons     (#1837)</li> <li>minor enhancements, including:<ul> <li>add <code>prebuildopts</code> to Bazel build command     (#1838)</li> <li>add support to Toolchain generic easyblock for defining $EB*     environment variables for toolchain components that use an     external module     (#1849)</li> <li>add support for running 'pip check' during sanity check in     generic PythonPackage easyblock     (#1853)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>clean up <code>/tmp/cuda-installer.log</code> in CUDA easyblock, to avoid     segfault in cuda-installer     (#1835)</li> <li>minor fix to name of Gctf binary     (#1840)</li> <li>move BLAS toolchain existence check earlier in SuperLU easyblock     (#1842)</li> <li>fixes for TensorFlow easyblocks w.r.t. Bazel build options &amp;     <code>__init__</code> in top-level google-protobuf package dir     (#1843)</li> <li>fix support for sequential version in MUMPS easyblock     (#1845)</li> <li>change default value of <code>files_to_copy</code> to None in MakeCp     generic easyblock + code cleanup &amp; use <code>change_dir</code>, <code>copy_dir</code>,     <code>copy_file</code> and <code>mkdir</code> function from <code>filetools</code>     (#1848)</li> <li>prepend <code>-L$EBROOTZLIB/lib</code> to <code>LDFLAGS</code> in SCOTCH easyblock     (#1850)</li> <li>improve configuration in netCDF and netcdf4_python easyblocks     (#1852)</li> <li>fix CUDA header paths for TensorFlow versions &lt; 1.14     (#1854)</li> <li>handle incorrect regex better in generic CmdCp easyblock     (#1861)</li> <li>add missing docstrings in cmakeninja easyblock     (#1867)</li> </ul> </li> <li>other changes:<ul> <li>add GitHub Actions workflow to run easybuild-easyblocks test     suite     (#1844)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 46 new software packages:<ul> <li>Amara     (#9340),     anvio     (#9387),     Arriba     (#9226,     #9244),     attr     (#7824),     bibtexparser     (#9284),     bwa-meth     (#9217),     CITE-seq-Count     (#9237),     CoordgenLibs     (#9374),     dtcmp     (#9052),     fatslim     (#9193),     GromacsWrapper     (#9177),     GULP     (#9243),     hdf5storage     (#9195),     ITSTool     (#7260),     kim-api     (#8786),     kwant     (#9238),     libarchive     (#9052),     libcircle     (#9052),     libxml2-python     (#7260),     lifelines     (#9215),     lwgrp     (#9052),     maeparser     (#9374),     MaxQuant     (#9281),     MethylDackel     (#9216),     MoviePy     (#9205),     mpifileutils     (#9052),     mpiP     (#9059),     nanofilt     (#8502),     NOVOPlasty     (#9326),     openkim-models     (#8786),     parallel-fastq-dump     (#9218),     pasta     (#9348),     pyqstem     (#9277),     python-Levenshtein     (#9237),     RapidJSON     (#9373),     RDFlib     (#9346),     RQGIS3     (#9125),     Short-Pair     (#9376),     SpliceMap     (#9375),     TRIQS-cthyb     (#9230),     TRIQS-dft_tools     (#9230),     TRIQS-tprf     (#9230),     UMI-tools     (#9237),     VarDict     (#7283),     Xmipp     (#9257),     XSD     (#9347)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>awscli 1.16.290, BLIS 0.6.0, Bazel 1.1.0, Biopython 1.75,     Blender 2.81, bokeh 1.4.0, CONCOCT 1.1.0, CUDA 10.2.89, Catch2     2.11.0, CellRanger 3.1.0, CheckM 1.0.18, dask 2.8.0, deepTools     3.3.1, FastANI 1.2, Flye 2.6, GDCM 3.0.4, GTDB-Tk 0.3.2, Glade     3.8.6, Hadoop 2.9.2, h5py 2.10.0, hypothesis 4.44.2, IPython     7.9.0, Kaiju 1.7.2, Kraken 1.1.1, libsodium 1.0.18, MEGAHIT     1.2.8, Mesa 19.2.1, MetaBAT 2.14, matplotlib 3.1.1, metaWRAP     1.2.2,cNCCL 2.4.8, NGS 2.10.0, NiBabel 2.5.1, netCDF 4.7.1,     networkx 2.4, numba 0.46.0, OpenCV 3.4.7, OpenCoarrays 2.8.0,     OpenEXR 2.4.0, OpenFOAM v1906, OpenImageIO 2.0.12, ParaView     5.6.2, Pillow 6.2.1, PyTorch 1.3.1, PyYAML 5.1.2, Pysam 0.15.3,     picard 2.21.1, prokka 1.14.5, protobuf 3.10.0, R-keras 2.2.5.0,     Racon 1.4.7, SCOTCH 6.0.9, SRPRISM 3.1.1, Salmon 0.14.2,     SciPy-bundle 2019.10, Subread 2.0.0, scikit-image 0.16.2,     scikit-learn 0.21.3, TRIQS 2.2.1, TensorFlow 1.15.0, TensorFlow     2.0.0 w/ fosscuda/2019b, Tkinter 3.7.4, ToFu 1.4.1, tbb 2019_U9,     Xerces-C++ 3.2.2, Xmipp 3.19.04, yaff 1.6.0</li> </ul> </li> <li>added easyconfigs for <code>intelcuda/2019a</code> toolchain     (#9271)</li> <li>minor enhancements, including:<ul> <li>tweak Java 1.8 wrapper to use different Java version on POWER     systems     (#9081)</li> <li>add jupyter_nbextensions_configurator extension to IPython 7.7.0     easyconfigs     (#9133)</li> <li>add additional extensions to R 3.6.0 easyconfigs     (#9184,     #9275)</li> <li>add additional extensions to R-bundle-Bioconductor 3.9     easyconfig     (#9185,     #9349,     #9410)</li> <li>enhance sanity check in cutadapt 1.18 easyconfigs + consistently     use PythonBundle &amp; <code>use_pip</code>     (#9219)</li> <li>update cuDNN 7.6.4.38 easyconfigs to support both x86_64 and     ppc64le     (#9331)</li> <li>tweak NCCL 2.4.8 easyconfig to support x86_64 and ppc64le     (#9336)</li> <li>define <code>$SPARK_HOME</code> in generated module file for Spark 2.4.0     (#9408)</li> <li>add sanity check command for matplotlib 3.x with Python 3 to     check import from mpl_toolkits     (#9413,     #9414)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>explicitly set <code>SYSCONFDIR</code> configure option in TurboVNC     easyconfig     (#9137)</li> <li>patch pigz Makefile so zlib provided by EasyBuild is picked up     (#9138)</li> <li>add libjpeg-turbo as dependency to recent LibTIFF easyconfigs,     to avoid picking up LibTIFF installed in system     (#9146)</li> <li>add freetype as dependency to OpenImageIO, to avoid picking up     freetyype installed in system     (#9147,     #9152)</li> <li>fix definition of <code>fosscuda/2019b</code> to make sure it works with     hierarchical MNS     (#9178)</li> <li>add missing setuptools_scm extension required to build dateutil     extension in Python 3.7.0 easyconfigs     (#9209)</li> <li>add Python as build dependency for recent Bazel versions     (#9223,     #9299,     #9342)</li> <li>fix homepage &amp; description in Bioconductor easyconfigs     (#9225)</li> <li>fix checksum in Stacks 2.41 easyconfig after sneaky re-release     (#9232)</li> <li>apply fixes to ImageJ 1.51k easyconfig     (#9245)</li> <li>consistently use patch for OpenCV 3.4.7     (#9279)</li> <li>use protobuf 3.10.0 as build dep for TensorFlow 2.0.0 w/     fosscuda/2019b + use nodocs variant of git as build dep     (#9298)</li> <li>add Jasper dependency to Qt5 v.5.13.1     (#9313)</li> <li>fix Python 3.7.2 required OpenSSL version for old OS to the one     provided on the same toolchain     (#9324)</li> <li>add missing extensions required by Sphinx &amp; pytest to     easyconfigs for Python 3.7.2 and 3.7.4     (#9329)</li> <li>update TensorFlow v1.14.0 + v2.0.0 CUDA patch to handle compiler     wrappers like ccache     (#9333)</li> <li>patch binutils 2.31.1 and 2.32 to fix compatibility with RHEL8     (#9335)</li> <li>add missing extensions in TensorFlow 2.0.0 easyconfigs (+ update     to tensorboard/tensorflow-estimator 2.0.1)     (#9338)</li> <li>fix logic to determine location of scripts dir + ensure right     compiler flags are used in KAT easyconfigs     (#9360)</li> <li>add missing GCCcore-6.3.0_fix-sanitizer_linux.patch in GCCcore     6.4.0 easyconfig     (#9362)</li> <li>fix linker errors when linking with libhts.a for MetaBAT 2.12.1     (#9379)</li> <li>add egg-info file via patch in VTK v8.2.0, for Pytho 2.7.15,     3.7.2, 3.7.4     (#9386)</li> <li>promote binutils to a runtime dependency for Python in GCCcore     based builds     (#9402)</li> <li>fix archive URL typo for ncdf4     (#9407)</li> <li>fix problems with mpl_toolkits namespace for matplotlib     easyconfigs using Python 2     (#9415,     #9416,     #9417)</li> </ul> </li> <li>other changes:<ul> <li>ignore commented out lines in easyconfig files when checking for     http:// URLs     (#9224)</li> <li>add GitHub Actions workflow to run easybuild-easyconfigs test     suite     (#9231,     #9255)</li> <li>archive old patches for Xmipp 3.1     (#9256)</li> <li>speed up easyconfigs test suite by avoiding re-parsing and     re-ordering of easyconfigs     (#9236)</li> <li>only run easyconfigs test suite with Python 2.7 &amp; 3.6 + Lmod 7     in Travis CI     (#9297)</li> <li>archive ACML easyconfigs     (#9367)</li> <li>update CMake build in Eigen 3.3.7 to use more recent toolchain     (#9398)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb401","title":"EasyBuild v4.0.1 (October 15th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add '<code>parallel</code>' to list of config templates     (#3036)</li> <li>add GitHub Actions workflow to run easybuild-framework test     suite     (#3039)</li> <li>add '<code>retest</code>' as a reason to <code>--close-pr</code>, to close/re-open     PRs to trigger re-test in Travis     (#3040)</li> <li>define <code>$EB_SCRIPT_PATH</code> in '<code>eb</code>' wrapper script, and     consider it before location of '<code>eb</code>' determined via <code>$PATH</code>     in <code>get_paths_for</code> function     (#3046)</li> <li>add support for <code>--remove-ghost-install-dirs</code> configuration     option, and warn about (potential) ghost install dirs by default     when <code>--force</code>/<code>--rebuild</code> is used     (#3050)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update bootstrap script to support installing EasyBuild v4.0     (#3017)</li> <li>fix broken <code>test_download_repo</code> due to archiving of easyconfigs     (#3019,     #3023)</li> <li>avoid that <code>--inject-checksums</code> introduces list of patches for     extensions as a single long line     (#3025,     #3034)</li> <li>enhance regex in <code>fix_shebang</code> method to fix more Python/Perl     shebangs + avoid patching binary files     (#3029)</li> <li>delete test gist that is created by <code>--check-github</code>     (#3031)</li> <li>disable templates when defining easyconfig parameters in     <code>EasyConfig.set_keys()</code>     (#3037)</li> <li>avoid setting GC3Pie's max_in_flight to <code>None</code> if     <code>--job-max-jobs</code> is not specified     (#3038)</li> <li>fix use of <code>obtain_file</code> method for extensions     (#3042)</li> <li>error out if some GC3Pie job failed     (#3044)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>one new generic easyblock: <code>CMakeNinja</code>     (#1829)</li> <li>new software-specific easyblock for Gctf     (#1827),     MotionCor2     (#1819)</li> <li>minor enhancements, including:<ul> <li>update OpenFOAM easyblock for changes in version 1906 w.r.t.     wamke rules     (#1772)</li> <li>add <code>%(cudaarch)s</code> template variable so that it can be used in     sources     (#1797)</li> <li>update Boost easyblock for versions &gt;=1.71.0     (#1814)</li> <li>update RepeatMasker easyblock for version 4.0.9     (#1815)</li> <li>add <code>--verbose</code> flag to '<code>pip install</code>' when running EB in     debug mode     (#1822)</li> <li>update TensorFlow easyblock to support TensorFlow 2.0     (#1823)</li> <li>add support in TensorFlow easyblock to run a custom test script     as smoke test     (#1824)</li> <li>add support for installing QScintilla on top of PyQt5     (#1825)</li> <li>update VEP easyblock to make installation compatible with     <code>Bio::EnsEMBL::XS</code>     (#1828)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>enhance TensorFlow easyblock to support installing TF 1.14.0     with CUDA and MPI support     (#1811,     #1816)</li> <li>avoid <code>UnicodeDecodeError</code> when reading '<code>configure</code>' script     and checking for '<code>Generated by GNU Autoconf</code>' in     <code>ConfigureMake</code>     (#1817,     #1821)</li> <li>don't require '<code>python</code>' command to install libxml2 without     Python bindings     (#1818)</li> <li>make sure \"<code>generic=True</code>\" actually turns on generic build in     GCC easyblock     (#1826)</li> <li>fix compatibility of Trilinos easyblock with Python 3     (#1831)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 58 new software packages:<ul> <li>ADOL-C     (#9098),     ALFA     (#9106),     ASTRID     (#9088),     Annif     (#8536),     bnpy     (#8989),     bpp-core     (#9064),     bpp-phyl     (#9064),     bpp-seq     (#9064),     Clang-Python-bindings     (#9084),     CPB     (#5869),     Centrifuge     (#8714),     Chromaprint     (#9047),     Con3F     (#8755),     DeepSurv     (#8096),     Essentia     (#9054),     FastRFS     (#9088),     GAT     (#5871),     Gaia     (#9049),     Gctf     (#9097),     GenomeMapper     (#5872),     Infomap     (#9091),     kpcalg     (#8740),     libglvnd     (#9111,     #9130),     libsamplerate     (#9046),     libssh     (#8865),     libzip     (#9073),     MetaboAnalystR     (#8773),     Metaxa2     (#8939),     MotionCor2     (#8942),     NFFT     (#9085),     PhyML     (#9103),     PlaScope     (#8714),     PyCharm     (#9100),     pbcopper     (#8928),     pbmm2     (#8929),     phylokit     (#9088),     phylonaut     (#9088),     phyx     (#9090),     pycma     (#8834),     Q6     (#9069),     Qt5Webkit     (#9120),     ROME     (#9050,     #9062),     rioxarray     (#9007),     SVDquest     (#9088),     savvy     (#9124),     sciClone     (#7806),     shapAAR     (#8983),     shrinkwrap     (#9124),     Structure     (#5866),     trimAl     (#9063),     thurstonianIRT     (#9080),     TurboVNC     (#9110,     #9111,     #9128),     Tracer     (#8970),     TagLib     (#9048),     TRIQS     (#8835),     THetA     (#8875),     vcfnp     (#5862),     WebSocket++     (#8842)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Armadillo 9.700.2, arpack-ng 3.7.0, BLASR 5.3.3, Bazel 0.26.1 +     Bazel 0.29.1, Cufflinks 20190706, DL_POLY_Classic 1.10, FFmpeg     4.2.1, Go 1.13.1, Horovod 0.18.1, IOR 3.2.1, Julia 1.2.0, LLVM     9.0.0, Mesa 19.1.7, Molden 6.1, Mono 6.4.0.198, NCO 4.8.1, ,     Net-core 3.0.0, Nim 1.0.0, OpenFOAM 2.2.x, PGI 19.7, PLUMED     2.5.2, PMIx 3.1.4, PostgreSQL 11.3, psycopg2 2.8.3, QGIS 3.4.12,     QScintilla 2.11.2, Qt5 5.13.1, ReFrame 2.19, Rust 1.37.0, Spack     0.12.1, TAMkin 1.2.6, TensorFlow 1.14.0 w/ fosscuda/2019a,     TensorFlow 2.0.0 w/ foss/2019a, UCX 1.6.1, VEP 96.0, xarray     0.13.0</li> </ul> </li> <li>added easyconfigs for <code>fosscuda/2019a</code> toolchain     (#9066)</li> <li>minor enhancements, including:<ul> <li>add EBImage extension to easyconfig for R-bundle-Bioconductor     3.9     (#8982)</li> <li>add check for <code>http://</code> URLs in easyconfig files added/changed     in PRs     (#9012)</li> <li>add bbmle/emdbook/SOAR/rasterVis/tictoc extensions to R 3.6.0     easyconfigs     (#9037)</li> <li>updated PyQt5 5.12.1 easyconfig to also build sip files + minor     readability changes     (#9071)</li> <li>enabled <code>SQLITE_ENABLE_COLUMN_METADATA</code>, which is needed for     GDAL (and QGIS)     (#9118)</li> <li>also install include/GL/internal/ for recent Mesa installations     (#9129)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add ncurses as dependency to lftp     (#8646)</li> <li>add patch for gettext 0.19.8* to avoid picking up global git     config that could break the installation     (#8957)</li> <li>fix source URLs in GlimmerHMM easyconfigs     (#8980)</li> <li>add patch for PyTorch 1.2.0 to use version of torchvision that     is compatible with PyTorch 1.2.0     (#8986)</li> <li>clarify the comment regarding the optarch setting in ITK-5.0.1     (#8991)</li> <li>fix homepage &amp; description in easyconfig file for YAPS     (#8993)</li> <li>add patch for PyTorch 1.2.0 to fix failing softmax test on Intel     Sandy Bridge     (#9010)</li> <li>fix permissions for TRF     (#9034)</li> <li>ICU needs Python 2.7+ to build, so add that as builddependency     (#9053)</li> <li>fix urls for Anaconda and Miniconda     (#9087)</li> <li>use a cuDNN version that has support for the CUDA version in     <code>fosscuda/2019a</code> (CUDA 10.1) in PyTorch, TensorFlow and Theano     easyconfigs     (#9112)</li> </ul> </li> <li>other changes:<ul> <li>make sources in CUDA 10.1.105 use <code>%(cudaarch)s</code> template value     (to use different source on POWER systems)     (#8136)</li> <li>update <code>Java/1.8</code> wrapper to <code>Java/1.8.0_221</code>     (#9038)</li> <li>allow divergent Java dep version as long as it's indicated by     versionsuffix     (#9041)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb400","title":"EasyBuild v4.0.0 (September 20th 2019)","text":"<p>feature release (incl. backwards-incompatible changes)</p> <p>framework</p> <ul> <li>fixed compatibility with Python 3.5+     (#2708,     #2713,     #2714,     #2719,     #2721,     #2723,     #2729,     #2743,     #2744,     #2751,     #2756,     #2759,     #2761,     #2762,     #2765,     #2766,     #2767,     #2768,     #2774,     #2775,     #2778,     #2780,     #2785,     #2787,     #2789,     #2791,     #2792,     #2794,     #2800,     #2801,     #2805,     #2806,     #2895,     #2932,     #2982,     #2992,     #3007,     #3011)<ul> <li>supported Python versions: 2.6, 2.7, 3.5, 3.6, 3.7</li> <li>some functionality from the Python standard library should be     imported from the new <code>easybuild.tools.py2vs3</code> package</li> <li>see Compatibility with Python 2 and Python 3 &amp;     Overview of relocated functions, classes and constants in EasyBuild v4.0</li> </ul> </li> <li>ingested relevant code from <code>vsc-base</code> &amp; <code>vsc-install</code>     (#2708,     #2713,     #2714,     #2763,     #2790,     #2993)<ul> <li><code>vsc-base</code> &amp; <code>vsc-install</code> are no longer required as     dependencies</li> <li>the functionality that was provided by these packages is now     (mostly) available from the <code>easybuild.base</code> package</li> <li>any import statements from the '<code>vsc</code>' namespace will result     in an error</li> <li>see also Ingested functionality from <code>vsc-base</code> and <code>vsc-install</code> and     Overview of relocated functions, classes and constants in EasyBuild v4.0</li> </ul> </li> <li><code>setuptools</code> is longer required (neither for installing or using     EasyBuild)     (#2836,     #2837,     #2984,     #2986,     #2988)<ul> <li>see also No more required Python packages</li> <li>this required moving some classes and constants, see     Overview of relocated functions, classes and constants in EasyBuild v4.0</li> </ul> </li> <li>the '<code>dummy</code>' toolchain is deprecated and replaced by the     '<code>system</code>' toolchain     (#2877,     #3001)<ul> <li>if '<code>dummy</code>' is still used as a toolchain in easyconfig files,     a warning will be printed</li> <li>use \"<code>toolchain = SYSTEM</code>\" instead</li> <li>for more information, see System toolchain</li> </ul> </li> <li>a warning is printed when local variables in easyconfig file     don't follow the recommended naming scheme     (#2938,     #2968)<ul> <li>see also Local variables in easyconfig files</li> </ul> </li> <li>names of software installation directories are independent of     module naming scheme by enabling <code>--fixed-installdir-naming-scheme</code> by default     (#2999)<ul> <li>see     <code>--fixed-installdir-naming-scheme</code> enabled by default for more information</li> </ul> </li> <li>various other small enhancements, including:<ul> <li>use requests instead of urllib2 for 403 errors     (#2695)</li> <li>use pip requirements file in Travis     (#2874)</li> <li>add support for <code>--fix-deprecated-easyconfigs</code>     (#2881,     2898,     #2938)</li> <li>add <code>-L$EBROOTIMKL/lib/intel64</code> to <code>$LDFLAGS</code> for MKL     (#2930)</li> <li>handle dict-type checksums in check_checksums_for     (#2974)</li> <li>allow that <code>icc</code> &amp; <code>ifort</code> are not actual dependencies in     <code>iccifort</code> toolchain module     (#2995)</li> <li>define mapping for <code>iccifort</code>-&gt;<code>intel</code> for <code>iccifort</code>     compiler-only toolchain for HMNS     (#2996)</li> <li>also consider concatenation of compiler module names to     determine details of toolchain compiler component     (#2997)</li> <li>update metadata for Cray-provided external modules     (#3013)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update the PyPI trove classifiers in setup.py     (#2875)</li> <li>reverse lists for <code>$LDFLAGS</code> and <code>$CPPFLAGS</code>     (#2931)</li> <li>enhance/fix to_template_str function to do a better job at using     template values in dumped easyconfigs     (#2948)</li> <li>also take into account <code>--filter-deps</code> when finalizing parsed     dependencies to fix problem with dependency filters using     version ranges     (#2983)</li> <li>fix broken <code>--from-pr</code> tests due to archiving of easyconfigs     (#2985)</li> <li>fixes required to avoid breaking Cray support     (#3008)</li> <li>fixes for <code>--read-only-installdir</code>: avoid crash with <code>ModuleRC</code>     easyblock + also make log file in installdir read-only     (#3012)</li> </ul> </li> <li>other changes:<ul> <li>add check to ensure that <code>--robot</code> argument specifies an     existing directory     (#2086)</li> <li>remove old scripts that are no longer useful (+ minor fixes to     others)     (#2897)</li> <li>use '<code>command -v</code>' to avoid requiring '<code>which</code>' in '<code>eb</code>'     command     (#2979)</li> <li>add <code>modluafooter</code> &amp; <code>modtclfooter</code> at the end of the generated     module file     (#3003)</li> <li>print warning when '<code>eb</code>' command is not found in <code>$PATH</code> and     for empty robot search path     (#3006)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>fixes due to backwards-incompatible changes in easybuild-framework     v4.0.0<ul> <li>use <code>is_system_toolchain()</code> rather than checking toolchain name     against DUMMY_TOOLCHAIN_NAME constant     (#1690,     #1728)</li> </ul> </li> <li>fix compatibility of various easyblocks with Python 3     (#1640,     #1644,     #1648,     #1721,     #1794,     #1808,     #1795,     #1796,     #1807,     #1809)</li> <li>new software-specific easyblocks for <code>OpenMPI</code>     (#1789,     #1801),     <code>iccifort</code>     (#1799)     and <code>numexpr</code>     (#1803,     #1804)</li> <li>various other enhancements, including:<ul> <li>removed checks for Boussinesq and sonic solvers for OpenFOAM 7,     since those have been deprecated     (#1733)</li> <li>update Paraver easyblock to support recent versions     (#1790)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update the PyPI trove classifiers     (#1723)</li> <li>make the plugins build use the correct Tcl library version in     VMD easyblock     (#1786)</li> <li>use <code>*_MT libs</code> for BLAS/LAPACK only if <code>openmp</code> is enabled in     Trilinos easyblock     (#1791)</li> <li>filter out empty entries in <code>$CPATH</code> or <code>$C_INCLUDE_PATH</code> when     building Perl, since that breaks the build     (#1800)</li> <li>set <code>$XDG_CACHE_HOME</code> in TensorFlow easyblock to avoid that     <code>pip</code> (ab)uses <code>$HOME/.cache</code>     (#1802)</li> <li>don't load modules for dependencies in     <code>CrayToolchain.prepare_step</code>     (#1805)</li> </ul> </li> <li>other changes:<ul> <li>drop requirement for setuptools as runtime dependency     (#1689)</li> <li>enable '<code>check_ldshared</code>' in generic PythonPackage easyblock     by default for recent Python versions     (#1788)</li> <li>stop trying to use <code>setuptools.setup</code> in <code>setup.py</code>, always use     <code>distutils.core.setup</code> instead     (#1793)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>fixes due to changes in easybuild-framework v4.0.0<ul> <li>use <code>SYSTEM</code> toolchain rather than deprecated <code>dummy</code> toolchain     (#8369,     #8711,     #8822)</li> <li>fix names of local variables     (#8682-#8688,     #8690,     #8695-#8702,     #8709,     #8710,     #8715,     #8717,     #8718,     #8720-#8732,     #8822)</li> <li>enable <code>--local-var-naming-check=error</code> for easyconfigs tests     (#8784)</li> <li>stick to '<code>dummy</code>' toolchain for now in easyconfig for latest     EasyBuild 3.x     (#8829)</li> </ul> </li> <li>fix compatibility with Python 3: also run easyconfigs tests with     Python 3.5, 3.6 and 3.7     (#7778,     #7836,     #8293)</li> <li>added easyconfigs for new common toolchains: <code>foss/2019b</code>     (#8567),     <code>intel/2019b</code>     (#8681)<ul> <li><code>iccifort</code> is now installed as a single entity (no more separate     <code>icc</code>/<code>ifort</code> installations from <code>intel/2019b</code> onwards) (see     also     #8879)</li> <li><code>versionsuffix</code> has been stripped down for toolchain components     (GCC/binutils/OpenBLAS versions are no longer included)</li> <li>see also     https://easybuild.readthedocs.io/en/latest/Common-toolchains.html</li> </ul> </li> <li>added example easyconfig files for 28 new software packages:<ul> <li>AGFusion     (#8840),     Bonmin     (#8855),     causalml     (#8871),     ClonalFrameML     (#6082),     Control-FREEC     (#8794),     corner     (#8886),     CVXPY     (#8662),     cytosim     (#8368),     dill     (#8885),     Dsuite     (#8713),     GDCHART     (#8679),     gifsicle     (#8664),     guenomu     (#8677),     JsonCpp     (#8841),     libxml++     (#8896),     LOHHLA     (#7227),     Longshot     (#8830),     MDBM     (#8850),     nglview     (#8860),     ownCloud     (#6804),     ptemcee     (#8884),     pubtcrs     (#7500),     pyiron     (#8860),     qpth     (#8665),     QtKeychain     (#6804),     rgdal     (#8826),     smallgenomeutilities     (#8507),     umis     (#8812)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Blosc 1.17.0, bokeh 1.3.4, cURL 7.66.0, csvkit 1.0.4, dask     2.3.0, Extrae 3.7.1, FSL 6.0.1, GLibmm 2.49.7, git 2.23.0,     IPython 7.7.0, numexpr 2.7.0, OSU-Micro-Benchmarks 5.6.2,     OpenBLAS 0.3.7, OpenSSL 1.1.1d, ParaView 5.5.2, Paraver 4.8.1,     Perl 5.30.0, PnetCDF 1.10.0, Porechop 0.2.4, PyTables 3.5.2,     PyTorch 1.2.0, Python 2.7.16 + 3.7.4, parallel 20190622, phonopy     2.2.0, QIIME2 2019.7, Qiskit 0.12.0, REMORA 1.8.3, scikit-image     0.15.0, spglib-python 1.14.1.post0, torchvision 0.3.0, X11     20190717</li> </ul> </li> <li>various additional minor enhancements, including:<ul> <li>add several extensions to R 3.6.0 easyconfigs     (#8843,     #8881)</li> <li>add pRoloc to R-bundle-Bioconductor v3.9     (#8882)</li> <li>clean up OpenMPI 3.1.* and 4.* easyconfigs to use custom     OpenMPI easyblock     (#8889,     #8890)</li> <li>update numexpr easyconfigs to use custom easyblock for numexpr     (#8901)</li> <li>switch to <code>PythonBundle</code> &amp; enable use_pip in old dask easyconfig     files     (#8922)</li> <li>update <code>CrayCCE</code>, <code>CrayGNU</code>, <code>CrayIntel</code> and <code>CrayPGI</code>     toolchains to 19.06     (#8944)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make TensorFlow 1.7.0 work for AMD CPUs     (#6256)</li> <li>make sure that right Python wrapper is used in VTK8     (#7296)</li> <li>update the PyPI trove classifiers     (#8298)</li> <li>add missing checksum for matplotlib v3.0.3     (#8643)</li> <li>add patch to <code>plugins/Make-arch</code> to use the correct Tcl library     version in VMD     (#8820)</li> <li>fix issue where '<code>print_qiime_config.py -t</code>' sanity check     command fails for QIIME 1.9.1 because of missing subdir in     <code>$PYTHONPATH</code>     (#8838)</li> <li>update homepage info in likwid     (#8846)</li> <li>disable threading in <code>preprocessCore</code> extension included with     Bioconductor 3.9 to work around conflict with OpenBLAS's     threading     (#8847)</li> <li>add <code>-lrt</code> patch to PyTorch 1.1.0 easyconfig     (#8852)</li> <li>fix incorrect escaping in SIP configure options in PyQt5     easyconfigs     (#8856)</li> <li>add missing Autotools build dep for fastq-tools     (#8858)</li> <li>add missing deps for zlib, bzip2, and XZ for angsd     (#8867)</li> <li>apply patch to R package uroot in R 3.6.0     (#8872)</li> <li>consider archive source URL for all extensions in R-tesseract     easyconfig     (#8897)</li> <li>add pkg-config build dep for tesseract v4.0.0     (#8898)</li> <li>fix <code>source_urls</code> in byacc easyconfig files     (#8899,     #8908)</li> <li>add missing cairo dependency to PRINSEQ easyconfig file     (#8902)</li> <li>configure OpenMPI 1.10.x with <code>--without-ucx</code> to avoid problems     when <code>ucx-devel</code> is installed in the OS     (#8903)</li> <li>add GDAL 3.0.0 for Python 2.7.15 and fix the Python 3.7.2     version     (#8912)</li> <li>fix homepage &amp; description in scikit-image easyconfigs     (#8916)</li> <li>add faulthandler patches to Python 3.7.0 easyconfigs     (#8832)</li> </ul> </li> <li>other changes:<ul> <li>archive ancient CUDA 5.0.35 easyconfigs with creative way of     determining sources     (#7796)</li> <li>remove ancient easyconfigs from archive     (#8542)</li> <li>archive easyconfigs using deprecated toolchains     (#8557,     #8558,     #8585)</li> <li>archive ancient versions of GC3Pie/GCC/OpenMPI/ORCA     (#8586)     &amp; CPLEX     (#8765)</li> <li>rename SALMON to SALMON-TDDFT to fix name clash with Salmon     (#8613)</li> <li>bump AnnotationDb version in bundle for Bioconductor 3.9     (#8854)</li> <li>stop trying to use <code>setuptools.setup</code> in <code>setup.py</code>, always use     <code>distutils.core.setup</code> instead     (#8866,     #8892,     #8894)</li> <li>archive easyconfigs using ancient <code>Cray*</code> toolchains     (#8945)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb394","title":"EasyBuild v3.9.4 (August 23rd 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for specifying checksum via dict providing a     filename-to-checksum mapping     (#2946)</li> <li>enhance 'completed' message with how much time was needed for     the installation     (#2956)</li> <li>add support for specifying tuple of alternative checksums     (#2958)</li> <li>support using '<code>system</code>' as alias for '<code>dummy</code>' toolchain +     <code>SYSTEM</code> constant     (#2960)</li> <li>ensure '<code>docurls</code>' easyconfig parameter value is a list of     string values, not a single string value     (#2963)</li> <li>automatically enable <code>--ignore-osdeps</code> when using     <code>--check-contrib</code> or <code>--check-style</code>     (#2965)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>escape '<code>+</code>' in search queries + handle invalid search queries     better     (#2967)</li> <li>also consider extension patches when determining for which     easyconfig a given patch file is intended in     <code>--new-pr</code>/<code>--update-pr</code>     (#2969)</li> <li>unset <code>$CDPATH</code> early on if it is defined     (#2970)</li> <li>create specified temporary log directory if it doesn't exist     yet in <code>init_logging</code>     (#2972)</li> <li>don't indicate first multi_deps version as default in module     help text when <code>multi_deps_load_default=False</code>     (#2973)</li> </ul> </li> <li>other changes:<ul> <li>deprecate toolchains older than <code>gompi/2016a</code> and <code>foss/2016a</code>     (#2951)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for MSM     (#1770,     #1775,     #1776)</li> <li>minor enhancements, including:<ul> <li>allow specifying the license file directly in MATLAB easyblock     (#1712)</li> <li>enhance CPLEX easyblock to also build Python bindings     (#1738)</li> <li>workaround for XCrySDen for Tcl 8.6     (#1749)</li> <li>update WIEN2k easyblock to support version 19.1     (#1758)</li> <li>resolve custom <code>%(cudaarch)s</code> template value for CUDA sources     (#1766)</li> <li>enhance sanity check for Blender to make sure that Cycles render     engine is available     (#1779)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>only check for qtwebengine in custom easyblock for Qt(5) if     glibc is sufficiently recent     (#1771)</li> <li>correctly define <code>comp.src</code> in Bundle easyblock, to fix     compatibility with easyblocks that leverage <code>self.src</code>     (#1777)</li> <li>fix <code>Bundle.check_checksums</code> to checksums for extensions are     also checked     (#1778)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 36 new software packages:<ul> <li>ArrayFire     (#8461),     BRAKER     (#8437),     bwidget     (#8477),     Catch2     (#8703),     core-counter     (#8749),     CubeGUI     (#6328),     CubeLib     (#6328),     CubeWriter     (#6328),     dagitty     (#8606),     enaBrowserTool     (#8795),     GEMMA     (#8270),     GeneMark-ET     (#8437),     GenomeThreader     (#8437),     ieeg-cli     (#8793,     #8811),     Judy     (#8543),     Julia     (#8578),     libaio     (#8543),     libtirpc     (#8792),     magick     (#8545),     MSM     (#8556),     MSPC     (#8531),     mygene     (#8809),     OpenMolcas     (#7699),     PhiPack     (#8750),     plc     (#8796),     plotly.py     (#8756),     pymemcache     (#8663),     PySCF     (#8736),     qcint     (#8736),     Qiskit     (#7592),     QuaZIP     (#8672),     re2c     (#8543),     SeqAn3     (#8651),     snippy     (#8635),     spaln     (#8437),     V8     (#8676)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ASE 3.18.0, BEDTools 2.28.0, Bowtie 1.2.3, bzip2 1.0.8, CPLEX     12.9, CUDA 10.1 update 2, cyvcf2 0.11.5, EIGENSOFT 7.2.1, GC3Pie     2.5.2, GCC(core) 9.2.0, GPAW 19.8.1, GlobalArrays 5.7, IMB     2019.3, imageio 2.5.0, jemalloc 5.2.0, nodejs 10.15.3, PyTorch     1.1.0, pybedtools 0.8.0, Quandl 3.4.8, R 3.6.0 w/ intel/2019a,     R-bundle-Bioconductor 3.9, Salmon 0.14.1, Scalasca 2.5, Score-P     6.0, Stacks 2.41, TensorFlow 1.14.0, ToFu 1.4.0, WIEN2k 19.1,     Wannier90 3.0.0, XCrySDen 1.5.60</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add patch and dependencies to easyconfig for Qt5 5.12.3 to fix     Xlib support &amp; enhance the installation     (#8544)</li> <li>update nodejs to version 10.15.3 and build libnode and libv8     shared libs     (#8546)</li> <li>add extensions to R 3.6.0 easyconfig: <code>MIIVsem</code>     (#8565),     <code>medflex</code>     (#8680),     <code>Rserve</code>/<code>spls</code>     (#8758),     <code>Boruta</code>/<code>CovSel</code>/<code>ctmle</code>/<code>BayesPen</code>     (#8805)</li> <li>include PyQtWebEngine bindings in easyconfig for PyQt5 5.12.1     using Python 3.7.2     (#8572)</li> <li>switch GLX backend to Gallium in Mesa-19.0.1     (#8594)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix typo in description in GroopM easyconfig file     (#8346)</li> <li>add missing bugfix patch to easyconfig for OpenMPI 3.1.4     (#8566)</li> <li>downgrade AtomPAW to last supported version in ABINIT 8.10.3     (#8571)</li> <li>switch easyconfig for glew 2.1.0 to <code>ConfigureMake</code> easyblock     (#8595)</li> <li>fix checksum for source tarball in <code>foss/2018b</code> easyconfig of     NAMD v2.13     (#8602)</li> <li>update URL for bzip2 easyconfigs     (#8614)</li> <li>add patch for M4 1.4.17 to fix installation on top of glibc 2.28     (#8666)</li> <li>add patch for Bison 3.0.4 to fix installation on top of glibc     2.28     (#8675)</li> <li>avoid needless requirement for matplotlib &lt; 3.0.0 in MultiQC     easyconfigs     (#8691)</li> <li>fix checksum in OpenMPI 1.8.8 easyconfigs     (#8692)</li> <li>add alternative checksums for <code>nlme</code>/<code>mgcv</code>/<code>foreign</code>/<code>boot</code>     extensions in R 3.5.1 and 3.6.0 easyconfigs     (#8564,     #8762)</li> <li>add missing core-counter dependency for worker 1.6.8     (#8749)</li> <li>add missing pkg-config build dependency in various easyconfigs     for     (#8763,     #8775,     #8777,     #8776,     #8764,     #8787,     #8816)</li> <li>add patch to Python 3.7.2 easyconfig to fix faulthandler     segfault     (#8781)</li> <li>set <code>$CPLUS_INCLUDE_PATH</code> in easyconfigs for older matplotlib     versions     (#8785)</li> <li>patch out removed glibc 2.28 header from GCC libsanitizer     (#8789)</li> <li>include <code>sysmacros.h</code> directly to work around removal from glibc     header in numactl easyconfig     (#8790)</li> <li>adapt gzip's bundled gnulib for glibc 2.28     (#8791)</li> <li>add libtirpc and depend on it in easyconfig for libdap 3.20.3     (#8792)</li> <li>add missing YAML extension to Perl 5.28.0 easyconfig (required     by BioPerl scripts)     (#8806)</li> </ul> </li> <li>other changes:<ul> <li>remove broken easyconfigs for ciftify due to non-trivial missing     dependencies     (#8560)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb393","title":"EasyBuild v3.9.3 (July 8th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add a URL whatis line to generated module files     (#2933)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>stick to Ubuntu Trusty when testing with Python 2.6 in Travis     (#2928)</li> <li>honor <code>--tmp-logdir</code> when determining location of temporary log     file     (#2937)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>also install docs and demos in Rosetta easyblock     (#1745)</li> <li>update HEALPix easyblock to work with latest version of     HEALPix' <code>configure.sh</code>     (#1752)</li> <li>make HPCG log pattern more generic, it changed in 3.1     (#1753)</li> <li>allow bootstrapping GCC with profile-guided optimizations     (#1756)</li> <li>only require vsc-base for EasyBuild 2.x and 3.x in EasyBuildMeta     easyblock     (#1757)</li> <li>extend question patterns with '<code>https</code>' URL entry in Modeller     easyblock for recent versions     (#1762)</li> <li><code>modextrapaths</code> implemented on easyblock level,     <code>sanity_check_step</code>, <code>gcc_target</code> added in HEALPix easyblock     (#1763)</li> <li>update OpenBLAS easyblock to be aware of POWER9 support in     OpenBLAS 0.3.6     (#1765)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>stick to Ubuntu Trusty when testing with Python 2.6 in Travis     (#1751)</li> <li>fix scripts installation path in SNPhylo easyblock     (#1759)</li> <li>be more patient when running interactive <code>Allwmake.firstInstall</code>     command for recent OpenFOAM-Extend versions     (#1761)</li> <li>also add <code>--without-go</code> configure option for SWIG as we     \"disable everything by default\"     (#1754)</li> <li>don't assume cmake arguments when configure_cmd is set in     CMakeMake easyblock     (#1750)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 25 new software packages:<ul> <li>Arb     (#8137),     AtomPAW     (#8506),     ciftify     (#8457),     cysignals     (#8459),     deal.II     (#8440),     FastQTL     (#8449),     FLINT     (#8137),     gdbgui     (#8488),     gearshifft     (#8482),     jbigkit     (#8442),     lavaan     (#8539),     libRmath     (#8449),     OR-Tools     (#8364,     #8523),     p4est     (#8440),     ppl     (#8459),     pplpy     (#8459),     PRISMS-PF     (#8440),     PyAPS3     (#8398),     pyEGA3     (#8418),     ReFrame     (#8481),     S4     (#8487),     SALMON     (#8478),     TM-align     (#8510),     UnZip     (#8474),     XTandem     (#8517)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 8.10.3, CFITSIO 3.47, GDB 8.3, GROMACS 2019.3, HEALPix     3.50, HPCG 3.1, Nilearn 0.5.2, OpenBLAS 0.3.6, Xerces-C++ 3.2.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>update easyconfig for CFITSIO 3.45 with https and sanity check     (#8472)</li> <li>add AtomPAW and Wannier90 support to ABINIT 8.10.2 easyconfig     (#8506)</li> <li>add '<code>resample</code>' extension to R 3.5.1 + 3.6.0 easyconfigs     (#8538)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix source URLs for Mesa 17.{2,3} with fosscuda toolchain     (#8446)</li> <li>add in Boost dependency to canu-1.8 easyconfigs using <code>foss</code>     toolchain     (#8470)</li> <li>stick to Ubuntu Trusty when testing with Python 2.6 in Travis     (#8483)</li> <li>fix incorrect order of extensions for Python-2.7.14 easyconfigs     (<code>pycparser</code> and <code>cffi</code> must come before <code>cryptography</code>)     (#8495)</li> <li>suppress installation of <code>libbfd</code> and <code>libopcode</code> for GDB     (#8496)</li> <li>fix KronaTools easyconfigs to make sure symlinks in bin are not     broken     (#8508)</li> <li>make additional configopts in PETSc easyconfigs work after     uncommenting     (#8522)</li> <li>add <code>pkg-config</code> build dep to easyconfig for pocl 1.2     (#8528)</li> <li>download correct source tarball for Net-core 2.1.8     (#8530)</li> <li>fix '<code>Permission denied</code>' error when running '<code>cp -a</code>' for     ANTs 2.3.1 installation by first removing the <code>.git</code>     subdirectories causing them     (#8535)</li> <li>fix checksum for boot 1.3-22 extension in R 3.6.0 easyconfig     (#8537)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb392","title":"EasyBuild v3.9.2 (June 9th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>enhance (experimental) support for generating Singularity     container recipes/images     (#2884,     #2900,     #2902,     #2903,     #2907,     #2909,     #2910,     #2913,     #2915)<ul> <li>add support for specifying container configuration via     <code>--container-config</code> (<code>--container-base</code> option has been     removed)</li> <li>add support for providing custom template for container     recipe via <code>--container-template-recipe</code></li> <li>add support for '<code>sif</code>' Singularity 3.x container image     format</li> <li>add support for specifying non-image based Singularity     bootstrap agents</li> <li>install default set of OS packages in container recipes     starting from scratch</li> <li>configure Lmod and update Lmod spider cache in generated     Singularity container recipes</li> <li>configure EasyBuild via environment variables (to allow     overriding configuration settings via options to '<code>eb</code>'     command)</li> <li>also consider <code>/tmp/easybuild/sources</code> in source path (to     allow seeding in sources in container build environment)</li> <li>updated documentation is available at     https://easybuild.readthedocs.io/en/latest/Containers.html</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>make sure that easyconfig file for EasyBuild version being     bootstrapped is found in robot search path     (#2899)</li> <li>remove interpreter options when fixing script shebang     (#2905,     #2906)</li> <li>fix crash on iterated installation when using Cray toolchains     (#2914)</li> <li>disable checking of read/exec permissions when checking for     availability of '<code>sudo</code>' command     (#2918)</li> </ul> </li> <li>other changes:<ul> <li>stick to vsc-base &lt; 2.9.0 in bootstrap script to avoid     requiring '<code>future</code>' dependency     (#2892)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for ELPA     (#1621)</li> <li>minor enhancements, including:<ul> <li>allow Boost to build both Python 2 and Python 3 libraries     (#1718)</li> <li>update CPLEX sanity check: convert tool was removed in CPLEX     12.8     (#1737)</li> <li>don't try to patch <code>CROSSTOOL</code> script for recent Bazel versions     (since it's no longer there)     (#1741)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix version check on using '<code>-log</code>' option to '<code>Allwmake</code>'     in OpenFOAM easyblock     (#1739)</li> <li>fix GROMACS easyblock for list-type <code>configopts</code>     (#1740)</li> <li>fix configure step for GROMACS version &lt; 4.6     (#1742)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 17 new software packages:<ul> <li>adjustText     (#8354),     cowsay     (#8380),     fxtract     (#8426),     google-java-format     (#8373),     libtar     (#8379),     mkl-service     (#8390),     msprime     (#8371),     pygrib     (#8395),     pyhdf     (#8394),     pyproj     (#8395),     PyStan     (#8410),     Racon     (#8358),     rapidtide     (#8256),     SingleM     (#8428),     smafa     (#8420),     SVDetect     (#8399),     Unicycler     (#8376)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>BLAST+ 2.9.0, Boost.Python 1.70.0, DIAMOND 0.9.24, EMAN2 2.3,     ecCodes 2.12.5, GDAL 3.0.0, ImageMagick 7.0.8-46, Libint 2.5.0,     matplotlib 2.2.4, NLopt 2.6.1, OrfM 0.7.1, PGI 19.4, PostgreSQL     11.3, R 3.6.0, R-bundle-Bioconductor 3.8, Rust 1.35.0, STAR     2.7.1a</li> </ul> </li> <li>minor enhancements, including:<ul> <li>use CMake rather than configure script for libxc 4.3.4     (#8361,     #8453)</li> <li>add '<code>cobs</code>' extension to R 3.5.1 easyconfigs     (#8389)</li> <li>add sanity check command to PSI4 1.2.1 easyconfigs to ensure     that '<code>import psi4</code>' works     (#8393)</li> <li>include the provided backports patch in QuantumESPRESSO-6.4.1     (#8405)</li> <li>add <code>Logger::Simple</code>, <code>Scalar::Util::Numeric</code>, <code>YAML</code>,     <code>Object::InsideOut</code> extensions to Perl 5.28.1 easyconfig     (#8432)</li> <li>update Java 1.8 to 1.8.0_212     (#8443)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing build dependency on gettext to ATK/2.28.1 for     fosscuda/2018b     (#8402)</li> <li>add patch to fix OpenBLAS v0.3.1 matrices multiplication issue     (#8396)</li> <li>make Eigen a build dependency for nanopolish     (#8448)</li> </ul> </li> <li>other changes:<ul> <li>clean up ELPA 2018.11.001 easyconfig to use custom easyblock for     ELPA     (#8360)</li> <li>remove unused checksum for <code>ballgown</code> extension in Bioconductor     3.7 easyconfigs     (#8363)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb391","title":"EasyBuild v3.9.1 (May 20th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add function to determine whether specified easyblock is generic     or not     (#2838)</li> <li>add support to <code>apply_regex_substitutions</code> function to skip     creation of backup     (#2844)</li> <li>add support for <code>%(pymajver)s</code> (&amp; co)     (#2850)</li> <li>add support for '<code>fix_python_shebang_for</code>' and     '<code>fix_perl_shebang_for</code>' easyconfig parameters     (#2878)</li> <li>add <code>multi_deps</code> information to generated module, help and     whatis sections     (#2882)</li> <li>add support for '<code>eb --missing</code>' ('<code>eb -M</code>')     (#2883)<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Using_the_EasyBuild_command_line.html#getting-an-overview-of-missing-installations-missing-m</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>only call '<code>scontrol release</code>' when there's at least one job     submitted     (#2834)</li> <li>fix small bug in <code>find_eb_script</code> + various minor issues with     tests (related to environment in which tests are run)     (#2835)</li> <li>list build dependencies before runtime dependencies, so     dependencies listed via <code>multi_deps</code> are loaded first in     toolchain environment     (#2839)</li> <li>allow setting parallel to <code>0</code> or <code>False</code> to disable adding the     <code>-j</code> argument     (#2842)</li> <li>be more careful when using single quotes for Tcl syntax     (#2847)</li> <li>append to existing <code>.modulerc</code> file rather than overwriting it     (if <code>--force</code> is used)     (#2848)</li> <li>correctly resolve template values used for extensions     (#2852)</li> <li>update template values after updating iterative easyconfig     parameters     (#2854)</li> <li>add top-level directories of hierarchical module naming scheme     to <code>$MODULEPATH</code> before loading dependencies     (#2857)</li> <li>inject dependencies specified via <code>multi_deps</code> before normal     build dependencies     (#2861)</li> <li>include Python version(s) in PR titles auto-generated by     <code>--new-pr</code>     (#2863,     #2880)</li> <li>update <code>HierarchicalMNS</code> for GCCcore toolchain     (#2870)</li> <li>bump iteration index counter at the correct time     (#2886)</li> <li>don't specify <code>--ntasks-per-node</code> when submitting Slurm jobs     (#2887)</li> <li>fix order of easyconfig parameters in output generated by     '<code>eb --avail-easyconfig-params --output-format rst</code>'     (#2888)</li> </ul> </li> <li>other changes:<ul> <li>lower required version in Slurm job backend to 16.05     (#2833)</li> <li>add Lmod 8 to test suite     (#2849)</li> <li>deprecate useless 'skip_lower' named argument in     template_constant_dict, always define <code>*lower</code> templates     (#2856)</li> <li>fix Python classifiers in <code>setup.py</code>, should be (only) Python     2.6 &amp; 2.7     (#2876)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>one new generic easyblock: <code>CMakeMakeCp</code>     (#1725)</li> <li>new software-specific easyblock for Blender     (#1595),     Lua     (#1396),     OpenBLAS     (#1693,     #1697)<ul> <li>OpenBLAS easyblock also supports installation on POWER systems</li> </ul> </li> <li>minor enhancements, including:<ul> <li>enhance VMD easyblock to also build Surf &amp; Stride + pick up     netCDF for VMD &gt;= 1.9.3     (#1314)</li> <li>update CGAL easyblock to support CGAL 4.12 &amp; newer     (#1679)</li> <li>update QuantumESPRESSO easyblock for v6.4.1     (#1692)</li> <li>enhance Advisor &amp; VTune easyblocks, since no license is required     starting with version 2019 update 3     (#1694,     #1695)</li> <li>handle new multi-deps Python setup with <code>$EBPYTHONPREFIXES</code> for     Tensorflow     (#1702)</li> <li>make CHARMM easyblock pick up on <code>prebuildopts</code> and <code>runtest</code>     (#1707)</li> <li>change default value for <code>'use_pip</code>' to None, so we can     discriminate from '<code>use_pip</code>' being set to False explicitly     (#1709)</li> <li>make PythonPackage aware of <code>(pre)testopts</code>     (#1715)</li> <li>enable GPU offloading in Clang if CUDA is included as a dep     (#1716)</li> <li>add support to Clang easyblock for also building libc++ and RTTI     (#1717)</li> <li>rebuild internal libfabric for impi 2019.x &amp; more recent     (#1730)</li> <li>update Q&amp;A patterns in SAS easyblock for version 9.4 + add     support for custom license file path     (#1731)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>only install mkl-dnn by default with TensorFlow on x86-64     systems     (#1666)</li> <li>make sure <code>ldconfig</code> can be found before using it in CUDA     easyblock     (#1684)</li> <li>use temporary directory for pip cache (rather than     <code>$HOME/.cache/pip</code>) in <code>PythonPackage</code> easyblock     (#1687)</li> <li>allow oversubscription when testing FFTW on top of OpenMPI &gt;=     3.0     (#1688)</li> <li>make sure <code>$HOME/.cache/pip</code> isn't used while installing     Tkinter     (#1691)</li> <li>set default <code>exts_filter</code> in <code>PythonBundle</code>, so already     installed extensions in a bundle can be skipped     (#1701)</li> <li>instruct Bazel to not use <code>$HOME/.cache/bazel</code> in TensorFlow     easyblock     (#1704)</li> <li>also set <code>$XDG_CACHE_HOME</code> during installation of Python, to     ensure that '<code>pip</code>' that comes along with it doesn't touch     <code>$HOME/.cache/pip</code>     (#1705)</li> <li>use <code>-fp-model precise</code> if FMA instructions are missing in     GROMACS easyblock     (#1706)</li> <li>make sure Perl install dir follows a standard format     (#1708)</li> <li>attach <code>source_urls</code> directly to sources for components in     generic <code>Bundle</code> easyblock     (#1711)</li> <li>avoid that <code>--no-build-isolation</code> option is specified multiple     times in <code>PythonPackage</code> easyblock     (#1713)</li> <li>fix prefix in impi compiler wrappers     (#1727)</li> <li>only embed zlib in binutils if it is listed a build dependency     (#1732)</li> </ul> </li> <li>other changes:<ul> <li>fix Python classifiers in <code>setup.py</code>, should be (only) Python     2.6 &amp; 2.7     (#1724)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains:<ul> <li><code>fosscuda/2019a</code>     (#8063),     <code>gimkl/2018b</code>     (#8287),     <code>gomkl/2018b</code>     (#8216),     <code>gomkl/2019a</code>     (#8218),     intelcuda/2019a     (#8069)</li> </ul> </li> <li>added example easyconfig files for 52 new software packages:<ul> <li>ADDA     (#8207),     AMD-LibM     (#7164),     AMD-RNG     (#7165),     AMD-SecureRNG     (#7165),     ARGoS     (#8039,     #8104),     ARWEN     (#8213),     Canvas     (#7716),     cdsapi     (#7970),     charmm     (#8202),     emcee     (#7989),     FlexiDot     (#8228,     #8275),     FreeImage     (#8039),     Hello     (#7704),     HLAminer (8094), hypothesis     (#8307),     imgaug     (#8229),     INTEGRATE     (#8193,     #8304),     INTEGRATE-Neo     (#8094),     IRkernel     (#8050,     #8099),     JiTCODE     (#7148,     #8327),     libFLAME     (#7163),     libpsml     (#5859),     LibSoup     (#8116),     libutempter     (#6426),     LS-PrePost     (#8070),     LUSCUS     (#7191,     #8105,     #8285),     memory-profiler     (#8255),     metaWRAP     (#7896),     Net-core     (#7716),     netMHC     (#8094),     Nextflow     (#8195),     nvtop     (#8024),     openpyxl     (#8121),     py-cpuinfo     (#8245),     pyFFTW     (#8198),     PyQtGraph     (#7525,     #8253),     R-tesseract     (#7933),     RBFOpt     (#8178),     rnaQUAST     (#8040),     RStan     (#7996),     scikit-multilearn     (#8142),     simpy     (#8177,     #8250),     SMARTdenovo     (#7630),     socat     (#8305),     SymEngine     (#7148,     #8327),     unixODBC     (#8074),     VAtools     (#7938),     VirtualGL     (#8008),     WebKitGTK+     (#8118,     #8241),     xmlf90     (#5858),     YAPS     (#7976),     zingeR     (#7264)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.70.0, cairo 1.16.0, CGAL 4.14, Clang 8.0, cutadapt 2.1,     dask 1.1.4, ELPA 2018.11.001, FFmpeg 4.1.3, GCC 9.1.0, GEOS     3.7.2, GLib 2.60.1, gmsh 4.2.2, GROMACS 2019.2, GTK+ 3.24.8,     h5py 2.9.0, hwloc 1.11.12, Hypre 2.15.1, Mathematica 12.0.0,     matplotlib 3.0.3, Mesa 19.0.1, NBO 7.0, NCL 6.6.2, NCO 4.7.9,     NiBabel 2.4.0, numba 0.43.1, OpenMPI 3.1.4, OrthoFinder 2.3.3,     PCMSolver 1.2.3, PETSc 3.11.1, PROJ 6.0.0, PyQt5 5.12.1, PyTorch     1.0.1, PyYAML 5.1, Qt5 5.12.3, QuantumESPRESSO 6.4.1, R 3.5.1     (w/ intel/2018b), RNAIndel 1.0.0, Ruby 2.6.3, scikit-learn     0.20.3, SLEPc 3.11.0, sympy 1.4, Tkinter 3.7.2, Vim 8.1.1209,     VTK 8.2.0, wrf-python 1.3.1, wxPython 4.0.4, wxWidgets 3.0.4,     xarray 0.12.1, zstd 1.4.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>enable auto-download of VMD 1.9.3 + add patches for Surf and     Stride     (#7305)</li> <li>add mlegp extension in R 3.5.1 easyconfigs     (#7814)</li> <li>add pkg-config file to bzip2 easyconfigs     (#8200)</li> <li>allow use of '<code>use_pip = False</code>' in easyconfigs if pip     doesn't work     (#8220)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix checksums for nlme extensions in R easyconfigs     (#7814,     #8054)</li> <li>add missing XZ dependency for Pysam &gt; 0.12     (#7971)</li> <li>define <code>$GRACE_HOME</code> in Grace easyconfigs, so that font dir can     be located     (#8048)</li> <li><code>$XDG_DATA_DIRS</code> must be set for GTK+     (#8089)</li> <li>add missing FriBidi dependency for Pango 1.43.0     (#8103)</li> <li>add (back) custom <code>sanity_check_paths</code> in recent Pango     easyconfigs     (#8106)</li> <li>fix missing extensions in cutadapt 1.16 easyconfigs     (#8130)</li> <li>add missing cURL dependency for recent SAMtools versions     (#8131)</li> <li>add singledispatch extension to Python 2.7.15 easyconfig using     <code>GCCcore/8.2.0</code> toolchain     (#8164)</li> <li>add missing X11 dependency for Gdk-Pixbuf 2.38.1     (#8222)</li> <li>make sure <code>hdf5r</code> picks up HDF5 dependency in R 3.5.1     easyconfigs     (#8223)</li> <li>enable zstd compression in GRASS 7.6.0 easyconfig     (#8224)</li> <li>add missing ICU dependency on ICU for Harfbuzz 2.4.0     (#8226)</li> <li>disable AVX512 DGEMM kernels in OpenBLAS 0.3.5     (#8227)</li> <li>fix homepage/description in OrthoFinder easyconfig     (#8234)</li> <li>add <code>Parallel::ForkManager</code> extension to Perl 5.28.x easyconfigs     (#8247)</li> <li>replace LibUUID dependencies with util-linux     (#8258)</li> <li>add jemalloc &amp; pkg-config as build deps for Salmon 0.12.0     (#8264)</li> <li>fix MAJIQ easyconfig by fixing order of extensions + avoid numpy     test hang     (#8272)</li> <li>fix shebang in GLib Python script + clarify runtime dependency     on Python     (#8277)</li> <li>add pkg-config and expat as (build) dependency for DBus     (#8283)</li> <li>define <code>$GI_TYPELIB_PATH</code> in GTK+ and Pango easyconfigs     (#8246,     #8286)</li> <li>add pkg-config build dep to PROJ 6.0.0 easyconfig     (#8309)</li> <li>fix source URLS in recent libcerf easyconfigs     (#8332,     #8243)</li> <li>make zlib a real dependency rather than a build dep in recent     binutils easyconfigs (&gt;= 2.28)     (#8340)</li> <li>add fix-ib-query patch to OpenMPI 2.1.x and 3.0.x easyconfigs     (#8341)</li> <li>set <code>$XDG_CACHE_HOME</code> to $TMPDIR before '<code>pip install</code>' in     Arrow 0.12.0 easyconfigs     (#8347)</li> </ul> </li> <li>other changes:<ul> <li>remove xbitmaps dependency from motif     (#7530)</li> <li>require custom <code>sanity_check_paths</code> in easyconfigs touched in     PRs when generic easyblock is used     (#8101,     #8123)</li> <li>use CMake built with GCCcore toolchain when installing Eigen     3.3.4+     (#8261)</li> <li>fix Python classifiers in <code>setup.py</code>, should be (only) Python     2.6 &amp; 2.7     (#8299)</li> <li>use custom easyblock for OpenBLAS in OpenBLAS 0.3.x easyconfigs     (#8345,     #8339)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb390","title":"EasyBuild v3.9.0 (April 12th 2019)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add <code>(pre)testopts</code> easyconfig parameters     (#2793)</li> <li>add support for <code>multi_deps</code> easyconfig parameter     (#2741,     #2810,     #2811,     #2812,     #2813,     #2825,     #2826,     #2827,     #2828)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix argument name in <code>close_pr</code>     (#2752)</li> <li>fix undefined variable '<code>prefix</code>' in     <code>Compiler._set_compiler_vars</code>     (#2757)</li> <li>fix test account for GitHub-related tests     (#2760)</li> <li>make sure read permissions are always set in <code>permissions_step</code>     (#2770)</li> <li>make test for <code>dep_graph</code> function robust against changing order     of lines in resulting dot file     (#2772)</li> <li>fix problem with <code>import_available_modules</code> when running from     easybuild-framework directory     (#2786)</li> <li>prepend location of test easyblocks to <code>$PYTHONPATH</code> to     <code>test_generate_software_list</code>, rather than append     (#2788)</li> <li>use pid in backup name candidate to reduce risk of two processes     colliding     (#2796)</li> <li>automatically enable <code>--ignore-osdeps</code> when using <code>--preview-pr</code>     (#2799)</li> <li>use temporary checkout of repository as robot path for     <code>--new-pr</code> and <code>--update-pr</code> to determine locations for patch     files     (#2803)</li> <li>avoid relying on order in which keys are processed in     <code>to_dependency</code>     (#2804)</li> <li>fix yeb format to work with PyYAML 5     (#2809)</li> <li>fix typo in error message for use of unknown easyconfig     parameter     (#2817)</li> <li>enhance <code>log_file_format</code> to fix problem when <code>%(name)s</code>     template value is used for log directory     (#2818)</li> <li>iterate over subdirectories in order in <code>find_egg_dir_for</code> of     bootstrap script, to ensure oldest vsc-install is picked     (#2819)</li> <li>replace <code>-Wl,--enable-new-dtags</code> compiler option with     <code>-Wl,--disable-new-dtags</code> in RPATH wrapper script     (#2821)</li> <li>updated <code>COMPILER_F77</code> for PGI &gt;= 19.1     (#2823)</li> <li>added <code>FFTW_STATIC_LIBS_MT</code> to <code>FFTW_MAP_CLASS</code>, otherwise     <code>FFTW_STATIC_LIBS_MT</code> are incorrectly defined     (#2822)</li> <li>sort available version list when selecting/generating easyconfig     (#2732)</li> </ul> </li> <li>other changes:<ul> <li>use <code>assertEqual</code> rather than <code>assertEquals</code> (which is     deprecated)     (#2746)</li> <li>test with Tmod 4.1.4 (packaged in RHEL8) in Travis CI     (#2747)</li> <li>replace deps by hidden deps instead of removing them from the     lists     (#2748)</li> <li>ensure non-zero exit code for all test subsuites (+ fix trivial     style issues)     (#2773)</li> <li>silence printed deprecation warnings for easyconfigs/toolchains     while running (easyconfigs) test suite     (#2781)</li> <li>avoid printing of messages/warnings in framework test suite     (#2782)</li> <li>enable silent mode for <code>--new-pr</code> and <code>--update-pr</code>     (#2802)</li> <li>update Travis config to reflect that PyYAML 5.x is no longer     compatible with Python 2.6     (#2807)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for TensorRT     (#1627)</li> <li>minor enhancements, including:<ul> <li>make sure CMake doesn't pick up on system Boost in CMakeMake     generic easyblock     (#1618)</li> <li>modified <code>ConfigureMake</code> and <code>CMakeMake</code> generic easyblocks to     allow changing <code>configure_cmd</code>, <code>build_cmd</code> and <code>install_cmd</code> to     fit various needs     (#1628,     #1658)</li> <li>update ANSYS easyblock to deal with changed versioning scheme     (#1631)</li> <li>add extra path to builddir for SNPhylo &gt;= 20160204     (#1632)</li> <li>add better support for TensorRT to TensorFlow     (#1634)</li> <li>add support for newer versions of wxPython to wxPython easyblock     (#1635)</li> <li>update OCaml easyblock to support OPAM 2.x     (#1638)</li> <li>update sanity check in TensorFlow easyblock for TensorFlow     1.13.x     (#1642)</li> <li>make <code>ConfigureMake</code>, <code>MesonNinja</code> and <code>SCons</code> generic     easyblocks aware of pretestopts     (#1645)</li> <li>add support for installing Python packages with '<code>pip</code>'     without using <code>--ignore-installed</code>     (#1647)</li> <li>add support to <code>CMakeMake</code> easyblock to specify compilers using     absolute file path     (#1652,     #1655)</li> <li>stop checking for deprecated <code>pgf77</code> in sanity check of PGI     easyblock     (#1653)</li> <li>accommodate version 10.1 in CUDA easyblock     (#1654)</li> <li>install <code>sitecustomize.py</code> with Python to support Python package     installations for multiple Python versions in a single directory     (#1657)</li> <li>enhance SAMtools easyblock to also install <code>libhts.a</code> and     include/htslib (when applicable)     (#1661)</li> <li>tweak <code>PythonPackage</code> &amp; <code>PythonBundle</code> to update     <code>$EBPYTHONPREFIXES</code> rather than <code>$PYTHONPATH</code> for multi-Python     installations + make <code>sanity_check_step</code> aware of multi_deps     (#1664,     #1678)</li> <li>replace <code>-openmp</code> with <code>-fopenmp</code> when building TINKER with     Intel compilers (+ modernize easyblock)     (#1668)</li> <li>make sure Meson is configured with <code>-Dlibdir=lib</code> so it doesn't     install libraries in <code>lib/x86_64-linux-gnu</code> on Debian/Ubuntu     multiarch systems     (#1673)</li> <li>allow for external libfabric via <code>ofi_libfabric</code> parameter in     impi easyblock     (#1676)</li> <li>pass down compiler names and options to Qt5 5.8 &amp; more recent     via corresponding <code>QMAKE_*</code> configuration options     (#1677)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>create symlinks to <code>.modulerc</code> in symlinked module directories     (#1636)</li> <li>add missing import in FFTW easyblock     (#1641)</li> <li>fix finding of Python 3 include subdir + <code>libpython*.so</code> in     OpenBabel easyblock     (#1633)</li> <li>add <code>no_qa</code> pattern for interactive installation command for     ABAQUS     (#1637)</li> <li>make serial, smpar and dm+sm builds of WRF work and pass tests     (#1646)</li> <li>configure CP2K with correct <code>DATA_DIR</code> value rather than relying     on <code>$CP2K_DATA_DIR</code> environment variable     (#1650)</li> <li>CP2K fixes: only call configure_LAPACK/ScaLAPACK when imkl is     not used, prefer using 2^2 MPI processes for tests     (#1651)</li> <li>also take into account custom easyconfig parameters from     <code>CMakeMake</code> in BamTools easyblock     (#1656)</li> <li>make sure Perl scripts are installed in the right location     (#1660)</li> <li>make sure setenv is used for CUDA_PATH etc.     (#1663)</li> <li>cleanup <code>sanity_check_paths</code> in numpy &amp; scipy easyblocks     (#1665,     #1667)</li> <li>always set <code>self.pylibdir</code> in <code>PythonPackage.set_pylibdirs()</code>,     which is important when installing Python packages for multiple     Python versions via <code>multi_deps</code>     (#1671)</li> <li>fix custom definition of <code>load_module</code> method in LAPACK module     (#1675)</li> </ul> </li> <li>other changes:<ul> <li>replace '<code>except OSError, err:</code>' pattern with     '<code>except OSError as err:</code>' (for compatibility with Python 3.x)     (#1639)</li> <li>clean up Java easyblock to use <code>filetools</code> functionality     (#1649)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains: <code>intel/2019.02</code>     (#7598),     <code>intel/2019.03</code>     (#7846)</li> <li>added example easyconfig files for 68 new software packages:<ul> <li>ACT     (#7928),     aiohttp     (#7728),     at-spi2-atk and at-spi2-core     (#7658),     Bader     (#7804),     barrnap     (#7738),     BCEL     (#7937),     biscuit     (#5868),     bitarray     (#7772),     BlobTools     (#7565,     #7583),     bmtagger     (#7890),     bsddb3     (#7642),     CheckM     (#7712),     Cheetah     (#7952),     CONCOCT     (#7891),     cyvcf2     (#8031),     DAS_Tool     (#7741),     ExaBayes     (#7801),     FastANI     (#7992),     fastp     (#7693),     Flask     (#7734),     giflib     (#7663),     Giza     (#7843),     glew     (#7685),     gpustat     (#8025),     GRASS     (#7489),     GTDB-Tk     (#7995),     HPCX     (#7725),     IntelPython     (#7920),     KNIME     (#7554),     KronaTools     (#7721),     KyotoCabinet     (#7955),     Leptonica     (#7932),     libepoxy     (#7655),     libpsl     (#7666),     MAGMA     (#7829),     MATLAB-Engine     (#7758),     MaxBin     (#7767),     MetaBAT     (#7746,     #7931),     MinPath     (#7763),     ncdu     (#7505),     NGSadmix     (#7524),     NIMBLE     (#7564),     PCAngsd     (#7727),     pizzly     (#7724),     Ploticus     (#7545),     pocl     (#7681),     POT     (#8011),     ProjectQ     (#7576),     pullseq     (#7740),     pyBigWig     (#7600),     Pyke3     (#8034),     PyRETIS     (#8041),     RDKit     (#7973),     RNAIndel     (#8009),     scikit-optimize     (#7613),     SciPy-bundle     (#7922),     sep     (#8032),     slidingwindow     (#7909),     SPLASH     (#7843),     SqueezeMeta     (#7771),     SRPRISM     (#7890),     taxator-tk     (#7894),     TensorRT     (#7584),     tesseract     (#7932),     Transrate     (#5108),     VCF-kit     (#7786,     #7882),     VV     (#7297)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>AFNI 19.0.01, Arrow 0.7.1, BLAST+ 2.8.1, CUDA 10.1.105,     GCC(core) 8.3.0, GTK+ 3.22.30, Java (OpenJDK) 11(.0.2), Meson     0.50.0, MultiQC 1.7, Nim 0.19.2, Ninja 1.9.0, netCDF 4.6.2,     netCDF-Fortran 4.4.5, PCRE 8.43, Perl 5.28.1, PGI 19.1, Python     3.7.2, RELION 3.0.4, Ruby 2.6.1, SCons 3.0.4, SQLite 3.27.2,     SuiteSparse 5.4.0, TINKER 8.6.1, TensorFlow 1.13.1, X11 20190311</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add various extensions to R 3.5.1 easyconfigs: <code>asnipe</code>     (#7572),     <code>liquidSVM</code>     (#7597),     <code>oddsratio</code>/<code>mltools</code>/<code>h2o</code>     (#7744),     <code>mlegp</code>     (#7814),     <code>bartMachine</code>/<code>lqa</code>     (#7865),     <code>PresenceAbsence</code>/<code>GUTS</code>/<code>GenSA</code>     (#7905),     <code>parsedate</code>     (#7935),     <code>circular</code>     (#7975)</li> <li>add <code>ujson</code> extension in recent Python easyconfigs     (#7517)</li> <li>run various checks on easyconfigs that are touched in pull     requests and involve Python packages     (#7754)</li> <li>add <code>cpanminus</code> extension to recent Perl easyconfigs     (#7866)</li> <li>also install ANTs scripts (and set <code>$ANTSPATH</code> as required by     those scripts)     (#7940)</li> <li>add missing <code>configopts</code> in GATE 8.1 easyconfig to enable Davis     feature     (#8000)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add patch for Mesa 18.1.1 to detect MIT-SHM     (#7536)</li> <li>add proper description to MINC-2.4.03     (#7551)</li> <li>add libunwind dependency to recent Mesa easyconfig when building     with foss/GCC     (#7629)</li> <li>add/reorder missing/misplaced extensions in Python 2.7.15 and     3.6.6 easyconfigs     (#7696)</li> <li>fix Jellyfish dependency in easyconfig for Kraken 1.0 (Jellyfish     1.x is required)     (#7743)</li> <li>use <code>https://</code> in most recent XZ easyconfigs     (#7782)</li> <li>add patch for OpenMPI 3.1.x to fix ib-query     '<code>Invalid argument</code>' error     (#7789)</li> <li>build OpenBLAS with <code>-fno-tree-vectorize</code> (asm constraint bugs     for &lt;0.3.6) + cleanup &amp; SHA256 checksums     (#7790,     #7793)</li> <li>extra patch for TensorFlow 1.12.0 to remove <code>-B/usr/bin</code> from     <code>linker_bin_path_flag</code> in <code>cuda_configure.bzl</code>     (#7800)</li> <li>fix easyconfig for STAR-Fusion 1.5.0     (#7802)</li> <li>fix checksums for boot/nlme extensions in R easyconfigs     (#7814,     #8054)</li> <li>add patch for OpenMPI 3.x to fix UCX memory leak     (#7535,     #7824)</li> <li>replace <code>ncurses-devel</code> OS dependency in CMake easyconfigs using     <code>dummy</code> toolchain with proper ncurses dependency     (#7834)</li> <li>use <code>PythonBundle</code> for     <code>snakemake-5.2.4-foss-2018b-Python-3.6.6.eb</code> (+ fix moduleclass)     (#7842)</li> <li>use correct <code>buildopts</code> + add missing zlib dependency in     StringTie 1.3.5 easyconfig     (#7845)</li> <li>update GStreamer to not enable dw and fix some missing     dependencies     (#7889)</li> <li>add missing XZ dependency to most recent Pysam easyconfigs     (#7897)</li> <li>expat: add configure option <code>--without-docbook</code> to avoid     docbook2X dependency     (#7930)</li> <li>fix source URLs for mawk     (#7960)</li> <li>fix LWM2, OTF2, OPARI2, and Score-P download URLs     (#7994)</li> <li>use <code>https://</code> in homepage &amp; source_urls for OpenMPI and hwloc     easyconfigs     (#8013,     #8014,     #8015     and     #8016)</li> <li>add missing bokeh dependency for dask 1.0.0 (+ add     dask-jobqueue)     (#8029)</li> <li>fix checking of binutils build dep in easyconfig tests     (#8038)</li> </ul> </li> <li>other changes:<ul> <li>avoid use of <code>.items()</code> in R (bundle) easyconfigs, to fix     compatibility with EasyBuild running on top of Python 3     (#7791)</li> <li>trim down test configuration: only test with Lmod 6.x with     Tcl/Lua on Python 2.6/2.7     (#7795,     #7798)</li> <li>use <code>%(pyshortver)s</code> template in (old) SIP easyconfigs     (#7797)</li> <li>add PyTorch to whitelist for not having '<code>use_pip</code>' enabled     (#7844)</li> <li>don't use local variable '<code>pylibdir</code>' in list comprehension     in PyQt easyconfig, since that doesn't work in Python 3     (#7848)</li> <li>use pip instead of setup.py with h5py/2.7.1 and 2017b toolchains     (#7864)</li> <li>prefer <code>https://</code> over <code>ftp://</code> for source_urls in recent     GROMACS easyconfigs     (#7948)</li> <li>rename arrow to Arrow for old easyconfig     (#8007)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb381","title":"EasyBuild v3.8.1 (January 29th 2019)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various minor enhancements, including:<ul> <li>speed up checking of OS dependencies     (#2703)</li> <li>add support for '<code>eb --show-system-info</code>'     (#2722)</li> <li>add support for '<code>%(arch)s</code>' template value in easyconfig     files (x86-64, aarch64, ppc64le, ...)     (#2728)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add timestamp to reprod dir while in tmp space     (#2705)</li> <li>avoid '<code>+</code>' in directory name for <code>g++</code> rpath wrapper     (#2710)</li> <li>pre-install vsc-install &lt; 0.11.4 in bootstrap script to avoid     requiring '<code>mock</code>' Python package     (#2717)</li> <li>fix check in <code>--merge-pr</code> whether PR is eligible for merging in     to only consider the status of the last test report     (#2720)</li> <li>don't recreate build directory when '<code>buildininstalldir</code>' is     enabled for iterative installations     (#2724)</li> <li>filter (CUDA) <code>lib*/stubs</code> paths in RPATH wrapper script     (#2725)</li> </ul> </li> <li>other changes:<ul> <li>replace '<code>except IOError, err:</code>' pattern with     '<code>except IOError as err:</code>' for compatibility with Python 3.x     (#2711)</li> <li>make all <code>print</code> statements compatible with Python 3     (#2715)</li> <li>avoid use of <code>sys.maxint</code> in dependencies_for     (#2716)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>update Ferret easyblock to handle Ferret 7.3     (#1349)</li> <li>add support for defining <code>$LDSHARED</code> when installing Python     packages if Python's value doesn't use toolchain compiler     ($CC)     (#1455)</li> <li>update CP2K easyblock to add support for CP2K 6.1, and fix     incorrect LibInt references     (#1545)</li> <li>make OpenFOAM easyblock handle debug build     (#1609)</li> <li>handle multiple installation keys for MATLAB     (#1610)</li> <li>run '<code>make check</code>' in parallel for GROMACS since it involves     more compilation     (#1611)</li> <li>update OpenCV easyblock for recent versions (3.4.x &gt;= 3.4.4 +     4.0.x)     (#1616)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>check current <code>start_dir</code> value before appending '<code>src</code>'     subdirectory in MrBayes easyblock     (#1582)</li> <li>avoid that (system) Intel compilers are always considered when     building SuiteSparse     (#1612)</li> <li>fix missing import statement in ROOT easyblock     (#1614)</li> <li>answer SELinux question with '<code>no</code>' in Mathematica easyblock     (#1617)</li> <li>disable \"build isolation\" feature in pip &gt; 10.x in     PythonPackage generic easyblock     (#1623)</li> </ul> </li> <li>other changes<ul> <li>cleanup in Perl and PerlModule easyblocks     (#1603)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains <code>foss/2019a</code>     (#7371),     <code>intel/2019a</code>     (#7372)     and <code>iomkl/2019.01</code>     (#7375)<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Common-toolchains.html</li> </ul> </li> <li>added example easyconfig files for 43 new software packages:<ul> <li>Assimulo     (#6740),     C3D     (#7059),     CellMix     (#7422),     CESM-deps     (#6654,     #6675,     #6823),     DSA     (#7422),     DeMixT     (#7422),     deconf     (#7422),     DeconICA     (#7422),     double-conversion     (#7307),     dxpy     (#7079),     EPIC     (#7422),     expect     (#7387),     Flye     (#7430),     FMILibrary     (#6740),     FMRIprep     (#7059),     FUSE     (#7078),     GDCM     (#7310),     HDDM     (#7396),     ICA-AROMA     (#7059),     IntaRNA     (#7334),     imageio     (#6738),     KWIML     (#7308),     kWIP     (#7444),     MagresPython     (#7395),     medaka     (#7426),     MINC     (#7311),     MuSiC     (#7422),     netMHCIIpan     (#7377),     NIfTI     (#7311),     OPERA     (#7408),     psrecord     (#7331),     pyfits     (#7273),     PyFMI     (#6740),     PyGWAS     (#5852),     Pylint     (#6675),     QDD     (#7284),     RERconverge     (#7289),     samclip     (#7226),     SCIPhI     (#7419),     swarm     (#7453),     VXL     (#7309),     wrf-python     (#6736),     xCell     (#7422)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Amber 18, Arrow 0.12.0, Biopython 1.73, Boost 1.69.0, CP2K 6.1,     canu 1.8, Ferret 7.3, GATE 8.1.p01, GROMACS 2019, Geant4 10.5,     HPL 2.3, libxsmm 1.10, matplotlib 3.0.2, NEURON 7.6.5, Octave     4.4.1, OpenBLAS 0.3.5, OpenCV 3.4.5 + 4.0.1, OpenFOAM v1812, PGI     18.10, PLUMED 2.5.0, ROOT 6.14.06, Theano 1.0.3, TopHat 2.1.2,     Yade 2018.02b</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add additional extensions to R 3.5.1 easyconfigs:<ul> <li>statnet     (#7370),     NMF, ComICS, dtangle, MCMCpack, shinythemes     (#7420),     csSAM     (#7423),     bridgedist     (#7477)</li> </ul> </li> <li>add DeconRNASeq and GSVA extensions to R-bundle-Bioconductor 3.7     easyconfigs     (#7421)</li> <li>also install header files and CMake module for SeqAn 2.4.0 built     with <code>foss/2018b</code>     (#7434)</li> <li>add download URL for <code>intel/2018a</code> components     (#7436)</li> <li>add missing checksums for protobuf easyconfigs using dummy     toolchain     (#7492)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix source URL in Doxygen easyconfigs     (#7324)</li> <li>add fallback source URL for recent pigz versions     (#7346)</li> <li>promote FriBiDi to runtime dep of Pango rather than only build     dep     (#7369)</li> <li>add <code>--without-systemdsystemunitdir</code> configure option to recent     DBus easyconfigs     (#7373)</li> <li>fix issue of building M4 1.4.18 with glibc 2.28     (#7384)</li> <li>fix broken source URLs in MariaDB easyconfigs     (#7413)</li> <li>bump up build dependency of flex 2.6.4 from Bison 3.0.4 to 3.0.5     (#7414)</li> <li>disable building of OpenColorIO Python bindings since Python is     not included as a dependency     (#7416)</li> <li>add missing build dependencies in old Harfbuzz/Pango easyconfigs     (2016a generation)     (#7433)</li> <li>fix XML-LibXML linking with Intel compiler and GCCcore Perl     (#7440)</li> <li>prevent non-critical error from stopping Guile v1.8.8 build     (#7446)</li> <li>use <code>%(arch)s</code> template rather than hardcoding '<code>x86_64</code>' in     XML-Parser easyconfigs     (#7450)</li> <li>use uniform configopts for Guile 1.8.8     (#7452)</li> <li>fix configopts in PyQt5 easyconfig files to avoid installation     of files in Python/Qt5 installation directories     (#7470)</li> </ul> </li> <li>other changes:<ul> <li>fix homepage in easyconfigs for <code>foss</code> toolchains     (#7482)     and <code>intel</code> toolchains     (#7483)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb380","title":"EasyBuild v3.8.0 (December 18th 2018)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>support use of version ranges in <code>--filter-deps</code>     (#2357)</li> <li>add support for <code>--list-prs</code>     (#2400,     #2668)</li> <li>add support for <code>--close-pr</code>     (#2401)</li> <li>allow setting <code>optarch</code> compiler flags in the easyconfig via     <code>toolchainopts</code> easyconfig parameter     (#2595)</li> <li>add option to skip pre-creation of install directory:     <code>--disable-pre-create-installdir</code>     (#2629,     #2637)</li> <li>flesh out setting up of configuration into dedicated     '<code>set_up_configuration</code>' function     (#2638)</li> <li>clean error when '<code>eb</code>' is cancelled by user     (#2641)</li> <li>add support for using Slurm as backend for <code>--job</code>, via     <code>--job-backend=Slurm</code>     (#2642,     #2666)</li> <li>save easyblocks along with easyconfig in '<code>reprod</code>'     subdirectory of install directory     (#2653)</li> <li>add support for deprecating easyconfig files &amp; toolchains     (#2656)</li> <li>changed <code>EasyConfig.update</code> to be able to specify not to allow     duplicate values     (#2657)</li> <li>move adding of dependencies to prepare step instead of check     readiness step     (#2674)</li> <li>add support for disabling mapping of (sub)toolchains when     <code>--try-toolchain</code> is used, via <code>--disable-map-toolchains</code>     (#2682)</li> <li>add '<code>astro</code>' and '<code>quantum</code>' module classes     (#2693)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make <code>--from-pr</code> always try to apply PR patch on top of PR     target branch     (#2631)</li> <li>fix bug that could cause to silently overwrite an existing     easyconfig when using <code>--try-*</code>     (#2635)</li> <li>don't pass down specific environment variables into submitted     jobs     (#2643)</li> <li>update template constants for source URLs to use https     (#2648)</li> <li>fix lib64 fallback for '<code>lib</code>'/'<code>lib64</code>' dirs entry in     <code>sanity_check_paths</code>     (#2649)</li> <li>change PGI F90 Fortran compiler to pgf90     (#2650)</li> <li>use <code>--set-upstream-to</code> in <code>install-EasyBuild-develop.sh</code> script     to deal with deprecated/no longer supported <code>--set-upstream</code>     (#2651)</li> <li>fix order of keys in '<code>toolchain</code>' value for dumped easyconfig     file (name, version) + run style check on dumped easyconfigs in     dump tests     (#2660)</li> <li>ensure checksums beside sources in dumped easyconfigs     (#2661)</li> <li>fix problems with easyconfig file saved in '<code>reprod</code>'     directory by copying it before running any installation steps     (#2664)</li> <li>make print functions more robust w.r.t. arguments being passed     to format the message to be printed     (#2670)</li> <li>use '<code>git am</code>' to apply patch for PRs in     <code>fetch_easyconfigs_from_pr</code>     (#2680)</li> <li>correctly define <code>$LIBFFT_MT</code> for Intel MKL     (#2688)</li> <li>don't always require easyconfig files to resolve dependencies     (#2690,     #2692,     #2697,     #2698,     #2699)</li> </ul> </li> <li>fixes for Travis CI config:<ul> <li>stop testing with Lmod 6.6.3, testing with Lmod 6.5.1 is     sufficient     (#2627)</li> <li>Python 2.6 requires python-daemon 1.x as dep for GC3Pie     (#2673)</li> <li>stick to idna&lt;2.8 with Python 2.6 in Travis + distable broken     test for HgRepository     (#2678)</li> </ul> </li> <li>other changes:<ul> <li>always skip symlinks in <code>adjust_permissions</code>     (#2644)</li> <li>flesh out '<code>avail_easyblocks</code>' function from support for     <code>--list-easyblocks</code>     (#2663)</li> <li>deprecate the <code>ictce</code> toolchain     (#2667)</li> <li>deprecate <code>goolf</code> and <code>goolfc</code> toolchains     (#2676)</li> <li>deprecate <code>intel</code> toolchains older than <code>intel/2016a</code> (+     <code>iccifort</code> &amp; <code>iimpi</code> subtoolchains)     (#2677)</li> <li>deprecate ancient <code>gompi</code> toolchain versions     (#2684)</li> <li>use '<code>tar xzf</code>' (gzip) rather than '<code>tar xZf</code>' (ancient     <code>compress</code>) to unpack <code>*.tar.Z</code> source files     (#2686)</li> <li>flesh out '<code>set_parallel</code>' method to it can be called     separately     (#2687)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new generic easyblocks:<ul> <li><code>PythonBundle</code> for installing a bundle of Python packages     (#1553)</li> <li><code>MesonNinja</code> for installing using Meson &amp; Ninja     (#1561)</li> </ul> </li> <li>new software specific easyblock for <code>RepeatMasker</code>     (#1600)</li> <li>minor enhancements, including:<ul> <li>add <code>-fno-delete-null-pointer-checks</code> compiler flag for OpenFOAM     versions older than v3.0     (#1311)</li> <li>add support for building Tau with OTF included as dependency     (#1313)</li> <li>add support for Intel MPI version 2019     (#1546)</li> <li>also populate the include dir for CP2K     (#1554)</li> <li>add custom easyconfig parameter in GCC easyblock to control use     of gold linker: <code>use_gold_linker</code>     (#1555)</li> <li>replace '<code>-</code>' with '<code>_</code>' in default '<code>import</code>' check for     Python packages     (#1560)</li> <li>update WRF and WPS to support version 4     (#1563)</li> <li>adapt PSI easyblock for PSI4 &gt; 1.2     (#1568)</li> <li>update Siesta easyblock to 4.1-b4 and add custom test_step     (#1573)</li> <li>enhance Mothur easyblock to support use of Boost and HDF5 as     dependencies     (#1576)</li> <li>enhance sanity check for icc &amp; ifort: also check for     <code>compilers_and_libraries_*/linux</code> subdirectory     (#1577)</li> <li>update Trinity easyblock for latest version 2.8     (#1579)</li> <li>add version check in sanity check step of SCOTCH easyblock (+     code cleanup)     (#1580)</li> <li>add support in Clang easyblock to skip running of all tests     (#1584)</li> <li>update WRF easyblock to allow serial HDF5 + pick up on parallel     netCDF     (#1592)</li> <li>avoid hardcoding '<code>PREFIX=&lt;installdir&gt;</code>' in build/install     options when using <code>SCons</code> easyblock     (#1594)</li> <li>enable TensorFlow to detect any MPI runtime     (#1597)</li> <li>enhance <code>Bundle</code> easyblock to allow installation of bundle     components with additional easyblocks + build components in     parallel     (#1598)</li> <li>enhance Trilinos easyblock to support building against MKL     (#1601)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make FDTD_Solutions easyblock do the install by copying files     instead of '<code>rpm rebuild</code>'     (#1307)</li> <li>re-add missing <code>VT_(S)LIB_DIR</code> env variable to itac module     (#1309)</li> <li>fix in QuantumESPRESSO easyblock: ifort compiler needs     <code>-assume byterecl</code>     (#1556)</li> <li>extract targets from buildopts in Quantumespresso easyblock     (#1558)</li> <li>fixes for TensorFlow easyblock     (#1559)<ul> <li>pass <code>$PYTHONPATH</code> while building TensorFlow</li> <li>disable cross-compilation mode if optarch is set</li> <li>fix sanity check for installing TensorFlow as extension</li> </ul> </li> <li>added a test to disable compiling FFTW with MPI if the toolchain     does not support MPI     (#1562)</li> <li>fix permissions problem with CUDA nvvp tar files + correctly     handle numactl symlink in LLVM subdir in PGI easyblock     (#1569)</li> <li>fix TensorFlow test tempdir problem     (#1572)</li> <li>tweak VMD easyblock so that <code>configopts</code> don't contain     duplicate values (otherwise it fails to rebuild)     (#1575)</li> <li>fix running netcdf4-python tests to also support installation as     extension     (#1578)</li> <li>added the openmp flags in the linker flags in MUMPS easyblock     (#1585)</li> <li>avoid hardcoding <code>--with-rdma</code> configure option in MVAPICH2     easyblock     (#1586)</li> <li>fix location of path-to-source argument in configure command of     <code>CMakeMake</code>     (#1591)</li> <li>fix GROMACS use of MKL for non-Intel compilers (e.g. gomkl     toolchain)     (#1596)</li> </ul> </li> <li>other changes<ul> <li>inform Hound CI about Python 2 builtins     (#1604)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains: <code>intel/2018.04</code>     (#7171),     <code>intel/2019.00</code>     (#7218),     <code>intel/2019.01</code>     (#7219)</li> <li>added example easyconfig files for 36 new software packages:<ul> <li>4ti2     (#7040),     ARPACK++     (#6750),     CellRanger     (#7242),     CharLS     (#6762)     cscope     (#7057),     ctags     (#7057),     datamash     (#6693),     dcm2niix     (#6762),     DCMTK     (#6761),     deepdiff     (#7109),     Drake     (#7182),     fast5     (#7250),     gap     (#7040),     Gerris     (#7211),     GPAW-setups     (#6984),     iCount     (#7080),     ipyparallel     (#6797),     Kratos     (#7149),     LCov     (#7160),     libvdwxc     (#6984),     libwebp     (#7065),     lrslib     (#7040),     MuPeXI     (#6991),     netMHCpan     (#6991),     Normaliz     (#7040),     OpenColorIO     (#7146),     OpenJPEG     (#7216),     PHLAT     (#7036),     poppler     (#7069),     RECON     (#7042),     RepeatMasker     (#7281),     TreeMix     (#7133),     unrar     (#7117),     utf8proc     (#7083),     VSEARCH     (#7153),     XMDS2     (#7121)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>CheMPS2 1.8.8, Clang 6.0.1 + 7.0.0, dask 1.0.0, FFmpeg 4.1,     GCC(core) 6.5.0 + 7.4.0, GPAW 1.4.0, HMMER 3.2.1, IPython 7.2.0,     ITK 4.13.1, Keras 2.2.4, LLVM 7.0.0, Mothur 1.41.0, MultiQC 1.6,     NAMD 2.13, OpenBLAS 0.3.4, OpenMPI 3.1.3 + 4.0.0, PSI4 1.2.1,     Qt5 5.11.2, QuantumESPRESSO 6.3, Rust 1.30.1, Spark 2.4.0,     Spyder 3.3.1, TensorFlow 1.11.0 + 1.12.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>install misc tools for angsd     (#6995)</li> <li>add libXp component to X11 bundle for GCCcore 6.4.0     (#7062)</li> <li>also install shared libraries for LZO     (#7073)</li> <li>add extensions to R 3.5.1 easyconfigs: <code>gllvm</code>     (#7123),     <code>grpreg</code>     (#7140),     <code>gamlss</code> + <code>gamlss.tr</code>     (#7263)</li> <li>install Tk private headers     (#7155)</li> <li>add <code>File::Next</code> extension to Perl 5.28.0 easyconfig     (#7276)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix installation of scikit-image 0.13.x by including missing     required <code>PyWavelets</code> extension     (#7061)</li> <li>add missing dependencies to easyconfig for GC3Pie 2.5.0     (#7066)</li> <li>stop setting ignored '<code>full_sanity_check</code>' easyconfig     parameter in easyconfigs     (#7094)</li> <li>add missing checksums in X11/2016* easyconfigs     (#7095)</li> <li>add missing checksums in X11/2017* easyconfigs     (#7096)</li> <li>add missing <code>cffi</code> &amp; <code>pycparser</code> extensions to recent Python     easyconfigs     (#7105,     #7118)</li> <li>fix homepage in QuantumESPRESSO easyconfigs     (#7114)</li> <li>use empty toolchain version in picard easyconfigs to ensure Java     dependency is loaded during installation     (#7116)</li> <li>fix checksum for <code>mgcv</code> extension in R 3.5.* easyconfigs     (#7122)</li> <li>add missing 'patsy' extension in ARCH easyconfig + switch to     using <code>PythonBundle</code> easyblock     (#7124)</li> <li>add missing (dummy) sklearn extension in NeuroKit easyconfig     (#7126)</li> <li>fix order of extensions in recent IPython easyconfigs to make     '<code>pip check</code>' pass     (#7131)</li> <li>fix missing required Python packages in ASE 3.16.2 easyconfigs     (#7139)</li> <li>fix <code>source_urls</code> in CP2K easyconfigs (for official releases)     (#7240)</li> <li>update SCOTCH 6.0.5 easyconfigs in-place to 6.0.6 to fix wrong     download URL     (#7159)</li> <li>add Autotools build dep in patchelf easyconfig     (#7175)</li> <li>STREAM fixes: use https + versioned source     (#7193)</li> <li>fix checksum in Molden easyconfig     (#7251)</li> <li>fix source URL for ADMIXTURE     (#7258)</li> <li>fix source URLs &amp; versions + build procedure for SKESA     (#7275)</li> <li>fix checksum for TRF 4.09     (#7278)</li> <li>add missing zlib dependency for NSS     (#7293)</li> <li>add required build deps for QtWebEngine in recent Qt5     easyconfigs     (#7300)</li> <li>fix ImageMagick source URLs: use <code>launchpad.net</code> for old     versions, switch to GitHub for 7.0.8-* onwards     (#7301)</li> </ul> </li> <li>other changes:<ul> <li>update <code>Java/1.8</code> wrapper to Java 1.8.0_192     (#7097)</li> <li>don't enable <code>optarch</code> toolchain option in VCFtools     easyconfigs, since it's enabled by default     (#7106)</li> <li>stop using lowopt in libxc 4.2.3 easyconfigs     (#7115)</li> <li>deprecate easyconfigs for <code>ictce</code> toolchains + <code>intel</code>     toolchains older than <code>intel/2016a</code>     (#7231)</li> <li>deprecate easyconfigs for <code>goolf(c)</code> + corresponding <code>gompi(c)</code>     subtoolchains     (#7243)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb371","title":"EasyBuild v3.7.1 (October 18th 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>generate <code>.modulerc.lua</code> when Lua syntax and Lmod &gt;= 7.8 is     used     (#2597)</li> <li>allow <code>--force</code> to use regex if <code>--try-toolchain</code> can not map     intelligently     (#2605)</li> <li>add support for disabling modules tool version check     (#2610)</li> <li>add support to <code>ModuleGenerator.modulerc</code> method to also write     <code>.modulerc</code> file     (#2611)</li> <li>check whether module file being wrapped exists in same directory     as module wrapper when using Lmod 6.x     (#2611)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>stop relying on '<code>easy_install</code>' in bootstrap script, use     '<code>python -m easy_install</code>' instead     (#2590)</li> <li>fix templating of values in <code>list_software</code> function     (#2591)</li> <li>fix composing of <code>lib64</code> fallback paths in sanity check     (#2602)</li> <li>determine <code>file_info</code> for all easyconfigs before any actual     copying in <code>copy_easyconfigs</code> function     (#2604)</li> <li>also check for module wrappers in <code>ModulesTool.exist</code> method     (#2606)</li> <li>add trailing newline to module load message if it's not there     yet     (#2613)</li> <li>retain all dependencies when determining dependency tree of a     toolchain     (#2617)</li> <li>protect <code>exts_lists</code> from templating in <code>dump</code> method     (#2619)</li> <li>making CUDA capability detection more robust     (#2621)</li> </ul> </li> <li>other changes:<ul> <li>lower required Lmod version to 6.5.1     (#2593)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software specific easyblocks for fastStructure     (#1529)</li> <li>minor enhancements, including:<ul> <li>support bypassing use of system type obtained with recent     <code>config.guess</code> in <code>ConfigureMake</code>     (#1531)</li> <li>enhance generated module file for FreeSurfer     (#1543)</li> <li>add option in Qt easyblock to check for QtWebEngine component in     sanity check     (#1544)</li> <li>also install CP2K as a library + code cleanup in CP2K easyblock     (#1547)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix checking for downloaded dependencies for stand-alone     installations in <code>PythonPackage</code> generic easyblock     (#1530)</li> <li>also specify <code>--host</code> option to configure script based on     config.guess result in <code>ConfigureMake</code> easyblock     (#1532)</li> <li>use short module name when creating module wrapper in <code>ModuleRC</code>     generic easyblock     (#1535)</li> <li>use <code>DOT_MODULERC</code> constant in <code>ModuleRC</code> easyblock rather than     hardcoding '<code>.modulerc</code>'     (#1533)</li> <li>use <code>--no-deps</code> when installing .whl in TensorFlow easyblock if     extension are being installed, move test run to sanity check     (#1537)</li> <li>use <code>os.getcwd()</code> rather than <code>self.startdir</code> in TensorFlow     easyblock to fix installation of TensorFlow as extension in a     bundle     (#1540)</li> <li>add symlink to wrapped module file when creating <code>.modulerc</code> in     temporary location     (#1539)</li> <li>properly handle Python dependency in Qscintilla easyblock     (#1499)</li> </ul> </li> <li>other changes:<ul> <li>cleanup Tarball easyblock by using <code>copy_dir</code> function     (#1541)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchain <code>foss/2018.08</code> with GCC/8.2.0     (#6992)</li> <li>added example easyconfig files for 26 new software packages:<ul> <li>ARCH     (#6939),     fbm     (#6948),     GenomeTester4     (#6970),     GlobusConnectPersonal     (#6974),     MMseqs2     (#6964),     NAG     (#5772),     NAGfor     (#5772),     NSPR     (#7005),     NSS     (#7005),     NeuroKit     (#6947),     novoalign     (#6944),     OptiType     (#6924),     OrthoFinder     (#6964),     pandas-datareader     (#6938),     pFUnit     (#6949),     PMIx     (#6930),     PSolver     (#6888),     PyDatastream     (#6951),     PyFR     (#6846),     Pyomo     (#6910),     Quandl     (#6950),     RTG-Tools     (#6862),     seq2HLA     (#6969),     suds     (#6951),     UCX     (#6931),     XMLSec     (#6929)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>binutils 2.31.1, dask 0.19.4, GCC(core) 8.2.0, OpenBLAS 0.3.3,     OpenMPI 3.1.2, Pillow 5.3.0, PyCUDA 2018.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add clustree + plotly extensions (+ deps) for R 3.5.1     (#6901)</li> <li>add tclsh symlink to recent Tcl easyconfigs     (#6915)</li> <li>update GROMACS 2016.3 with NVML patches     (#6936)</li> <li>use <code>make=make</code> in build options for ParMGridGen easyconfigs     (#6952)</li> <li>add <code>Data::Dump</code> as extension to Perl (dependency for GIMIC)     (#7004)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>inhibit <code>-Werror</code> in binutils 2.26 as new system GCC has case     fallthrough warnings     (#5793)</li> <li>change fastStructure easyconfig to use custom easyblock     (#6893)</li> <li>fix toolchain for tbb dependency in     <code>Bowtie2-2.3.4.2-foss-2018b.eb</code>     (#6927)</li> <li>fix uroot installation in R-3.5.1-foss-2018b     (#6934)</li> <li>add missing Python packages in TensorFlow 1.10.x easyconfigs     (#6940)</li> <li>add missing dep for Szip in 2017b builds of netCDF     (#6942)</li> <li>fix missing comment from     <code>OpenBabel-2.4.1-fix-link-path-tests.patch</code>     (#6943)</li> <li>add patch to Python 3.6.1 - 3.6.3 that removes comment in     comment     (#6946)</li> <li>add missing <code>ulimit_unlimited=True</code> (see issue     #6484)     in the newest Python builds     (#6959)</li> <li>solve '<code>version UUID_1.0 not found</code>' problem in LibUUID     easyconfigs     (#6962)</li> <li>eliminate dependency on ancient problematic LibUUID library,     replace with util-linux     (#6963)</li> <li>force building of <code>ccmake</code> for CMake 3.12.1 + fix deps     (#6967)</li> <li>fix broken installation for Python 3.6.2 &amp; 3.6.3 with PyNaCl as     dep for paramiko extension by explicitly including previous     PyNaCl version as extension     (#6971)</li> <li>fix source URL for ADMIXTURE (no https) + add SHA256 checksum     (#6982)</li> <li>add missing NSS/DBus dependencies to Qt 5.10.1 easyconfigs built     with foss toolchain to ensure that QtWebEngine component gets     installed     (#7005)</li> <li>add '<code>openssl</code>' OS deps in Perl 5.28.0 easyconfig for     <code>Net::ssleay</code>     (#7008)</li> <li>add missing checksum for ipaddress extension in Python     easyconfigs     (#7021     and     #7033)</li> <li>add missing extensions to Python 2.7.14     (#7022     and     #7023),     3.6.2     (#7025),     3.6.3     (#7027)     and 3.6.4     (#7029     and     #7030)</li> <li>add missing OS dependencies for git     (#7028)</li> <li>create default configuration for RTG-Tools     (#7032)</li> <li>also run checks on changed files when target branch for PR is     something different than 'develop'     (#7034)</li> </ul> </li> <li>other changes:<ul> <li>removed dead 'bzip.org' source URL for bzip2 source tarball     (#6983)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb370","title":"EasyBuild v3.7.0 (September 25th 2018)","text":"<p>feature release</p> <p>framework</p> <ul> <li>minimal Lmod version requirement bumped to 6.6.3     (#2575)</li> <li>various enhancements, including:<ul> <li>add support to bootstrap script to force install specific     EasyBuild version     (#2382,     #2580)</li> <li>consider potential of multiple subtoolchains when resolving     dependencies     (#2464,     #2465,     #2466,     #2585)</li> <li>fall back to downloading using the <code>requests</code> Python package (if     installed) when <code>urllib2</code> fails due to SSL error     (#2538)</li> <li>make <code>--try-toolchain</code> more aware of subtoolchains     (#2539)<ul> <li>subtoolchain of original toolchains are now mapped to     subtoolchains of target toolchain</li> </ul> </li> <li>add support for BLIS and goblf toolchain that uses BLIS for BLAS     (#2540)</li> <li>allow skipping of sanity check step via '<code>skipsteps</code>'     easyconfig parameter     (#2549)</li> <li>add support for <code>--check-contrib</code>     (#2551)<ul> <li>equivalent with <code>--check-style</code>, but also verifies presence     of SHA256 checksums (+ more checks in the future)</li> </ul> </li> <li>added support to 'download' sources from git     (#2555)<ul> <li>see     https://easybuild.readthedocs.io/en/latest/Writing_easyconfig_files.html#downloading-from-a-git-repository</li> </ul> </li> <li>add '<code>parse</code>' hook to add support for applying site-specific     customisations to the 'raw' easyconfig     (#2562,     #2566)<ul> <li>see https://easybuild.readthedocs.io/en/develop/Hooks.html</li> </ul> </li> <li>lift invalidating of module caches into helper method that can     be used by easyblocks     (#2571)</li> <li>always dump a fully parsed easyconfig to the '<code>reprod</code>' subdir     of the installation directory     (#2574)</li> <li>add '<code>modulerc</code>' method to <code>ModuleGenerator</code> class     (#2575)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make GC3Pie stop build process if a dependency failed     (#2474)</li> <li>filter out patched files in test/ in <code>fetch_easyconfigs_from_pr</code>     (#2547)</li> <li>check GC3pie version using the <code>pkg_resources</code> API rather than     using <code>__version__</code> (which was removed in GC3Pie 2.5.0)     (#2554)</li> <li>fix enforcing of checksums for extensions     (#2561,     #2570,     #2579)</li> <li>skip running of configuration checks while only a single     configuration level is taken into account during <code>--show-config</code>     (#2567)</li> <li>fix error statements in modules tool version checks     (#2576)</li> <li>fix finding of software subdirectory for specified patch file in     <code>--new-pr</code>/<code>--update-pr</code>     (#2577)</li> <li>take into account dependency 'wrappers' in check_conflicts     (#2583)</li> <li>stick to pycparser &lt; 2.19 with Python 2.6 in Travis config     (#2584)</li> </ul> </li> <li>other changes:<ul> <li>use <code>namelower</code> as default for '<code>github_account</code>' easyconfig     parameter     (#2528)</li> <li>use <code>.counts()</code> rather than deprecated <code>.stats()</code> for GC3Pie     (#2573)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new generic easyblock: <code>ModuleRC</code>     (#1503,     #1518)</li> <li>new software specific easyblocks for BWISE     (#1497)     and VEP     (#1512)</li> <li>minor enhancements, including:<ul> <li>update QuantumESPRESSO easyblock: stop building in installation     dir, do not use external FoX dependency, support for recent     versions     (#1312)</li> <li>updates to TensorFlow easyblock:<ul> <li>require cuDNN if CUDA support is enabled, enable mkl-dnn by     default, fix problem with internal protobuf problem, add     awareness for TensorRT &amp; NCCL     (#1453)</li> <li>add support for IntelMPI     (#1507)</li> </ul> </li> <li>update WIEN2k easyblock for version 18.1     (#1460)</li> <li>add CUDA '<code>stubs</code>' subdirectory to $LIBRARY_PATH     (#1464)</li> <li>add support for building ScaLAPACK on top of BLIS     (#1467)</li> <li>handle X11 better and make '<code>static</code>' a build flag in Amber     easyblock     (#1468)</li> <li>update Boost easyblock for Boost 1.67.0 (name change in Python     3.x library files)     (#1472)</li> <li>add CEI/bin to $PATH for ANSYS 19 &amp; newer     (#1476)</li> <li>enhance SCons easyblock to enable building in parallel     (#1477)</li> <li>add awareness for CCOLAMD and CAMD in Trilinos easyblock     (#1480)</li> <li>add support to apply (binary) patches after main CUDA install     (#1481,     #1483)</li> <li>add support for only building Python bindings (+ code cleanup)     in Boost easyblock     (#1484,     #1495)</li> <li>provide control over subdirectory in which R packages are     installed     (#1485)</li> <li>added regex to fix <code>$WM_PROJECT_VERSION</code> correctly in OpenFOAM     easyblock     (#1489)</li> <li>improve PGI siterc so it allows <code>-pthread</code> switch     (#1494)</li> <li>customise <code>check_checksums method</code> in Bundle easyblock to fix     checking of checksums for components     (#1496)</li> <li>include a pkgconfig file '<code>hdf5.pc</code>' to HDF5 installations     (#1504)</li> <li>(download &amp;) use an updated <code>config.guess</code> script in generic     ConfigureMake easyblock     (#1506,     #1522,     #1523,     #1524)</li> <li>make <code>IntelBase</code> generic easyblock aware of <code>(pre)installopts</code>     (#1509)</li> <li>update Siesta easyblock for v3.2 to 4.1-b3     (#1510)</li> <li>take <code>(pre)installopts</code> into account in RPackage generic     easyblock     (#1513)</li> <li>update DOLFIN easyblock for latest version     (#2018.1)     (#1521)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>drop useless definition of <code>$NLSPATH</code> in <code>IntelBase</code> + fix ipp     library paths     (#1442)</li> <li>fix order of arguments in log message in <code>PythonPackage</code>     easyblock     (#1459)</li> <li>run <code>ldconfig</code> in post-install step of CUDA easyblock to create     missing symlinks in 'stubs' subdirectory     (#1473)</li> <li>take into account that only name/version may be specified for     some components in <code>Bundle</code> easyblock     (#1474)</li> <li>make SuperLU easyblock consider both <code>lib</code> and <code>lib64</code>     subdirectories     (#1479)</li> <li>use short build dir for Trilinos to dance around     \"<code>Argument list too long</code>\" problem + link with <code>libmetis.a</code>     (#1486)</li> <li>correct check for Red Hat 6 based OS in TensorFlow easyblock     (#1487)</li> <li>improve configuration choice in FSL easyblock     (#1498)</li> <li>don't check for <code>mcc</code> in MATLAB sanity check as it requires a     specific toolbox license     (#1514)</li> <li>make sure Bazel doesn't write files in $HOME/.cache when     building TensorFlow     (#1519)</li> <li>enable VSX on POWER for FFTW &gt;= 3.3.7     (#1520)</li> <li>add <code>librt</code> as dependency when linking Trilinos with SuiteSparse     (#1525)</li> </ul> </li> <li>other changes:<ul> <li>switch to using CMake install procedure for Eigen 3.3.4 &amp; newer     (#1482)</li> <li>bump Lmod version used in Travis config to 6.6.3 (now required     by framework)     (#1505)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains: <code>fosscuda/2017b</code>     (#6706),     <code>intelcuda/#2017b</code>     (#6709),     <code>iomkl/2018b</code>     (#6661)</li> <li>added example easyconfig files for 49 new software packages:<ul> <li>alleleCount     (#6676),     BCALM     (#6796),     BDBag     (#6672),     BFC     (#6647),     Bio-DB-HTS     (#6854),     bioawk     (#6865),     biomart-perl     (#6745),     BLIS     (#6614),     Boost.Python     (#6763),     BWISE     (#6802),     CapnProto     (#6542),     CaVEMan     (#6708),     CCL     (#5802),     cDNA_Cupcake     (#6787),     cget     (#6780),     coevol     (#6589,     #6642),     Delly     (#6735),     earthengine-api     (#6556),     fineRADstructure     (#6586),     GIMIC     (#6575),     GitPython     (#6850),     HiC-Pro     (#5873),     Inelastica     (#6831),     JAXFrontCE     (#6837),     jq     (#6632),     KAT     (#6808),     KMC     (#6553),     Kraken2     (#6569),     Lighter     (#6553),     Mash     (#6542),     MetaPhlAn2     (#6600),     Minimac4     (#6781),     mordecai     (#6670),     NCCL     (#5802),     NxTrim     (#6646),     parasail     (#6601),     PheWAS     (#6030),     Pilon     (#6553),     python-parasail     (#6601),     SearchGUI     (#6637),     shovill     (#6553),     SKESA     (#6553),     snakemake     (#6851),     strelka     (#6742),     SWIPE     (#6795),     ToFu     (#6322),     tqdm     (#6721),     TRUST     (#6601),     VEP     (#6854)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Bazel 0.16.0, Boost 1.67.0 + 1.68.0, CUDA 10.0.1, DOLFIN     (FEniCS) 2018.1, FSL 5.0.11, GC3Pie 2.5.0, GROMACS 2018.3,     HTSlib + SAMtools 1.9, IPython 6.4.0, matplotlib 3.0.0,     OpenCoarrays 2.2.0, OpenFOAM 6 &amp; v1806, PyTorch 0.4.1, Python     3.6.6, R 3.5.1, TensorFlow 1.10.1, Trilinos 12.12.1, WIEN2k 18.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add test to enforce SHA256 checksums in touched files in pull     requests to develop     (#5005)</li> <li>add various extensions to recent R easyconfigs     (#6590,     #6686,     #6858)</li> <li>add <code>mpmath</code> extension to Python 3.6.4 + 3.7.0 easyconfigs     (#6607,     #6713)</li> <li>add Java 1.8 easyconfig that can be updated in-place to more     recent JDK 1.8.x     (#6712)<ul> <li>see also     https://easybuild.readthedocs.io/en/latest/Wrapping_dependencies.html</li> </ul> </li> <li>add <code>iso_c_binding</code> support to arpack-ng 3.6.2     (#6718)</li> <li>add <code>XML::Parser</code>, <code>XML::RegExp</code> &amp; <code>XML::DOM</code> extensions to     Perl(#6744)</li> <li>add <code>tabulate</code> extension to all Python &gt; 3.6 easyconfigs     (#6809)</li> <li>enable MPI version of arpack-ng 3.5.0     (#6840)</li> <li>add <code>wish</code> symlink to <code>wish8.6</code> in recent Tk easyconfigs     (#6870)</li> <li>add <code>libXp</code> and <code>printproto</code> to X11 bundle     (#6873)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>define '<code>_GNU_SOURCE</code>' to ensure that '<code>reallocarray</code>' is     defined in flex 2.6.4 easyconfigs, fixes bootstrap crash     (#5792,     #6766)</li> <li>added tabix dependency in VCFtools     (#6584)</li> <li>added zlib dependency to BWA     (#6591),     BEDTools     (#6592),     VCFtools     (#6653)</li> <li>add checksums to googletest easyconfigs     (#6611)</li> <li>fix source URL + add checksum to     wkhtmltopdf-0.12.3-Linux-x86_64.eb     (#6628,     #6641)</li> <li>don't use external FoX dependency in QuantumESPRESSO 6.2     (#6638)</li> <li>update hwloc easyconfigs with libxml2 and libpciaccess     dependencies     (#6639)</li> <li>fix gettext build dep for Mono-5.10.0.160     (#6640)</li> <li>remove no longer existing config option     <code>--enable-mpi-thread-multiple</code> in OpenMPI 3.x easyconfigs     (#6645)</li> <li>fix homepage in recent HDF5 easyconfigs     (#6687)</li> <li>add expat dependency to Mesa v18.1.1     (#6706)</li> <li>add missing <code>--with-trio-flavor=netcdf</code> flag to ABINIT 8.x     easyconfigs     (#6711)</li> <li>remove useless definition of $TORCH_CUDA_ARCH_LIST in PyTorch     easyconfig that doesn't use CUDA     (#6719)</li> <li>fix building GCCcore 6.3.0 on recent OSs by backporting patches     from 6.4.0     (#6727)</li> <li>fix <code>source_urls</code> in bzip2 easyconfigs     (#6728)</li> <li>specify location of dependencies in configure options for libgd     (to avoid system libraries being used instead)     (#6731)</li> <li>also install docs/man pages in recent git easyconfigs (versions     2.1x.y)     (#6751)</li> <li>add CMake build dep for Eigen 3.3.4     (#6756,     #6784)</li> <li>add expat dependency to Perl 5.26.0     (#6758)</li> <li>add ncurses OS dependency to CMake for Debian distros     (#6783)</li> <li>fix checksums for pkgmaker, rngtools &amp; RcppProgress extensions     in R 3.4.3 easyconfigs     (#6815)</li> <li>add pkg-config build dependency to GTS     (#6819)</li> <li>do not check if hwloc-dump-hwdata utility was installed, since     it's only built on x86 systems     (#6836)</li> <li>patch libxc 3.x and 4.0.x to compile on POWER     (#6868)</li> <li>consistently add patch for paycheck extension in Python 3.6/3.7     to fix UTF8 issue with README     (#6892)</li> </ul> </li> <li>other changes:<ul> <li>bump Lmod version used in Travis config to 6.6.3 (now required     by framework)     (#6834)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb362","title":"EasyBuild v3.6.2 (July 11th 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for including environment variable that is resolved     at \"module load time\" in user module path     (#2395)<ul> <li><code>{RUNTIME_ENV::EXAMPLE}</code> is replaced by value of <code>$EXAMPLE</code>     when module is loaded</li> </ul> </li> <li>also support generating Docker container recipes &amp; image via     <code>--containerize</code> (still experimental)     (#2479)</li> <li>add support for specifying source URLs directly in '<code>sources</code>'     (#2520)</li> <li>perform early 'raw' parse of provided easyconfig file to check     for syntax error or faulty inputs     (#2523)</li> <li>add '<code>bitbucket_account</code>' easyconfig parameter and template,     and let <code>BITBUCKET*</code> templates use it     (#2525)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>take into account <code>--filter-deps</code> when re-loading build     dependencies in <code>extensions_step</code>     (#2516)</li> <li>fix for offline use of bootstrap script: ignore errors when     determining source URLs if source tarballs are provided     (#2517)</li> <li>fix error message that is raised for incorrect type of value in     <code>sanity_check_paths</code>     (#2524)</li> </ul> </li> <li>other changes:<ul> <li>move flake8 config into <code>setup.cfg</code> + fix style issues in     <code>easybuild/tools/options.py</code>     (#2511)</li> <li>make test that verifies that <code>BuildOptions</code> does not support     updating a bit more flexible     (#2518)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for OpenCV     (#1444)</li> <li>minor enhancements, including:<ul> <li>use <code>$CPATH</code>/<code>$LD_LIBRARY_PATH</code> for CMake's     <code>find_path</code>/<code>find_library</code> functions in <code>CMakeMake</code> easyblock     (#1165)</li> <li>make cdft lib compilation optional for Intel MKL, by detecting     MPI availability     (#1393)</li> <li>add <code>use_glibcxx11_abi</code> easyconfig parameter in Boost easyblock     (#1434)</li> <li>enable filtering of paths in <code>$CPATH</code> and <code>$LIBRARY_PATH</code> in     TensorFlow easyblock     (#1436)</li> <li>add support for building GROMACS with <code>--optarch=GENERIC</code>     (#1440)</li> <li>check current stack limit and set it to '<code>unlimited</code>' if     possible in Python easyblock     (#1441)</li> <li>trivial update for Q&amp;A in SAS easyblock     (#1448)</li> <li>allow skipping tests when installing Perl extensions, by setting     '<code>runtest</code>' to <code>False</code>     (#1451)</li> <li>add support for installing Intel products using serial numbers     (#1452)</li> <li>update version check to FFTW 3.3.8 for tests to pass on POWER     (ppc64le)     (#1454)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>build MPFR in GCC stage 1 without LTO if (system) GCC used is     too old     (#1435)</li> <li>make sure xmlpatterns always gets built with Qt     (#1437)</li> <li>fix symlink check in NWChem easyblock + use     <code>change_dir</code>/<code>remove_file</code>/<code>symlink</code> functions     (#1438)</li> </ul> </li> <li>other changes:<ul> <li>move flake8 configuration to <code>setup.cfg</code> and make HoundCI aware     of it     (#1430)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains: <code>foss/2018b</code>     (#6424),     <code>fosscuda/2018b</code>     (#6555)     and <code>intel/2018b</code>     (#6409)</li> <li>added example easyconfig files for 28 new software packages:<ul> <li>CUnit     (#6469),     eggnog-mapper     (#6513),     FANN     (#6468),     FTGL     (#6421),     FreeFem++     (#5918),     fastStructure     (#6448),     fastq-tools     (#5396),     fullrmc     (#6422),     GDGraph     (#6529),     heaptrack     (#6450),     libgpuarray     (#5429),     lz4     (#6449),     MAJIQ     (#5983),     makedepf90     (#6504),     nanopolish     (#6464),     opencv_contrib     (#6441),     PRC     (#6477),     Pillow-SIMD     (#6152),     Pytorch     (#6152),     poretools     (#6467),     pystran     (#6395),     R-keras     (#6530),     Scoary     (#6521),     Scrappie     (#6469),     torchvision     (#6152),     WISExome     (#6524),     WannierTools     (#6539),     zstd     (#6449,     #6452)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>GROMACS 2018.2, HDF5 1.10.2, IPython 6.3.1, Kraken 1.0, Mesa     18.1.1, netCDF 4.6.1, NWChem 6.8, OpenBLAS 0.3.1, OpenMPI 3.1.1,     Perl 5.28.0, Python 2.7.15, R 3.5.0, X11 20180604</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add hint on file name differences between downloaded and     expected in cuDNN easyconfig     (#6042)</li> <li>add '<code>gee</code>' extension to R 3.4.4 easyconfigs     (#6376)</li> <li>enable building of MPI libraries in VTK 8.1.0 easyconfigs     (#6460,     #6429)</li> </ul> </li> <li>minor changes, including:<ul> <li>rename '<code>Canu</code>' to '<code>canu</code>' for v1.7     (#6389)</li> <li>update existing easyconfigs for OpenCV 3.4.1 to use new custom     easyblock for OpenCV     (#6509)</li> <li>fix software name in <code>Bsoft</code> easyconfig     (#6557)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix SAMtools dependency for ChimPipe, required SAMtools &lt; 1.0     (#5930)</li> <li>skip installing of documentation in easyconfig for jemalloc     5.0.1     (#6428)</li> <li>stop including GCCcore 6.4.0 as build dep for GCCcore 8.1.0     (#6431)<ul> <li>no longer needed with updated GCC easyblock</li> </ul> </li> <li>add patch for GCCcore 6.4.0 to fix compilation problems on glibc     2.26 systems     (#6432,     #6495)</li> <li>fix checksums for     <code>pkgmaker</code>/<code>rngtools</code>/<code>RWeka</code>/<code>RcppProgress</code>/<code>mgcv</code> extensions     in R 3.4.4 easyconfigs     (#6446,     #6502)</li> <li>added necessary compiler flag for Guile 1.8.8     (#6457)</li> <li>build hwloc 1.11.10 with <code>-fno-tree-vectorize</code> to avoid     segfaulting lstopo on Intel Skylake     (#6461)</li> <li>add patch for binutils 2.30 to fix assertion failure     (#6463)</li> <li>sync extensions in <code>Python-3.6.4-iomkl-2018a.eb</code> easyconfig with     other Python 3.6.4 easyconfigs using 2018a toolchain     (#6471)</li> <li>enable checking/setting of unlimited stack limit in Python 3.6.x     easyconfigs using an '<code>intel</code>' toolchain     (#6485,     #6492)</li> <li>add missing <code>libxml2</code> dependency for HDF5 1.10.1     (#6498)</li> <li>also copy eggnog-mapper scripts     (#6522)</li> <li>fix missing dependencies for Perl modules included as extensions     for Perl 5.26.1     (#6532)     and 5.28.0     (#6533)</li> <li>fix location of include directory in libffi 3.2.1 easyconfigs     (#6565)</li> </ul> </li> <li>other changes<ul> <li>also check for multiple dependency variants in easyconfigs using     GCCcore 7.3.0 &amp; newer     (#6444)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb361","title":"EasyBuild v3.6.1 (May 26th 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for enabling fallback in sanity check to consider     <code>lib64</code> equivalent for seemingly missing libraries     (#2477)</li> <li>add <code>GITHUB_LOWER_SOURCE</code> constant     (#2491)</li> <li>add '<code>exts_download_dep_fail</code>' as known easyconfig parameter     (#2493)</li> <li>add support for passing custom messages on failing sanity check     for extensions     (#2494)</li> <li>add definition for <code>fosscuda</code> toolchain     (#2507)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make <code>--inject-checksums</code> always re-order     <code>source_urls</code>/<code>sources</code>/<code>patches</code>/<code>checksums</code>     (#2487)</li> <li>fix git remote url in <code>CONTRIBUTING.md</code>     (#2490)</li> <li>make <code>flake8</code> happy in <code>easyblock.py</code>     (#2492)</li> <li>handle missing permissions for adding labels in <code>--new-pr</code>     (#2497)</li> <li>restore tweaked <code>$TMPDIR</code> value after loading module (for sanity     check)     (#2498)</li> <li>enhance <code>get_module_path</code> function to auto-detect generic vs     software-specific easyblock class names     (#2502)</li> <li>don't blindly overwrite an existing easyconfig in <code>tweak_one</code>     (#2504)</li> <li>take account that <code>PlaintextKeyring</code> may be provided via     <code>keyrings.alt</code>     (#2505)</li> <li>prepend location for temporary module file to <code>$MODULEPATH</code> with     high priority + mark it as default in <code>load_fake_module</code> method     (#2506)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>add support for detecting auto-downloaded dependencies in     <code>PythonPackage</code> easyblock     (#1377)<ul> <li>disabled by default, can be enabled using     \"<code>download_dep_fail = True</code>\" in easyconfig file</li> </ul> </li> <li>add support to enable integration of pscom in psmpi easyblock     (#1397)</li> <li>set <code>$CMAKE_*_PATH</code> when <code>CMake</code> is loaded in <code>PythonPackage</code>     easyblock     (#1398)</li> <li>update WIEN2k easyblock for v17     (#1405)</li> <li>disable jemalloc support in TensorFlow on CentOS 6 &amp; co (+ minor     cleanups)     (#1412)</li> <li>update Maple easyblock to support recent versions     (#1414)</li> <li>enable <code>nc-config</code> usage for netCDF in ESMF &gt;=7.1     (#1419)</li> <li>enhance PETSc easyblock for version 3.9     (#1421)</li> <li>check output of MATLAB installation command for invalid     installation key error     (#1423)</li> <li>fix suffix for Boost Python library in Boost 1.67.0 &amp; newer     (#1424)</li> <li>support adding specific paths to <code>$PATH</code> for generic Binary     easyblock via '<code>prepend_to_path</code>' custom easyconfig parameter     (#1426)</li> </ul> </li> <li>minor changes, including:<ul> <li>assume PGI Community edition is used when no license file is     specified     (#1427)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix imkl sanity check overwriting base libs with interface libs     (#1392)</li> <li>install Chimera in a subdirectory to avoid its dependencies     being added to the environment     (#1413)</li> <li>add conditional so \"<code>--with-x</code>\" is only added to configopts if     left unspecified in R easyblock     (#1415)</li> <li>make <code>configure</code> and <code>make</code> look for FoX in <code>$EBROOTFOX</code> in     QuantumESPRESSO easyblock     (#1420)</li> <li>fix path for <code>$ICEM_ACN</code> in ANSYS easyblock     (#1422)</li> <li>avoid hardcoding defaults in question patterns in Doris     easyblock     (#1428)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchains <code>fosscuda/2018a</code>     (#6363)     and <code>giolfc/2017b</code>     (#5799)</li> <li>added example easyconfig files for 24 new software packages:<ul> <li>BAGEL     (#6332),     Bottleneck     (#6334),     cisTEM     (#6370),     cftime     (#6337),     dotNET-Core-Runtime     (#6345),     ecCodes     (#6235),     feh     (#6300),     Graphene     (#5043),     gffread     (#6306),     HOME     (#6227),     HiCExplorer     (#6342),     ICU     (#6371),     Imlib2     (#6300),     KmerGenie     (#5929),     libgeotiff     (#6262),     NetPIPE     (#6062),     Pandoc     (#6247),     Pisces     (#6347),     Proteinortho     (#6333),     pyshp     (#6364),     SIMPLE     (#6019),     STIR     (#6349),     SimpleElastix     (#6114),     wxWidgets     (#6370)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.67.0, ESMF 7.1.0r, GATK 4.0.4.0, GCC 8.1.0, GROMACS     2018, OpenBLAS 0.3.0, PETSc 3.9.1, PGI 18.4, TensorFlow 1.8.0,     WIEN2k 17.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add <code>py_expression_eval</code> extension to (recent) Python 2.7.14 &amp;     3.6.4 easyconfigs     (#6285)</li> <li>add <code>README</code> for Java with information on downloading source     tarball     (#6294)</li> <li>add several extensions to Perl 5.26.1 easyconfigs, incl     <code>Dist::Zilla</code> &amp; dependencies     (#6297)</li> <li>also include archive URLs for Bioconductor 3.6     (#6311)</li> <li>add <code>README.md</code> file for installing icc/ifort     (#6317)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>consistently specify '<code>intel-mkl</code>' component in recent Intel     MKL easyconfigs     (#6234)</li> <li>add <code>pkg-config</code> as build dependency to libdrm     (#6243)</li> <li>add <code>pkg-config</code> build dep to most recent libdrm easyconfigs     (#6244)</li> <li>fix checksum for foreign extension in R 3.4.3 and R 3.4.4     easyconfigs     (#6245)</li> <li>fix installation of Libint 2.4.2 by building with <code>-std=c++11</code>     (#6251)</li> <li>fix source spec for networkx 2.1 extension in scikit-image     easyconfig     (#6254)</li> <li>avoid that Nipype downloads dependencies for included extensions     (#6261,     #6263)</li> <li>consistently include patch for FLTK 1.3.4     (#6265)</li> <li>fix Perl shebang in MCL v14.137 scripts     (#6269)</li> <li>add patch to build particular source file of matrixStats     extension in R 3.4.4 easyconfig with <code>-O1</code> to work around ICE in     Skylake systems     (#6278)</li> <li>add <code>pkg-config</code> build dependency to FFmpeg &gt;= 3.3.1     (#6291)</li> <li>change back checksum for libdap 3.19.1     (#6305)</li> <li>add patch for Automake 1.15 to fix issue with recent Perl     versions     (#6358)</li> <li>fix <code>glog</code> causing intel error in Intel compilers on Intel     Skylake     (#6360)</li> <li>include ICU as dependency in recent R easyconfigs (v3.4.3 &amp;     v3.4.4)     (#6371)</li> <li>fix checksum for RSEM 1.3.0 after sneaky re-release     (#6379)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb360","title":"EasyBuild v3.6.0 (April 26th 2018)","text":"<p>feature release</p> <p>framework</p> <ul> <li>(experimental) support for generating Singularity container recipes     &amp; (optionally) images via '<code>sudo singularity</code>'     (#2332,     #2480,     #2481,     #2482,     #2483)<ul> <li>see documentation at     http://easybuild.readthedocs.io/en/latest/Containers.html</li> </ul> </li> <li>include <code>-ftree-vectorize</code> and <code>-fno-math-errno</code> in default compiler     optimisation flags for GCC     (#2388)<ul> <li>this significantly improves performance of generated binaries     when building with a GCC-based toolchain</li> <li>can be disabled if needed via the <code>vectorize</code> toolchain option</li> </ul> </li> <li>several enhancements/fixes to GitHub integration support:<ul> <li>loosen commit message requirements for <code>--new-pr</code> w.r.t. to     patches as long as all easyconfigs are new     (#2438)</li> <li>automatically add '<code>new</code>' and/or '<code>update</code>' labels in     <code>--new-pr</code>     (#2384)</li> <li>add <code>force_in_dry_run=True</code> to <code>copy_file</code> in <code>copy_patch_files</code>     (#2442)</li> <li>test for custom commit message when deleting a file instead of     when adding a patch     (#2443)</li> <li>make <code>diff_stat</code> pattern also match output of older git versions     in tests for <code>--new</code>/<code>update-pr</code>     (#2444)</li> <li>remove duplicates from <code>--new-pr</code> title     (#2478)</li> </ul> </li> <li>add support for \"<code>eb --fetch</code>\" to only download sources (even     without having a modules tool installed)     (#2457)</li> <li>add definitions for a bunch of new toolchains:<ul> <li><code>golf</code>     (#2458),     <code>gmkl</code>     (#2460),     <code>gomkl</code>     (#2455),     <code>pmkl</code>     (#2460)</li> <li>toolchains including CUDA: <code>gmklc</code>, <code>gomklc</code>, <code>iimklc</code>,     <code>iompic</code>, <code>iomklc</code>     (#2461)</li> </ul> </li> <li>various minor enhancements, including:<ul> <li>avoid that '<code>--inject-checksums</code>' adds lines longer than 120     characters     (#2434)</li> <li>enable caching of <code>$HOME/.cache/pip</code> in Travis config     (#2435)</li> <li>replace raw strings with bytes literal as iterator sentinels in     checksum calculation     (#2446)</li> <li>new command-line option '<code>--job-max-jobs</code>' to cap nr of     submitted build jobs with GC3Pie     (#2378)</li> <li>add configuration for houndci + flake8     (#2451)</li> <li>add <code>Accept</code> header when downloading file     (#2437)</li> <li>include running of '<code>eb --check-github</code>' in Travis config     (#2449,     #2454)</li> <li>flesh out common code blocks in <code>test/framework/options.py</code>     (#2452)</li> <li>support '<code>depends_on</code>' load statements in generated modules     via <code>--module-depends-on</code> and <code>module_depends_on</code> easyconfig     parameter     (#2391)</li> <li>fix compatibility with Modules v4.1.x     (#2470)</li> <li>add support to <code>run_cmd</code> to enable streaming output     (#2476)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>determine whether included easyblocks are generic or not based     on class they define     (#2432)</li> <li>make sure GitHub token is used in test for <code>--preview-pr</code>     (#2436)</li> <li>take into account that toolchain components may be hidden when     determining toolchain composition     (#2440)</li> <li>stick to autopep8 1.3.4 when testing with Python 2.6     (#2462)</li> <li>strip off <code>.lua</code> extension when backing up modules to ensure     Lmod 6.x doesn't pick up on them     (#2463)</li> <li>check for <code>modulecmd.tcl</code> before modulecmd in bootstrap script     to discriminate between Modules 4.1.x vs 3.2.10     (#2468)</li> <li>fix <code>derive_alt_pypi_url</code> after PyPI switching to sha256 in     package URLs + fix broken test for <code>pypi_source_urls</code> + fix     bootstrap script     (#2471)</li> <li>make sure that both '<code>get_git_revision</code>' and     '<code>this_is_easybuild</code>' return regular strings rather than     Unicode strings     (#2472)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for Nim     (#1402)</li> <li>minor enhancements, including:<ul> <li>enhance <code>RPackage</code> easyblock to support installing from unpacked     sources     (#1383)</li> <li>add support to <code>PythonPackage</code> easyblock to install with     '<code>pip install --editable</code>'     (#1384)</li> <li>add <code>$EBROOTIFORT/include</code> in <code>$CPATH</code> for ifort     (#1385)</li> <li>add houndci + flake8 configuration     (#1388)</li> <li>add additional location to <code>$PATH</code> for FLUENT installations     (#1389)</li> <li>make <code>PythonPackage</code> generic easyblock aware of     '<code>unpack_options</code>' easyconfig parameter     (#1391)</li> <li>minor updates to ABAQUS easyblock to support latest version     (#1394)</li> <li>add support for extracting sources in <code>Binary</code> easyblock     (#1401)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix linking to FFTW for Doris: should be <code>-lfftw3f</code>     (#1387)</li> <li>fix for installing TensorFlow 1.6.0: use the absolute path for     the C compiler when compiling with GPU support     (#1386)</li> <li>also take <code>lib64</code> into account for binutils libraries     (#1399)</li> <li>make sanity check in MPICH easyblock aware of libraries in     <code>lib64</code> subdir     (#1403)</li> <li>take into account that <code>self.debuggerpath</code> may not be set in icc     easyblock     (#1408)</li> <li>extend noqa in configure step of Qt easyblock     (#1409)</li> </ul> </li> </ul> <p>easyconfig</p> <ul> <li>added easyconfigs for new toolchain golf/2018a     (#6080)</li> <li>added example easyconfig files for 39 new software packages:<ul> <li>ARAGORN     (#6138,     #6219),     amask     (#6105),     BamBam     (#5490),     Bandage     (#6053),     bcgTree     (#6057),     biobambam2     (#6040),     CODEX2     (#5972),     coverage     (#5964),     DANPOS2     (#5870),     EasyQC     (#6175),     elastix     (#6074),     FRANz     (#6035),     Filtlong     (#6050),     FriBidi     (#6181),     Gblocks     (#6057),     Grace     (#6036),     LMfit     (#6119),     libmaus2     (#6040),     MathGL     (#6033),     MiGEC     (#6047),     MiXCR     (#6045),     Miniconda3     (#6075),     Multiwfn     (#5403),     mosdepth     (#6169),     Nim     (#6167),     Porechop     (#6051),     propy     (#6091),     Roary     (#6056),     Rtree     (#6222),     SALib     (#6145),     SMRT-Link     (#6218),     SimpleITK     (#6172),     spectral.methods     (#6104),     supernova     (#6193),     TEToolkit     (#5912),     tbl2asn     (#6139),     udocker     (#5770),     vartools     (#6102),     XCfun     (#5975)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>gmpich/2017.08</code>     (#6143),     <code>goolfc/2018a</code>     (#6129),     <code>intel/2018.02</code>     (#6077),     <code>iomkl/2018.02</code>     (#6088)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 8.6.3, Anaconda2 5.1.0, Anaconda3 5.1.0, binutils 2.30,     dask 0.17.2, FFmpeg 4.0, GCC(core) 7.3.0, GROMACS 2016.5, HTSlib     1.8, LLVM 6.0.0, Mesa 17.3.6, netCDF 4.6.0, Octave 4.2.2, OpenCV     3.4.1, PLUMED 2.4.1, PROJ 5.0.0, PostgreSQL 10.3, Qt5 5.10.1, R     3.4.4, SAMtools 1.8, Spack 0.11.2, TensorFlow 1.7.0, VTK 8.1.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add test to ensure there's only one variant for each dependency     in dep graph of easyconfigs using particular toolchains     (#5970,     #6023)</li> <li>add extensions required by CODEX2 v20180227 to Bioconductor w/ R     3.4.3     (#5972)</li> <li>add config file for https://pre-commit.com/     (#5785)</li> <li>add custom sanity check paths for GraphicsMagick consistently     (#5997)</li> <li>add custom sanity check paths to recent Ghostscript easyconfigs     (#5998)</li> <li>add svd, Rssa, JBTools, RUnit, DistributionUtils and gapfill     extensions for R 3.4.3     (#6099)</li> <li>add additional extensions to Bioconductor 3.6 bundle     (#6136)</li> <li>add xlrd extension to recent Python 2.x and 3.x easyconfigs     (#6162)</li> </ul> </li> <li>minor changes, including:<ul> <li>use gettext 0.19.8.1 on top of libxml2 2.9.7 as dep for git     built with <code>foss/2018a</code>     (#5993)</li> <li>bump hwloc dep for OpenMPI 2.1.2 that is part of <code>iomkl/2018a</code>     to v1.11.8     (#5994)</li> <li>use non-interactive plotting backend by default for matplotlib     2.1.2     (#6024)</li> <li>don't use bare Perl as dependency for git with <code>foss/2018a</code>,     use variant with extensions     (#6058)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix <code>moduleclass</code> &amp; add custom <code>sanity_check_paths</code> in gettext     easyconfigs     (#5991)</li> <li>drop use of <code>--disable-dlopen</code> in (recent) OpenMPI easyconfigs     due to negative performance impact     (#6060)</li> <li>add missing XZ dep in Python 3.6.4 easyconfigs built with     <code>*/2018a</code> toolchain     (#6065)</li> <li>add 10 packages that were previously downloaded in Python 3.6.4     easyconfigs     (#6081)</li> <li>add patch for Tensorflow 1.6 &amp; 1.7 to include missing -lrt link     flag (needed in CentOS6)     (#6089)</li> <li>fix checksums for R extensions that were updated in place in     easyconfigs for R versions 3.4.3 &amp; 3.4.4     (#6118)</li> <li>include pkg-config as build dep in recent R easyconfigs     (required for at least nloptr)     (#6122)</li> <li>remove Intel-specific workaround for     '<code>undefined symbol: __stack_chk_guard</code>' issue from Python     3.6.4 foss/2018a easyconfig     (#6130)</li> <li>add configopt <code>--without-matlab</code>/<code>octave</code> to all NLopt     easyconfigs     (#6132)</li> <li>also consider <code>lib64</code> in <code>sanity_check_paths</code> for Bison 3.0.4     (#6170)</li> <li>don't use libyaml built with dummy as dep for PyYAML     (#6208)</li> <li>add missing pkg-config build dep in recent     GObject-Introspection, GLib &amp; cairo easyconfigs     (#6216)</li> <li>don't include (ancient version of) <code>Time::HiRes</code> as Perl     extension, since it's a core Perl module     (#6225)<ul> <li>this fixes problems with the installation of BioPerl and     proovread</li> </ul> </li> <li>add missing XML-LibXML dependency in recent BioPerl easyconfigs     (#6226)</li> <li>add <code>--without-ada</code> configure option in recent ncurses     easyconfigs     (#6228)</li> <li>add patch for snaphu to fix segmentation fault due to use of     short integer     (#6230)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb353","title":"EasyBuild v3.5.3 (March 7th 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>re-enable testing against environment modules, bump Lmod to     7.7.16     (#2425)</li> <li>print which hook is being executed in the command line output     (#2427)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix order in result of gen_list_easyblocks and     gen_easyblocks_overview_rst     (#2421)</li> <li>fix target account for branch pushed when using <code>--new-pr</code>     (#2426)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>make GROMACS easyblock select build type based on value for     '<code>debug</code>' in '<code>toolchainopts</code>'     (#1374)</li> <li>re-enable testing against environment modules, bump Lmod to     7.7.16     (#1376)</li> <li>enhance Gurobi easyblock to support installing Python bindings     (#1378)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 2 new software packages:<ul> <li>CNVkit and hmmlearn     (#5954)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>matplotlib 2.1.2, TensorFlow 1.6.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>re-enable testing against environment modules, bump Lmod to     7.7.16     (#5944)</li> <li>add cghFLasso extension to R 3.4.3 easyconfigs     (#5953)</li> <li>add '<code>Math::CDF</code>' extension to recent Perl modules     (#5957)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing <code>--enable-ld-version-script</code> configure option for     LibTIFF 4.0.9 built with <code>GCCcore/6.4.0</code>     (#5945)</li> <li>hard disable UCX support in recent OpenMPI versions, to dance     around bug in OpenMPI configure script     (#5949)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb352","title":"EasyBuild v3.5.2 (March 2nd 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add functionality to skip devel module with naming scheme     (#2374)</li> <li>add pagination support in <code>clean_gists.py</code>     (#2379)</li> <li>allow basic compiler modulenames to be specified as keys in     <code>--optarch</code>     (#2387)</li> <li>initial set of OHPC module meta data for EasyBuild     (#2392)</li> <li>allow different target account in <code>post_comment_in_issue</code>     (#2399)</li> <li>declare support for RPATH linking stable     (#2409)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update bootstrap script to be compatible with Modules v4     (#2390)</li> <li>avoid fatal error when determining glibc version on non-glibc     Linux system (e.g. Alphine Linux)     (#2398)</li> <li>exclude location of RPATH wrappers from <code>$PATH</code> to avoid fork     bomb     (#2410)</li> <li>fix target account for <code>--update-pr</code> in case it's different     from GitHub account being used to push branch     (#2419)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblocks for COMSOL     (#1317),     Stata     (#1241)     and TensorFlow     (#1287,     #1361)</li> <li>enhance GCC easyblock to support building generically (via     '<code>generic</code>' easyconfig parameter or <code>--optarch=GENERIC</code>)     (#1336)</li> <li>minor enhancements, including:<ul> <li>make GROMACS easyblock aware of building for KNL via     <code>--optarch=MIC-AVX512</code>     (#1360)</li> <li>unset <code>$PERL_MM_OPT</code> and <code>$PERL_MB_OPT</code> when installing Perl     modules to avoid problems     (#1362)</li> <li>add custom '<code>use_pip_for_deps</code>' easyconfig parameter to     <code>PythonPackage</code> easyblock     (#1366)</li> <li>add support for '<code>default_component_specs</code>' easyconfig     parameter in <code>Bundle</code> easyblock     (#1369)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix logic in icc easyblock w.r.t. location of debugger libraries     (libipt library for gdb)     (#1224)</li> <li>fix Tkinter easyblock to install Tkinter 3.x     (#1347)</li> <li>let impi modules also update <code>$MANPATH</code>     (#1354)</li> <li>enhance Octave extension filter to avoid false positives     (#1355)</li> <li>make CUDA easyblock aware of '<code>preinstallopts</code>' easyconfig     parameter     (#1367)</li> <li>fix handling of per-component (checksums for) patches in     <code>Bundle</code> easyblock     (#1369)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 24 new software packages:<ul> <li>AMPL-MP     (#5800),     AmberTools     (#5632),     bcolz     (#5864),     detonate     (#5709),     dropEst     (#5734),     EvidentialGene     (#5627),     faceswap     (#5825),     fineSTRUCTURE     (#5663),     Gradle     (#5828),     gbs2ploidy     (#5877),     HIPS     (#5725),     Ipopt     (#5800),     libMemcached     (#5804),     MEGAHIT     (#5748),     Mmg     (#5807),     methylpy     (#5874),     pstoedit     (#5884),     python-igraph     (#5905),     RNAcode     (#5854),     Seq-Gen     (#5695),     Stata     (#5102),     scikit-allel     (#5864),     TetGen     (#5681),     zarr     (#5864)</li> </ul> </li> <li>added new easyconfigs for existing toolchains: giolf/2018a     (#5777),     goolfc/2017b     (#5768),     iomkl/2018a     (#5878)</li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>CP2K 5.1, IPython 6.2.1, OpenFOAM v1712, Perl 5.26.1, Python     3.6.4, TensorFlow 1.5.0, X11 20180131</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add <code>feather</code> and <code>tidyverse</code> as extensions for R 3.4.3     (#5693)</li> <li>build recent PLUMED versions with all modules enabled     (#5696)</li> <li>add MAST/splatter/scDD to Bioconductor 3.6 bundle     (#5704)</li> <li>add <code>dummies</code> as extension for R 3.4.3 + <code>monocle</code>/<code>scde</code>/<code>ROTS</code>     (+ deps) to Bioconductor 3.6 bundle     (#5724)</li> <li>include <code>io</code> and <code>statistics</code> extensions to Octave 4.2.1     easyconfigs     (#5798)</li> <li>switch to using TensorFlow as backend for recent versions of     Keras     (#5821)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>using the correct binutils in jemalloc 5.0.1 easyconfig using     <code>GCCcore/6.4.0</code>     (#5659)</li> <li>fix source URLs for MPC     (#5662)</li> <li>add Tkinter as dependency for ASE &amp; matplotlib using Python     3.6.3     (#5658)</li> <li>fix versions for updated extensions in Bioconductor 3.6 bundle     (#5704,     #5724,     #5880)</li> <li>fix missing M4 build dependency in nettle easyconfigs     (#5722)</li> <li>fix homepage for OpenFOAM 4.x &amp; 5.x, should be <code>openfoam.org</code>     (#5422,     #5780)</li> <li>add matplotlib, cairo &amp; PyCairo dependencies for graph-tool     2.26 + enhance sanity check     (#5787)</li> <li>fix hardcoded version in scikit-image easyconfigs     (#5822)</li> <li>fix pkgconfig moduleclass, '<code>data</code>' doesn't make much sense     (#5817)</li> <li>add sanity check in recent matplotlib easyconfigs to ensure that     Tkinter is available     (#5689,     #5896)</li> <li>correct MPI path when building ABINIT with '<code>foss</code>' toolchain     (#5760)</li> <li>patch Hyperopt to make it work with networkx 2.0     (#5642)</li> <li>add Tkinter sanity check to ASE easyconfigs     (#5691,     #5909)</li> <li>include autotools as build dep in git easyconfigs     (#5718)</li> <li>fix sanity check paths for Debian OS in JasPer easyconfigs     (#5897)</li> <li>fix source_urls for recent versions of ABINIT     (#5908)</li> <li>add patch for recent GDAL easyconfigs using <code>intel</code> toolchain to     fix icc get stuck on compiling <code>ceos.c</code>     (#5915)</li> <li>add explicit zlib dependency in Tkinter 2.x and 3.x     (#5797,     #5926)</li> <li>fix source URLs &amp; homepage in Singularity easyconfigs     (#5927)</li> <li>fix installation of TensorFlow 1.3 via binary wheel after     introducing TensorFlow easyblock     (#5938)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb351","title":"EasyBuild v3.5.1 (January 16th 2018)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add definition of <code>giolfc</code> toolchain     (#2359)</li> <li>add support for Environment Modules 4     (#2365)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>install SQLAlchemy &lt; 1.2.0 with Python 2.6 in Travis config     (#2367)</li> <li>make code in <code>easybuild/tools/job/gc3pie.py</code> forward-compatible     with GC3Pie 2.5     (#2373)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>auto-detect default build target for Clang     (#1115)</li> <li>build GROMACS for target architecture based on <code>--optarch</code>     (#1163)</li> <li>ensure correct $PYTHONPATH for recent OpenBabel versions     (#1219)</li> <li>enhance Amber easyblock with support for OpenBLAS and better     Intel MPI support     (#1305)</li> <li>also support only installing AmberTools through Amber easyblock     (#1305)</li> <li>also pick locations for CUPTI headers &amp; libraries in CUDA     easyblock     (#1306)</li> <li>update patching out of sanitizer tests for recent Clang versions     (&gt;=5.0)     (#1327)</li> <li>update known questions for Qt5 to support installing recent     versions     (#1328)</li> <li>update BamTools easyblock for v2.5.0     (#1332,     #1337)</li> <li>disable <code>libfox</code> target if external module found in     QuantumESPRESSO easyblock     (#1333)</li> <li>add support for linking Octave with multi-threaded BLAS/LAPACK     library     (#1340)</li> <li>support <code>install_target</code> in PythonPackage + deprecate     <code>use_easy_install</code> &amp; <code>use_setup_py_develop</code>     (#1341,     #1342)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make RubyGem easyblock use <code>$GEM_*</code> environment variables except     if as extension of Ruby itself     (#1247)</li> <li>move initialisation in <code>SystemCompiler</code> &amp; <code>SystemMPI</code> easyblocks     to the prepare step     (#1282)</li> <li>enable skipping sanitizer tests by default in Clang easyblock,     they can't be relied on     (#1329)</li> <li>fix quotes when using <code>$ORIGIN</code> in <code>RPATH</code> locations for DOLFIN     (#1338)</li> <li>fix sanity check for shared libraries in Trilinos easyblock     (#1339)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for <code>foss/2018a</code> and <code>intel/2018a</code> common     toolchains     (#5577),     (#5578)</li> <li>added example easyconfig files for 26 new software packages:<ul> <li>BeautifulSoup     (#5601),     Calendrical     (#5588),     ChimPipe     (#5560),     crb-blast     (#5124)),     dammit     (#5125),     deepTools     (#5536),     FastQ_Screen     (#5404),     FoX     (#5496),     GffCompare     (#5581),     GlimmerHMM     (#5559),     LocARNA     (#5548),     MapSplice     (#5566),     MariaDB-connector-c     (#5557),     NextGenMap     (#5430),     nd2reader     (#5545),     PIMS     (#5545),     Pysolar     (#5585),     phono3py     (#5551),     preseq     (#5569),     proovread     (#5513),     QUAST     (#5610),     RNA-SeQC     (#5589),     RNAclust     (#5607),     Ragout     (#5608),     SOAPfuse     (#5417),     TransDecoder     (#5125)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>BLAST+ 2.7.1, BamTools 2.5.0, Boost 1.66.0, Clang 5.0.0, dask     0.16.0, FFmpeg 3.4.1, GROMACS 2016.4, HDF5 1.8.20, matplotlib     2.1.1, PLUMED 2.4.0, Pillow 5.0.0, Qt5 5.9.3, QuantumESPRESSO     6.2, Ruby 2.5.0, Rust 1.22.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>include <code>gomms</code> in list of extensions for R 3.4.3     (#5547)</li> <li>clean up BamTools easyconfigs to rely on updated easyblock + add     SHA256 checksums     (#5575)</li> <li>add <code>Time::HiRes</code> to recent Perl versions     (#5616)</li> <li>add <code>DNAcopy</code> &amp; <code>dupRadar</code> extensions to bundle for Bioconductor     3.6     (#5587,     #5618)</li> <li>switch to using <code>install_target</code> rather than now deprecated     <code>use_easy_install</code> and <code>use_setup_py_develop</code>     (#5625)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>avoid auto-downloading of parcel in gdc-client 1.3.0 easyconfig     (#5523)</li> <li>fix permissions on <code>make_raw_alos.pl</code> script in ROI_PAC     installation     (#5546)</li> <li>remove erroneous patch for Intel compiler support in Perl 5.26.0     easyconfig built with <code>GCCcore/6.4.0</code>     (#5561)</li> <li>include <code>HWxtest</code> as extension to fix issue with <code>diveRsity</code> in     R 3.4.3 easyconfig file     (#5570)</li> <li>add pkg-config as build dependency for fontconfig, harfbuzz,     gnuplot, pango     (#5580)</li> <li>fix versions of updated extensions in BioConductor bundle     (#5587,     #5618)</li> <li>add missing libpng dependency in ROOT 6.10.08 easyconfigs     (#5595)</li> <li>fix option passed to configure in M4     (#5606)</li> <li>rename SIBELia to Sibelia     (#5603)</li> <li>add patch for binutils 2.26 to fix compatibility with GCC 6.x     (#5611)</li> <li>fix for dependencies was set twice in OpenMPI 3.0.0 easyconfig     (#5619)</li> <li>fix download URL in comment of Kent tools easyconfigs     (#5633)</li> <li>add SHA256 checksums to various easyconfigs     (#5635,     #5636,     #5639)</li> <li>add <code>rdma-core-devel</code> to OS dependencies for OpenMPI 3.0.0     (#5648)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb350","title":"EasyBuild v3.5.0 (December 15th 2017)","text":"<p>feature release</p> <p>framework</p> <ul> <li>add support for implementing pre- and post-step hooks     (#2343)<ul> <li>documentation available at     http://easybuild.readthedocs.io/en/latest/Hooks.html</li> </ul> </li> <li>various enhancements, including:<ul> <li>add support for foss-like toolchain with Spectrum MPI: <code>gsolf</code>     (#2329)</li> <li>add support for <code>--preview-pr</code>     (#2331,     #2337,     #2348)<ul> <li>see also     http://easybuild.readthedocs.io/en/latest/Integration_with_GitHub.html#previewing-easyconfig-pull-requests-preview-pr</li> </ul> </li> <li>flesh out <code>find_extension</code> function, hoist dict with extract     commands into a constant     (#2336)</li> <li>add support for using <code>self.start_dir</code> rather than using     <code>self.cfg['start_dir']</code>     (#2339)</li> <li>add support for '<code>exts_default_options</code>' easyconfig parameter     (#2345,     #2346)</li> <li>allow use of '<code>start_dir</code>' easyconfig parameter in extensions     (#2353)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix typo in '<code>giolf</code>' toolchain definition     (#2327)</li> <li>fix minor issues with <code>--inject-checksums</code>     (#2333)</li> <li>fix error message when '<code>gv</code>' Python package is not available     (#2340)</li> <li>install paramiko version &lt; 2.4.0 for Python 2.6 in Travis     config     (#2344)</li> <li>disable broken log rotation, avoid duplicate logging of output     of executed commands under '<code>--debug</code>'     (#2347)</li> <li>also include $ORIGIN and absolute paths to '<code>lib</code>' and     '<code>lib64</code>' subdirectories in RPATH locations     (#2358)</li> <li>fix repo references in <code>install-EasyBuild-develop.sh</code> script     (#2360)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new software-specific easyblock for Bazel     (#1286)     and Octave     (#1304)</li> <li>new generic easyblock for installing Octave packages as extensions     (#1304,     #1318)</li> <li>minor enhancements, including:<ul> <li>remove <code>foamExec</code> &amp; <code>wdot</code> from sanity checks, add <code>blockMesh</code> &amp;     <code>checkMesh</code> + enable logging for recent OpenFOAM versions     (#1205,     #1272)</li> <li>add exceptions for FFTW/3.3.6 on POWER with GCC 5/6/7     (#1274)</li> <li>add support for Spectrum MPI to the <code>SystemMPI</code> easyblock     (#1275)</li> <li>allow skipping of steps for <code>Bundle</code> components + fix issues     with templates &amp; formatting of error message     (#1278)</li> <li>update HPCG easyblock for v3.0 by changing configure syntax     (#1284)</li> <li>correctly configure for BLAS/LAPACK in R easyblock &amp; check     configure output     (#1292,     #1300)</li> <li>make R easyblock set configure options for dependencies     (#1297,     #1303)</li> <li>allow tuning of build command in <code>PythonPackage</code> via custom     '<code>buildcmd</code>' easyconfig parameter     (#1299)</li> <li>set default Java encoding to <code>UTF8</code> when installing Trinity     (#1302)</li> <li>also define <code>$CUDA_ROOT</code> in generated module for CUDA     (#1234)</li> <li>make the ScaLAPACK easyblock capable of building in parallel     (#1288,     #1321,     #1324)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>avoid changing <code>$CPATH</code>, <code>$LD_LIBRARY_PATH</code> an <code>$LIBRARY_PATH</code>     in generated modules for Intel Advisor, Inspector, and VTune     (#1229)</li> <li>fix check for Intel MKL in PSI easyblock     (#1273)</li> <li>fix missing space in fftw easyblock     (#1277)</li> <li>fix use of FFTW on top of Intel MKL in CP2K easyblock     (#1281)</li> <li>fix wrong sanity check for Boost when using Python 3.x     (#1283)</li> <li>pick up per-component checksums in <code>Bundle</code> generic easyblock     (#1285)</li> <li>correctly pass down optimization flags in CP2K easyblock     (#1293)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 39 new software packages:<ul> <li>AmberMini     (#5476),     arrow     (#5416),     bat     (#5416),     CIRCexplorer     (#5356),     CIRCexplorer2     (#5470),     CIRI     (#5358),     FALCON     (#5265),     FastaIndex     (#5465),     find_circ     (#5348),     future     (#5236),     GapCloser     (#5465),     glibc     (#5428),     GRNBoost     (#5373),     HDFView     (#5391),     Horovod     (#5239),     HPDBSCAN     (#5371),     Hyperopt     (#5455),     IntelClusterChecker     (#4970),     ITK     (#5434),     LAST     (#5465),     MDTraj     (#5317),     Meson     (#5228),     mkl-dnn     (#5319,     #5362),     Ninja     (#5228),     OpenKIM-API     (#5479),     ParmEd     (#5476),     PCRaster     (#5386),     piSvM     (#5308),     piSvM-JSC     (#5316),     PTESFinder     (#5359),     pybedtools     (#5347),     pymbar     (#5476),     pyScaf     (#5465),     QIIME2     (#5355),     QTLtools     (#5361),     Redundans     (#5465),     Rmath     (#5361),     sbt     (#5373),     SNAP     (#5465)</li> </ul> </li> <li>added new easyconfigs for existing toolchains: <code>intel/2017.09</code>     (#5303),     <code>intel/2018.00</code>     (#5129),     <code>intel/2018.01</code>     (#5345)</li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>CGAL 4.11, CMake 3.10.0, Caffe 1.0, FFTW 3.3.7, GATE 8.0,     gnuplot 5.2.2, HPCG 3.0, HTSlib 1.6, Keras 2.1.2, LLVM 5.0.0,     Mesa 17.2.5, mpi4py 3.0.0, netCDF 4.5.0, OpenFOAM 5.0, ParaView     5.4.1, R 3.4.3, Ruby 2.4.2, Rust 1.21.0, SCons 3.0.1, Szip     2.1.1, Theano 1.0.0, VTK 8.0.1, X11 20171023</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add SHA256 checksums to Autoconf     (#5304),     Automake     (#5305),     libtool     (#5306)     and M4     (#5307)     easyconfigs</li> <li>avoid hardcoding extension versions in worker easyconfig,     include '<code>perl</code>' as OS dep     (#5324)</li> <li>enable building ScaLAPACK in parallel with enhanced ScaLAPACK     easyblock     (#5331)</li> <li>include <code>RInside</code> extension in R 3.4.0 easyconfig     (#5354)</li> <li>clean up configure options that are now handled by R easyblock     (#5478,     #5485)</li> <li>update Octave easyconfigs to use Octave easyblock, add     extensions for latest Octave versions     (#5484,     #5503,     #5507)</li> <li>add <code>Log4perl</code> extension to Perl 5.26.0 easyconfigs     (#5511)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing extensions required by MultiQC &amp; stick to networkx     1.11     (#5240)</li> <li>disable <code>optarch</code> when using Intel compilers and enable tests in     all libxc easyconfigs     (#5256,     #5257)</li> <li>avoid downloads when installing matplotlib 2.1.0 w/ Python     2.7.14     (#5267)</li> <li>fix <code>$CPATH</code> in recent libffi easyconfigs + enhance sanity check     &amp; add checksum     (#5271)</li> <li>use Github source URL, run <code>autogen.sh</code> + include Autotools     build dep for numactl     (#5286,     #5296,     #5297,     #5299,     #5302)</li> <li>add hwloc to GROMACS dependencies     (#5295)</li> <li>fix <code>source_urls</code> (&amp; <code>sources</code> spec) for GATE     (#5367)</li> <li>consistently add Autotools build dep in recent netCDF     easyconfigs     (#5394)</li> <li>fix check in test suite for binutils build dep when <code>GCCcore</code>     used as toolchain     (#5436)</li> <li>libdap 3.19.1 checksum changed     (#5473)</li> <li>disable new rfkill feature in easyconfig for util-linux 2.31     since it requires a recent kernel     (#5480)</li> <li>add missing PROJ dependency in recent GDAL easyconfigs     (#5481)</li> <li>fix name in TensorFlow easyconfigs (was 'TensorFlow')     (#5495)</li> <li>fix checksum for Szip 2.1.1     (#5517)</li> <li>fix order of extensions for FSLeyes, add missing MarkupSafe (dep     for Jinja2)     (#5520)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb341","title":"EasyBuild v3.4.1 (October 17th 2017)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>improve trace output for executed commands + drop requirement     for <code>--experimental</code> for <code>--trace</code>     (#2306)</li> <li>add <code>giolf</code> toolchain definition: GCC, IntelMPI, OpenBLAS,     (Sca)LAPACK and FFTW     (#2310)</li> <li>add support for <code>--force-download</code> and <code>--ignore-checksums</code>     (#2313,     #2314)</li> <li>flesh out <code>pypi_source_urls</code> from <code>derive_alt_pypi_url</code>     (#2319)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also check for use of <code>--rebuild</code> next to <code>--force</code> to skip     sanity check with <code>--module-only</code>     (#2307)</li> <li>ensure <code>$TMPDIR</code> is set to a short path for OpenMPI v2.x     (#2311)</li> <li>guard '<code>module load</code>' commands in generated modules under     <code>--recursive-unload</code> to avoid load storms     (#2316)</li> <li>correctly deal with use of special characters in description &amp;     co     (#2320)</li> <li>fix incorrect <code>FFT_INC_DIR</code> for Intel MKL     (#2323)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>add generic '<code>SystemMPI</code>' easyblock     (#1106,     #1261,     #1262)</li> <li>add software-specific easyblock for SAS     (#1263)</li> <li>minor enhancements, including:<ul> <li>run '<code>wcleanAll</code>' or '<code>wcleanPlatform -all</code>' before building     OpenFOAM     (#780,     #1258)</li> <li>enhance generic '<code>SystemCompiler</code>' easyblock     (#1106)</li> <li>clean up <code>--trace</code> output for Python &amp; Python packages     (#1248)</li> <li>update Intel MPI easyblock to support 2018.* versions     (#1253)</li> <li>add support for Intel MPI and Intel MKL to ScaLAPACK easyblock     (#1255)</li> <li>enhance GCC easyblock to also put symlinks in place for     <code>cc</code>/<code>c++</code>/<code>f77</code>/<code>f95</code> commands     (#1256)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>allow that '<code>gcc -print-multiarch</code>' fails in icc easyblock     (#1249)</li> <li>fix prefix subdirectory for older versions of icc (in particular     2011.3.174)     (#1250)</li> <li>use <code>remove_file</code> rather than <code>os.remove</code> in generic <code>IntelBase</code>     easyblock to correctly deal with broken symlinks     (#1251)</li> <li>fix sanity check for MXNet easyblock + correctly detect unpacked     source directory     (#1257)</li> <li>avoid building CP2K twice due to incorrect attempt at running     '<code>make clean</code>' first     (#1266)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for new toolchain <code>giolf/2017b</code>     (#5140)</li> <li>added example easyconfig files for 13 new software packages:<ul> <li>ASAP3     (#5200),     Albacore     (#5153),     CatMAP     (#5225),     DLCpar     (#5209),     FSLeyes     (#5192),     IQ-TREE     (#3695),     NEST     (#5515),     nanonet     (#5149),     OMA     (#5211),     , oxford_asl     (#5193),     QEMU     (#5220),     REMORA     (#5159),     SAS     (#5208),     supermagic     (#5187)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Anaconda2/3 4.4.0, Blender 2.79, Boost 1.65.1, CMake 3.9.4,     FFmpeg 3.3.4, GCC 5.5.0, h5py 2.7.1, Keras 2.0.8, matplotlib     2.1.0, mympingpong 0.8.0, OpenCV 3.3.0, OpenFOAM-Extend 4.0,     OpenMPI 2.1.2 + 3.0.0, Pillow 4.3.0, Python 2.7.14 + 3.6.3,     SAMtools 1.6, scikit-image 0.13.0, scikit-learn 0.19.0,     Tensorflow 1.3.0, vsc-mympirun 4.0.2</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add <code>xkeyboard-config</code> component in X11 bundle     (#5066)</li> <li>clean up use of <code>wcleanAll</code> in OpenFOAM-Extend easyconfigs, now     handled by OpenFOAM easyblock     (#5131)</li> <li>also install <code>run_rcorrector.pl</code> with Rcorrector     (#5135)</li> <li>add SHA256 checksum to PyCUDA easyconfig     (#5154)</li> <li>fix/improve description in HDF5 easyconfigs     (#5182)</li> <li>include heatmap3 extension for R 3.4.0     (#5185)</li> <li>add ComplexHeatmap to Bioconductor 3.5 bundle + dep pkgs in R     3.4.0 easyconfig     (#5195)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix source URLs for AUGUSTUS 3.2.3     (#5119)</li> <li>fix building Bison 2.5 on systems with recent glibc     (#5130)</li> <li>also consider <code>rdma-core-devel</code> as alternative to     <code>libibverbs-devel</code> OS dependency     (#5132)</li> <li>consistently use empty toolchain version in icc &amp; ifort     easyconfigs to ensure that GCC(core) dep is loaded during     installation     (#5133,     #5134)</li> <li>add patches for Boost 1.64.0 to fix known issues     (#5148)</li> <li>remove PyCUDA easyconfig for <code>intel/2017a</code>, doesn't work due to     incompatibility between GCC 6.3.0 &amp; CUDA 8     (#5156)</li> <li>add missing Perl extensions in easyconfig for Worker 1.6.7     (#5157)</li> <li>fix checksums for packages that download from     <code>github.com/x/y/archive</code>     (#5162)</li> <li>add missing libpng dependency to g2lib-1.4.0 easyconfig using     intel-2017a     (#5196)</li> <li>fix source_urls for Szip 2.1 &amp; include SHA256 checksum     (#5206)</li> <li>remove unneeded <code>--with-fft-incs</code> configure option for ABINIT     (#5207)</li> <li>disable optarch for libjpeg-turbo 1.5.1 built with <code>intel/2017a</code>     (#5214)</li> <li>update <code>$R_LIBS</code> in plotly easyconfig     (#5215)</li> <li>include NLopt as a dependency in R easyconfigs that include     <code>nloptr</code> as extension     (#5217)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb340","title":"EasyBuild v3.4.0 (September 10th 2017)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for backing up modules via <code>--backup-modules</code>     (#2134)<ul> <li>enabled automatically with <code>--module-only</code> and <code>--skip</code></li> <li>see also     http://easybuild.readthedocs.io/en/latest/Backup_modules.html</li> </ul> </li> <li>add support for <code>--search-paths</code> to extend list of locations     considered by <code>--search</code>/<code>-S</code>     (#2255)</li> <li>include <code>userInGroup</code> check in Lua modules when installation is     group-restricted     (#2274)</li> <li>add experimental support for '<code>eb --trace</code>'     (#2285)<ul> <li>see also     http://easybuild.readthedocs.io/en/latest/Tracing_progress.html</li> </ul> </li> <li>add support for '<code>eb --inject-checksums</code>'     (#2286,     #2292,     #2293)<ul> <li>see also     http://easybuild.readthedocs.io/en/latest/Writing_easyconfig_files.html#adding-or-replacing-checksums-using-inject-checksums</li> </ul> </li> <li>add support for <code>append_paths</code> in module generator     (#2294)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>strip provided GitHub token of spaces in     <code>--install-github-token</code>     (#2270)</li> <li>remove '<code>provides</code>' line from <code>setup.py</code>     (#2275)</li> <li>pass down stdin in '<code>import</code>' check for extensions during     sanity check     (#2276)</li> <li>make sure location to 'eb' installed during stage 1 is     included in <code>$PATH</code> during stage 2 of bootstrap procedure     (#2281)</li> <li>make resolve_path robust against <code>None</code> path being provided     (#2282)</li> <li>ensure clean error message on easyconfig file parse failure     (#2290)</li> <li>fix regex to avoid sucking up additional lines prior to module     file path in <code>modulefile_path</code>     (#2291)</li> <li>fix error message when <code>--use-ccache</code> is used but <code>ccache</code> is     not available in <code>$PATH</code>     (#2295)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>update Siesta easyblock for versions 4.0.1 and 4.1-b3     (#1218)</li> <li>updates GAMESS-US easyblock for version 20170420R1 + move     <code>ddikick.x</code> when <code>ddi_comm</code> is set to '<code>sockets</code>'     (#1221)</li> <li>update MRtrix easyblock for 3.0 &amp; beyond + use <code>copy</code> function     (#1230)</li> <li>update ROOT easyblock to support recent versions that require     using CMake, add sanity check, clean up/enhance <code>make_module*</code>     (#1236)</li> <li>enhance icc easyblock to include multipath include dir in     <code>$CPATH</code>     (#1237,     #1242)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use <code>plumed-patch</code> command rather than '<code>plumed patch</code>' in     GROMACS easyblock     (#1212)</li> <li>remove '<code>provides</code>' line from <code>setup.py</code>     (#1217)</li> <li>fixed wrong use of <code>build_type</code> in <code>self.cfg</code> in WRF easyblock     that resulted in an raised exception     (#1220)</li> <li>added a call to super <code>post_install_step</code> in CUDA easyblock     (#1226)</li> <li>fix <code>$MCRROOT</code> definition in generated module file under     <code>--module-only</code> in MCR easyblock     (#1228)</li> <li>fix permissions for directories in SuiteSparse     (#1238)</li> <li>fix function signature for <code>fetch_extension_sources</code> in OCaml     easyblock     (#1240)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for <code>foss/2017b</code> and <code>intel/2017b</code> common     toolchains     (#4768),     (#4618)</li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>iomkl/2017b</code>     (#5097)</li> </ul> </li> <li>added example easyconfig files for 31 new software packages:<ul> <li>BAMM     (#4650),     BamM     (#4650),     bcl2fastq2     (#4902),     CGNS     (#5078),     CLAPACK     (#5096),     CLISP     (#4926,     #4986),     cadaver     (#4873),     destiny     (#5009),     GroopM     (#4650),     Lucene-Geo-Gazetteer     (#5064),     libffcall     (#4850),     libsigsegv     (#4840),     MERCKX     (#5056),     minimap2     (#4991),     ncompress     (#4852),     OpenNLP     (#5059,     #5061),     OpenRefine     (#5058),     PHAST     (#5096),     PYTHIA     (#5083),     ParallelIO     (#5071),     PnetCDF     (#5071),     plotly     (#5010),     QML     (#5101),     Quorum     (#5095),     Rcorrector     (#5095),     SCnorm     (#5008),     SOAPdenovo-Trans     (#5095),     Shannon     (#5095),     Tika     (#5063),     UNAFold     (#4997),     VERSE     (#4843)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.65.0, binutils 2.29, GAMESS-US 20170420-R1, GCC(core)     7.2.0, gzip 1.8, HDF5 1.8.19, LLVM 4.0.1, MRtrix 3.0_RC2, Perl     5.26.0, ROOT 6.10.04, Spark 2.2.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add checksums to Perl 5.24.1 easyconfigs     (#4973,     #4992)</li> <li>add additional extensions for R 3.4.0 and Bioconductor 3.5     bundle     (#5007,     #5028,     #5029,     #5062,     #5079)</li> <li>also define <code>$INCLUDEPATH</code> and <code>$LIBRARY_PATH</code> in     Tesla-Deployment-Kit easyconfig     (#5018)</li> <li>add check to see whether binutils is included as build dep when     GCCcore toolchain is used     (#5084)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>added Rmpi patch file for R built with intel toolchains incl.     impi 5.x     (#4623)</li> <li>use single-line description in <code>setup.py</code>     (#4881)</li> <li>fix version and source for Seurat + add extensions required by     Seurat in R 3.4.0 easyconfig     (#4889)</li> <li>add zlib as dependency to util-linux easyconfigs     (#4900,     #4998)</li> <li>use <code>modextrapaths</code> instead of <code>modextravars</code> in OpenMM     easyconfig     (#4903)</li> <li>update deprecated PLINK urls     (#4920,     #5006)</li> <li>fix <code>moduleclass</code> for Cookiecutter     (#4947)</li> <li>fix order of OpenMPI dependency in <code>iomkl/2016.09*</code> easyconfigs,     must come after icc/ifort     (#5024)</li> <li>fix typo in comment in util-linux easyconfigs &amp; add SHA256     checksums     (#5052)</li> <li>remove superfluous <code>$CPATH</code> update in GLib 2.44.0 easyconfig     (#5053)</li> <li>update ncurses to not build a separate libtinfo but provide a     soft link instead + force linking to ncurses in libreadline     (#5067,     #5074)</li> <li>include Autotools as build dep for netCDF     (#5077)</li> <li>add missing binutils build dep for texinfo     (#5099)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb331","title":"EasyBuild v3.3.1 (July 12th 2017)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for '<code>allow_prepend_abs_path</code>' easyconfig     parameter     (#2254)</li> <li>support for <code>--merge-pr</code>     (#2266)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>resolve symlinks to location of '<code>eb</code>' in <code>get_paths_for</code>     (#2248)</li> <li>fall back to checking location relative to '<code>eb</code>' location in     <code>find_eb_script</code>     (#2249)</li> <li>respect <code>--suffix-modules-path</code> value for user-specific module     path extensions     (#2250)</li> <li>update EasyBuild bootstrap script to download <code>distribute</code>     tarball from http://easybuilders.github.io/easybuild/files     (#2256)</li> <li>fix default target GitHub account/organisation for <code>--new-pr</code> &amp;     co + fix tests that got broken by migration to     github.com/easybuilders     (#2258)</li> <li>fix checking for new easyconfigs in <code>copy_easyconfigs</code>, pick up     specified commit message as PR title if none was provided     (#2259)</li> <li>get rid of references to <code>hpcugent</code> after move to     github.com/easybuilders     (#2261)</li> <li>automatically enable <code>--ignore-osdeps</code> under <code>--new-pr</code> and     <code>--update-pr</code>     (#2262)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>enhance HDF5 easyblock: define <code>$HDF5_DIR</code> &amp; include     <code>-DMPICH_IGNORE_CXX_SEEK</code> in <code>$CXXFLAGS</code>     (#1200)</li> <li>consistently pass down (named) arguments in <code>prepare_step</code>, and     check for it in the tests     (#1202)</li> <li>remove no longer supported <code>VersionIndependentPythonPackage</code>     generic easyblock     (#1202)</li> <li>update ABAQUS easyblock for recent versions, incl. support for     installing hotfixes     (#1203)</li> <li>get rid of references to '<code>hpcugent</code>' organisation after move     to github.com/easybuilders     (#1206)</li> <li>make Boost easyblock fully aware of <code>(pre)configopts</code>,     <code>(pre)buildopts</code> and <code>(pre)installopts</code>     (#1207)</li> <li>drop check for '<code>ipython</code>' in sanity check of Anaconda     easyblock, to also support Miniconda     (#1210)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 6 new software packages:<ul> <li>FastME     (#4811),     geopy     (#4821),     Miniconda2     (#4841),     ngmlr     (#4818),     OpenCoarrays     (#4799),     Seurat     (#4832)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABAQUS 2017, GCC(core) 6.4.0, Keras 2.0.5, NCBI-Toolkit 18.0.0,     numpy 1.13.0, Tensorflow 1.2.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>add <code>SVG</code> and <code>Statistics::Basic</code> to recent Perl versions     (#4796)</li> <li>remove <code>buildopts</code> from HDF5 easyconfigs, taken care of by     updated HDF5 easyblock now     (#4779)</li> <li>include <code>joblib</code> as extension in recent Python easyconfigs     (#4805)</li> <li>changed moduleclass in mpi4py to better reflect what it is and     to not confuse HMNS     (#4807)</li> <li>get rid of references to '<code>hpcugent</code>' organisation after move     to github.com/easybuilders     (#4815,     #4837)</li> <li>add <code>Rtsne</code> as extension to R 3.4.0     (#4831)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use <code>PYPI_SOURCE</code> as source URL in Tensorflow easyconfigs     (#4786)</li> <li>fix <code>homepage</code> for skewer     (#4791)</li> <li>sync/fix <code>source_urls</code> &amp; <code>homepage</code> in HDF5 easyconfigs     (#4800)</li> <li>fix <code>ubsan</code> error blocking build of GCCcore 6.1.0, 6.2.0, 6.3.0     with system GCC 7.1     (#4813)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb330","title":"EasyBuild v3.3.0 (June 26th 2017)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>clean up easyconfigs that are copied for inclusion in pull     request     (#2197,     #2227)</li> <li>use devel logging where relevant in <code>easybuild.tools.toolchain</code>     (#2198)</li> <li>check exit code for executed <code>module</code> commands     (#2200)</li> <li>also copy patches to installation directory &amp; easyconfigs     archive along with easyconfig file     (#2202,     #2241)</li> <li>add support for SHA256 checksums     (#2215)<ul> <li>also auto-detect whether provided checksum is MD5 or SHA256     based on length (if not checksum type is specified)</li> <li>add support for <code>--enforce-checksums</code>, to require     availability of checksums for sources/patches</li> <li>see     http://easybuild.readthedocs.io/en/latest/Writing_easyconfig_files.html#source-files-patches-and-checksums</li> </ul> </li> <li>add support for renaming sources on download     (#2223)<ul> <li>also involves deprecating use of 2-tuple elements in list of     sources, see     http://easybuild.readthedocs.io/en/latest/Deprecated-functionality.html#depr-sources-2-element-tuple</li> </ul> </li> <li>add support for <code>--detect-loaded-modules</code>     (#2228)</li> <li>give extensions access to <code>module_generator</code> of parent     (#2229)</li> <li>pass down additional arguments to <code>copy_dir</code> down to     <code>shutil.copytree</code>     (#2230)</li> <li>avoid reloading already loaded modules that extend <code>$MODULEPATH</code>     (#2232)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make sure test account &amp; accompanying token is used in tests for     <code>github.py</code>     (#2220,     #2224)</li> <li>only use MPD for old versions of Intel MPI (&lt;4.1) in     <code>mpi_cmd_for</code>     (#2221)</li> <li>escape dots in package filename to ensure correct match in     <code>derive_alt_pypi_url</code>     (#2225)</li> <li>fix <code>GNU_SOURCE</code> template by adding missing <code>/gnu/</code>     (#2235)</li> <li>catch exception <code>shutil.Error</code> in <code>copy_file</code>     (#2239)</li> <li>report full error and traceback on unhandled exception in test     report     (#2240)</li> <li>fix <code>--set-default-module</code> flag     (#2243)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added easyblocks for MXNet     (#1135),     Tkinter(#1184)</li> <li>minor enhancements, including:<ul> <li>enhance sanity check for NCL     (#1169,     #1179)</li> <li>enable building of shared FFTW libraries     (#1180)</li> <li>include update statements for <code>$CPATH</code> and <code>$*LIBRARY_PATH</code> in     generated module in numpy easyblock     (#1183)</li> <li>stop using deprecated '<code>copytree</code>' function from     <code>easybuild.tools.filetools</code>     (#1185)</li> <li>update SAMtools easyblock for v0.1.17     (#1189)</li> <li>update MATLAB easyblock for 2016b &amp; 2017a versions (adjust     permissions and change dir)     (#1182,     #1197)</li> <li>consider <code>$EB_*_LICENSE_SERVER(_PORT)</code> in MATLAB and ANSYS     easyblocks     (#1195)</li> <li>add <code>omp_num_threads</code> custom parameter in CP2K easyblock to     allow defining <code>$OMP_NUM_THREADS</code> during testing     (#1196)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Siesta easyblock to enable and verify parallel build     (#1186)</li> <li>fix bug in alias definition in impi easyblock for <code>mpigxx</code>,     <code>mpiicpc</code> and <code>mpiifort</code>     (#1192)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>enable automatic style checks in easyconfig tests     (#2506)</li> <li>added example easyconfig files for 28 new software packages:<ul> <li>ada     (#4594),     Aspera-CLI     (#4635),     AUGUSTUS     (#4624),     ada     (#4594),     Bio-SamTools     (#4637),     Bpipe     (#4590),     BUSCO     (#4624),     CNVnator     (#4649),     davix     (#4755),     EricScript     (#4594),     FUNWAVE-TVD     (#4743),     gmpy2     (#4609),     gSOAP     (#4755),     libsndfile     (#4628),     lpsolve     (#4264),     LUMPY     (#4682),     MaSuRCA     (#4706),     modred     (#4729),     MXNet     (#4765),     NRGLjubljana     (#4651),     OrfM     (#4703),     Perl4-CoreLibs     (#4670),     prodigal     (#4468),     pydlpoly     (#4756),     SeqAn     (#4603),     sharutils     (#4745),     Spyder     (#4627),     Tkinter     (#4620),     VariantMetaCaller     (#4632)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>gimkl/2017a</code>     (#4646)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>ABINIT 8.2.2, BLAST+ 2.6.0, Bowtie2 2.3.2, FFmpeg 3.3.1, NCL     6.4.0, Rust 1.18.0, SAMtools 1.5, VTK 7.1.1</li> </ul> </li> <li>minor enhancements, including:<ul> <li>use '<code>git diff --name-only</code>' and <code>$TRAVIS_COMMIT_RANGE</code> in     Travis config to get list of changed files     (#4606,     #4619)</li> <li>add tuneR, seewave, soundecology, vcfR extensions for R 3.4.0 (+     libsndfile as dep)     (#4628,     #4680,     #4747)</li> <li>also copy <code>README</code> for GapFiller     (#4631)</li> <li>enable inclusion of version symbol by using     <code>--enable-ld-version-script</code> configure option for LibTIFF     (#4639)</li> <li>add SHA256 checksums for libpciaccess to discriminate from old     tarballs that required running <code>autogen.sh</code>     (#4688)</li> <li>fix <code>NE_GLOBAL_DIR</code> path for ne by also specifying <code>PREFIX</code> in     <code>buildopts</code>     (#4698)</li> <li>more (trivial) style fixes     (#4761)</li> <li>avoid use of <code>import</code> in ANSYS &amp; MATLAB easyconfigs     (#4762)</li> <li>set <code>$OMP_NUM_THREADS</code> during CP2K test step via dedicated     easyconfig parameter     (#4763)</li> <li>avoid use of '<code>import</code>' in BFAST easyconfigs, just strip of     '<code>a</code>' from version     (#4764)</li> <li>add the docopt module to all Python 2017a easyconfigs     (#4770)</li> <li>stop using deprecated 2-element tuple format in sources, use     equivalent dict format instead     (#4774)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix typo in statsmodels source url (<code>/sources/</code> -&gt; <code>/source/</code>)     (#4612)</li> <li>add location to <code>DotLib.pm</code> to <code>$PERL5LIB</code> for SSPACE_Basic     (#4638)</li> <li>add missing <code>/gnu/</code> in ftpmirror.gnu.org <code>source_urls</code>, or use     <code>GNU_SOURCE</code> where possible     (#4653)</li> <li>consistently use <code>--with-harfbuzz=no</code> configure option in     freetype easyconfigs     (#4668)</li> <li>use <code>--with-x=yes</code> in R easyconfigs that include X11 as a     dependency     (#4701)</li> <li>remove '<code>4.0</code>' in tbb description     (#4707)</li> <li>add lib sanity check paths for Debian compatibility in nettle     (#4722)</li> <li>fix source URLs for HDF5     (#4749)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb321","title":"EasyBuild v3.2.1 (May 12th 2017)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>make hardcoded max ratio for failures in <code>adjust_permissions</code>     configurable     (#2213)</li> <li>allow <code>https://</code> on direct download in sources     (#2214)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>bump version bootstrap script to sync with latest update     (#2208)</li> <li>fix crash during module generation when '<code>%</code>' character is     used in description     (#2209)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added easyblock for Siesta     (#1105)</li> <li>minor enhancements, including:<ul> <li>enhance GROMACS easyblock to build with PLUMED support     (#1121)</li> <li>enhance NAMD easyblock: add OpenMP support, update for recent     NAMD versions (2.12), fix compatibility with Tcl versions other     than 8.5     (#1173)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 12 new software packages:<ul> <li>AdapterRemoval     (#4509),     blasr_libcpp     (#4566),     canu     (#4473),     enchant     (#4567),     hunspell     (#4567),     memkind     (#4544),     NLTK     (#4565),     pbbam     (#4566),     pbdagcon     (#4566),     pyenchant     (#4567),     Siesta     (#4562),     xarray     (#4556)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li>goolfc 2017.01     (#4577)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>HDF5 1.10.1, NAMD 2.12, OpenFOAM 4.1, pandas 0.20.1, ParaView     5.2.0, R 3.4.0, R-bundle-Bioconductor 3.5, Tensorflow 1.1.0</li> </ul> </li> <li>minor enhancements, including:<ul> <li>update source URLs in libpciaccess easyconfigs     (#3960)</li> <li>enable use of double precision floating point in METIS 5.1.0     <code>foss/2016a</code> easyconfig     (#4555)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb320","title":"EasyBuild v3.2.0 (May 5th 2017)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add support for marking installed module file as new default     version using <code>--set-default-module</code>     (#2110)</li> <li>additional easyconfig parameters for documentation: <code>docpaths</code>,     <code>examples</code>, <code>site_contacts</code>, <code>upstream_contacts</code>, <code>usage</code>     (#2113)</li> <li>add support for <code>--allow-use-as-root-and-accept-consequences</code>     (#2123)</li> <li>enable extraction of patches from compressed files before     applying them     (#2128)</li> <li>alphabetically sort functions and methods in <code>module_generator</code>     module     (#2132)</li> <li>introduce function <code>ensure_iterable_license_specs</code>     (#2157)</li> <li>bump Travis config to use Lmod 7.4     (#2176)</li> <li>implement <code>copy_dir</code> function in <code>filetools</code>     (#2177)</li> <li>clarify error message when no software-specific easyblock was     found     (#2178)</li> <li>make <code>log.deprecated</code> more verbose by also printing deprecation     warnings to stderr     (#2179)</li> <li>add <code>copy</code> function to <code>filetools</code> for easy copying of lists of     files/directories     (#2180)</li> <li>add support for <code>--verify-easyconfig-filenames</code>     (#2185)</li> <li>add support for <code>--package-tool-options</code>     (#2187)</li> <li>take into account inline trailing comments in     <code>fetch_parameters_from_easyconfig</code>     (#2192)</li> <li>add support for customising easyconfig parameters on a     per-extension basis     (#2194)</li> <li>perform sanity check after stage 2 of EasyBuild bootstrap     script, module file should be in place     (#2199)</li> <li>change order in which module commands are checked, consider Lmod     first     (#2201)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix use of compiler-specific <code>--optarch</code> value in combination     with <code>--job</code>     (#2183)</li> <li>call <code>run_all_steps</code> in regtest mode rather than running steps     individually     (#2203)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added easyblocks for Doris     (#1154,     #1161),     VMD     (#1148)     and WRF-Fire     (#1153,     #1159)</li> <li>minor enhancements, including:<ul> <li>update <code>IntelBase</code>, PGI and TotalView easyblocks to allow list     of license files/servers via '<code>license_file</code>' easyconfig     parameter     (#1129)</li> <li>update Bowtie2 easyblock to set correct build options, copy more     files, extend sanity check     (#1146)</li> <li>added the option to build Boost with multi-threading support     (#1147)</li> <li>allow libpng as OS dependency for WPS     (#1150)</li> <li>extend Boost <code>TIME_UTC</code> patch to Boost versions &lt;= 1.49.0     (#1152)</li> <li>enhance Python sanity check to check for Tkinter support if Tk     is included as a dependency     (#1156,     #1158)</li> <li>add support to install Python extensions without unpacking     (#1166)</li> <li>enhance TBB easyblock to also support building open source     versions     (#1168)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>update FFTW easyblock: <code>--enable-avx-128-fma</code> depends on the     <code>fma4</code> CPU feature (AMD), not <code>fma</code>     (#1142)</li> <li>fix problems when <code>usempi</code> not defined in toolchain in NAMD     easyblock     (#1162)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 34 new software packages:<ul> <li>ACTC     (#4386),     atomate     (#4484),     BreakDancer     (#4455),     bx-python     (#4486),     ClusterShell     (#4432),     custodian     (#4484),     DFTB+     (#4398),     Doris     (#4404),     ED2     (#4402),     FireWorks     (#4484),     GETORB     (#4414),     GapFiller     (#4462),     IPy     (#4450),     imbalanced-learn     (#4373),     ipyrad     (#4507),     libiconv     (#4499),     MultiQC     (#3564),     NLopt     (#1750),     Node-RED     (#4542),     PyCUDA     (#4523),     pymatgen-db     (#4484),     QuTiP     (#4371),     ROI_PAC     (#4414),     Rascaf     (#4459),     RepastHPC     (#4395),     rootpy     (#4242),     SSPACE_Basic     (#4461),     Sambamba     (#4442),     Spack     (#4431),     SpiceyPy     (#4406),     StaMPS     (#4454),     samblaster     (#4435),     VMD     (#4391),     WRF-Fire     (#4403)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>BamTools 2.4.1, Boost 1.64.0, GCC 7.1.0, IPython 5.3.0, LLVM     4.0.0, Mesa 17.0.2, Octave 4.2.1, OpenMPI 2.1.0, PETSc 3.7.5,     PGI 17.3, Perl 5.24.1, Python 2.7.13 + 3.6.1 (incl. numpy     1.12.1, scipy 0.19.0), R 3.3.3, SuiteSparse 4.5.5</li> </ul> </li> <li>various enhancements, including:<ul> <li>sync Bowtie2 easyconfigs, consistently use Bowtie2 easyblock     (#4380)</li> <li>use <code>pl2</code> source tarball for FFTW 3.3.6 which already includes     patch for <code>F03</code> interface     (#4529)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing XZ dep in easyconfig for libunwind 1.1 w/     <code>GCC/4.9.2</code>, sync <code>sanity_check_paths</code> across libunwind     easyconfigs     (#4369)</li> <li>use '<code>use_fma4</code>' rather than deprecated '<code>use_fma</code>'     easyconfig parameter in FFTW easyconfigs using <code>intel</code> toolchain     (#4384)</li> <li>fix <code>pkgconfig</code> patch for Qhull     (#4451)</li> <li>also use patch for METIS 5.1.0 to enable use of doubles in     easyconfig for <code>foss/2016b</code>     (#4467)</li> <li>add dependency NLopt for R extension <code>nloptr</code>     (#4481)</li> <li>fix issue with <code>configparser</code> and <code>backports</code> namespace blocking     inclusion of <code>nbconvert</code> with IPython     (#4504)</li> <li>change source_urls of pycrypto to encrypted     <code>https://pypi.python.org/...</code>     (#4505)</li> <li>fix sources spec for HMMER 3.1b2 + minor style fixes + better     sanity check     (#4531)</li> <li>also build IMB-IO in IMB 4.1 easyconfig using <code>foss/2016a</code>     (#4539)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb312","title":"EasyBuild v3.1.2 (March 20th 2017)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>fix broken packaging support by fixing <code>run_cmd</code> bug with     <code>shell=False</code>     (#2153)</li> <li>minor enhancements, including:<ul> <li>implement <code>change_dir</code> function in <code>filetools</code> module     (#2155)</li> <li>use <code>checker_state</code> in trailing whitespace style check + add     dedicated test     (#2160,     #2169)</li> <li>consider both <code>pycodestyle</code> and <code>pep8</code> Python modules in style     checks     (#2161)</li> <li>make bootstrap script aware various modules-related     <code>$EASYBUILD_*</code> environment variables     (#2170)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>interpret statements that extend <code>$MODULEPATH</code> in     <code>modpath_extensions_for</code> method     (#2104)<ul> <li>also fixes inclusion of superfluous load statements in     modules installed in user HMNS module tree (cfr.     #2172)</li> </ul> </li> <li>take into account that <code>$PATH</code> or <code>$PYTHONPATH</code> may be empty     when running tests     (#2149)</li> <li>handle duplicates in <code>--include-*</code>     (#2151)</li> <li>exclude dependencies of dependencies that extend <code>$MODULEPATH</code>     (#2152)</li> <li>add <code>ld.bfd</code> to RPATH wrappers     (#2156)</li> <li>fix <code>test_vsc_location</code>, <code>vsc.__file__</code> may not be available     when <code>vsc</code> is installed as a namespace package     (#2159)</li> <li>fix reported problems with scripts &amp; docs tests     (#2164)</li> <li>fix <code>--try-software-version</code> using non-greedy matching +     lookahead assertion, add test for <code>tweak_one</code>     (#2166)</li> <li>avoid creating empty modulefile directories when using     <code>modaltsoftname</code>     (#2168)</li> <li>fix <code>fftw_libs</code> for MKL without interface libraries     (#2171)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>add easyblock for QScintilla     (#1127)</li> <li>minor enhancements, including:<ul> <li>auto-disable quad precision on POWER and ARM in FFTW     (#1102,     #1138)</li> <li>allow \"download install\" for PETSc     (#1114)</li> <li>modify Trinity sanity check for versions 2.3 and above     (#1133)</li> <li>make unpacking Python extensions optional     (#1134)</li> <li>update SAMtools easyblock for version 1.4     (#1139)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>reduce number of environment variables in <code>icc</code> and <code>ifort</code>     modules     (#1126,     #1143)</li> <li>also run tests with Tcl module syntax, Lua is the default in     EasyBuild v3.x     (#1128)</li> <li>rename member variable to avoid conflict with member of base     class in PGI     (#1137)</li> <li>don't set <code>$FPATH</code> environment variable in multiple easyblocks     (#1140)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add patch to FFTW 3.3.6 easyconfigs to fix MPI F03 interface     (#4334)<ul> <li>note that this warrants rebuilding FFTW that is a part of     <code>foss/2017a</code></li> </ul> </li> <li>added example easyconfig files for 14 new software packages:<ul> <li>DBG2OLC     (#4281),     disambiguate     (#4125),     fqtrim     (#4280),     GFOLD     (#4293),     Kaiju     (#4349),     LSMS     (#4335),     L_RNA_scaffolder     (#4282),     PileOMeth     (#4289),     psycopg2     (#4319),     QGIS     (#4307,     #4332),     QJson     (#4305),     QScintilla     (#4306,     #4313),     sketchmap     (#4360),     snaphu     (#4362)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including GROMACS 2016.3, PGI 17.1, SAMtools 1.4</li> <li>various enhancements, including:<ul> <li>fix style in several easyconfigs     (#4267-#4271,     #4274,     #4275,     #4277,     #4279,     #4286-#4288,     #4318)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>correctly set <code>$PYTHONPATH</code> in ROOT easyconfigs     (#4239,     #4331)</li> <li>correct libjpeg turbo references in GDAL     (#4276)</li> <li>make sure that HDF5 provided via EasyBuild is used in BLASR     easyconfigs     (#4278)</li> <li>fix issues with miRDeep2 installation     (#4291,     #4301,     #4316)</li> <li>also run tests with Tcl module syntax, Lua is the default in     EasyBuild v3.x     (#4315)</li> <li>fix PostgreSQL homepage + minor style fixes     (#4318)</li> <li>detect use of '<code>$root</code>', which is not compatible with module     files in Lua syntax     (#4330)</li> <li>fix <code>homepage</code>/<code>source_urls</code> for ViennaRNA     (#4338)</li> <li>pass down <code>$FFLAGS</code> via <code>FLAGS_OPT</code> in SWASH easyconfigs     (#4341)</li> <li>remove <code>include/GL/wglext.h</code> from Mesa sanity check     (#4354)</li> <li>rename <code>S.A.G.E.</code> to <code>SAGE</code>, can't have directories with     trailing dot in Windows     (#4368)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb311","title":"EasyBuild v3.1.1 (March 7th 2017)","text":"<p>bugfix/update release</p> <p>framework</p> <ul> <li>minor enhancements, including:<ul> <li>print more useful error message when no compiler-specific     <code>optarch</code> flag is defined     (#1950)</li> <li>add <code>ec</code> parameter to <code>expand_toolchain_load()</code>     (#2103)</li> <li>clarify unstable/closed PR warning message     (#2129)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ensure that <code>$EBEXTSLIST*</code> is also included in generated module     under <code>--module-only</code>     (#2112)</li> <li>fix formatting issues in generated documentation for     <code>--list-software</code> and <code>--avail-easyconfig-licenses</code>     (#2121)</li> <li>fix problem with backticks in description breaking '<code>fpm</code>'     packaging command     (#2124)</li> <li>replace <code>--enable-new-dtags</code> with <code>--disable-new-dtags</code> instead     of removing it in RPATH wrapper script     (#2131)</li> <li>only perform <code>is_short_modname_for</code> sanity check in     <code>det_short_module_name</code> if <code>modaltsoftname</code> is available     (#2138)</li> <li>fix logic in <code>make_module_dep</code> w.r.t. excluding loads for     toolchain &amp; toolchain components     (#2140)</li> <li>skip <code>test_check_style</code> if <code>pep8</code> is not available     (#2142)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>minor enhancements, including:<ul> <li>change the sanity check for MCR 2016b since the directory     structure has changed     (#1096)</li> <li>update NWChem easyblock for version 6.6.x and to handle     different versions of OpenMPI for older versions     (#1104)</li> <li>allow per-component <code>source_urls</code> with templating in <code>Bundle</code>     easyblock     (#1108)</li> <li>add slib to <code>$LD_LIBRARY_PATH</code> for itac     (#1112)</li> <li>consider both <code>lib</code> and <code>lib64</code> in CGAL sanity check     (#1113)</li> <li>add support for installing Intel tools that do not require     license at installation time     (#1117)<ul> <li>required for Intel MPI and Intel MKL version 2017.2.174</li> </ul> </li> <li>remove <code>prefix_opt</code> as custom easyconfig parameter for Qt     easyblock     (#1120)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>use '<code>-prefix &lt;path&gt;</code>' rather than '<code>--prefix=&lt;path&gt;</code>' for     <code>configure</code> in Qt     (#1109)</li> <li>fix indentation problem in PETSc easyblock     (#1111)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 16 new software packages:<ul> <li>Caffe     (#3667),     DIAMOND     (#4107),     fmt     (#4131),     googletest     (#4132),     igraph     (#4172),     MEGA     (#4202),     meRanTK     (#4175),     meshio     (#4178),     miRDeep2     (#4229,     #4255),     OOMPA     (#4211),     PBSuite     (#4224,     #4230),     randfold     (#4217),     skewer     (#4246),     Smoldyn     (#4110),     SpiecEasi     (#4215),     stress     (#4180)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>binutils 2.28, Cantera 2.3.0, CGAL 4.9, GMP 6.1.2, IPython     5.2.2, JasPer 2.0.10, NWChem 6.6, matplotlib 2.0.0, PCRE 8.40,     Qt5 5.8.0, Vim 8.0, X11 bundle v20170129, VTK 7.1.0, Yade     2017.01a</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>iomkl/2017a</code>     (#4216),     <code>intel/2017.02</code>     (#4248)</li> </ul> </li> <li>various enhancements, including:<ul> <li>fix style in several easyconfigs     (#4174,     #4176,     #4190,     #4233)</li> <li>add sanity check command to Yade easyconfig to make sure that     '<code>import yade</code>' works, include bzip2 as dep     (#4193)</li> <li>add <code>PDF::API2</code> extension to Perl 5.24.0 easyconfigs + sync     <code>exts_list</code>     (#4221)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add Bison and gettext as build deps for X11     (#4111)</li> <li>clean up dependencies in libdrm     (#4113)</li> <li>make sure Ghostscript picks up external libraries     (#4118)</li> <li>fix ippicv source download and library install for OpenCV v3.1.0     (#4126)</li> <li>fix software name for OrthoMCL + modernise OrthoMCL easyconfigs     (#4134,     #4135)</li> <li>get rid of backticks in gettext descriptions, causes problems     when packaging with FPM     (#4146)</li> <li>remove duplicate sources specification in OpenMPI     (#4150)</li> <li>fix definition of <code>buildopts</code>/<code>installopts</code> in Cantera     easyconfig     (#4133,     #4164,     #4177)</li> <li>use <code>http://</code> rather than <code>ftp://</code> source URLs in CFITSIO     easyconfigs     (#4167)</li> <li>add patch for XZ 5.2.2 to include <code>5.1.2alpha</code> symbols required     by '<code>rpm</code>' command on CentOS 7.x     (#4179)</li> <li>add patch for Boost v1.61-1.63 to fix problem with     <code>make_array</code>/<code>array_wrapper</code> in Boost serialization library     (#4192)</li> <li>set <code>CMAKE_PREFIX_PATH</code> to ncurses install directory in CMake     easyconfigs     (#4196)</li> <li>switch to <code>lowopt=True</code> for libxc v2.2.* and v3.*     (#4199)</li> <li>remove custom <code>sanity_check_paths</code>, since it's identical to     that used by the R easyblock     (#4200)</li> <li>fix <code>version</code> (&amp; <code>homepage</code>) in ea-utils easyconfigs     (#4205)</li> <li>remove <code>--with-threads</code> configure option in OpenMPI-2.*     (#4213)</li> <li>fix check for Szip library in configure script for netCDF 4.1.3     (#4226)</li> </ul> </li> <li>fix <code>source_urls</code> in several easyconfigs, including:<ul> <li>bsoft, cutadapt, EMBOSS, GnuTLS, ImageMagick, LibTIFF,     Mercurial, netCDF, netCDF-Fortran, pigz, ROOT and Subversion     (#4227)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb310","title":"EasyBuild v3.1.0 (February 3rd 2017)","text":"<p>feature release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>ARM: GCC optimal/generic architecture compiler flags     (#1974)</li> <li>add support for <code>--check-style</code> to check style in easyconfig     files     (#1618,     #2038)</li> <li>add <code>HOME</code> and <code>USER</code> from env to available cfg file constants     (#2063)</li> <li><code>--optarch</code> can now be specified on a toolchain basis     (#2071)</li> <li>implement <code>get_cpu_features</code> function in systemtools     (#2074,     #2078)</li> <li>support use of <code>linalg</code> without MPI, add <code>iimkl</code> toolchain     definition     (#2082)</li> <li>spoof HTTP request header with empty agent     (#2083)</li> <li>exclude dependencies of dependencies that extend $MODULEPATH in     make_module_dep     (#2091)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make <code>fetch_github_token</code> more robust against <code>RuntimeError</code>     from <code>keyring</code>     (#2070)</li> <li>POWER: Fix <code>--optarch=GENERIC</code> for GCC     (#2073)</li> <li>fix docstring in toolchain class     (#2075)</li> <li>skip test cases involving <code>.yeb</code> if <code>PyYAML</code> is not installed,     silence test in options subsuite     (#2081)</li> <li>fix traceback with '<code>eb --check-github</code>' if <code>GitPython</code> is not     installed     (#2085)</li> <li>fix regex for determining list of patched files in GitHub diff     (#2088)</li> <li>modify robot so that it only appends dependencies of tweaked     easyconfigs     (#2090)</li> <li>escape metacharacters in paths passed to <code>re.compile</code> in     <code>dry_run_set_dirs</code>     (#2098)</li> <li>fix broken error message in <code>get_toolchain_hierarchy</code> +     dedicated test case     (#2099)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblock for FFTW     (#1083)</li> <li>various enhancements, including:<ul> <li>update sanity check for flex 2.6.3, no more <code>libfl_pic.a</code>     library     (#1077)</li> <li>cleanup build before proceeding with full Boost     (#1080)</li> <li>update CP2K easyblock: copy data dir, support version 4.1,     support ELPA, fix psmp build with foss toolchain     (#996,     #1020,     #1043,     #1084)</li> <li>add sanity check support for OpenSSL 1.1     (#1087)</li> <li>support the latest changes in Inspector 2017     (#1047)</li> <li>update NEURON easyblock to support the lack of <code>hoc_ed</code> in 7.4     (#987)</li> <li>add support for WPS 3.8     (#1079)</li> <li>also consider <code>setuptools</code> in <code>EasyBuildMeta</code> easyblock     (#1093)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>(correctly) define <code>$ROSETTA3_DB</code> in Rosetta easyblock     (#1092)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added easyconfigs for <code>foss/2017a</code> and <code>intel/2017a</code> common     toolchains     (#3968,     #3969)</li> <li>added example easyconfig files for 16 new software packages:<ul> <li>ack     (#3983),     cclib     (#4065),     ConnectomeWorkbench     (#3411),     GroIMP     (#3994),     hyperspy     (#3991),     I-TASSER     (#1216),     ImageJ     (#4023,     #4062),     libconfig     (#4051),     libspatialindex     (#4002),     mahotas     (#3990),     Minia     (#3949),     muParser     (#4007),     NetLogo     (#3941),     QIIME     (#3868),     QwtPolar     (#4019),     Tensorflow     (#4084,     #4095)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.62.0 + 1.63.0, CP2K 4.1, GSL 2.3, PLUMED 2.3.0, Qt5     5.7.1, WRF 3.8, WPS 3.8, Yade 2016.06a, zlib 1.2.11</li> </ul> </li> <li>various enhancements, including:<ul> <li>update FFTW 3.3.5 easyconfigs to use FFTW easyblock &amp; enable     running of tests     (#3985)</li> <li>add FME extensions (+ deps) in R 3.3.1 easyconfigs     (#4063)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add libxml2 dependency on HDF5     (#3759)</li> <li>remove unnecessary dependency in libmatheval     (#3988)</li> <li>fix permissions on SWASH binaries     (#4003)</li> <li>add conda-forge channel to perl-app-cpanminus     (#4012)</li> <li>add missing deps (libpthread-stubs, libpciaccess) to libdrm     2.4.70     (#4032)</li> <li>modloadmsg style fixes in multiple easyconfigs     (#4035)</li> <li>include X11 as dep for Molden     (#4082)</li> <li>remove incorrect definition for $ROSETTA3_DB, now (correctly)     defined via Rosetta easyblock     (#4083)</li> </ul> </li> <li>fix source URLs for several easyconfigs, including:<ul> <li>arpack-ng 3.1.3 + 3.1.5     (#4050),     ChIP-Seq 1.5-1     (#4050),     Ghostscript 9.10, 9.14 + 9.16     (#4050),     Git 1.7.12, 1.8.2 + 1.8.3.1     (#4050),     HBase 1.0.2     (#4043),     libevent 2.0.22     (#4037),     libsodium 1.0.3     (#4046),     lynx 2.8.7     (#4050),     Maven 3.2.2 and 3.3.3     (#4039),     MEME 4.8.0     (#4050),     PCC 20131024     (#4044),     S-Lang 2.3.0     (#4045),     Spark 1.3.0     (#4041),     splitRef 0.0.2     (#4040)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb302","title":"EasyBuild v3.0.2 (December 22nd 2016)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>various bug fixes, including:<ul> <li>also skip dependencies of dependencies marked as external module     in get_toolchain_hierarchy     (#2042)</li> <li>disable verbose setvar in modules.py     (#2044)</li> <li>force copying of easyconfigs in --new-pr/--update-pr, even     when combined with -x     (#2045)</li> <li>fix verification of filename for easyconfigs used to resolve     deps     (#2051)</li> <li>skip RPATH sanity check when toolchain did not use RPATH     wrappers     (#2052)</li> <li>check whether file-like paths are readable before reading them     in systemtools module     (#2065)</li> </ul> </li> <li>various small enhancements, including:<ul> <li>add 'rpath' toolchain option to selectively disable use of     RPATH wrappers     (#2047)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>various enhancements, including:<ul> <li>enhance DL_POLY_Classic easyblock to support building with     Plumed support (REVIEW)     (#829)</li> <li>make the Allinea easyblock search for the templates in the     easyconfig paths     (#1025)</li> <li>make FortranPythonPackage aware of (pre)buildopts     (#1065)</li> <li>update sanity check for Mono to support recent versions     (#1069)</li> <li>fix Eigen sanity check for latest version 3.3.1     (#1074)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>skip RPATH sanity check for binary installations     (#1056)</li> <li>pass CXXFLAGS and LDFLAGS to Boost bjam     (#1064)</li> <li>make pip ignore already installed versions of the package being     installed     (#1066)</li> <li>don't pass empty string as custom installopts for numpy in     test_step     (#1067)</li> <li>make the Rosetta EasyBlock work in --module-only mode     (#1073)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 13 new software packages:<ul> <li>CryptoMiniSat     (#3952),     MATSim     (#3902),     Molcas     (#2084),     ne     (#3376),     psmc     (#3910),     PyCogent     (#3897),     PyNAST     (#3897),     RASPA2     (#3903,     #3946),     SimPEG     (#3876),     SolexaQA++     (#3892),     taco     (#3882),     UCLUST     (#3896),     USPEX     (#3767)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Mono 4.6.2.7, PGI 16.10, ROOT 6.08.02</li> </ul> </li> <li>various enhancements, including:<ul> <li>trivial style fixes     (#3878,     #3893,     #3895)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add X11 develop libs to ncview easyconfig     (#3881)</li> <li>fix source_urls in pkg-config easyconfigs     (#3907)</li> <li>install numpy/scipy as .egg to ensure shadowing of numpy/scipy     in parent Python installation     (#3921)</li> <li>fix broken source URL + homepage for Infernal     (#3928)</li> <li>fix test that verifies dumped easyconfig, take into account that     dumped dependencies may include hardcoded dependency     (#3932)</li> <li>include libGLU as dependency in freeglut easyconfigs with recent     Mesa     (#3936)</li> <li>add patch for FreeSurfer to fix issue with MATLAB 2013     (#3954)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb301","title":"EasyBuild v3.0.1 (November 30th 2016)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>important changes<ul> <li>always use Intel-specific MPI compiler wrappers (<code>mpiicc</code>,     <code>mpiicpc</code>, <code>mpiifort</code>) for toolchains using both Intel compilers     and Intel MPI     (#2005)</li> </ul> </li> <li>various small enhancements, including:<ul> <li>use <code>setvar</code> in <code>modules.py</code> to define environment variables     (#2011)</li> <li>include output of <code>sanity_check_commands</code> in the build log     (#2020)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix testing of bootstrap script in Travis config     (#2003)</li> <li>use correct module syntax in bootstrap script if Lmod is not     used (i.e. Tcl)     (#2007)</li> <li>fix packaging issue with non-Python scripts in easybuild/scripts     (#2015)<ul> <li>fixes issue where RPATH wrapper template script     (<code>rpath_wrapper_template.sh.in</code>) was not included in the     v3.0.0 release</li> </ul> </li> <li>make tests more robust against running headless     (#2016)</li> <li>avoid rewrapping already wrapped compiler/linker command with     RPATH wrapper script     (#2022)</li> <li>fix <code>log.error</code> traceback due to '<code>raise EasyBuildError</code>'     involving a '<code>%s</code>' in error message     (#2024)</li> <li>make sure '<code>modules_tool</code>' attribute is also defined for     extensions     (#2026)</li> <li>only dump easyconfig with modified deps due to     <code>--minimal-toolchains</code> to 'reprod' subdir of install dir     (#2028)</li> <li>avoid appending '<code>-h'</code> to sanity check commands specified as a     string     (#2030)</li> <li>fix bug in <code>list_software_rst</code>: always include version suffix     regardless of value     (#2032)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>various enhancements, including:<ul> <li>update SAMtools easyblock for recent versions     (#1048)</li> </ul> </li> <li>various bugfixes, including:<ul> <li>fix QuantumESPRESSO easyblock to handle gipaw correctly     (#1041)</li> <li>always specify name of serial Fortran compiler to ALADIN, it     already knows to use MPI wrapper commands     (#1050)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 7 new software packages:<ul> <li>Cookiecutter     (#3827),     ETE     (#3857),     findhap     (#3860),     graphviz (Python bindings,     #3826),     LoFreq     (#3856),     PhyloBayes-MPI     (#3859),     XGBoost     (#3849)</li> </ul> </li> <li>added additional easyconfigs for various supported software packages</li> <li>various enhancements, including:<ul> <li>add <code>ipywidgets</code> and <code>widgetsnbextension</code> extensions to IPython     5.1.0 easyconfigs     (#3818,     #3823)</li> <li>run dadi test suite as a sanity check command     (#3858)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix incorrect descriptions for ifort     (#3817)</li> <li>fix <code>modulename</code> for Jinja2 and Pygments     (#3823)</li> <li>fix download URL in BLAST 2.2.26 easyconfig     (#3861)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb300","title":"EasyBuild v3.0.0 (November 16th 2016)","text":"<p>feature release</p> <p>framework</p> <ul> <li>backward-incompatible changes:<ul> <li>make robot always consider subtoolchains, even without     <code>--minimal-toolchains</code> (but in reverse order)     (#1973)</li> <li>clean up behaviour that was deprecated for EasyBuild v3.0     (#1978)</li> <li>change default config to use <code>Lmod</code>/<code>Lua</code> for modules     tool/syntax, <code>GC3Pie</code> as job backend     (#1985)</li> <li>the minimal required version of Lmod was bumped to 5.8     (#1985)</li> </ul> </li> <li>major new features:<ul> <li>(experimental) support for RPATH linking via <code>--rpath</code>     (#1942)<ul> <li>see     http://easybuild.readthedocs.org/en/latest/RPATH-support.html</li> </ul> </li> <li>add support for <code>--consider-archived-easyconfigs</code>     (#1972)<ul> <li>see     http://easybuild.readthedocs.org/en/latest/Archived-easyconfigs.html</li> </ul> </li> <li>stabilize <code>--new-pr</code> and <code>--update-pr</code>     (#1979)<ul> <li>see     http://easybuild.readthedocs.org/en/latest/Integration_with_GitHub.html</li> </ul> </li> </ul> </li> <li>various other small enhancements, including:<ul> <li>add support for '<code>devel</code>' log level     (#1815)</li> <li>make <code>remove_file</code> aware of <code>--extended-dry-run</code> + add dedicated     unit test     (#1932)</li> <li>add support for filtering out setting/updating particular     environment variables from generated modules     (#1943)<ul> <li>see <code>--filter-env-vars</code></li> </ul> </li> <li>clean up output of EasyBuild bootstrap script &amp; add version     (#1944)</li> <li>improved ARM platform/CPU detection     (#1953)</li> <li>use '<code>0</code>' as letter dir for funky software names that don't     start with a letter, e.g., <code>3to2</code>     (#1954)</li> <li>make bootstrap script aware of <code>vsc-install</code> for offline     installation     (#1955)</li> <li>add support for <code>blas_family()</code> and <code>lapack_family()</code> methods in     <code>Toolchain</code> instances     (#1961)</li> <li>make <code>copy_file</code> dry-run aware     (#1963)</li> <li>reorganise test easyconfigs to match structure in easyconfigs     repo     (#1970)</li> <li>add a toolchain compiler option for enforcing IEEE-754     conformance     (#1975)</li> <li>support for <code>intelcuda</code> compiler toolchain     (#1976)</li> <li>check that each glob pattern matches at least one file     <code>expand_glob_paths</code> (important for <code>--include-*</code>)     (#1980)</li> <li>enhance bootstrap to auto-skip stage 0 in case a suitable     setuptools is already available     (#1946,     #1984)</li> <li>simplify <code>GC3Pie</code> version check     (#1987)</li> <li>include suggestion on how to change configuration w.r.t. modules     tool/syntax     (#1989)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix test for <code>find_easybuild_easyconfig</code>     (#1931)</li> <li>remove existing module file under <code>--force</code>/<code>--rebuild</code>     (#1933)</li> <li>fix combining <code>--search</code> and <code>--try-*</code>     (#1937)</li> <li>fix appending to existing <code>buildstats</code> in     <code>FileRepository.add_easyconfig</code>     (#1948)</li> <li>fix handling of iterate easyconfig parameters, restore them     during cleanup     (#1949)</li> <li>fix filtering loads for (hidden) build deps from generated     module     (#1959)</li> <li>handle multi-flag compiler options on all types of options     (#1966)</li> <li>fix <code>--list-software</code> by making <code>letter_dir_for</code> function aware     of '<code>*</code>' wildcard name     (#1969)</li> <li>skip dependencies of toolchain marked as external modules when     determining module hierarchy     (#1977)</li> <li>bump page limit in <code>fetch_latest_commit_sha</code>, spit out more     meaningful error if too many branches were encountered     (#1981)</li> <li>fix CUDA-related issues in <code>HierarchicalMNS</code>     (#1986)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>backwards incompatible changes:<ul> <li>remove deprecated GenomeAnalysisTK/GATK easyblock     (#1001)</li> <li>remove deprecated '<code>get_netcdf_module_set_cmds</code>' function from     netCDF easyblock     (#1015)</li> <li>remove deprecated '<code>get_blas_lib</code>' function from LAPACK     easyblock     (#1016)</li> <li>remove <code>QLogicMPI</code> easyblock     (#1023)</li> </ul> </li> <li>new easyblock for installing Anaconda     (#950)</li> <li>add generic easyblock for Conda installations     (#950)</li> <li>various enhancements, including:<ul> <li>enable use of <code>GCCcore</code> as toolchain for Clang, fail if no GCC     prefix is found     (#1002)</li> <li>also build Boost MPI library in parallel     (#1005,     #1038)</li> <li>enhance g2clib easyblock to allow to install 1.6.0 or higher     (#1006)</li> <li>update QuantumESPRESSO easyblock to support packaging changes in     6.0     (#1007)</li> <li>add support to <code>Scons</code> generic easyblock to provide argument to     specify installation prefix     (#1008)</li> <li>update <code>IntelBase</code> and imkl easyblocks to handle the 2017     versions of compilers/imkl     (#1012)</li> <li>leverage <code>toolchain.linalg</code> functionality in ScaLAPACK     easyblock, use <code>copy_file</code>     (#1014)</li> <li>allow netCDF-C++4 to be used with ESMF     (#1019)</li> <li>update Advisor easyblock to support latest versions     (#1021)</li> <li>update CBLAS easyblock to build with <code>foss</code> toolchain     (#1024)</li> <li>update Gurobi easyblock to use <code>copy_file</code>     (#1028)</li> <li>add support for giving <code>/lib</code> preference over <code>/lib64</code> &amp; co in     GCC installation     (#1030,     #1035)</li> <li>enable installation of <code>libiberty</code> by default for binutils     (#1030)</li> <li>avoid CMake fiddling with the RPATHs injected by EasyBuild via     <code>--rpath</code> in CMakeMake and METIS easyblocks     (#1031,     #1034)</li> <li>simplify scipy sanity check to make it more robust w.r.t.     version updates     (#1037)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make sure '<code>None</code>' doesn't appear in modules generated with     <code>--module-only</code>     (#998)</li> <li>fix ATLAS easyblock for non-x86 systems     (#1003)</li> <li>fix '<code>usempi</code>' and '<code>with_mpi</code>' usage to allow for a serial     build of Amber 16     (#1013)</li> <li>add both <code>lib/python2.7/site-packages/{,wx-3.0-gtk2}</code> to     <code>$PYTHONPATH</code> for wxPython     (#1018)</li> <li>only hard inject RPATH for <code>/usr/lib*</code> directories when building     binutils with <code>dummy</code> toolchain     (#1026)</li> <li>make HDF5 easyblock handle <code>--filter-deps</code> correctly     (#1027)</li> <li>update Travis config w.r.t. changes framework config defaults     and required Lmod version     (#1029)</li> <li>be more patient when running Mathematica Q&amp;A installer     (#1036)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>backwards incompatible changes:<ul> <li>archive easyconfigs using old inactive toolchains<ul> <li>see     #3725,     #3728,     #3729,     #3730,     #3731,     #3732,     #3733,     #3735,     #3736,     #3737,     #3738</li> <li>only taken into account by EasyBuild if     <code>--consider-archived-easyconfigs</code> is enabled</li> <li>no easyconfigs available outside of archive for QLogicMPI +     15 toolchains:<ul> <li><code>ClangGCC</code>, <code>cgmpich</code>, <code>cgmpolf</code>, <code>cgmvapich2</code>,     <code>cgmvolf</code>, <code>cgompi</code>, <code>cgoolf</code>, <code>gmacml</code>, <code>goalf</code>,     <code>gpsmpi</code>, <code>gpsolf</code>, <code>iiqmpi</code>, <code>intel-para</code>, <code>ipsmpi</code>,     <code>iqacml</code></li> </ul> </li> </ul> </li> <li>fix name in PyTables easyconfigs (was 'pyTables')     (#3785)</li> </ul> </li> <li>added example easyconfig files for 32 new software packages:<ul> <li>3to2     (#3655),     Anaconda2     (#3337),     Anaconda3     (#3337),     ART     (#3724),     atools     (#3631),     awscli     (#3645),     behave     (#3751),     Blosc     (#3785),     bokeh     (#3790),     Cantera     (#3655),     Cargo     (#3764),     dadi v1.7.0, distributed     (#3786),     ea-utils     (#3634),     Elk     (#3644),     FGSL     (#3638),     gencore_variant_detection     (#3337),     help2man     (#3768),     lbzip2     (#3791),     Log-Log4perl     (#3574),     Minimac2     (#3783),     mypy     (#3694),     OBITools     (#3573),     perl-app-cpanminus     (#3337),     PGDSpider     (#3625),     prokka     (#3755),     Reads2snp     (#3609),     spglib-python     (#3620),     SUNDIALS     (#3654,     #3655),     SelEstim     (#3626),     XMLStarlet     (#3797),     x265     (#3090)</li> </ul> </li> <li>added easyconfigs for new '<code>intelcuda</code>' toolchain     (#3750)</li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>goolfc/2016.08</code>     (#3796),     <code>goolfc/2016.10</code>     (#3666,     #3775),     <code>intel/2017.00</code>     (#3543),     <code>intel/2017.01</code>     (#3757),     <code>iomkl/2016.09-GCC-4.9.3-2.25</code>     (#3680),     <code>iomkl/2016.09-GCC-5.4.0-2.26</code>     (#3772)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Advisor 2017 update 1, Amber 16, ATLAS 3.10.2, GROMACS 2016,     Octave 4.0.3, OpenFOAM 3.0.1, PyTables 3.3.0, QuantumESPRESSO     6.0, Rust v1.12.1</li> </ul> </li> <li>various other enhancements, including:<ul> <li>STREAM builds using ~56GiB and ~111GiB     (#3670)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix source spec in VASP easyconfig, ensure static linking with     Intel MKL     (#3381)</li> <li>fix source URL in GCCcore 6.2.0 easyconfig     (#3608)</li> <li>correct STAMP dependency in i-cisTarget, must be 1.3     (#3613)</li> <li>consistently specify to use <code>-fgnu89-inline</code> flag in M4 1.4.17     easyconfigs     (#3623)</li> <li>fix source URLs for Cython     (#3636)</li> <li>add Bison as build dep and M4 as runtime dep for flex 2.6.0     (#3656)</li> <li>enable parallel building of flex 2.6.0     (#3630)</li> <li>add zlib and bzip2 dependencies to X11 bundle     (#3662)</li> <li>use '<code>letter_dir_for</code>' function rather than just grabbing 1st     letter of software name in easyconfigs tests     (#3664)</li> <li>add patch to fix typo in GRIT 2.0.5     (#3675)</li> <li>fix typo in patch for WRF 3.8.0     (#3702)</li> <li>use <code>$CC</code>, <code>$CXX</code> rather than <code>$I_MPI_CC</code>, <code>$I_MPI_CXX</code> in patch     for OpenFOAM 4.0     (#3703)</li> <li>patch FLTK to fix '<code>undefined symbol</code>' issue when building     Octave     (#3704)</li> <li>include Pillow as a proper dep for scikit-image rather than as     extension, since it has deps itself     (#3723)</li> <li>update Travis config w.r.t. changes framework config defaults     and required Lmod version     (#3773)</li> <li>don't limit parallellism to 4 in recent GCC easyconfigs     (#3776,     #3777,     #3778)</li> <li>include M4 as dependency in flex 2.5.39 easyconfigs + fix     consistency issues     (#3782)</li> <li>consistently apply patch for ncurses 6.0     (#3792)</li> <li>eliminate dependency on <code>mpi-mic-rt</code> in ifort     (#3793)</li> <li>include Autotools as build dependency in all beagle-lib and     MrBayes easyconfigs     (#3794)</li> <li>make OpenBLAS use the LAPACK version specified in the easyconfig     (v0.2.18 &amp; v0.2.19)     (#3795)</li> <li>include original download URL for ISL source tarball in GCC     easyconfigs     (#3798)</li> <li>disable installing <code>libiberty</code> for binutils built with intel     toolchain     (#3802)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb290","title":"EasyBuild v2.9.0 (September 23rd 2016)","text":"<p>feature release</p> <p>framework</p> <ul> <li>note: vsc-base 2.5.4 or more recent is now required</li> <li>various small enhancements, including:<ul> <li>change option <code>--color</code> choices to auto/always/never     (#1701,     #1898,     #1911)</li> <li>add support for '<code>hidden</code>' easyconfig parameter     (#1837)</li> <li>add support for using <code>ccache</code> and <code>f90cache</code> compiler caching     tools     (#1844,     #1912)<ul> <li>see <code>--use-ccache</code> and <code>--use-f90cache</code></li> </ul> </li> <li>update Cray metadata for 16.06 CrayPE release     (#1851)</li> <li>also include patch files in <code>--new-pr</code> and <code>--update-pr</code>     (#1852)</li> <li>handle deleted files in <code>--new-pr</code>     (#1853)</li> <li>add support for <code>--install-latest-eb-release</code>     (#1861)</li> <li>add support for hiding toolchains, see <code>--hide-toolchains</code> and     '<code>hidden</code>' key in '<code>toolchain</code>' spec     (#1871)</li> <li>add template for GitHub source URL     (#1872)</li> <li>add support for combining <code>--new-pr</code>/<code>--update-pr</code> and <code>--robot</code>     (#1881)</li> <li>add support for <code>--list-software</code> and     <code>--list-installed-software</code>     (#1883,     #1910,     #1917)</li> <li>print message on which extension is being installed, incl.     progress counter     (#1886,     #1914)</li> <li>add support for <code>--github-org</code> to specify GitHub organisation     rather than GitHub user     (#1894)</li> <li>add support for running Lmod in debug mode     (#1895)</li> <li>avoid needless use of deepcopy, speed up support for templating     in easyconfigs     (#1897)</li> <li>convert <code>all_dependencies</code> to a property in <code>EasyConfig</code> class     (#1909)</li> <li>add support for <code>--mpi-cmd-template</code>     (#1918)</li> <li>add support for <code>--disable-mpi-tests</code>     (#1920)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>merge with develop when using <code>--from-pr</code>     (#1838,     #1867)</li> <li>ensure <code>--new-pr</code> doesn't open empty pull requests     (#1846)</li> <li>better error handling for outdated <code>GitPython</code> module in     <code>--check-github</code>     (#1847)</li> <li>fix formatting for generated easyblocks documentation     (#1860)</li> <li>make sure the robot ignores filtered dependencies when creating     toolchain cache     (#1862)</li> <li>honor <code>--filter-deps</code> under <code>--minimal-toolchains</code>     (#1863)</li> <li>correct format for '<code>param</code>' and '<code>author</code>' tags in     docstrings     (#1866)</li> <li>ignore failing bootstrap test in Travis config file     (#1870)</li> <li>make sure all output of executed command is included in     generated temporary log file     (#1873,     #1874)</li> <li>ensure <code>--show_hidden</code> is used in the correct location for     '<code>avail</code>' with Lmod     (#1875)</li> <li>make sure <code>self.path</code> is passed down in copy method of     <code>EasyConfig</code> object     (#1884)</li> <li>take into account possible multi-line modloadmsg in     <code>ModuleGeneratorLua</code>     (#1885)</li> <li>fix extracting <code>.bz2</code> source files     (#1889)</li> <li>don't resolve path to Lmod command     (#1892)</li> <li>fix skipping of stage 0 in bootstrap script     (#1893)</li> <li>fix function signature of <code>log.deprecated</code> compared to     <code>fancylogger.deprecated</code>     (#1896,     #1899)</li> <li>apply patch to Tcl/C environment modules tool for Tcl 8.6     support in Travis config     (#1901)</li> <li>fix combining <code>--extended-dry-run</code> with <code>--from-pr</code>     (#1902)</li> <li>also template dict keys     (#1904)</li> <li>don't pass '<code>--try-*</code>' command-line options to EB instance     running within job script     (#1908)</li> <li>add workaround for incorrectly passing command line arguments     with <code>--job</code>     (#1915)</li> <li>fix issues with <code>--module-only</code>     (#1919,     #1924,     #1925)<ul> <li>correctly deal with specified start_dir</li> <li>do not remove installation directory when     build-in-installdir is enabled</li> </ul> </li> <li>make sure '<code>which</code>' function returns path to a file     (#1921)</li> <li>fix <code>:param:</code>, <code>:return:</code> tags in docstrings &amp; add test for it     (#1923)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblocks for 6 software packages that require customized     support:<ul> <li>cppcheck     (#983),     HEALPix     (#982),     IMOD     (#847),     IronPython     (#321),     Mono     (#321),     MyMediaLite     (#321)</li> </ul> </li> <li>various enhancements, including:<ul> <li>extend OpenFoam-Extend sanity check for decomp libraries     (#784)</li> <li>enhance Java easyblock to support installing Java 6.x     (#940)</li> <li>make QuantumESPRESSO easyblock aware of multithreaded FFT     (#954)</li> <li>extend PSI easyblock to use PCMSolver and CheMPS2     (#967)</li> <li>make Boost easyblock add definition for <code>$BOOST_ROOT</code> to     generated module file     (#976)</li> <li>add support to Bundle easyblock to install list of components     (#980)</li> <li>enhance &amp; clean up libxml2 easyblock to also enable installing     without Python bindings     (#984)</li> <li>update Libint easyblock for Libint 2.1.x     (#985)</li> <li>update sanity check for OpenFOAM to support OpenFOAM 4.x     (#986)</li> <li>make easyblocks that run MPI tests aware of '<code>mpi_tests</code>'     build option     (#993)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix compatibility of OpenFOAM easyblock with <code>--module-only</code>     (#784)</li> <li>fix testing of <code>--module-only</code> compatibility for OpenFOAM and     IMOD easyblocks     (#784)</li> <li>add '<code>include/libxml2</code>' to <code>$CPATH</code> in libxml2 easyblock     (#981)</li> <li>fix compatibility of IntelBase generic easyblock with     <code>--module-only</code>     (#994)</li> <li>make sure correct config script is used for Tcl/Tk deps of R     (#995)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 88 new software packages:<ul> <li>ADMIXTURE     (#3359),     angsd     (#3593),     ASHS     (#3429),     AutoDock     (#3465),     AutoGrid     (#3466),     BayeScan     (#2748,     #3356),     BayPass     (#3451),     Bazel     (#3379),     Blender     (#3553,     #3558),     bwakit     (#3567),     BXH_XCEDE_TOOLS     (#3410),     CastXML     (#3403),     CHASE     (#3304),     configparser     (#3368,     #3424),     configurable-http-proxy     (#3380),     cppcheck     (#3508),     CRPropa     (#779),     DicomBrowser     (#3432),     DMTCP     (#3422),     entrypoints     (#3368,     #3424),     f90cache     (#3570),     fastPHASE     (#3343),     fastQValidator     (#3192),     FFindex     (#1135),     FragGeneScan     (#1198),     gdc-client     (#3399),     gflags     (#3417),     glog     (#3417),     GRIT     (#3561),     H5hut     (#3431),     HAPGEN2     (#3344),     HEALPix     (#779),     IMOD     (#1187,     #3347),     IronPython     (#607),     jhbuild     (#3476),     jupyterhub     (#3380),     Keras     (#3581),     khmer     (#1158),     LeadIT     (#3345,     #3599),     LevelDB     (#3417),     libbitmask     (#3481),     libcpuset     (#3481),     LMDB     (#3417),     log4cplus     (#1136),     MACH     (#3346),     Mako     (#3460),     Maq     (#3428),     MetaGeneAnnotator     (#3307),     Metal     (#3324),     Mono     (#607),     MyMediaLite     (#607),     nco     (#2575),     nose-parameterized     (#3579),     OpenEXR     (#3553),     OpenImageIO     (#3553),     path.py     (#3368,     #3424),     PCRE2     (#3325),     pftoolsV3     (#3317),     PHASE     (#3385),     PLAST     (#3288),     PLINKSEQ     (#3402),     POV-Ray     (#3551),     ProbABEL     (#3108),     prompt-toolkit     (#3368,     #3424),     protobuf-python     (#3563),     PSORTb     (#3317),     py     (#3403,     #3482),     pygccxml     (#3403,     #3482),     pyGIMLi     (#3403,     #3482),     pyplusplus     (#3403,     #3482),     PyQt5     (#3533),     Pyro4     (#3527),     pytest     (#3403,     #3482),     QCA     (#3595),     RDMC     (#1137),     S.A.G.E.     (#3427),     SDL2     (#3551),     SHORE     (#3531),     SimVascular     (#3555),     SortMeRNA     (#3326),     SUMACLUST     (#3316),     SUMATRA     (#3316),     Text-CSV     (#3323),     Triangle     (#3403),     VEGAS     (#3457),     VirSorter     (#3307),     wcwidth     (#3368,     #3424),     X11     (#3340)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li>CrayGNU + CrayIntel 2016.06     (#3377)</li> <li>foss 2016.07     (#3517) +     2016.09     (#3523)</li> <li>iomkl 2016.07     (#3458)</li> <li>pomkl 2016.09     (#3516)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>FFTW 3.3.5, GCC 4.9.4 + 6.2.0, GROMACS 5.1.4, IPython 5.1.0,     LLVM 3.9.0, Mesa 12.0.1, OpenCV 3.1.0, OpenFOAM 4.0, OpenMPI     2.0.1, ParaView 5.1.2, PGI 16.7, QuantumESPRESSO 5.4.0, Qt5     5.7.0, R-bundle-Bioconductor 3.3, VTK 7.0.0, Yade 2016.06a</li> </ul> </li> <li>various enhancements, including:<ul> <li>adjust PSI4 easyconfigs for updated easyblock     (#3312)</li> <li>clean up libxml2 easyconfigs according to updated libxml2     easyblock     (#3479,     #3509)</li> <li>significantly speed up verifying of dumped easyconfig by     resorting to 'shallow' parsing     (#3520)</li> <li>include sanity checks for all MATIO config files     (#3528)</li> <li>remove <code>--with-tcl-config</code>/<code>--with-tk-config</code> from R easyconfig,     already done in R easyblock     (#3580)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>disable testing in all ParaView 4.4.0 easyconfigs, required     download is too much of a PITA     (#3178)</li> <li>add SQLite as dep to GDAL 2.1.0 easyconfigs     (#3342)</li> <li>add zlib/SQLite/LibTIFF as dep to R 3.3.1 easyconfigs     (#3342)</li> <li>add bzip2 as a dependency of freetype     (#3464)</li> <li>specify correct MPI target in FDS easyconfigs     (#3488)</li> <li>add tcsh as OS dep in NAMD easyconfigs     (#3491)</li> <li>statically link ncurses/libreadline in Lua easyconfig with     '<code>dummy</code>' toolchain     (#3545)</li> <li>add M4 as dep for flex 2.6.x     (#3542,     #3550)</li> <li>add bzip2 and libxcb dependencies to FFmpeg 3.x easyconfigs     (#3548)</li> <li>make sure &amp; check that Graphviz does not install Tcl bindings in     Tcl install prefix     (#3556)</li> <li>add missing patches for extensions in Python 3.x easyconfigs     (#3557)</li> <li>add missing XZ dependency to libxml2 2.9.4 easyconfigs, change     gettext dep of XZ to build-only dep     (#3568)</li> <li>enable running of tests for HPCG     (#3578)</li> <li>fix <code>buildopts</code> in tabix easyconfigs     (#3584)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb282","title":"EasyBuild v2.8.2 (July 13th 2016)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>various small enhancements, including:<ul> <li>add support for rst output for <code>--list-*</code> and <code>--avail-*</code>     (#1339)</li> <li>add support for '<code>eb --check-conflicts</code>'     (#1747,     #1807,     #1833)</li> <li>ensure nice error message when non-existing path is passed to     <code>apply_regex_substitutions</code>     (#1788)</li> <li>add check for module output, empty stdout is a sign of trouble     with Lmod     (#1793)</li> <li>add multi-threaded FFT to toolchain     (#1802)</li> <li>avoid special characters like '[', ']' in path to     temporary directory     (#1808)</li> <li>add support for <code>--zip-logs</code>     (#1820)</li> <li>add support for <code>--extra-modules</code>     (#1821)</li> <li>add type conversion for 'checksums' and 'patches' parameter     in .yeb easyconfigs     (#1826,     #1840)</li> <li>add support for filtering tests by name     (#1828)</li> <li>add support for <code>--avail-toolchain-opts</code>     (#1830,     #1839)</li> <li>use absolute path for robot and easyconfig files     (#1834)</li> <li>add backup URL for tarballs hosted on SourceForge in     <code>install_eb_dep.sh</code> script     (#1843)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix installation of Lua in <code>install_eb_dep.sh</code> script     (#1789)</li> <li>fix OpenMP flag for Cray compiler wrappers     (#1794)</li> <li>only reset <code>$MODULEPATH</code> before loading a module if environment     was reset     (#1795)</li> <li>include vsc-install as dependency in <code>setup.py</code>     (#1805)</li> <li>cache <code>$PATH</code> &amp; <code>$PYTHONPATH</code> in test setUp, restore them in     tests where '<code>eb</code>' is used     (#1806)</li> <li>don't reset <code>$MODULEPATH</code> in stage 2 of bootstrap script,     support forced installation during stage 2     (#1810)</li> <li>fix issue with templates defined by deps being required while     still parsing deps     (#1812)</li> <li>skip unneeded unuse/use commands on tail of <code>$MODULEPATH</code> in     <code>check_module_path</code>     (#1813)</li> <li>fix auto-convert for all <code>*dependencies</code> params in <code>.yeb</code>     easyconfigs, ensure version is a string     (#1818)</li> <li>fix <code>keyring</code> version in Travis config     (#1819)</li> <li>fix dumping of <code>.yeb</code> easyconfig files in easyconfigs archive     (#1822)</li> <li>fix format of supported easyconfig templates in help output     (#1825)</li> <li>stick to <code>pydot</code> 1.1.0 for Python 2.6 in Travis config     (#1827)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblocks for 5 software packages that require customized     support:<ul> <li>Amber     (#958),     Extrae     (#955),     Gurobi     (#962),     Paraver     (#956),     Tau     (#887)</li> </ul> </li> <li>various enhancements, including:<ul> <li>add support for building &amp; installing old GROMACS versions     (#569,     #960)</li> <li>add support for building Boost with Cray toolchain     (#849)</li> <li>libxsmm support for CP2K     (#942)</li> <li>pick up specified components for imkl     (#943)</li> <li>add support for building GROMACS with double precision     (#946,     #960)</li> <li>add support for building GROMACS with CUDA support and using     dynamic libraries using <code>Cray</code> toolchains     (#951,     #960)</li> <li>also install vsc-install in <code>EasyBuildMeta</code> easyblock, if     tarball is provided     (#957)</li> <li>enhance PSI easyblock to support PSI4 1.0     (#965)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also install scripts with MRtrix 0.3.14     (#941)</li> <li>enhance Qt easyblock to support Qt3     (#944)</li> <li>create '<code>release</code>' symlink in MRtrix install dir     (#947)</li> <li>fix <code>make_installdir</code> in Inspector &amp; VTune easyblocks     (#952)</li> <li>make <code>Binary</code> and <code>MakeCp</code> easyblocks aware of     '<code>keepsymlinks</code>'     (#959)</li> <li>correctly define <code>$G4*</code> environment variables in Geant4     easyblock     (#961,     #970)</li> <li>prepend tmp install path to <code>$PYTHONPATH</code> in numpy test step,     move to build dir when removing '<code>numpy</code>' subdir     (#963)</li> <li>correct full path to ALADIN config file &amp; patch it to use right     Fortran compiler flags     (#964)</li> <li>ensure correct compiler command/flags are used for SAMtools     (#966)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 54 new software packages:<ul> <li>Amber     (#3200),     Bullet     (#3175),     CONTRAlign     (#690),     Cluster-Buster     (#3191),     damageproto     (#3222,     #3308),     DCA++     (#3219),     EIGENSOFT     (#3147,     #3163),     Extrae     (#507),     fdstools     (#3237),     ffnet     (#3273),     GP2C     (#3257),     Gurobi     (#3239),     gc     (#3202,     #3261),     gputools     (#546),     IMa2p     (#3300),     IOzone     (#3253),     i-cisTarget     (#3191,     #3194),     icmake     (#3243),     io_lib     (#3255),     Kent_tools     (#3191),     libcmaes     (#3256),     libpsortb     (#3259),     libxsmm     (#3099),     MEGACC     (#3263),     MM-align     (#1428),     MOSAIK     (#880),     MView     (#1345),     MySQL-python     (#3172,     #3189),     magma     (#3219),     mrFAST     (#862),     mrsFAST     (#862),     mysqlclient     (#3172,     #3232),     NTL     (#3183),     PARI-GP     (#3257),     Paraver     (#508),     psutil     (#3171,     #3231),     PSI4     (#3293),     Qwt     (#3157),     RMBlast     (#3142),     STAMP     (#3191),     Seqmagick     (#3264),     splitRef     (#946),     TAU     (#509),     TRF     (#3141),     TVB     (#3053,     #3247,     #3251),     TVB-deps     (#3053,     #3247,     #3251),     tvb-data     (#3053,     #3247,     #3251),     tvb-framework     (#3053,     #3247,     #3251),     tvb-library     (#3053,     #3247,     #3251),     VampirTrace     (#509),     Voro++     (#3174),     wheel     (#3235),     wxPropertyGrid     (#508),     xonsh     (#3159)</li> </ul> </li> <li>added easyconfigs for update of common toolchains: <code>foss/2016b</code>     (#3271),     <code>intel/2016b</code>     (#3270)</li> <li>added new easyconfigs for existing toolchains: <code>CrayGNU/2016.03</code> &amp;     <code>CrayGNU/2016.04</code>     (#3291),     <code>foss/2016.06</code>     (#3184),     <code>intel/2016.03-GCC-5.4</code>     (#3185)</li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.61.0, GCC 5.4.0, GROMACS 3.3.3, HDF5 1.8.17, netCDF     4.4.1, numpy 1.11.0, Perl 5.24.0, PETSc 3.7.2, Python 2.7.12,     Python 3.5.2, Qt 3.3.8, R 3.3.1</li> </ul> </li> <li>various enhancements, including:<ul> <li>use <code>check_conflicts</code> function in easyconfigs tests     (#2981)</li> <li>also include vsc-install in list of sources for recent EasyBuild     easyconfigs, to support offline installation     (#3203)</li> <li>enable building of <code>libmysqld.*</code> in MariaDB easyconfigs     (#3230)</li> <li>add ALDEx2, phyloseq to bundles for Bioconductor 3.2     (#3211,     #3241)</li> <li>add biom, geepack, lubridate, pim to list of R 3.2.3 extensions     (#3186,     #3211,     #3275)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add patch for Boost 1.60.0 to fix bug resulting in <code>TypeError</code>     (#3162)</li> <li>add fftw dependency to CP2K 2.6.0 easyconfigs using CrayGNU     (#3176)</li> <li>fix location of <code>libelf.h</code>, only (also) installed as     <code>include/libelf.h</code> is there's no <code>/usr/include/libelf.h</code>     (#3201)</li> <li>fix software name for Guile &amp; GnuTLS (was 'guile' &amp;     'gnutls')     (#3207)</li> <li>added missing space in Geant4 configopts to specify     <code>-DGEANT4_INSTALL_DATA</code>     (#3209)</li> <li>fix Cython download URL in Python 2.7.11 easyconfigs     (#3212)</li> <li>add missing build deps for X stack in easyconfigs using     <code>foss/2016a</code> or <code>intel/2016a</code>     (#3222,     #3308)</li> <li>fix overruling of exts_list in Perl 5.22.2 easyconfig     (#3224)</li> <li>add missing dependency on GMP in R 3.2.3 easyconfigs     (#3226)</li> <li>don't hard specify toolchain for binutils build dep in likwid     easyconfig, since it matches parent toolchain     (#3240)</li> <li>fix <code>homepage</code> &amp; <code>source_urls</code> in HMMER easyconfigs     (#3246)</li> <li>stick to <code>pydot</code> 1.1.0 for Python 2.6 in Travis config     (#3282)</li> <li>add <code>python-dev(el)</code> to OS deps in GC3Pie easyconfigs     (#3310)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb281","title":"EasyBuild v2.8.1 (May 30th 2016)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>various bug fixes, including:<ul> <li>fix error message on missing module command in bootstrap script     (#1772)</li> <li>expand '<code>~</code>' in paths specified to <code>--include-*</code>     (#1774)</li> <li>break after deleting cache entry to avoid attempt to delete     cache entry again     (#1776)</li> <li>avoid changing <code>$MODULEPATH</code> when prepending with symlink of     path already at head of <code>$MODULEPATH</code>     (#1777)</li> <li>filter out duplicates in <code>find_flexlm_license</code>     (#1779)</li> <li>stick with GitPython &lt; 2.0 with Py2.6 in Travis configuration     (#1781)</li> <li>don't use <code>LooseVersion</code> to define     <code>version_major</code>/<code>version_minor</code>     (#1783)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>various enhancements, including:<ul> <li>update MRtrix easyblock for version 0.3.14     (#932)</li> <li>update Inspector easyblock for recent versions     (#934)</li> <li>update VTune easyblock for recent versions     (#935)</li> <li>add debug message to IntelBase easyblock w.r.t. switching to     'exist_lic'     (#936)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 13 new software packages:<ul> <li>drFAST     (#906),     git-lfs     (#2478),     grabix     (#3127),     JWM     (#3007),     libcroco     (#3007),     librsvg     (#3007),     MaCH     (#3136),     mayavi     (#3106),     OpenMM     (#2762),     Pysam     (#3080),     SeqPrep     (#3097),     vt     (#3128),     wkhtmltopdf     (#3098)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:     <code>intel/2016.03-GCC-4.9</code>     (#3088)</li> <li>added additional easyconfigs for various supported software     packages, including:<ul> <li>Boost 1.61.0, ESMF 7.0.0, Inspector 2016 update 3, IPython 4.2,     netCDF-C++4 4.3.0, netCDF-Fortran 4.4.4, Perl 5.22.2, VTune 2016     update 3</li> </ul> </li> <li>various bug fixes, including:<ul> <li>apply libreadline patch to fix bug triggering segmentation fault     (#3086)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb280","title":"EasyBuild v2.8.0 (May 18th 2016)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>significant speedup improvements of EasyBuild itself, thanks to:<ul> <li>stop creating <code>ModulesTool</code> instances over and over again     (#1735)</li> <li>cache result of '<code>module avail</code>' calls     (#1742)</li> </ul> </li> <li>add support for using PGI as toolchain compiler     (#1342,     #1664,     #1759,     #1761,     #1764)<ul> <li>incl. new toolchain definitions <code>pompi</code> and <code>pomkl</code>     (#1724)</li> </ul> </li> <li>add test configuration for Travis     (#1733,     #1737,     #1743,     #1767)</li> <li>various other enhancements, including:<ul> <li>add <code>get_total_memory()</code> function in <code>systemtools</code> module     (#1623)</li> <li>ignore <code>__init__.py</code> files in <code>--include-*</code>     (#1704)</li> <li>use <code>-fopenmp</code> rather than <code>-openmp</code> for Intel compilers, since     <code>-openmp</code> is deprecated     (#1718)</li> <li>add modules to metadata for Cray modules     (#1721)</li> <li>make sure user write permissions are set after failed removal     attempt of installation directory     (#1722)</li> <li>escape special characters in software name in     <code>find_related_easyconfigs</code>     (#1726)</li> <li>add support for <code>CrayPGI</code> compiler toolchain     (#1729)</li> <li>ensure read permission to all installed files for everybody     (unless other options specify otherwise)     (#1731)</li> <li>also consider <code>$LMOD_CMD</code> in bootstrap script     (#1736)</li> <li>translate PyPI download URL to alternate URL with a hash     (#1749)</li> <li>make <code>get_software_libdir</code> compatible with <code>-x</code>     (#1750)</li> <li>set <code>$LMOD_REDIRECT</code> to '<code>no</code>' when initialising Lmod     (#1755)</li> <li>add test for broken modules tool setup affecting     '<code>module use</code>'     (#1758)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>isolate '<code>options</code>' tests from easyblocks other than the ones     included in the tests     (#1699)</li> <li>don't run '<code>module purge</code>' in tests, since EasyBuild may be     made available through a module     (#1702)</li> <li>avoid rehandling <code>--include-*</code> options over and over again     during <code>--show-config</code>     (#1705)</li> <li>remove useless <code>test_cwd</code>     (#1706)</li> <li>fix bootstrap script: make sure setuptools installed in stage0     is still available at end of stage1     (#1727)</li> <li>forcibly create target branch in <code>--update-pr</code>     (#1728)</li> <li>remove check whether '<code>easybuild</code>' is being imported from dir     that contains <code>easybuild/__init__.py</code>     (#1730)</li> <li>(re)install vsc-base during stage1 using <code>--always-copy</code> in     bootstrap script, if needed     (#1732)</li> <li>use <code>os.path.realpath</code> in <code>test_wrong_modulepath</code> to avoid     symlinked path breaking the test     (#1740)</li> <li>unset <code>$PYTHONPATH</code> in before tested bootstrapped EasyBuild     module     (#1743)</li> <li>take into account that paths in modulepath may be symlinks in     <code>test_module_caches</code>     (#1745)</li> <li>change to install dir rather than buildpath in sanity check of     extension, latter may not exist     (#1746,     #1748)</li> <li>only load modules using short module names     (#1754)</li> <li>(re)load modules for build deps in extensions_step     (#1762)</li> <li>fix <code>modpath_extensions_for method</code>: take into account modules     in Lua syntax     (#1766)</li> <li>fix broken link to VSC website in license headers     (#1768)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>add test configuration for Travis     (#895,     #897,     #900,     #926)</li> <li>new easyblocks for 4 software packages that require customized     support:<ul> <li>binutils     (#907),     libQGLViewer     (#890),     SuperLU     (#860),     wxPython     (#883)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>update SuiteSparse easyblock for version &gt;= 4.5     (#863)</li> <li>enhance imkl easyblock to install on top of PGI     (#866,     #916)</li> <li>enable runtime logging of install cmd in <code>IntelBase</code>     (#874)</li> <li>enhance Qt easyblock to support installing with <code>dummy</code>     toolchain     (#881)</li> <li>delete libnuma symbolic links in PGI installation directory     (#888)</li> <li>enhance PDT easyblock to support installing with <code>dummy</code>     toolchain     (#894)</li> <li>add support for building Clang with OpenMP support     (#898)</li> <li>update Score-P easyblock for additional compilers, MPI libraries     &amp; dependencies     (#889)</li> <li>drop deprecated '<code>testrb</code>' from sanity check in Ruby easyblock     (#901)</li> <li>enhance WRF easyblock to support versions &gt;= 3.7     (#902)</li> <li>update QuantumESPRESSO easyblock for version 5.3.0     (#904)</li> <li>add support in PythonPackage easyblock to use     '<code>setup.py develop</code>'     (#905)</li> <li>update Qt easyblock for Qt 5.6.0     (#908)</li> <li>extend bzip2 easyblock to also build dynamic libraries     (#910)</li> <li>make threading an explicit option rather than relying on MPI     library in SCOTCH easyblock     (#914)</li> <li>update PGI easyblock to install siterc file so PGI picks up     <code>$LIBRARY_PATH</code>     (#919)</li> <li>enhance sanity check paths for compiler commands in PGI     easyblock     (#919)</li> <li>also filter out <code>-ldl</code> from $LIBBLAS &amp; co for Intel MKL in     numpy easyblock     (#920)</li> <li>define <code>$MIC_LD_LIBRARY_PATH</code> for impi     (#925)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>don't hardcode Python version in     <code>test_make_module_pythonpackage</code>     (#876)</li> <li>make PythonPackage easyblock compatible with <code>--module-only</code>     (#884,     #906)</li> <li>remove check whether '<code>easybuild</code>' is being imported from dir     that contains <code>easybuild/__init__.py</code>     (#891)</li> <li>fix passing compiler configure option in PDT easyblock     (#894)</li> <li>fix bug in Score-P easyblock w.r.t. <code>--with-libbfd</code>     (#889)</li> <li>fix extension filter for Ruby     (#901)</li> <li>fix <code>ACTIVATION_TYPES</code> list in IntelBase + minor style change     (#913)</li> <li>correctly define <code>$MIC_LD_LIBRARY_PATH</code> in imkl 11.3.x and newer     (#915)</li> <li>fix broken link to VSC website in license headers     (#927)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 69 new software packages:<ul> <li>ALPS     (#2888),     annovar     (#3010),     BayeScEnv     (#2765),     BayesAss     (#2870),     BerkeleyGW     (#2925),     Blitz++     (#2784,     #3004),     bam-readcount     (#2850),     Commet     (#2938),     CrossTalkZ     (#2939),     cuDNN     (#2882),     DBus     (#2855),     DFT-D3     (#2107),     DIAL     (#3056),     dask     (#2885),     dbus-glib     (#2855),     FFLAS-FFPACK     (#2793),     FLAC     (#2824),     FLANN     (#3015,     #3029),     FLEUR     (#3043),     GConf     (#2855),     GROMOS++     (#1297),     GST-plugins-base     (#2855),     GStreamer     (#2855),     GTOOL     (#2805),     Givaro     (#2793),     gdist     (#2935),     gromosXX     (#1297),     HISAT2     (#2809),     i-PI     (#2940),     Kraken     (#3037,     #3041),     LAME     (#2823),     LASTZ     (#3002),     LinBox     (#2793),     Loki     (#2839),     libQGLViewer     (#2923,     #3008),     libXxf86vm     (#2855),     MDSplus     (#2787,     #2838,     #3027),     MRIcron     (#2831),     Mawk     (#2732),     minieigen     (#2839),     mpmath     (#3058),     NBO     (#3047,     3048), NGS     (#2803),     NGS-Python     (#2810),     ncbi-vdb     (#2808),     OptiX     (#2795),     PCL     (#3024),     PEAR     (#2731),     PLplot     (#2990),     Postgres-XL     (#2891),     PyGTS     (#2969),     RSeQC     (#2788),     Rust     (#2920,     #2943),     rainbow     (#2730),     SHAPEIT     (#2806),     SIONlib     (#2908),     Saxon-HE     (#2773),     Singularity     (#2901),     SoX     (#2825),     Subread     (#2790),     SuperLU     (#2665),     travis     (#2953),     VASP     (#2950),     Wannier90     (#2906,     #3042),     wget     (#3041),     wxPython     (#2855),     xf86vidmodeproto     (#2855),     Yade     (#2839),     Yambo     (#2932)</li> </ul> </li> <li>add test configuration for Travis     (#2942,     #2944,     #2954,     #3061)</li> <li>added easyconfigs for new PGI-based toolchains<ul> <li><code>pomkl/2016.03</code>     (#2899,     #2900,     #3046),     <code>pomkl/2016.04</code>     (#3044),     <code>CrayPGI/2016.04</code>     (#2927)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>foss/2016.04</code>     (#3013),     <code>intel/2016.02-GCC-5.3</code>     (#2523),     <code>intel/2016.03-GCC-5.3</code>     (#3009)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>incl. CGAL 4.8, Clang 3.8.0, icc/ifort 2016.2.181 &amp; 2016.3.210,     imkl 11.3.2.181 &amp; 11.3.3.210, impi 5.1.3.181, LLVM 3.8.0, OpenCV     2.4.12, pandas 0.18.0, Qt 5.6.0, Scalasca 2.3, Score-P 2.0.1,     SuiteSparse 4.5.2, WRF 3.8</li> </ul> </li> <li>various other enhancements, including:<ul> <li>enhance ORCA easyconfig for compatibility with SLURM     (#1819)</li> <li>enable <code>-fPIC</code> in GraphicsMagick easyconfig, required by Octave     (#2764)</li> <li>clean up binutils easyconfigs to use binutils easyblock     (#3006)</li> <li>add <code>include/GraphicsMagick</code> to <code>$CPATH</code> in GraphicsMagick     easyconfigs     (#3034)</li> <li>update SuiteSparse easyconfigs according to updated SuiteSparse     easyblock     (#3050)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Perl extensions download urls     (#2738)</li> <li>add Autoconf as build dep for <code>GCCcore</code>     (#2772)</li> <li>fix versions of extensions in Bioconductor 3.2 bundles     (#2769)</li> <li>fix (build) deps for <code>intel/2016a</code> easyconfigs of cairo,     libXext, libXrender     (#2785,     #2874)</li> <li>use '<code>env</code>' wherever preconfig/build/installopts is used to     set environmental variables     (#2807,     #2811,     #2812)</li> <li>add zlib as explicit dep in Tk easyconfigs     (#2815)</li> <li>consistently specify to use <code>-fgnu89-inline</code> flag in M4 1.4.17     easyconfigs     (#2774,     #2779,     #2816)</li> <li>fix homepage and description in Pygments easyconfigs     (#2822)</li> <li>include pkg-config as build dependencies for libXau, libXdmcp,     libxcb     (#2827)</li> <li>consistently use <code>XORG_*_SOURCE</code> constants     (#2829,     #2830,     #2848)</li> <li>update source URLs in ScientificPython easyconfig files     (#2847)</li> <li>add checksums in SuiteSparse easyconfigs     (#2849)</li> <li>fix build deps for GObject-Introspection     (#2852)</li> <li>correctly specify Perl location in git easyconfig     (#2866)</li> <li>fix bitstring 3.1.3 download URL in Python easyconfigs, source     tarball on PyPI disappeared     (#2880)</li> <li>fix Perl dependency in worker easyconfigs, it requires     non-standard Perl modules     (#2884)</li> <li>add XZ as dependency in Python 3.5.1 easyconfigs, required for     lzma     (#2887)</li> <li>fix download URL for packmol     (#2902)</li> <li>drop <code>usempi</code> toolchain in numexpr easyconfigs, not needed     (#2937)</li> <li>fix use of <code>resolve_dependencies</code> in tests according to changes     in framework     (#2952)</li> <li>add dependency extensions for MarkupSafe and jsonscheme in     IPython 3.2.3 easyconfigs     (#2967)</li> <li>add patch for matplotlib 1.5.1 to fix Tcl/Tk library paths being     used     (#2971)</li> <li>add xproto build dependency for makedepend v1.0.5     (#2982)</li> <li>disable parallel build for Doxygen     (#2986)</li> <li>fix source URLs for <code>FreezeThaw</code> and <code>Tie::Function</code> extensions     for Perl v5.22.1     (#2988)</li> <li>add <code>sed</code> command in worker easyconfig files to fix module_path     in conf/worker.conf     (#2997,     #3000)</li> <li>drop toolchainopts from Eigen easyconfigs, since it is     headers-only     (#3025)</li> <li>clean up dummy bzip2 easyconfig, define buildopts rather than     defining <code>$CC</code> and <code>$CFLAGS</code> via <code>os.environ</code>     (#3036)</li> <li>use <code>%(pyshortver)s</code> template rather than hardcoding 2.7 in VTK     easyconfigs     (#3052)</li> <li>correct install location of OpenCV Python bindings     (#3054)</li> <li>include XZ as dependency for libunwind     (#3055)</li> <li>add patch to fix broken OpenSSL tests due to expired     certificates     (#3057)</li> <li>fix broken link to VSC website in license headers     (#3062)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb270","title":"EasyBuild v2.7.0 (March 20th 2016)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>stabilize Cray support<ul> <li>enable '<code>dynamic</code>' toolchain option by default for <code>Cray*</code>     toolchains     (#1581)</li> <li>remove FFTW from the Cray toolchains definition     (#1585)</li> <li>add external modules metadata for Cray systems     (#1638)</li> <li>fix independency of Cray toolchains w.r.t. toolchain build     environment     (#1641,     #1647)</li> <li>remove requirement to use <code>--experimental</code> for Cray toolchains     (#1663)</li> </ul> </li> <li>enable Python optimization mode in '<code>eb</code>'     (#1357)</li> <li>improved GitHub integration<ul> <li>improve error handling on git commands + better logging for     <code>--new-pr</code>/<code>--update-pr</code>     (#1590)</li> <li>use <code>git</code> rather than <code>https</code> in <code>--new-pr</code>/<code>--update-pr</code>     (#1602)</li> <li>add <code>-u</code> as shorthand for <code>--upload-test-report</code>     (#1605)</li> <li>fix <code>--from-pr</code> for PRs that include renamed/deleted files     (#1615)</li> <li>add support for <code>--install-github-token</code> and <code>--check-github</code>     (#1616)</li> <li>fix <code>fetch_easyconfigs_from_pr</code> w.r.t. duplicate files in PRs     (#1628)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add support for <code>--search-filename</code> and <code>--terse</code>     (#1577)</li> <li>support complete bash completion     (#1580)</li> <li>add support for <code>%(*ver)s</code> and <code>%(*shortver)s</code> templates     (#1595,     #1604)<ul> <li>incl. <code>%(javaver)s</code>, <code>%(javashortver)s</code>, <code>%(perlver)s</code>,     <code>%(perlshortver)s</code>, <code>%(pyver)s</code>, <code>%(pyshortver)s</code>,     <code>%(rver)s</code>, <code>%(rshortver)s</code></li> </ul> </li> <li>define <code>HOME</code> constant that can be used in easyconfig files     (#1607)</li> <li>implement support for generating '<code>swap</code>' statements in module     files     (#1609)</li> <li>add support for <code>--show-config</code>     (#1611,     #1620)</li> <li>simplified support for <code>--minimal-toolchains</code>     (#1614,     #1619,     #1622,     #1625,     #1646)</li> <li>add support for <code>--dump-env-script</code>     (#1624)</li> <li>enhance ModulesTool.exist to also recognize partial module names     (#1630)</li> <li>improve error message for toolchain definition errors     (#1631)</li> <li>make default is_short_modname_for check less strict to support     versionless external modules as deps     (#1632)</li> <li>mention hostname in comment made by <code>--upload-test-report</code>     (#1635)</li> <li>support providing additional relative path for prefix in     external module metadata     (#1637)</li> <li>add <code>ThematicModuleNamingScheme</code>     (#1645)</li> <li>enhance logging format: remove logger name, mention location     instead     (#1649,     #1654)</li> <li>update kernel versions for SLES12     (#1659)</li> <li>raise <code>EasyBuildError</code> rather than <code>ImportError</code> in     <code>only_if_module_is_available</code> decorator     (#1662)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Lmod spider output in generated modules     (#1583)</li> <li>correctly define '<code>easybuild</code>' namespaces     (#1593,     #1666,     #1680)<ul> <li>this change requires that the <code>setuptools</code> Python package is     available (at runtime)</li> <li>using custom easyblocks by adding them in the Python search     path (<code>$PYTHONPATH</code>) may require adjustments, i.e. also     using <code>pkg_resources.declare_namespace</code> in the <code>__init__.py</code>     files; we highly recommend to use <code>--include-easyblocks</code> instead, see     http://easybuild.readthedocs.org/en/latest/Including_additional_Python_modules.html</li> <li>note: this has the side-effect of not being able anymore to     reliably use '<code>eb</code>' in the parent directory of the     easybuild-framework repository     (#1667)</li> </ul> </li> <li>fix template for <code>savannah.gnu.org</code> source URL     (#1601)</li> <li>stop running '<code>module purge</code>', only restore environment     (#1608)</li> <li>fix license headers: Hercules foundation is now FWO     (#1629)</li> <li>avoid that <code>fancylogger</code> tries to import <code>mpi4py</code> to determine     MPI rank     (#1648)</li> <li>fix error in tests when '<code>file</code>' backend is not available in     Python keyring     (#1650)</li> <li>update develop install script     (#1651)</li> <li>handle allowed system deps during <code>prepare_step</code> rather than     during parsing of easyconfig     (#1652)</li> <li>add function to find FlexLM licenses: <code>find_flexlm_license</code>     (#1633,     #1653)</li> <li>fix availability check for external modules with partial module     name     (#1634,     #1643)</li> <li>fix bootstrap script to ensure <code>setuptools</code> is also installed     (#1655)</li> <li>fix issue in bootstrap script with <code>vsc-base</code> being picked up     from the OS     (#1656)</li> <li>fix bootstrap script for environment where '<code>python</code>' is     Python 3.x     (#1660)</li> <li>remove <code>--experimental</code> for tests related to <code>--package</code>     (#1665)</li> <li>ensure path to setuptools is included in <code>$PYTHONPATH</code> being     used to test scripts     (#1671)</li> <li>sanitize environment before initializing easyblocks     (#1676)</li> <li>remove <code>reload</code> statements in <code>include.py</code>, since they are not     required and break <code>--include-toolchains</code>     (#1679)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblocks for 6 software packages that require customized     support:<ul> <li>ADF     (#826),     MPICH     (#844,     #852,     #868),     mutil     (#859),     pplacer     (#835),     psmpi     (#852),     SNPhylo     (#865)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>implement support for '<code>use_pip</code>' in PythonPackage easyblock     (#719,     #831)</li> <li>add support in CUDA easyblock to install wrappers for host     compilers     (#758)</li> <li>update sanity check for picard version 1.124 and above     (#796)</li> <li>use '<code>module swap</code>' for all components in <code>CrayToolchain</code>     (#823)</li> <li>update PSI4 easyblock to cope with changed name of PSI4 data dir     (#824)</li> <li>use <code>find_flexlm_license</code> function and avoid defining <code>$CPATH</code>     in PGI easyblock     (#837)</li> <li>use <code>find_flexlm_license</code> function in <code>IntelBase</code> generic     easyblock     (#839)</li> <li>add unit test to check module file generated by <code>PythonPackage</code>     easyblock     (#841)</li> <li>rework MVAPICH2 easyblock on top of new MPICH easyblock     (#844)</li> <li>add CUDA support in CP2K easyblock     (#850)</li> <li>also define <code>$LD</code> in <code>buildopts</code> for GATE     (#855)</li> <li>use <code>find_flexlm_license</code> function in TotalView easyblock     (#839)</li> <li>enhance <code>MakeCp</code> easyblock to also support renaming of files     while copying them     (#859)</li> <li>hunt for usable '<code>python</code>' command in <code>PythonPackage</code>     easyblock when system Python is used     (#861)</li> <li>add sanity check in <code>easybuild/__init__.py</code> w.r.t. current     working dir     (#869)</li> <li>change suffix of original file to <code>.easybuild</code> when using     <code>fileinput</code> in impi easyblock     (#870)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make sure Python unicode settings match that of the system     Python     (#817)</li> <li>remove FFTW related statements in HPL easyblock, since HPL     doesn't require FFTW at all     (#822)</li> <li>use <code>pkg_resources.declare_namespace</code> rather than     <code>pkgutil.extend_path</code> to declare '<code>easybuild</code>' namespaces     (#827)</li> <li>fix license headers: Hercules foundation is now FWO     (#836)</li> <li>fix check for non-empty lib dirs in <code>PythonPackage</code> easyblock     (#840)</li> <li>consider all Python lib dirs in sanity check for libxml2     (#842)</li> <li>correctly handle deprecated configure options     (<code>--with-hwloc</code>/<code>--enable-mpe</code>) in MVAPICH2 easyblock     (#853)</li> <li>use correct configure option for checkpoint/restart in MVAPICH2     easyblock     (#854)</li> <li>ensure list of Python lib dirs always has a '<code>lib/...</code>' entry     (#858)</li> <li>check whether <code>rpm</code>/<code>rpmrebuild</code> commands are available using     '<code>which</code>', rather than checking for OS deps     (#864)</li> <li>fix <code>test_step</code> in UFC easyblock     (#872)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 63 new software packages:<ul> <li>ATSAS     (#616,     #2587),     astropy     (#2724,     #2727),     attr     (#2706),     BamUtil     (#2654),     BBMap     (#2322),     BH     (#2508),     CheMPS2     (#2445),     CosmoloPy     (#2723,     #2727),     csvkit     (#2639),     Firefox     (#2648),     FreeXL     (#2422),     GL2PS     (#2667),     Glade     (#2631),     htop     (#2538),     IGV     (#2019),     IGVTools     (#2019),     ImageMagick     (#2438),     jModelTest     (#2529),     KEALib     (#2420),     libcerf     (#2656),     libgcrypt     (#2201),     libglade     (#2631),     libgpg-error     (#2201),     libspatialite     (#2431),     LittleCMS     (#2438),     MAST     (#2542),     MLC     (#2577),     MPJ-Express     (#2529),     mutil     (#2201),     neon     (#758),     NextClip     (#2544),     npstat     (#2686,     #2703),     Octopus     (#2643),     QuickFF     (#2721),     p4vasp     (#2328),     PCMSolver     (#2445),     PFFT     (#2643),     PHYLIP     (#2694),     pkgconfig     (#2475,     #2476),     Platypus     (#2618),     pplacer     (#1056),     PRINSEQ     (#2437,     #2444,     #2585),     PyFFmpeg     (#2501,     #2519),     PyGObject     (#2443),     PyGTK     (#2443),     PyOpenGL     (#2628),     pyringe     (#2533),     qrupdate     (#2675),     rgeos     (#2635),     rpmrebuild     (#2402),     shift     (#2201),     SNAPE-pooled     (#2688),     SNPhylo     (#2701),     sratoolkit     (#2715),     STAR-Fusion     (#2463),     statsmodels     (#2719),     StringTie     (#2527),     synchronicity     (#2508),     testpath     (#2461),     USEARCH     (#2537),     VarScan     (#2464),     vsc-install     (#2165),     Whoosh     (#2725),     xprop     (#2645)</li> </ul> </li> <li>added new easyconfigs for existing toolchains:<ul> <li><code>intel/2016.02-GCC-4.9</code>     (#2620),     <code>gmpolf/2016a</code> &amp; <code>gmvolf/2016a</code>     (#2589)</li> </ul> </li> <li>stable Cray-specific easyconfigs<ul> <li>delete deprecated Cray toolchains and easyconfig files     (#2400)</li> <li>don't hardcode <code>PrgEnv</code> version, remove <code>craype</code> and <code>fftw</code>     components in Cray toolchains     (#2554)</li> <li>remove <code>-XC</code> versionsuffix for stable definitions for <code>Cray*</code>     toolchains     (#2714)</li> <li>support for various software packages with <code>CrayGNU</code> and     <code>CrayIntel</code> toolchains: CP2K, GROMACS, WRF</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including BWA 0.7.13, CMake 3.4.3, GATE 7.2, GROMACS 5.1.2, Mesa     11.1.2, netCDF 4.4.0, Perl 5.22.1, Python 3.5.1, R 3.2.3,     R-bundle-Bioconductor 3.2, scipy 0.17.0, SuiteSparse 4.5.1</li> </ul> </li> <li>various other enhancements, including:<ul> <li>copy <code>contrib</code> dir in Velvet easyconfigs so scripts are also     available     (#2456)</li> <li>redefine matplotlib 1.5.1 easyconfig as a bundle, also include     <code>cycler</code> extension (dep for matplotlib)     (#2470)</li> <li>add bitstring extension to Python 2.7.11 easyconfigs     (#2471)</li> <li>enable building of MetaVelvet in Velvet 1.2.10 easyconfigs     (#2473)</li> <li>add custom sanity check for libjpeg-turbo     (#2480)</li> <li>add Velvet easyconfigs that include BioPerl dependency, so     VelvetOptimizer can use it     (#2495,     #2729,     #2733)</li> <li>add source URL in RAxML 7.2.6 easyconfigs     (#2536)</li> <li>update MPICH easyconfigs to use new MPICH easyblock     (#2589)</li> <li>free libX11 &amp; co from unneeded Python dependency/versionsuffix     (#2549,     #2563,     #2605,     #2664)</li> <li>add '<code>--enable-utf --enable-unicode-properties</code>' configure     options in PCRE easyconfigs     (#2561)<ul> <li>required for latest R versions</li> </ul> </li> <li>add HCsnip, metagenomeSeq in Bioconductor 3.1 bundles     (#2553,     #2578)</li> <li>add additional extensions in R 3.2.x easyconfigs that are     required for extra Bioconductor extensions     (#2547,     #2556)</li> <li>update psmpi easyconfig files to use the new psmpi easyblock     (#2619)</li> <li>add easyconfig for Python 2.7.11 on top of X11-enabled Tk     (#2614,     #2621)</li> <li>add virtualenv as extension in Python 2.7.11 easyconfigs     (#2660)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix software name for GTK+ (was 'gtk+'), PyCairo (was     'pycairo') and Gdk-Pixbuf (was 'gdk-pixbuf')     (#2468)</li> <li>don't hardcode <code>CC</code>/<code>CXX</code> in OpenMPI easyconfigs     (#2472)</li> <li>remove Google Code source URL for mpi4py     (#2474)</li> <li>rename ffmpeg to FFmpeg     (#2425,     #2481)</li> <li>use available easyblock for flex     (#2486)</li> <li>fix determining list of easyconfigs in unit test suite, don't     assume locations are correct     (#2530)</li> <li>fix specifying DB dependency in DB_File easyconfigs     (#2539)</li> <li>remove hard-coded <code>-xSSE4.2</code> for numpy/scipy with Intel     compilers     (#2546)</li> <li>fix license headers: Hercules foundation is now FWO     (#2550)</li> <li>add <code>--with-zlib</code> configure argument in libxml easyconfigs     (#2555)</li> <li>don't hardcode <code>optarch=True</code> in xextproto/xtrans easyconfigs     (#2601)</li> <li>change toolchain version to '' in easyconfigs that use <code>dummy</code>     toolchain and include dependencies     (#2612)</li> <li>GLib doesn't require libxml2 with Python bindings     (#2632)</li> <li>add patch file to imkl 10.2.6.038 32-bit easyconfig to fix     installer not being able to deal with '<code>--</code>' in build path     (#2634)</li> <li>add missing 'pkgconfig' dependency for h5py     (#2476,     #2650)</li> <li>correct software name in FastQC easyconfigs (was 'fastqc'),     use '<code>dummy</code>' toolchain for all FastQC version     (#2657,     #2666)</li> <li>add missing libxml2 dependencies in GLib easyconfigs     (#2658)</li> <li>fix Xerces-C++ download location     (#2668)</li> <li>enable <code>XML::Bare</code> extension in all Perl easyconfigs     (#2672)</li> <li>update dead link for SuiteSparse     (#2679)</li> <li>remove custom <code>exts_filter</code> in easyconfigs used <code>PythonPackage</code>     easyblock     (#2683,     #2685)</li> <li>add M4 as build dep for binutils &amp; flex     (#2681)</li> <li>add missing dependencies in Python 3.5.x easyconfigs: SQLite,     Tk, GMP     (#2704)</li> <li>fix (OS) deps, add checksums, remove parameter definition with     default values in MVAPICH2 easyconfigs     (#2707)</li> </ul> </li> <li>style cleanup in various easyconfigs     (#2378,     #2387,     #2395,     #2396,     #2488-#2493,     #2496-#2500,     #2502-#2504,     #2602)<ul> <li>working towards automated style review of pull requests</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb260","title":"EasyBuild v2.6.0 (January 26th 2016)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add (experimental) support for opening/updating (easyconfigs) pull     requests (<code>--new-pr</code>, <code>--update-pr</code>)     (#1528)</li> <li>sanitize environment before each installation by undefining     <code>$PYTHON*</code>     (#1569,     #1572)</li> <li>various other enhancements, including:<ul> <li>allow user-local modules with hierarchical naming schemes     (<code>--subdir-user-modules</code>)     (#1472)</li> <li>enhance <code>--extended-dry-run</code> output to include paths for     requirements in <code>make_module_req</code>     (#1520)</li> <li>rewrite read_file to use '<code>with</code>'     (#1534)</li> <li>add support for <code>eb --last-log</code>     (#1541)</li> <li>support using fixed install dir scheme     (<code>--fixed-installdir-naming-scheme</code>)     (#1546)</li> <li>add edge attributes for build dependencies in <code>--dep-graph</code>     output     (#1548)</li> <li>check whether dependencies marked as external module are hidden     (#1552)</li> <li>implement support for <code>--modules-header</code>     (#1558)</li> <li>add support to specify '<code>else</code>' body for conditional     statements in modules     (#1559)</li> <li>add extra test for <code>--include-easyblocks</code> for generic easyblocks     (#1562)</li> <li>allow user to define the default compiler optimization level     (<code>--default-opt-level</code>)     (#1565)</li> <li>make <code>toolchain.get_variable</code> more robust w.r.t. dummy toolchain     (#1566)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix missing '<code>yaml</code>' module check in tests     (#1525)</li> <li>fix 'develop' install script     (#1529)</li> <li>correctly quote FPM option values in packagin support     (#1530)</li> <li>correctly handle '<code>.</code>' in software name w.r.t. <code>$EB*</code>     environment variables     (#1538)</li> <li>exclude logs and test reports from packages     (#1544)</li> <li>also pass down <code>--job-cores</code> for <code>pbs_python</code> job backend     (#1547)</li> <li>skip dependencies marked as external modules when packaging     (#1550)</li> <li>fix syntax for <code>set_alias</code> statement in Lua syntax     (#1554)</li> <li>handle the case of all 'offline' nodes correctly for <code>--job</code>     (#1560)</li> <li>fix <code>test_modules_tool_stateless</code> unit test for stateless     ModulesTool with Lmod as modules tool     (#1570)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>add generic easyblock for Cray toolchains     (#766)</li> <li>new easyblocks for 2 software packages that require customized     support:<ul> <li>EggLib     (#811),     PGI     (#658)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>update BamTools easyblock for versions 2.3.x and newer: some     shared libraries are now static)     (#785)</li> <li>don't hardcode <code>.so</code>, use <code>get_shared_lib_ext</code> instead     (#789,     #790,     #791,     #793,     #794,     #803,     #815)</li> <li>enhance CPLEX easyblock by adding more subdirs to <code>$PATH</code>,     define <code>$LD_LIBRARY</code> and <code>$CPLEXDIR</code>     (#797)</li> <li>make sanity check for netcdf4-python work with both egg and     non-egg installs     (#799)</li> <li>update sanity check in PETSc/SLEPc easyblocks for v3.6.x     (#800)</li> <li>update Trinity easyblock for 2.x versions     (#802)</li> <li>update DOLFIN easyblock for v1.6.0     (#804)</li> <li>check for <code>libkokkoscore.a</code> rather than <code>libkokkos.a</code> for     Trilinos 12.x     (#805)</li> <li>add an option to skip the sanitizer tests of Clang     (#806)</li> <li>update Molpro easyblock to support binary installs and 2015     version     (#807)</li> <li>make <code>ConfigureMake</code> more robust w.r.t. custom easyconfig     parameters     (#810)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add back support for Eigen 2.x in Eigen easyblock     (#798)</li> <li>fix for vsc-base being picked up from OS in EasyBuildMeta     easyblock     (#813)</li> <li>remove <code>setuptools.pth</code> if it includes absolute paths after     installing EasyBuild     (#813)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>add easyconfigs for <code>foss/2016a</code> and <code>intel/2016</code> common toolchains     (#2310,     #2311,     #2339,     #2363)<ul> <li>incl. easyconfigs for Boost, CMake, Python, Perl using these     toolchains</li> </ul> </li> <li>added example easyconfig files for 21 new software packages:<ul> <li>BLASR     (#922),     BioKanga     (#2247),     BoltzTraP     (#2365),     basemap     (#2221),     CppUnit     (#2271),     EggLib     (#2335),     FLASH     (#2281),     GLM     (#2288),     hub     (#2249),     MACS2     (#1983),     MotEvo     (#843),     numba     (#2243),     PGI     (#1833,     #2367),     PLY     (#2305),     PaStiX     (#2319,     #2326),     patchelf     (#2327),     pip     (#2284),     RSEM     (#2316),     RcppArmadillo     (#2289),     SCDE     (#2289),     slepc4py     (#2318)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including BamTools 2.4.0, Boost 1.60.0, Clang 3.7.1,     DOLFIN/FFC/FIAT/Instant/UFL 1.6.0, GATE 7.0, GCC 5.3.0, LLVM     3.7.1, pandas 0.17.1, PETSc 3.6.3, SAMtools 1.3, scipy 0.16.1,     SLEPc 3.6.2, Trilinos 12.4.2, Trinity 2.1.1, VTK 6.3.0</li> </ul> </li> <li>various other enhancements, including:<ul> <li>added new <code>Cray*</code> toolchain versions with pinned dependency     versions     (#2222)</li> <li>don't hardcode <code>.so</code>, use <code>SHLIB_EXT</code> constant instead     (#2245)</li> <li>add custom sanity check in GEOS easyconfigs     (#2285)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add Autotools (M4) as a build dependency in GMP v6.x easyconfigs     (#2096)</li> <li>remove argparse from list of extensions in Python 3.2+     easyconfigs, since it became part of stdlib     (#2323)</li> </ul> </li> <li>various style fixes, including:<ul> <li>get rid of tabs     (#2302)</li> <li>remove trailing whitespace     (#2341)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb250","title":"EasyBuild v2.5.0 (December 17th 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add support for IBM XL compilers on Power7 and PowerPC (BlueGene)     (#1470)</li> <li>add support for generic compilation using <code>--optarch=GENERIC</code>     (#1471)<ul> <li>see also     Controlling compiler optimization flags</li> </ul> </li> <li>update experimental support for <code>.yeb</code> easyconfigs     (#1515)<ul> <li>support clean way to specify toolchain + dependencies in <code>.yeb</code>     easyconfigs</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add support for '<code>whatis</code>' easyconfig parameter     (#1271)</li> <li>add support for SLES 12 and kernel 3.12.x     (#1412)</li> <li>add GCCcore toolchain definition     (#1451)</li> <li>use '<code>diff --git</code>' lines to determine patched files in pull     request with <code>--from-pr</code>     (#1460)</li> <li>add proper option parser to bootstrap script     (#1468)</li> <li>add <code>get_gcc_version()</code> function in systemtools module     (#1496)</li> <li>don't load fake module in sanity_check_step during a dry run     (#1499)</li> <li>allow string values to be passed in <code>make_module_req</code> by     hoisting them into a list     (#1502)</li> <li>add support for listing build dependencies as hidden     dependencies     (#1503)</li> <li>also consider <code>lib32/pkgconfig</code> and <code>lib64/pkgconfig</code> for     <code>$PKG_CONFIG_PATH</code>     (#1505)</li> <li>add support to <code>make_module_dep</code> to specify module to unload     before loading a dependency module     (#1506)</li> <li>add support to <code>make_module_extra</code> to specify alternative     root/version for <code>$EBROOT</code>/<code>$EBVERSION</code>     (#1508)</li> <li>packaging support is no longer considered experimental     (#1510)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also consider <code>lib64</code> in sanity check performed during EasyBuild     bootstrap     (#1464)</li> <li>also add description/homepage to packages created with FPM     (#1469)</li> <li>fix develop setup script to install EasyBuild-develop module in     subdirectory     (#1480)</li> <li>don't create a whole set of temporary '<code>minimal-easyconfigs</code>'     subdirs with <code>--minimal-toolchains</code>     (#1484)</li> <li>only keep polling if exit code is <code>None</code> in <code>run_cmd_qa</code>, to     correctly deal with negative exit codes     (#1486)</li> <li>fix bootstrap script for missing sys_platform by using newer     distribute 0.6.49 in stage 0     (#1490)</li> <li>make sure that extra custom easyconfig parameters are known for     extensions     (#1498)</li> <li>add missing import for <code>EasyBuildError</code> in     <code>easybuild/toolchains/linalg/libsci.py</code>     (#1512)</li> <li>isolate tests from possible system-wide configuration files     (#1513)</li> <li>only use <code>glob</code> in <code>make_module_req</code> on non-empty strings     (#1519)<ul> <li>this fixes the problem where <code>$CUDA_HOME</code> and <code>$CUDA_PATH</code>     are not defined in module files for CUDA</li> </ul> </li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>update easyblocks for Intel tools to support 2016 versions     (#691,     #745,     #756,     #777)<ul> <li>IntelBase easyblock has been enhanced to support specifying     which components to install</li> </ul> </li> <li>new easyblocks for 3 software packages that require customized     support:<ul> <li>Intel Advisor     (#767),     DIRAC     (#778),     MRtrix     (#772)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>update numpy and SuiteSparse easyblock to use scikit-umfpack     (#718)</li> <li>add an option to allow removal of the <code>-Dusethreads</code> flag in     Perl easyblock     (#724)</li> <li>update Doxygen easyblock for 1.10.x (CMake)     (#734)</li> <li>update sanity check in Qt easyblock for Qt 5.x     (#740)</li> <li>add support for multilib build of GCC on PowerPC     (#741)</li> <li>add support to OpenFOAM and SCOTCH easyblocks to support 64-bit     integers, via 'i8' toolchain option     (#744)</li> <li>fix sanity check to support numpy 1.10 (dropped _dotblas.so)     (#757,     #761,     #762)</li> <li>update IPP easyblock for v9.x     (#759)</li> <li>cleaner output for PythonPackage under dry run, make numpy     easyblock dry-run aware     (#760,     #671)</li> <li>add support for using netCDF-Fortran as dependency in ALADIN     easyblock     (#764)</li> <li>add support for tbb 4.4.x in tbb easyblock     (#769)</li> <li>add support for specifying altroot/altversion in Bundle     easyblock     (#773)</li> <li>update OpenFOAM easyblock for OpenFOAM-Extend 3.2 + use     apply_regex_substitutions     (#770)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix module path extension of system compiler in HMNS setup     (#742)</li> <li>only restore <code>$PYTHONPATH</code> if it was defined in EasyBuildMeta     easyblock     (#743)</li> <li>make sure <code>$PYTHONPATH</code> is defined correctly in module file for     Python packages created with <code>--module-only</code>     (#748)</li> <li>fix WRF easyblock to produce correct module under     <code>--module-only --force</code>     (#746,     #752)</li> <li>don't hardcode '<code>openPBS</code>' in GATE easyblock, use value for     <code>default_platform</code> easyconfig parameter     (#753)</li> <li>avoid adding lib subdirs to <code>$*LIBRARY_PATH</code> if no libraries are     there in <code>PythonPackage</code> easyblock     (#755)</li> <li>fix installing Python bindings for libxml2 to correct     installation prefix     (#765)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li> <p>add GCCcore easyconfig that can be used as base for all compilers     (without getting in the way)     (#2214)</p> <ul> <li>along with easyconfig for <code>GCC/4.9.3-2.25</code>: bundle of GCCcore     4.9.3 and binutils 2.25</li> <li>intended to replace the GNU toolchain</li> </ul> </li> <li> <p>added example easyconfig files for 39 new software packages:</p> <ul> <li>DIRAC     (#2212),     GeoIP     (#2172,     #2185),     GeoIP-C     (#2172,     #2185),     graph-tool     (#1591),     gtkglext     (#2217),     Intel Advisor     (#2210),     InterProScan     (#2225,     #2227,     #2234),     intltool     (#2136),     kallisto     (#2173),     LibUUID     (#1930),     LuaJIT     (#2153),     libXcursor     (#2136),     libXrandr     (#2136),     libXtst     (#2143),     libdap     (#1930),     libtasn1     (#2208),     libxkbcommon     (#2136),     MRtrix     (#2217,     #2218),     MultiNest     (#2166,     #2168),     Nipype     (#2150),     PPfold     (#2183,     #2187),     p11-kit     (#2208),     pangox-compat     (#2217),     Qt5     (#2136),     randrproto     (#2136),     rhdf5     (#2175),     Stampy     (#2180,     #2182),     scikit-umfpack     (#2061),     scp (Python pkg)     (#2196),     sleuth     (#2175),     traits     (#2150),     vincent     (#2169,     #2185),     XKeyboardConfig     (#2136),     xcb-util     (#2136),     xcb-util-image     (#2136),     xcb-util-keysyms     (#2136),     xcb-util-renderutil     (#2136),     xcb-util-wm     (#2136),     zlibbioc     (#2175)</li> </ul> </li> <li> <p>added new easyconfigs for existing toolchains:</p> <ul> <li><code>intel/2015.08</code>     (#2194),     <code>intel/2016.00</code>     (#2209),     <code>intel/2016.01</code>     (#2219),     <code>iomkl/2015.03</code>     (#2155)</li> </ul> </li> <li> <p>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...</p> <ul> <li>including CMake 3.4.1, HDF5 1.8.16, netCDF 4.3.3.1,     netCDF-Fortran 4.4.2, numpy 1.10.1, Octave 4.0.0, OpenFOAM     3.0.0, OpenFOAM-Extend 3.2, Python 2.7.11</li> </ul> </li> <li> <p>various other enhancements, including:</p> <ul> <li>add tidyr to R 3.2.1 easyconfigs     (#2174)</li> <li>enable C++ support in MIGRATE-N     (#2178)</li> <li>also installed shared libraries for AMD and UMFPACK in     SuiteSparse     (#2061)</li> <li>fix software name for ParaView (was: Paraview)     (#2132)</li> <li>enable building of shared libraries for binutils     (#2133)</li> <li>harden binutils built with dummy toolchain by linking to system     libraries via <code>RPATH</code>     (#2228)</li> <li>enhance easyconfig unit tests to check that each easyconfig file     is in the right subdirectory     (#2232)</li> </ul> </li> <li> <p>various bug fixes, including:</p> <ul> <li>fix ALADIN patch file to not use relative paths, and adjust list     of ALADIN sources accordingly     ((#2207),     (#2213))</li> <li>rename patch files for OpenFOAM to be in line with other patches     (#2226)</li> <li>fix typo in bzip2 source URLs     (#2204)</li> <li>force linking of ncurses in libreadline     (#2206)</li> <li>enable <code>-fPIC</code> in all zlib 1.2.8 easyconfigs     (#2220)</li> <li>move Net-LibIDN/SRA-Toolkit/bbftpPRO/o2scl easyconfigs to right     location     (#2232)</li> <li>restrict parallel build in OpenFOAM-Extend easyconfigs via     '<code>maxparallel</code>', not '<code>parallel</code>'     (#2233)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb240","title":"EasyBuild v2.4.0 (November 10th 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add support for <code>--extended-dry-run</code>/<code>-x</code>     (#1388,     #1450,     #1453,     #1455)<ul> <li>detailed documentation is available at     Extended dry run</li> </ul> </li> <li>fix checking of sanity check paths w.r.t. discriminating between     files and directories     (#1436)<ul> <li>this impacts several easyconfig files where <code>sanity_check_paths</code>     was not 100% correct</li> </ul> </li> <li>make '<code>eb</code>' script aware of Python v3.x, fall back to using     <code>python2</code> if required     (#1411)</li> <li>add experimental support for parsing .yeb easyconfig files in YAML     syntax     (#1447,     #1448,     #1449)<ul> <li>see also Writing easyconfig files in YAML syntax</li> </ul> </li> <li>add experimental support for resolving dependencies with minimal     toolchains     (#1306)<ul> <li>see also Using minimal toolchains for dependencies</li> </ul> </li> <li>various other enhancements, including:<ul> <li>refactor <code>extract_cmd</code> function to get rid of if/elif/else     spaghetti blob     (#1382)</li> <li>add support for <code>--review-pr</code>     (#1383)</li> <li>add <code>apply_regex_substitutions</code> function to perform runtime     patching from easyblocks     (#1388,     #1458)</li> <li>add support for specifying alternate name to be part of     generated module name     (#1389)<ul> <li>via '<code>modaltsoftname</code>' easyconfig parameter</li> </ul> </li> <li>support overriding # used cores via <code>--parallel</code>     (#1393)</li> <li>also define <code>$FC</code> and <code>$FCFLAGS</code> in build environment     (#1394)</li> <li>add support extracting for <code>.tar.Z</code> files     (#1396)</li> <li>include easybuild/scripts in installation     (#1397)</li> <li>ignore hidden directories in find_base_dir     (#1413,     #1415)</li> <li>add <code>only_if_module_is_available</code> decorator function to guard     functionality that uses optional dependencies     (#1416)</li> <li>give easyblocks the possibility to choose <code>maxhits</code> for     <code>run_cmd_qa</code>     (#1417)</li> <li>use class name (string) rather than License instances as values     for software license constants     (#1418)</li> <li>support controlling recursive unloading of dependencies via     '<code>recursive_module_unload</code>' easyconfig parameter     (#1425)</li> <li>implement basic support for type checking of easyconfig     parameters     (#1427)</li> <li>support auto-converting to expected value type for easyconfig     parameters (enabled by default)     (#1428,     #1437)</li> <li>add support for <code>--rebuild</code> command line option, alternative for     <code>--force</code> which doesn't imply <code>--ignore-osdeps</code>     (#1435)</li> <li>add support for Mercurial easyconfig repository     (#979,     #1446)</li> <li>add dedicated class for psmpi toolchain MPI component, and use     it in gpsmpi and ipsmpi toolchains     (#1454)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix extracting of comments from an easyconfig file that includes     'tail' comments     (#1381)</li> <li>fix dev version to follow PEP-440, as required by recent     setuptools versions     (#1403)<ul> <li>required to avoid that setuptools transforms the version     itself</li> <li>see also     https://www.python.org/dev/peps/pep-0440/#developmental-releases</li> </ul> </li> <li>allow <code>get_cpu_speed</code> to return <code>None</code> if CPU freq could not be     determined     (#1421)</li> <li>relax <code>sanity_check_paths</code> in EasyBuild bootstrap script to deal     with possible zipped .egg     (#1422)</li> <li>use empty list as default value for src/patches in Extension     class     (#1434)</li> <li>skip symlinked files in <code>adjust_permissions</code> function     (#1439)</li> <li>fix HierarchicalMNS to always use full version number     (#1440)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>3 new generic easyblocks: OCamlPackage     (#467),     SCons     (#689,     #700),     Waf     (#722)</li> <li>new easyblocks for 2 software packages that require customized     support:<ul> <li>OCaml     (#467),     Samcef     (#678)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add support for installing OpenFOAM with external METIS, CGAL     and Paraview     (#497)</li> <li>update netCDF easyblock updated for netCDF v4.3.3.1     (#674)</li> <li>update Rosetta easyblock for recent Rosetta versions     (#677)</li> <li>make unpacked source dir detection in easyblock for VSC-tools a     little bit more flexible     (#679)</li> <li>add support for building with Plumed support enabled in CP2K     easyblock     (#681)</li> <li>update Go easyblock for Go v1.5     (#683)</li> <li>use <code>apply_regex_substitutions</code> function in WRF easyblock     (#685)</li> <li>update MUMPS easyblock for 5.x     (#686)</li> <li>implement runtime patching of <code>$WM_*</code> and compiler variables for     OpenFOAM     (#688)</li> <li>specify sequential compiler to use in compiler command that gets     injected in OpenFOAM easyblock     (#692)</li> <li>make <code>PythonPackage</code> and WRF easyblocks dry-run aware     (#696)<ul> <li>see also     Guidelines for easyblocks</li> </ul> </li> <li>add support in <code>PythonPackage</code> for installing with     <code>easy_install</code> + installing zipped eggs     (#698,     #711,     #715)</li> <li>update Bowtie easyblock for recent Bowtie versions     (#707)</li> <li>update CUDA easyblock for CUDA     7.x(#708)</li> <li>also consider <code>config/make.sys.in</code> for want in QuantumESRESSO     easyblock     (#714)</li> <li>define <code>$NWCHEM_LONG_PATH</code> if needed in NWChem easyblock     (#720)</li> <li>remove custom post-install step in PDT easyblock     (#723)<ul> <li>no longer needed now that <code>adjust_permissions</code> functions     ignores symlinks</li> </ul> </li> <li>use <code>$LIBS</code> in HPL easyblock     (#727,     #736)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>also define <code>$MCRROOT</code> for MCR in module     (#687)</li> <li>add missing '<code>super</code>' call in <code>configure_step</code> of easyblock     for python-meep     (#694)</li> <li>only prepend existing non-empty paths to <code>$PYTHONPATH</code> in     <code>PythonPackage</code> easyblock     (#697)</li> <li>fix extra_options definition in <code>CMakePythonPackage</code> easyblock     (#698)</li> <li>fix dev version to follow PEP-440, as required by recent     setuptools versions     (#702,     #703,     #704)<ul> <li>required to avoid that setuptools transforms the version     itself</li> <li>see also     https://www.python.org/dev/peps/pep-0440/#developmental-releases</li> </ul> </li> <li>consider both <code>lib</code> and <code>lib64</code> in sanity check paths for flex     (#705)</li> <li>also copy signature file and don't copy CMake files in Eigen     easyblock     (#709)</li> <li>fix directory names in <code>make_module_req_guess</code> of ANSYS     easyblock     (#713)</li> <li>fix imports for <code>set_tmpdir</code> in easyblock unit tests after     function was moved in EasyBuild framework     (#726)</li> <li>use <code>--with-tcltk*</code> configure options for Python to point to     ensure Tcl/Tk deps are picked up     (#729)</li> <li>fix order of subdirs for QuantumESPRESSO binaries     (#730)</li> <li>correctly handle having both <code>$FC</code>/<code>$FCFLAGS</code> and     <code>$F90</code>/<code>$F90FLAGS</code> defined when building MVAPICH2     (#732)</li> <li>fix OpenSSL sanity check paths: lib/engines is a directory     (#731,     #733)</li> <li>fix sanity check paths for netcdf-python     (#735)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 45 new software packages:<ul> <li>animation     (#2007),     ANSYS CFD     (#1969),     ANTLR     (#1191,     #1980),     APR     (#1970),     APR-util     (#1970),     Aspera Connect     (#2005),     ChIP-Seq     (#2119),     deap     (#2082),     DISCOVARdenovo     (#1932),     FastQC     (#1984),     fontsproto     (#1618,     #2038),     GraphicsMagick     (#2007),     HBase     (#1990),     ISIS     (#1972),     libedit     (#293),     libfontenc     (#1618,     #2038),     libGLU     (#1627),     libXdamage     (#1618,     #2038),     libXfont     (#1618,     #2038),     LLVM     (#1620,     #1989,     #2031),     MIGRATE-N     (#1944),     MIRA     (#1938),     mympingpong     (#2049),     MySQLdb     (#2011),     NCO     (#1191,     #1980),     NIPY     (#2064),     Nilearn     (#2064),     NiBabel     (#2064),     PBZIP2     (#1038),     PIL     (#2062),     PhyloCSF     (#2018),     pycairo     (#2085),     pydicom     (#2063),     Salmon     (#2051),     Samcef     (#1941),     scikit-image     (#1974,     #2006),     Serf     (#1970),     SSAHA2     (#1039),     Subversion     (#1970),     SWASH     (#2059),     time     (#1954),     Trim_Galore     (#1984),     Trimmomatic     (#1987),     WEKA     (#1986),     x264     (#2017)</li> </ul> </li> <li>added new easyconfigs for existing toolchains: <code>gimkl/2.11.5</code>     (#2093)</li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including Clang + LLVM 3.7.0, CMake 3.3.2, CUDA 7.5.18,     hanythingondemand v3.0.1, Mesa 11.0.2, mpi4py v2.0.0, ncurses     6.0, OpenFOAM 2.4.0, Paraview 4.4.0, Python 3.5.0,     QuantumESPRESSO v5.2.1</li> </ul> </li> <li>various other enhancements, including:<ul> <li>enable '<code>pic</code>' toolchain option in libxml2 easyconfigs     (#1993)</li> <li>extend list of R libraries included in R v3.2.1 easyconfigs     (#2042,     #2046,     #2067,     #2072)</li> <li>add Rsubread in Bioconductor easyconfigs     (#1971)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix software name for <code>BEEF</code> (was '<code>libbeef</code>')     (#1679)</li> <li>add patch to install <code>qhull.pc</code> (pkgconfig) file with Qhull     (#1975)</li> <li>don't enable experimental nouveau API in libdrm easyconfigs     (#1994)</li> <li>fix dev version to follow PEP-440, as required by recent     setuptools versions     (#1997)<ul> <li>required to avoid that setuptools transforms the version     itself</li> <li>see also     https://www.python.org/dev/peps/pep-0440/#developmental-releases</li> </ul> </li> <li>correct homepage in Cufflinks easyconfigs     (#2060)</li> <li>fix imports for <code>set_tmpdir</code> in easyblock unit tests after     function was moved in EasyBuild framework     (#2097)</li> <li>add patch for Tk 8.6.4 to fix problem with <code>tk.tcl</code> not being     found     (#2102)</li> <li>don't use <code>%(version)s</code> template in toolchain version, causes     problems with HierarchicalMNS     (#2104)</li> <li>fix sanity check paths in several easyconfig     (#2109,     #2120,     #2121,     #2125)<ul> <li>required because of bug fix in <code>sanity_check_step</code>     implementation</li> <li>CVXOPT, h5py, LIBSVM, libunistring, MDP, monty, PhyloCSF,     Pyke, pandas, pycosat, pyhull, pymatgen, python-dateutils,     Seaborn, Theano, XML-LibXML, XML-Simple</li> </ul> </li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb230","title":"EasyBuild v2.3.0 (September 2nd 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>requires vsc-base v2.2.4 or more recent     (#1343)<ul> <li>required for <code>mk_rst_table</code> function in <code>vsc.utils.docs</code></li> </ul> </li> <li>various other enhancements, including:<ul> <li>add support for generating documentation for (generic)     easyblocks in <code>.rst</code> format     (#1317)</li> <li>preserve comments in easyconfig file in <code>EasyConfig.dump()</code>     method     (#1327)</li> <li>add <code>--cleanup-tmpdir</code> option     (#1365)<ul> <li>enables to preserve the used temporary directory via     <code>--disable-cleanup-tmpdir</code></li> </ul> </li> <li>enhance <code>EasyConfig.dump()</code> to reformat dumped easyconfig     according to style guidelines     (#1345)</li> <li>add support for extracting <code>.iso</code> files using 7z (p7zip)     (#1375)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>correctly deal with special characters in template strings in     <code>EasyConfig.dump()</code> method     (#1323)</li> <li>rework <code>easybuild.tools.module_generator</code> module to avoid     keeping state w.r.t. fake modules     (#1348)</li> <li>fix dumping of hidden deps     (#1354)</li> <li>fix use of <code>--job</code> with hidden dependencies: include <code>--hidden</code>     in submitted job script when needed     (#1356)</li> <li>fix <code>ActiveMNS.det_full_module_name()</code> for external modules     (#1360)</li> <li>fix <code>EasyConfig.all_dependencies</code> definition, fix tracking of     job dependencies     (#1359,     #1361)</li> <li>fix <code>ModulesTool.exist()</code> for hidden Lua module files     (#1364)</li> <li>only call <code>EasyBlock.sanity_check_step</code> for non-extensions     (#1366)<ul> <li>this results in significant speedup when installing     easyconfigs with lots of extensions, but also results in     checking the default sanity check paths if none were defined     for extensions installed as a module</li> </ul> </li> <li>fix using module naming schemes that were included via     <code>--include-module-naming-schemes</code>     (#1370)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblocks for 2 software packages that require customized     support:<ul> <li>MCR     (#623),     Molpro     (#665)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>enhance BWA easyblock to also install man pages     (#650)</li> <li>enhance tbb easyblock to consider lib dirs in order and also     define <code>$CPATH</code>, <code>$LIBRARY_PATH</code>, <code>$TBBROOT</code>     (#653,     #654)</li> <li>call <code>PythonPackage.configure_step</code> in     <code>ConfigureMakePythonPackage.configure_step</code>     (#668)</li> <li>add '<code>foldx3b6</code>' as possible binary name in FoldX easyblock     (#671)</li> <li>enhance/cleanup MATLAB easyblock     (#672)</li> <li>move preparing of '<code>intel</code>' subdir in <code>$HOME</code> to     <code>configure_step</code> in <code>IntelBase</code> easyblock     (#673)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add missing super call in <code>post_install_step</code> of imkl easyblock     (#648,     #660)</li> <li>fix regex used to correct <code>I_MPI_ROOT</code> in impi <code>mpivars.sh</code>     scripts     (#662)</li> <li>fix regex used to patch <code>.mk</code> file in configure step of     SuiteSparse easyblock     (#666)</li> <li>correctly specify installation prefix via <code>$GEM_HOME</code> in     <code>RubyGem</code> easyblock     (#667)</li> <li>add custom sanity check in scipy easyblock     (#669)</li> <li>specify to always use the bfd linker for OpenFOAM, to stay away     from using <code>ld.gold</code>     (#670)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 19 new software packages:<ul> <li>ATK     (#1780),     Atkmm     (#1780),     cairomm     (#1780),     GLibmm     (#1780),     GlobalArrays     (#1868),     gdk-pixbuf     (#1780),     gtk+     (#1780),     Gtkmm     (#1780),     libbeef     (#1827),     libsigc++     (#1780),     libsodium     (#1876),     MACS     (#1869),     MCR     (#1677),     Molpro     (#1880),     NFFT     (#1921),     p7zip     (#1931),     Pangomm     (#1780),     pygraphviz     (#1861),     pycosat     (#1859)</li> </ul> </li> <li>added new easyconfigs for existing toolchains: GNU/4.9.3-2.25     (#1836),     foss/2015b     (#1695),     intel/2015b     (#1696)<ul> <li>add easyconfigs using this toolchain for BLAST+ 2.2.31, Boost     1.58.0, CP2K 2.6.1, OpenFOAM 2.3.1, Perl 5.20.2 + 5.22.0 (bare),     Python 2.7.10, R 3.2.1</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including Boost 1.59.0, CP2K 2.6.1, GCC 5.2.0</li> </ul> </li> <li>various other enhancements, including:<ul> <li>enhance texinfo easyconfig w.r.t. <code>texmf</code>, only use it as a     build dependency     (#1840)</li> <li>enable building of <code>ld.gold</code> in binutils 2.25     (#1885)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix enabling MPI support for h5py 2.5.0     (#1825)</li> <li>fix versions of Bioconductor packages + add a couple extra     (#1828,     #1852,     #1895,     #1917)</li> <li>put dummy values in place for <code>builddir</code>/<code>installdir</code> templates     in easyconfigs unit tests     (#1835)</li> <li>fix easyconfigs unit tests w.r.t. changes made in framework     (#1853,     #1870,     #1874,     #1875)</li> <li>add GMP as missing dep in Python 2.7.10 easyconfigs, required     for pycrypto extension     (#1858)</li> <li>specify installation prefix for SIP     (#1888,     #1892)</li> <li>add custom sanity check paths in various easyconfigs     (#1889,     #1894,     #1897 -     #1909)<ul> <li>required because of fix in EasyBuild framework, causing     default sanity check paths to be considered for extensions     that are installed as a module</li> <li>affected easyconfigs include: AnalyzeFMRI, Biggus,     bibtexparser, DB_File, DBD-Pg, DBD-SQLite, DBD-mysql, evmix,     fmri, FPM, GraphViz, gsl, GSSAPI, MDP, mpi4py, ncdf, ncdf4,     netifaces, NetLibIDN, networkx, ordereddict,     Parallel-ForkManager, paycheck, PyQuante, Pyke, PyQt, r2py,     rjags, runjags, scikit-learn, SOBAcl, vsc-processcontrol,     vsc-mympirun-scoop, XML, XML-Dumper, XML-Parser, XML-Twig,     YAML-Syck</li> </ul> </li> <li>don't enable '<code>static</code>' toolchain option in SuiteSparse 4.4.3     easyconfig     (#1911)</li> <li>add --exclude unpack options for OpenFOAM 2.3.1 to avoid cyclic     symlink causing problems when unpacking     (#1925)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb220","title":"EasyBuild v2.2.0 (July 15th 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add support for using GC3Pie as a backend for <code>--job</code>     (#1008)<ul> <li>see also Submitting jobs using <code>--job</code></li> </ul> </li> <li>add support for <code>--include-*</code> configuration options to include     additional easyblocks, toolchains, etc.     (#1301)<ul> <li>see Including additional Python modules</li> </ul> </li> <li>add (experimental) support for packaging installed software using     FPM     (#1224)<ul> <li>see Packaging support</li> </ul> </li> <li>various other enhancements, including:<ul> <li>use https for PyPI URL templates     (#1286)</li> <li>add GNU toolchain definition     (#1287)</li> <li>make bootstrap script more robust     (#1289,     #1325):<ul> <li>exclude 'easyblocks' pkg from <code>sys.path</code> to avoid that     <code>setup.py</code> for easybuild-easyblocks picks up wrong version</li> <li>undefine <code>$EASYBUILD_BOOTSTRAP*</code> environment variables,     since they do not correspond with known config options</li> </ul> </li> <li>improve error reporting/robustness in     <code>fix_broken_easyconfigs.py</code> script     (#1290)</li> <li>reset keep toolchain component class 'constants' every time     (#1294)</li> <li>make <code>--strict</code> also a build option     (#1295)</li> <li>fix purging of loaded modules in unit tests' setup method     (#1297)</li> <li>promote <code>MigrateFromEBToHMNS</code> to a 'production' MNS     (#1302)</li> <li>add support for <code>--read-only-installdir</code> and     <code>--group-writable-installdir</code> configuration options     (#1304)</li> <li>add support for not expanding relative paths in     <code>prepend_paths</code>     (#1310)</li> <li>enhance <code>EasyConfig.dump()</code> method to use easyconfig templates     where possible     (#1314),     #1319),     #1320),     #1321)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix issue with cleaning up (no) logfile if <code>--logtostdout</code>/<code>-l</code>     is used     (#1298)</li> <li>stop making <code>ModulesTool</code> class a singleton since it causes     problems when multilple toolchains are in play     (#1299)</li> <li>don't modify values of 'paths' list passed as argument to     prepend_paths in <code>ModuleGenerator</code>     (#1300)</li> <li>fix issue with <code>EasyConfig.dump()</code> + cleanup     (#1308),     #1311)</li> <li>re-enable (and fix) accidentally disabled test     (#1316)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>modified easybuild.easyblocks package declaration to support giving     preference to custom easyblocks     (#617)</li> <li>2 new generic easyblocks: RubyGem     (#565),     SystemCompiler     (#633)</li> <li>new easyblocks for 5 software packages that require customized     support:<ul> <li>NEMO     (#564),     pbdMPI     (#612),     #620),     pbdSLAP     (#620),     PDT     (#624),     Ruby     (#565)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>update CUDA easyblock for v6.x     (#476)</li> <li>make METIS easyblock take into account configopts     (#494)</li> <li>enable building of EOMIP and EOMEA for NWChem versions 6.5 and     up     (#508)</li> <li>make out-of-source build with CMake truly out-of-source     (#615)</li> <li>add support in Bundle easyblock to run full sanity check     (#627)</li> <li>also take platform-specific Python lib dirs into account in     PythonPackage easyblock     (#628)</li> <li>fix mpivars scripts in Intel MPI installation for versions where     the installation is moved     (#629)</li> <li>don't restrict <code>det_pylibdir</code> function to only     EasyBuild-provided Python     (#631),     #641)</li> <li>support snappy and other optional native libs in Hadoop     easyblock     (#632),     #638),     #640),     #642)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Xmipp easyblock, use provided <code>install.sh</code> script     (#630)</li> <li>update Clang easyblock to disable tests that may fail when     unlimited stack size is used     (#622)</li> <li>fix setting of <code>$INTEL_LICENSE_FILE</code> for port@server values     (#635)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 62 new software packages:<ul> <li>ADF     (#899),     AutoDock_Vina     (#808),     bibtexparser     (#1726),     Biggus     (#1770),     Bismark     (#990),     blasr     (#1662),     BSMAP     (#1171),     Check     (#811),     Circuitscape     (#1222),     CONTRAfold     (#689),     cramtools     (#1741),     DBD-Pg     (#1066),     DendroPy     (#995),     EMAN2     (#1737),     ETSF_IO     (#727),     eudev     (#1578),     fastqc     (#1636),     FDS     (#814),     #1617),     #1625),     FPM     (#1440),     frealign     (#1619),     g2log     (#1035),     GC3Pie     (#1692),     #1756),     #1768),     GenotypeHarmonizer     (#1672),     gensim     (#1762),     GraphViz     (#1658),     hisat     (#1674),     IDBA-UD     (#1045),     IMa2     (#828),     IMPUTE2     (#824),     JUBE     (#1396),     LAMARC     (#760),     libXScrnSaver     (#1653),     MATIO     (#1004),     MuTect     (#1483),     ncdf     (#617),     NEMO     (#1640),     ngspice     (#1116),     ordereddict     (#1774),     OSU Micro-Benchmarks     (#1777),     Parallel-ForkManager     (#847),     pBWA     (#1009),     PeakSeq     (#1412),     Pillow     (#1702),     Pindel     (#1126),     PLUMED     (#1596),     #1665),     PostgreSQL     (#1066),     PROJ     (#1006),     PyAMG     (#1222),     Pyke     (#1776),     rpy2     (#1775),     Sailfish     (#1035),     SCANMS     (#1386),     Seaborn     (#1763),     snpEff     (#1680),     SOBAcl     (#1658),     SPIDER     (#1624),     #1723),     STAR     (#1043),     #1676),     system GCC     (#1778),     tabix     (#1059),     tecplot360ex     (#1100),     Vampir     (#512),     VampirServer     (#512),     verifyBamID     (#1675)</li> </ul> </li> <li>added easyconfigs for 4 new software bundles:<ul> <li>R-bundle-Bioconductor     (#1573),     #1795),     R-bundle-devtools     (#1621),     #1759),     R-bundle-extra     (#1387),     #1759),     R-bundle-pbd     (#1659)</li> </ul> </li> <li>added easyconfigs for new GNU toolchain     (#1346),     #1669)</li> <li>added new easyconfigs for existing toolchains: goolf/1.5.16,     intel/2014.06</li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including BLAST 2.2.31+, Clang 3.6.1, CUDA 6.x, GCC 4.9.3,     GROMACS 5.0.5, HDF5 1.8.15 + 1.8.15-patch1, Python 2.7.10, R     3.2.0 + 3.2.1, WRF 3.6.1</li> </ul> </li> <li>various other enhancements, including:<ul> <li>update all ncurses easyconfigs to enable ncursesw and use     ConfigureMake easyblock     (#1337)</li> <li>update PDT easyconfigs to use PDT easyblock     (#1687)</li> <li>add custom <code>sanity_check_paths</code> in libxml2 easyconfigs     (#1690)</li> <li>enhance unit tests to also cover EasyConfig.dump() method on all     easyconfigs     (#1761)</li> <li>include snappy as dependency in Hadoop easyconfigs     (#1758),     #1773)</li> <li>enable SSL support in CMake v3.2.3 easyconfigs     (#1784)</li> <li>add additional extensions in R easyconfigs     (#1637)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add patch file required for correct CUDA-aware OpenMPI v1.7.3     build     (#631)</li> <li>fix issue with OpenMPI dependency in ECore easyconfigs     (#777)</li> <li>don't run the Bloom tests for Jellyfish, they can randomly fail     (#1016)</li> <li>fix source URLs in BioPerl easyconfigs     (#1075)</li> <li>patch out svnversion command in Python 2.5.6 to fix build on     recent systems     (#1576)</li> <li>consistently use https for PyPI URLs in homepage/source_urls     (#1616),     #1722)</li> <li>include Tcl and Tk as dependencies in R easyconfig     (#1623)</li> <li>add patch for installing paycheck as Py3 extension     (#1629)</li> <li>add Perl dependency in git 2.x easyconfigs     (#1631)</li> <li>fix easyconfig for GMP 6.0.0, don't use 6.0.0a sources     (#1635)</li> <li>fix source_urls in QuantumESPRESSO 5.0.2 easyconfigs     (#1652)</li> <li>include Tk as dependency in Python 2.7.9 easyconfigs     (#1654)</li> <li>include tk-devel is list of OS deps for Python 2.7.9 Cray     easyconfigs, make sure '<code>import Tkinter</code>' works     (#1655)</li> <li>drop gpfs versionsuffix and stop using no longer existing     <code>--enable-gpfs</code> configopt for recent HDF5 versions     (#1657)</li> <li>include missing libxml2 dep in GLib easyconfigs     (#1666)</li> <li>fix source URLs in Qt easyconfigs     (#1673)</li> <li>fix source URLs for argparse Python extension     (#1697)</li> <li>fix source URLs for deap Python extension     (#1699)</li> <li>fix easyconfigs unit tests after making ModulesTool a     non-singleton class     (#1708)</li> <li>fix names for Xmipp easyconfigs and patches     (#1719)</li> <li>add patch for Qt 4.8.6 to fix build issue on RHEL6 with     intel/2015a     (#1734)</li> <li>add M4 as build dep for GCC 5.1.0     (#1735)</li> <li>fix Bioconductor extension versions in R 3.1.3 easyconfigs     (#1748)</li> <li>remove custom exts_filter definition from Python 3.4.3     easyconfig     (#1765)</li> <li>fix source_urls in netCDF easyconfigs     (#1766)</li> <li>fix source_urls in netCDF-C++ and netCDF-Fortran easyconfigs     (#1767)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_eb211","title":"EasyBuild v2.1.1 (May 18th 2015)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>fix issue with missing load statements when <code>--module-only</code> is used,     don't skip ready/prepare steps     (#1276)</li> <li>enhance <code>--search</code>: only consider actual filename (not entire path),     use regex syntax     (#1281)</li> <li>various other bug fixes, including:<ul> <li>fix <code>generate_software_list.py</code> script w.r.t. dependencies     marked as external modules     (#1273)</li> <li>only use <code>$LMOD_CMD</code> value if <code>lmod</code> binary can't be found in     $PATH     (#1275)</li> <li>fix location of <code>module_only</code> build option w.r.t. default value     (#1277)</li> <li>fix combined use of <code>--hide-deps</code> and <code>hiddendependencies</code>     (#1280)</li> <li>remove log handlers that were added during tests, to ensure     effective cleanup of log files     (#1282)<ul> <li>this makes the unit test suite run ~3x faster!</li> </ul> </li> <li>define <code>$CRAYPE_LINK_TYPE</code> if '<code>dynamic</code>' toolchain option is     enabled for Cray compiler wrappers     (#1283)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>fix compatibility of easyblocks with <code>--module-only</code> + dedicated     unit test module     (#610)</li> <li>minor enhancements, including:<ul> <li>update GROMACS easyblock for version 5     (#513)</li> </ul> </li> <li>various other bug fixes, including:<ul> <li>only check compiler being used if FFTW interfaces are being     built in Intel MKL easyblock     (#606)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 3 new software packages:<ul> <li>networkx     (#1592),     Platanus     (#1597),     SaguaroGW     (#1600)</li> </ul> </li> <li>added new easyconfigs for existing toolchains: <code>ictce/7.3.5</code>,     <code>CrayCCE/5.2.40</code>, <code>CrayGNU/5.2.40</code>, <code>CrayIntel/5.2.40</code></li> <li>added easyconfigs using <code>CrayGNU/5.2.25</code> and <code>CrayGNU/5.2.40</code>     toolchains     (#1610,     #1611)</li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including Boost 1.58.0, GROMACS 5.0.4, Python 3.4.3</li> </ul> </li> <li>various bug fixes, including:<ul> <li>enable usempi in GROMACS easyconfig using CrayGNU toolchain (as     required by GROMACS easyblock)     (#1590)</li> <li>use system-provided tcsh when building WRF on Cray systems, to     avoid hanging build     (#1595)</li> <li>only use '<code>dynamic</code>' toolchain option, not '<code>shared</code>', in     easyconfigs using Cray toolchain     (#1609)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_v2.1.0","title":"EasyBuild v2.1.0 (April 30th 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>requires vsc-base v2.2.0 or more recent<ul> <li>added support for LoggedException     (vsc-base#160,     vsc-base#163,     vsc-base#165,     vsc-base#167)</li> <li>added support for add_flex action in GeneralOption     (vsc-base#162)</li> <li>added support to GeneralOption to act on unknown configuration     environment variables     (vsc-base#162)</li> </ul> </li> <li>add support for only (re)generating module files: <code>--module-only</code>     (#1018)<ul> <li>module naming scheme API is enhanced to include     det_install_subdir method</li> <li>see Only (re)generating (additional) module files using --module-only</li> </ul> </li> <li>add support for generating module files in Lua syntax (note:     requires Lmod as modules tool)     (#1060,     #1255,     #1256,     #1270)<ul> <li>see <code>--module-syntax</code> configuration option and     Module files syntax</li> </ul> </li> <li>deprecate <code>log.error</code> method in favor of raising <code>EasyBuildError</code>     exception     (#1218)<ul> <li>see <code>error</code> and <code>exception</code> log methods no longer raise an exception</li> </ul> </li> <li>add support for using external modules as dependencies, and to     provide metadata for external modules     (#1230,     #1265,     #1267)<ul> <li>see Using external modules</li> </ul> </li> <li>add experimental support for Cray toolchains on top of PrgEnv     modules: <code>CrayGNU</code>, <code>CrayIntel</code>, <code>CrayCCE</code>     (#1234,     #1268)<ul> <li>see     https://github.com/easybuilders/easybuild/wiki/EasyBuild-on-Cray</li> </ul> </li> <li>various other enhancements, including:<ul> <li>clear list of checksums when using <code>--try-software-version</code>     (#1169)</li> <li>sort the results of searching for files (e.g., <code>--search</code>     output)     (#1214)</li> <li>enhance test w.r.t. use of templates in cfgfile     (#1217)</li> <li>define '<code>%(DEFAULT_REPOSITORYPATH)s</code>' template for cfgfiles     (see <code>eb --avail-cfgfile-constants</code>)     (#1220)</li> <li>also reset <code>$LD_PRELOAD</code> when running module commands, in case     module defined <code>$LD_PRELOAD</code>     (#1222)</li> <li>move location of '<code>module use</code>' statements in generated module     file (after '<code>module load</code>' statements)     (#1232)</li> <li>add support for <code>--show-default-configfiles</code>     (#1240)<ul> <li>see Default configuration files</li> </ul> </li> <li>report error on missing configuration files, rather than     ignoring them     (#1240)</li> <li>clean up commit message used in easyconfig git repository     (#1248)</li> <li>add <code>--hide-deps</code> configuration option to specify names of     software that must be installed as hidden modules     (#1250)<ul> <li>see Installing dependencies as hidden modules using <code>--hide-deps</code></li> </ul> </li> <li>add support for appending/prepending to <code>--robot-paths</code> to avoid     overwriting default robot search path     (#1252)<ul> <li>see Prepending/appending to the default robot search path</li> </ul> </li> <li>enable detection of use of unknown <code>$EASYBUILD</code>-prefixed     environment variables     (#1253)<ul> <li>see Environment variables</li> </ul> </li> <li>add <code>--installpath-modules</code> and <code>--installpath-software</code>     configuration options     (#1258)<ul> <li>see Software and modules install path</li> </ul> </li> <li>use dedicated subdirectory in temporary directory for each test     to ensure better cleanup     (#1260)</li> <li>get rid of <code>$PROFILEREAD</code> hack when running commands, not needed     anymore     (#1264)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>make bootstrap script robust against having <code>vsc-base</code> already     available in Python search path     (#1212,     #1215)</li> <li>set default value for unpack_options easyconfig parameter to     <code>''</code>, so <code>self.cfg.update</code> works on it     (#1229)</li> <li>also copy rotated log files     (#1238)</li> <li>fix parsing of <code>--download-timeout</code> value     (#1242)</li> <li>make <code>test_XDG_CONFIG_env_vars</code> unit test robust against     existing user config file in default location     (#1259)</li> <li>fix minor robustness issues w.r.t. <code>$XDG_CONFIG*</code> and     <code>$PYTHONPATH</code> in unit tests     (#1262)</li> <li>fix issue with handling empty toolchain variables     (#1263)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>replace '<code>log.error</code>' with '<code>raise EasyBuildError</code>' in all     easyblocks     (#588)</li> <li>one new generic easyblock: <code>ConfigureMakePythonPackage</code>     (#540)</li> <li>new easyblocks for 2 software packages that require customized     support:<ul> <li>TINKER     (#578),     Xmipp     (#581)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>enhance WIEN2k easyblock for recent versions + cleanup     (#486)</li> <li>define <code>$PYTHONNOUSERSITE</code> in PythonPackage easyblock so     user-installed packages are not picked up     (#577)</li> <li>add support in CP2K easyblock for building on top of     MPICH/MPICH2     (#579)</li> <li>enhance Hadoop easyblock to support parallel builds     (#580)</li> <li>drop <code>-noroot</code> for recent FLUENT versions, honor <code>installopts</code>,     enable <code>-debug</code>     (#582)</li> <li>include <code>prebuildopts</code> in build command for Python packages     (#585)</li> <li>also install <code>rosetta_tools</code> subdirectory for Rosetta     (#586)</li> <li>update SLEPc easyblock for v3.5 + style cleanup     (#593)</li> <li>minor fix in HPL easyblock w.r.t. checking defined environment     variables     (#595)</li> <li>tweak CP2K easyblock w.r.t. LAPACK/FFTW support     (#596)</li> <li>minor update to GCC easyblock to support GCC v5.x     (#598)</li> <li>update sanity check in R easyblock for version 3.2.0     (#602)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Score-P easyblock for compiler-only toolchains, include Qt     as optional dependency     (#552)</li> <li>fix definition of <code>$MKLROOT</code>, should be set to '<code>mkl</code>' subdir     of install dir     (#576)</li> <li>add <code>-libmpichf90</code> to list of MPI libraries in NWChem easyblock     (#584)</li> <li>stop using '<code>$root</code>' to make easyblocks compatible with module     files in Lua syntax     (#590)</li> <li>also set <code>$PYTHONPATH</code> before installing Python package in     temporary directory in <code>test_step</code>     (#591)</li> <li>unset <code>buildopts</code>/<code>installopts</code> before installing Python     extensions in Python easyblock     (#597)</li> <li>allow not including vsc-base sources when installing EasyBuild     (gets installed with easybuild-framework)     (#600)</li> <li>use <code>self.initial_environ</code> rather than <code>self.orig_environ</code> in     EasyBuildMeta easyblock     (#600)</li> <li>make GCC easyblock compatible with <code>--module-only</code> by setting     default value for <code>self.platform_lib</code> in constructor     (#603)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 27 new software packages:<ul> <li>AFNI     (#1322,     #1521),     BCFtools     (#1492),     getdp     (#1518),     gmsh     (#1518),     gtest     (#1244),     hanythingondemand     (#1530),     mawk     (#1369),     Minimac     (#815),     Minimac3     (#1502),     monty     (#1548),     Octave     (#1563),     pbs_python     (#1530),     pigz     (#1036),     Pygments     (#1536),     pyhull     (#1539),     pymatgen     (#1549),     PyQt     (#1322,     #1521),     Ray     (#1494),     requests     (#1536),     seqtk     (#1524),     SIP     (#1322,     #1521),     S-Lang     (#1369),     Spark     (#1554),     spglib     (#1549),     TINKER     (#1465),     tmux     (#1369),     Xmipp     (#1489)</li> </ul> </li> <li>added easyconfigs for new (Cray-specific) toolchains     (#1538):     <code>CrayGNU</code>, <code>CrayIntel</code>, <code>CrayCCE</code><ul> <li>initially supported software (using CrayGNU toolchains): CP2K,     GROMACS, HPL, Python + numpy/scipy, WRF     (#1558)</li> <li>see also     https://github.com/easybuilders/easybuild/wiki/EasyBuild-on-Cray</li> </ul> </li> <li>added new easyconfigs for existing toolchains: <code>goolf/1.5.16</code>,     <code>intel/2014.06</code></li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including GCC v5.1.0, OpenFOAM v2.3.1, R v3.1.3 and v3.2.0,     PETSc/SLEPc v3.5.3, WIEN2k v14.1</li> </ul> </li> <li>various other enhancements, including:<ul> <li>include pbr dependency for lockfile Python extension in Python     v2.7.9 easyconfigs + mock/pytz/pandas     (#1462,     #1540)</li> <li>include SQLite as dependency in Python v2.7.9 easyconfigs     (#1468)</li> <li>set <code>$LD_PRELOAD</code> for Hoard and jemalloc     (#1470)</li> <li>fix homepage in SCOTCH easyconfigs     (#1485)</li> <li>adding missing six/ecdsa dependencies for dateutil/paramiko     Python packages in Python easyconfigs     (#1504,     #1505,     #1506,     #1507,     #1508,     #1509,     #1510)</li> <li>enable <code>pic</code> toolchain option in expat easyconfigs     (#1562)</li> <li>extend list of source URLs for Bioconductor packages in R     easyconfigs to include 'release' source URLs     (#1568)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>adding missing zlib dependency in all Tcl easyconfig files     (#1344)</li> <li>fix homepage in FLUENT easyconfigs     (#1472)</li> <li>use <code>--with-verbs</code> rather than deprecated <code>--with-openib</code> in     OpenMPI configure options     (#1511)</li> <li>stop relying on <code>OS_NAME</code> constant to specify OS dependencies in     OpenMPI easyconfigs     (#1512)</li> <li>replace use of '<code>$root</code>' with '<code>%(installdir)s</code>' to ensure     compatibility with module files in Lua syntax     (#1532)</li> <li>stop relying on '<code>$MKLROOT</code>' in ROOT easyconfigs     (#1537)</li> <li>use proper Bundle easyblock for biodeps/PRACE     (#1566)</li> <li>make source_urls in Cube and Scalasca easyconfigs compatible     with --try-software-version     (#1574)</li> <li>add patch for Cube to fix configure script w.r.t. Qt dependency,     add --without-java-reader configure option     (#1574)</li> </ul> </li> </ul>"},{"location":"release-notes/#release_notes_v2.0.0","title":"EasyBuild v2.0.0 (March 6th 2015)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>requires vsc-base v2.0.3 or more recent<ul> <li>avoid deprecation warnings w.r.t. use of <code>message</code> attribute     (vsc-base#155)</li> <li>fix typo in log message rendering <code>--ignoreconfigfiles</code> unusable     (vsc-base#158)</li> </ul> </li> <li>removed functionality that was deprecated for EasyBuild version 2.0     (#1143)<ul> <li>see Removed functionality</li> <li>the fix_broken_easyconfigs.py script can be used to update     easyconfig files suffering from this     (#1151,     #1206,     #1207)</li> </ul> </li> <li>stop including a crippled copy of vsc-base, include vsc-base as a     proper dependency instead     (#1160,     #1194)<ul> <li>vsc-base is automatically installed as a dependency for     easybuild-framework, if a Python installation tool is used</li> <li>see Required Python packages</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add support for Linux/POWER systems     (#1044)</li> <li>major cleanup in <code>tools/systemtools.py</code> + significantly enhanced     tests     (#1044)</li> <li>add support for '<code>eb -a rst</code>', list available easyconfig     parameters in ReST format     (#1131)</li> <li>add support for specifying one or more easyconfigs in     combination with <code>--from-pr</code>     (#1132)<ul> <li>see Specifying particular easyconfig files</li> </ul> </li> <li>define <code>__contains__</code> in EasyConfig class     (#1155)</li> <li>restore support for downloading over a proxy     (#1158)<ul> <li>i.e., use <code>urllib2</code> rather than <code>urllib</code></li> <li>this involved sacrificing the download progress report     (which was only visible in the log file)</li> </ul> </li> <li>let <code>mpi_family</code> return <code>None</code> if MPI is not supported by a     toolchain     (#1164)</li> <li>include support for specifying system-level configuration files     for EasyBuild via <code>$XDG_CONFIG_DIRS</code>     (#1166)<ul> <li>see Default configuration files</li> </ul> </li> <li>make unit tests more robust     (#1167,     #1196)<ul> <li>see Unit tests</li> </ul> </li> <li>add hierarchical module naming scheme categorizing modules by     <code>moduleclass</code>     (#1176)</li> <li>enhance bootstrap script to allow bootstrapping using supplied     tarballs     (#1184)</li> <li>disable updating of Lmod user cache by default, add     configuration option <code>--update-modules-tool-cache</code>     (#1185)<ul> <li>for now, only the Lmod user cache can be updated using     <code>--update-modules-tool-cache</code></li> </ul> </li> <li>use available <code>which()</code> function, rather than running     '<code>which</code>' via <code>run_cmd</code>     (#1192)</li> <li>fix <code>install-EasyBuild-develop.sh</code> script w.r.t. vsc-base     dependency     (#1193)</li> <li>also consider robot search path when looking for specified     easyconfigs     (#1201)<ul> <li>see Specifying what to install</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>stop triggering deprecated/no longer support functionality in     unit tests     (#1126)</li> <li>fix <code>from_pr</code> test by including dummy easyblocks for HPL and     ScaLAPACK     (#1133)</li> <li>escape use of '<code>%</code>' in string with command line options with     <code>--job</code>     (#1135)</li> <li>fix handling specified patch level 0 (+ enhance tests for     fetch_patches method)     (#1139)</li> <li>fix formatting issues in generated easyconfig file obtained via     <code>--try-X</code>     (#1144)</li> <li>use <code>log.error</code> in <code>tools/toolchain/toolchain.py</code> where     applicable     (#1145)</li> <li>stop hardcoding <code>/tmp</code> in <code>mpi_cmd_for</code> function     (#1146,     #1200)</li> <li>correctly determine variable name for <code>$EBEXTLIST</code> when     generating module file     (#1156)</li> <li>do not ignore exit code of failing postinstall commands     (#1157)</li> <li>fix rare case in which used easyconfig and copied easyconfig are     the same     (#1159)</li> <li>always filter hidden deps from list of dependencies     (#1161)</li> <li>fix implementation of <code>path_matches</code> function in     <code>tools/filetools.py</code>     (#1163)</li> <li>make sure plain text keyring is used by unit tests     (#1165)</li> <li>suppress creation of module symlinks for <code>HierarchicalMNS</code>     (#1173)</li> <li>sort all lists obtained via <code>glob.glob</code>, since they are in     arbitrary order     (#1187)</li> <li>stop modifying <code>$MODULEPATH</code> directly in <code>setUp</code>/<code>tearDown</code> of     toolchain tests     (#1191)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>one new generic easyblock for installing a bundle of modules:     <code>Bundle</code>     (#550)<ul> <li>and let the <code>Toolchain</code> generic easyblock derive from <code>Bundle</code></li> </ul> </li> <li>new easyblocks for 2 software packages that require customized     support:<ul> <li>GAMESS-US     (#470,     #544,     #558),     Hadoop     (#563)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>move support for <code>staged_install</code> from CPLEX easyblock to     generic <code>Binary</code> easyblock     (#502)</li> <li>fix sanity check in picard easyblock for v1.119 that doesn't     include <code>sam.jar</code>     (#522)</li> <li>log warning message when unlinking jellyfish symlink fails in     Trinity easyblock     (#534)</li> <li>revamp <code>EB_libint2</code> easyblock into <code>EB_Libint</code> that works for     both Libint v1x and v2.x     (#536)</li> <li>update CP2K easyblock for recent versions (no more '<code>fes</code>')     (#537)</li> <li>update SuiteSparse easyblock for recent versions     (#541)</li> <li>fix easyblock unit tests after dropping support for deprecated     behaviour in framework     (#543)</li> <li>rework PSI easyblock to support future releases     (#545)</li> <li>enable always generating a 'verbose' Makefile in the generic     CMakeMake easyblock     (#546)</li> <li>remove functionality in (generic) easyblocks that was deprecated     for EasyBuild v2.0     (#547)</li> <li>enhance generic RPackage easyblock to support installing     extensions in a separate prefix     (#551)</li> <li>deprecate GenomeAnalysisTK easyblock, since it's basically     equivalent to Tarball     (#557)</li> <li>update SAMtools easyblock for v1.2     (#562)</li> <li>take <code>preconfigopts</code> easyconfig parameter into account in ROOT     easyblock     (#566)</li> <li>update easyblock for installing EasyBuild<ul> <li>to support bootstrapping with provided source tarballs     (#559)</li> <li>to also cover vsc-base dependency, and verify     <code>easy-install.pth</code>     (#567)</li> </ul> </li> <li>update disabling sanitizer tests for Clang 3.6     (#570)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix handling of LTO in GCC easyblock     (#535)</li> <li>relocate FDTD RPM to fix installation on SL6     (#538)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 29 new software packages:<ul> <li>bsoft     (#1353),     Coot     (#1400),     Cuby     (#1258),     DSRC     (#1242),     Exonerate     (#568),     fastqz     (#1242),     FSA     (#568),     fqzcomp     (#1242),     GAMESS-US     (#1153,     #1406),     Grep     (#1308),     Hadoop     (#1418),     Hoard     (#1415),     IMB     (#1284),     ISL     (#1389),     jemalloc     (#1416),     libdwarf     (#1283),     libelf     (#1283),     MPC     (#1310),     multitail     (#1327),     Pmw     (#1403),     Quip     (#1242),     rCUDA     (#720),     SCALCE     (#1242),     SMALT     (#568),     STREAM     (#1332),     worker     (#1307),     Xerces-C++     (#1370),     XQilla     (#1370),     ZPAQ     (#1242)</li> </ul> </li> <li>added easyconfigs for new (common) toolchains<ul> <li><code>foss/2015a</code>     (#1239),     <code>gompi/1.5.16</code>     (#1380),     <code>gmvolf/1.7.20</code>     (#1397),     <code>goolf/1.7.20</code>     (#1294),     intel/2015a     (#1238),     <code>intel/2015.02</code>     (#1393),     <code>iomkl/2015.01</code>     (#1325),     <code>iomkl/2015.02</code>     (#1401)</li> </ul> </li> <li>added new software bundle: <code>Autotools</code>     (#1385)</li> <li>various other enhancements, including:<ul> <li>don't define <code>$LDSHARED</code> in zlib easyconfigs     (#1350)<ul> <li>this fixes the long-standing     \"<code>no version information available</code>\" issue with zlib</li> <li>see also     framework#108</li> </ul> </li> <li>add unit test to check that all <code>extra_options</code> keys are defined     in <code>EasyConfig</code> instance     (#1378)</li> <li>add source MD5 checksums in all GCC easyconfigs     (#1391)</li> <li>speeding up the unit tests by avoiding rereading of same     easyconfig file     (#1432)</li> <li>fix conflict detection in unit tests by considering build deps     separately from runtime deps     (#1447)</li> <li>fix toolchain for Bison build dep in     <code>MVAPICH2-1.9-iccifort-2011.13.367.eb</code> easyconfig     (#1448)</li> <li>use <code>Bundle</code> generic easyblock for HPCBIOS bundles and fix     <code>moduleclass</code>     (#1451)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>revert version of Libint dependency to 1.1.4 in CP2K v2.5.1     easyconfig     (#1144)</li> <li>added Java dependencies to EMBOSS easyconfigs     (#1167)</li> <li>don't list '<code>lto</code>' as a language in GCC easyconfigs     (#1286)<ul> <li>related to the fixes in the GCC easyblock, see     easyblocks#535</li> </ul> </li> <li>rename libint2 easyconfigs as Libint v2 easyconfigs     (#1287)</li> <li>fix mpi4py <code>source_urls</code> in Python easyconfigs     (#1306)</li> <li>consistently use CLooG 0.18.0 for GCC 4.8 series     (#1392)</li> <li>rename GenomeAnalysisTk easyconfigs to GATK     (#1399)</li> <li>include <code>openssl-devel</code> SLES11 OS dependency in     cURL/MySQL/Python easyconfigs     (#1422)</li> <li>add missing Perl dependency in parallel easyconfigs     (#1430)</li> <li>correct name in BLAST+ easyconfigs     (#1443)</li> <li>fix name for sparsehash easyconfigs     (#1452)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1162-march-6th-2015","title":"EasyBuild v1.16.2 (March 6th 2015)","text":"<p>bugfix release</p> <p>framework</p> <p>(no changes compared to v1.16.1, simple version bump to stay in sync with easybuild-easyblocks)</p> <p>easyblocks</p> <ul> <li>make <code>EB_EasyBuildMeta</code> easyblock aware of vsc-base to make     upgrading to EasyBuild v2.0.0 possible     (#573)</li> </ul> <p>easyconfigs</p> <p>(no changes compared to v1.16.1, simple version bump to stay in sync with easybuild-easyblocks)</p>"},{"location":"release-notes/#easybuild-v1161-december-19th-2014","title":"EasyBuild v1.16.1 (December 19th 2014)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>fix functionality that is broken with <code>--deprecated=2.0</code> or with     <code>$EASYBUILD_DEPRECATED=2.0</code><ul> <li>don't include easyconfig parameters for <code>ConfigureMake</code> in     <code>eb -a</code>, since fallback is deprecated     (#1123)</li> <li>correctly check software_license value type     (#1124)</li> <li>fix <code>generate_software_list.py</code> script w.r.t. deprecated     fallback to <code>ConfigureMake</code>     (#1127)</li> </ul> </li> <li>other bug fixes<ul> <li>fix logging issues in tests, sync with vsc-base v2.0.0     (#1120)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>fix EasyBuild versions for which <code>$EASYBUILD_DEPRECATED=1.0</code> is set     in EasyBuild sanity check     (#531)</li> </ul> <p>easyconfigs</p> <ul> <li>set default easyblock to ConfigureMake in TEMPLATE.eb     (#1277)</li> </ul>"},{"location":"release-notes/#easybuild-v1160-december-18th-2014","title":"EasyBuild v1.16.0 (December 18th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>deprecate automagic fallback to <code>ConfigureMake</code> easyblock     (#1113)<ul> <li>easyconfigs should specify <code>easyblock = 'ConfigureMake'</code> instead     of relying on the fallback mechanism</li> <li>note: automagic fallback to <code>ConfigureMake</code> easyblock will     be removed in EasyBuild v2.0</li> <li>see also Automagic fallback to     ConfigureMake</li> </ul> </li> <li>stop triggering deprecated functionality, to enable use of     <code>--deprecated=2.0</code>     (#1107,     #1115,     #1119)<ul> <li>see Deprecated     functionality     for more information</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add script to clean up gists created via <code>--upload-test-report</code>     (#958)</li> <li>also use <code>-xHost</code> when using Intel compilers on AMD systems (as     opposed to <code>-msse3</code>)     (#960)</li> <li>add Python version check in <code>eb</code> command     (#1046)</li> <li>take <code>versionprefix</code> into account in <code>HierarchicalMNS</code> module     naming scheme     (#1058)</li> <li>clean up and refactor <code>main.py</code>, move functionality to other     modules     (#1059,     #1064,     #1075,     #1087)</li> <li>add check in <code>download_file</code> function for HTTP return code +     show download progress report     (#1066,     #1090)</li> <li>include info log message with name and location of used     easyblock     (#1069)</li> <li>add toolchains definitions for <code>gpsmpi</code>, <code>gpsolf</code>, <code>impich</code>,     <code>intel-para</code>, <code>ipsmpi</code> toolchains     (#1072,     #1073)<ul> <li>support for Parastation MPI based toolchains</li> </ul> </li> <li>enforce that <code>hiddendependencies</code> is a subset of <code>dependencies</code>     (#1078)<ul> <li>this is done to avoid that site-specific policies w.r.t.     hidden modules slip into contributed easyconfigs</li> </ul> </li> <li>enable use of <code>--show_hidden</code> for <code>avail</code> subcommand with recent     Lmod versions     (#1081)</li> <li>add <code>--robot-paths</code> configure option     (#1080,     #1093,     #1095,     #1114)</li> <li>support use of <code>%(DEFAULT_ROBOT_PATHS)s</code> template in EasyBuild     configuration files     (#1100)<ul> <li>see also Controlling the robot search     path</li> </ul> </li> <li>use <code>-xHost</code> rather than <code>-xHOST</code>, to match Intel documentation     (#1084)</li> <li>update and cleanup <code>README</code> file     (#1085)</li> <li>deprecate <code>self.moduleGenerator</code> in favor of     <code>self.module_generator</code> in <code>EasyBlock</code>     (#1088)</li> <li>also support <code>MPICH</code> MPI family in <code>mpi_cmd_for</code> function     (#1098)</li> <li>update documentation references to point to     http://easybuild.readthedocs.org     (#1102)</li> <li>check for OS dependencies with both <code>rpm</code> and <code>dpkg</code> (if     available)     (#1111)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix picking required software version specified by     <code>--software-version</code> and clean up <code>tweak.py</code>     (#1062,     #1063)</li> <li>escape <code>$</code> characters in module load message specified via     <code>modloadmsg</code> easyconfig parameter)     (#1068)</li> <li>take available hidden modules into account in dependency     resolution     (#1065)</li> <li>fix hard crash when using patch files with an empty list of     sources     (#1070)</li> <li>fix Intel MKL BLACS library being used for MPICH/MPICH2-based     toolchains     (#1072)</li> <li>fix regular expression in <code>fetch_parameter_from_easyconfig_file</code>     function     (#1096)</li> <li>don't hardcode queue names when submitting a job     (#1106)</li> <li>fix affiliation/mail address for Fotis in headers     (#1105)</li> <li>filter out <code>/dev/null</code> entries in patch file in     <code>det_patched_files</code> function     (#1108)</li> <li>fix <code>gmpolf</code> toolchain definition, to have <code>gmpich</code> as MPI     components (instead of <code>gmpich2</code>)     (#1101)<ul> <li>'MPICH' refers to MPICH v3.x, while MPICH2 refers to     MPICH(2) v2.x (MPICH v1.x is ancient/obsolete)</li> <li>note: this requires to reinstall the <code>gmpolf</code> module,     using the updated easyconfig from     easybuild-easyconfigs#1217</li> </ul> </li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>new easyblocks for 2 software packages that requires customized     support:<ul> <li>Chimera     (#524),     GATE     (#518)</li> </ul> </li> <li>fix use of deprecated functionality, enhance unit tests to check for     it     (#523)</li> <li>various other enhancements, including:<ul> <li>update PETSc easyblock for recent versions (v3.5)     (#446)</li> <li>only include major/minor version numbers for FLUENT subdir     (#480)</li> <li>factor out 'move after install' code from impi easyblock to     <code>IntelBase</code>, use it for itac     (#487)</li> <li>support custom easyconfig parameters in <code>EB_impi</code> easyblock to     correct behavior of MPI wrapper commands     (#493)</li> <li>consider both <code>lib</code> and <code>lib64</code> in sanity check for GROMACS     (#501)</li> <li>take <code>preinstallopts</code> and <code>installopts</code> into account in <code>Binary</code>     easyblock     (#503)</li> <li>add sanity check command <code>abaqus information=all</code> for ABAQUS     (#504)</li> <li>update and clean up <code>README</code>, refer to     http://easybuild.readthedocs.org documentation     (#505,     #516)</li> <li>rename deprecated <code>self.moduleGenerator</code> to     <code>self.module_generator</code>     (#506)<ul> <li>see also     easybuild-framework#1088</li> </ul> </li> <li>check whether specified <code>type</code> value is a known value (<code>psmp</code> or     <code>popt</code>) in CP2K easyblock     (#509)</li> <li>add support to <code>SAMtools</code> easyblock for installing recent     versions (v1.x)     (#512)</li> <li>fix version check + sanity check in Geant4 easyblock + style     fixes     (#517)</li> <li>added <code>$root/modlib</code> to <code>$PYTHONPATH</code> guesses in Modeller     easyblock     (#525)</li> <li>mark <code>license</code> custom easyconfig parameter as deprecated in     <code>IntelBase</code>     (#527)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Libxc version check in CP2K easyblock     (#478)</li> <li>correctly specify <code>mkl_libs</code> when building numpy with GCC and     imkl     (#485)</li> <li>extend noqa for OpenFOAM-Extend in build_step     (#488,     #520)</li> <li>correctly set <code>$LD_LIBRARY_PATH</code>, <code>$LIBRARY_PATH</code> and     <code>$PKG_CONFIG_PATH</code> for <code>R</code>     (#495)</li> <li>fix default value for <code>files_to_copy</code> in <code>MakeCp</code> easyblock     (#500)</li> <li>treat <code>MPICH</code> MPI family as MPICH v3.x instead of MPICH v1.x     (#519)<ul> <li>see also     easybuild-framework#1112</li> </ul> </li> <li>fix affiliation/mail address for Fotis in headers     (#521)</li> <li>clean up in <code>extra_options</code> methods, avoid casting return value     to <code>dict</code> or returning via parent     (#528)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 39 new software packages:<ul> <li>ANTs     (#1232),     BEOPS     (#1264),     Chhimera     (#1255),     ctffind     (#1249),     DBD-SQLite     (#1064),     DBD-mysql     (#1063),     DIALIGN-TX     (#668),     ffmpeg     (#1088),     GObject-Introspection     (#1079),     GTS     (#1079),     Graphviz     (#1079),     GraphViz2     (#1079),     grace     (#1131),     HarfBuzz     (#1079),     HTSlib     (#1161),     GSSAPI     (#1048),     Kerberos_V5     (#1048),     libevent     (#1063),     libXdmcp     (#1129),     libXft     (#1017),     libXinerama     (#1017),     libXrender     (#1017),     Maven     (#1094),     MySQL     (#1063),     Net-LibIDN     (#1060),     OpenCV     (#1088),     OpenMD     (#1105),     Qhull     (#1105),     Pango     (#1079),     psmpi     (#1245,     #1246),     RELION     (#1017),     renderproto     (#1017),     rjags     (#1125),     runjags     (#1125),     SPRNG     (#1138,     #1141),     xineramaproto     (#1017),     XML-Dumper     (#1061),     XML-Parser     (#1061),     XML-Twig     (#1061)</li> </ul> </li> <li>added easyconfigs for new toolchains<ul> <li><code>intel/2014.10</code> &amp; <code>intel/2014.11</code>     (#1219),     <code>intel-para/2014.12</code>     (#1246),     <code>gpsolf/2014.12</code>     (#1245),     <code>iompi/6.6.4</code>     (#1215)</li> </ul> </li> <li>include <code>easyblock = 'ConfigureMake'</code> in relevant easyconfigs to     deal with deprecation of automagic fallback to <code>ConfigureMake</code>     (#1248)<ul> <li>see also     easybuild-framework#1113     and Automagic fallback to     ConfigureMake</li> </ul> </li> <li>clean up use of deprecated functionality in existing easyconfigs     (#1252,     #1259)<ul> <li>stop using deprecated <code>makeopts</code>, <code>premakeopts</code> and     <code>shared_lib_ext</code></li> <li>check for use of deprecated functionality in easyconfigs unit     tests</li> <li>see also     http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html#easyconfig-parameters</li> </ul> </li> <li>various other enhancements, including:<ul> <li>also build <code>fftw3_threads</code> libraries, and enhance sanity checks     (#1013)</li> <li>add unit test to verify specified <code>sanity_check_paths</code>     (#1119)</li> <li>update and clean up <code>README</code>, refer to     http://easybuild.readthedocs.org documentation     (#1184,     #1224)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix unit tests w.r.t. changes in framework     (#1146)</li> <li>remove unnecessary build dependencies for OpenMPI     (#1168)</li> <li>remove duplicate line in OpenMPI easyconfigs     (#1207)</li> <li>fix affiliation/mail address for Fotis in headers     (#1237)</li> <li>fix permissions of easyconfig files for consistency     (#1210)</li> <li>disable symbol lookup feature in cairo to fix build on SL6     (#1241)</li> <li>fix easyconfig <code>gmpolf</code> toolchain w.r.t. MPICH software name     (#1217)<ul> <li>see also     easybuild-framework#1112</li> </ul> </li> <li>fix <code>source_urls</code> for WRF and WPS     (#1225)</li> <li>fix and clean up GATE easyconfigs     (#1228)</li> <li>fix broken CLHEP builds by including <code>-gcc</code> in <code>$CXXFLAGS</code>     (#1254)</li> <li>add patch to fix broken test in Go     (#1257)</li> <li>fix name of GMAP easyconfigs, should be GMAP-GSNAP     (#1268)</li> <li>fix easyconfig filenames, enhance unit test to check easyconfig     filenames     (#1271)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1152-october-7th-2014","title":"EasyBuild v1.15.2 (October 7th 2014)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>fix <code>$MODULEPATH</code> extensions for Clang/CUDA, to make     <code>goolfc</code>/<code>cgoolf</code> compatible with <code>HierarchicalMNS</code>     (#1050)</li> <li>include <code>versionsuffix</code> in module subdirectory with     <code>HierarchicalMNS</code>     (#1050,     #1055)</li> <li>fix unit tests which were broken with bash patched for ShellShock     bug     (#1051)</li> <li>add definition of gimpi toolchain, required to make gimkl toolchain     compatible with <code>HierarchicalMNS</code>     (#1052)</li> <li>don't override <code>COMPILER_MODULE_NAME</code> obtained from <code>ClangGCC</code> in     Clang-based toolchains     (#1053)</li> <li>fix wrong code in <code>path_to_top_of_module_tree</code> function     (#1054)<ul> <li>because of this, load statements for compilers were potentially     included in higher-level modules under <code>HierarchicalMNS</code></li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>only disable sanitizer tests for recent Clang versions     (#481,     #482)</li> <li>pass down installopts to CUDA install command     (#483)</li> </ul> <p>easyconfigs</p> <ul> <li>disable parallel build for slalib     (#968)</li> <li>fix compatibility of goolfc with HierarchicalMNS by using GCC     toolchain for installing CUDA     (#1106,     #1115)</li> <li>fix zlib OS dependency spec for Debian in Boost easyconfigs     (#1109)</li> <li>fix compatibility of gimkl with HierarchicalMNS by using gimpi     subtoolchain     (#1110)</li> <li>make both GCC and Clang first-class members in Clang-based     toolchains to fix compatibility with HierarchicalMNS     (#1113)</li> </ul>"},{"location":"release-notes/#easybuild-v1151-september-23rd-2014","title":"EasyBuild v1.15.1 (September 23rd 2014)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>take into account that multiple modules may be extending     <code>$MODULEPATH</code> with the same path, when determining path to top of     module tree (see     #1047)<ul> <li>this bug caused a load statement for either <code>icc</code> or <code>ifort</code> to     be included in higher-level modules installed with an     Intel-based compiler toolchain, under the <code>HierarchicalMNS</code>     module naming scheme</li> </ul> </li> <li>make <code>HierarchicalMNS</code> module naming scheme compatible with <code>cgoolf</code>     and <code>goolfc</code> toolchain     (#1049)</li> <li>add definition of <code>iompi</code> (sub)toolchain to make <code>iomkl</code> toolchain     compatible with <code>HierarchicalMNS</code>     (#1049)</li> </ul> <p>easyblocks</p> <p>(no changes compared to v1.15.0, simple version bump to stay in sync with easybuild-framework)</p> <p>easyconfigs</p> <ul> <li>minor bug fixes, including:<ul> <li>use SHLIB_EXT in GMP/MPFR easyconfigs     (#1090)</li> <li>fix TopHat homepage and source_urls since page moved     (#1092)</li> <li>make iomkl toolchain compatible with HierarchicalMNS     (#1099)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1150-september-12th-2014","title":"EasyBuild v1.15.0 (September 12th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various other enhancements, including:<ul> <li>fetch extension sources in fetch_step to enhance <code>--stop=fetch</code>     (#978)</li> <li>add <code>iimpi</code> toolchain definition     (#993)</li> <li>prepend robot path with download location of files when     <code>--from-pr</code> is used     (#995)</li> <li>add support for excluding module path extensions from generated     modules     (#1003)<ul> <li>see <code>include_modpath_extensions</code> easyconfig parameter</li> </ul> </li> <li>add support for installing hidden modules and using them as     dependencies     (#1009,     #1021,     #1023)<ul> <li>see <code>--hidden</code> and <code>hiddendependencies</code> easyconfig parameter</li> </ul> </li> <li>stop relying on <code>conflict</code> statement in module files to     determine software name of toolchain components     (#1017,     #1037)<ul> <li>instead, the <code>is_short_modname_for</code> method defined by the     module naming scheme implementation is queried</li> </ul> </li> <li>improve error message generated for a missing easyconfig file     (#1019)</li> <li>include path where tweaked easyconfigs are placed in robot path     (#1032)</li> <li>indicate forced builds in <code>--dry-run</code> output     (#1034)</li> <li>fix interaction between <code>--force</code> and <code>--try-toolchain --robot</code>     (#1035)</li> <li>add <code>--software</code> option, disable recursion for     <code>--try-software(-X)</code>     (#1036)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix <code>HierarchicalMNS</code> crashing when MPI library is installed     with a dummy toolchain     (#986)</li> <li>fix list of FFTW wrapper libraries for Intel MKL     (#987)</li> <li>fix stability of unit tests     (#988,     #1027,     #1033)</li> <li>make sure <code>$SCALAPACK_INC_DIR</code> (and <code>$SCALAPACK_LIB_DIR</code>) are     defined when using <code>imkl</code>     (#990)</li> <li>fix error message on missing FFTW wrapper libs     (#992)</li> <li>fix duplicate toolchain elements in <code>--list-toolchains</code> output     (#993)</li> <li>filter out load statements that extend the <code>$MODULEPATH</code> to make     the module being installed available     (#1016)</li> <li>fix conflict specification included in module files     (#1017)</li> <li>avoid <code>--from-pr</code> crashing hard unless <code>--robot</code> is used     (#1022)</li> <li>properly quote GCC version string in archived easyconfig     (#1028)</li> <li>fix issue with <code>--repositorypath</code> not honoring <code>--prefix</code>     (#1031)</li> <li>sync with latest vsc-base version to fix log order     (#1039)</li> <li>increase # commits per page for <code>--from-pr</code>     (#1040)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 2 new software packages that requires     customized support:<ul> <li>Modeller     (#392),     NAMD     (#397)</li> </ul> </li> <li>various enhancements, including:<ul> <li>fix locale used for running Perl unit tests     (#425)</li> <li>fix Rmpi easyblock to correctly configure for Intel MPI     (#435)</li> <li>add support in generic Rpackage easyblock for handling patches     (#435)</li> <li>enhance OpenFOAM easyblock: fix building MPI build of Pstream     and (pt)scotchDecomp + overall cleanup     (#436)</li> <li>enhance NWChem easyblock for version 6.3, clean up running of     test cases     (#441)</li> <li>enhance noqa for interactive configuration of Qt build procedure     (#447)</li> <li>add custom sanity check for R in easyblock     (#449)</li> <li>make perlmodule take into account     <code>(pre){config,build,install}opts</code>     (#450)</li> <li>add support for specifying an activation key after installing     Mathematica     (#452)</li> <li>consider both <code>lib</code> and <code>lib64</code> directories in netCDF sanity     check     (#453)</li> <li>fix sanity check for ANSYS for v15.0.x     (#458)</li> <li>fix Trilinos easyblock for recent version     (#462)</li> <li>enhance impi easyblock to handle install subdir for impi v5.0.1     and future version     (#465,     #472)</li> <li>include $CFLAGS in linker flags for HPL     (#466)</li> <li>update sanity test checks for GROMACS 5.x     (#471)</li> </ul> </li> <li>various bug fixes:<ul> <li>fix building of FFTW wrappers for Intel MKL v11.1.x + cleanup of     imkl easyblock     (#445)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 13 new software packages:<ul> <li>Circos     (#780),     DB_File     (#913),     Emacs     (#970),     evmix     (#1077),     GD     (#780),     gsl     (#1077),     IOR     (#949),     JAGS     (#1076),     libgd     (#780),     MethPipe     (#1070),     Modeller     (#825),     NAMD     (#835),     netCDF-C++4     (#1015)</li> </ul> </li> <li>added easyconfigs for new toolchains     (#986,     #1051):<ul> <li>gimkl/1.5.9, ictce/7.1.2</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>including Python 2.7.8/3.4.1, Perl 5.20.0, R 3.1.1, NWChem 6.3,     OpenFOAM-Extend 3.1, GCC 4.9.1, Clang 3.4.2, ...</li> </ul> </li> <li>various enhancements, including:<ul> <li>make existing ictce/intel toolchains compatible with     HierarchicalMNS     (#1069)<ul> <li>this involves installing impi with an iccifort toolchain,     and imkl with an iimpi toolchain</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>download link for Perl modules changed to use cpan.metapan.org</li> <li>fix missing MPI-based OpenFOAM libraries (<code>Pstream</code>,     <code>(pt)scotchDecomp</code>), make sure provided SCOTCH is used     (#957)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1140-july-9th-2014","title":"EasyBuild v1.14.0 (July 9th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>important changes<ul> <li>required Lmod version bumped to v5.6.3     (#944)<ul> <li>required due to enhancements and bug fixes in Lmod, e.g.     making <code>--terse avail</code> significantly faster, and correctly     handling a <code>prepend-path</code> statement that includes multiple     directories at once</li> </ul> </li> <li>required Tcl/C environment modules version set to 3.2.10 (<ul> <li>hard requirement due to fixed <code>modulecmd</code> segmentation fault     bug, that only tends manifests itself when making a large     amount of changes in the environment (e.g.     <code>module load &lt;toolchain&gt;</code>)</li> </ul> </li> <li>renamed <code>EasyBuildModuleNamingScheme</code> to <code>EasyBuildMNS</code></li> </ul> </li> <li>enhanced custom module naming schemes functionality to support     hierarchical module naming schemes     (#953,     #971,     #975)<ul> <li>extended API for custom module naming schemes to allow tweaking     different aspects of module naming<ul> <li>see <code>easybuild/tools/module_naming_scheme/mns.py</code> for     abstract <code>ModuleNamingScheme</code> class</li> <li>an example hierarchical module naming scheme is included,     see <code>HierarchicalMNS</code></li> </ul> </li> <li>split up full module names into a module subdirectory part,     which becomes part of <code>$MODULEPATH</code>), and a 'short' module     name (is exposed to end-users)<ul> <li>example: <code>GCC/4.7.2</code> in <code>Core</code> subdir, <code>OpenMPI/1.6.5</code> in     <code>Compiler/GCC/4.7.2</code> subdir</li> </ul> </li> <li>make <code>ModuleNamingScheme</code> class a singleton, move it into     <code>easybuild.tools.module_naming_scheme.mns</code> module</li> <li>implement <code>ActiveMNS</code> wrapper class for querying active module     naming scheme</li> <li>implement toolchain inspection functions that can be used in a     custom module naming scheme<ul> <li><code>det_toolchain_compilers</code>, <code>det_toolchain_mpi</code> in     <code>easybuild.tools.module_naming_scheme.toolchain</code></li> </ul> </li> <li>significant code cleanup &amp; enhanced unit tests</li> </ul> </li> <li>enhance &amp; clean up <code>tools/modules.py</code>     (#944,     #953,     #963,     #964,     #969)<ul> <li>make <code>ModulesTool</code> a singleton to avoid repeating module     commands over &amp; over again needlessly</li> <li>use <code>module use</code>, <code>module unuse</code> rather than fiddling with     <code>$MODULEPATH</code> directly</li> <li>improve debug logging (include full stdout/stderr output of     module commands)</li> <li>remove deprecated functionality (<code>add_module</code>, <code>remove_module</code>,     indirect module load)</li> </ul> </li> <li>various other enhancements, including:<ul> <li>added toolchain definitions for 'common' toolchains: <code>intel</code>     and <code>foss</code>     (#956)</li> <li>implement caching for easyconfig files, parsed easyconfigs and     toolchains     (#953)</li> <li>enable <code>--ignore-osdeps</code> implicitly when <code>-D</code>, <code>--dry-run</code> or     <code>--dep-graph</code> are used     (#953)</li> <li>flesh out <code>use_group</code> and <code>det_parallelism</code> function, include     them in <code>easybuild.tools.systemtools</code>     (#953)</li> <li>make symlinking of module files part of module naming scheme API     (#973)<ul> <li>list of symlinks paths can be controlled using     <code>det_module_symlink_paths()</code> method</li> </ul> </li> <li>added support for new configuration options:<ul> <li>tweaking compiler flags triggered by <code>optarch</code> toolchain     options using <code>--optarch</code>     (#949)</li> <li>filtering out dependencies from easyconfig files using     <code>--filter-deps</code>     (#957)</li> <li>filtering environment included in test reports with     <code>--test-report-env-filter</code>     (#959)     e.g.     <code>--test-report-env-filter='^SSH|USER|HOSTNAME|UID|.*COOKIE.*'</code></li> <li>made suffix used for module files install path configurable,     using <code>--suffix-modules-path</code>     (#973)</li> </ul> </li> <li>added support for additional easyconfig parameters:<ul> <li>define aliases in module files (<code>modaliases</code>)     (#952)</li> <li>add print message on module load (<code>modloadmsg</code>) and Tcl     footer (<code>modtclfooter</code>) in module files     (#954,     #974)</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>don't try to tweak generated easyconfigs when using <code>--try-X</code>     (#942)</li> <li>currently create symlinks to module files modules/all under a     custom module naming scheme     (#953)</li> <li>restore traceback error reporting on hard crashes     (#965)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock: CmdCp     (#395)</li> <li>added support for 2 new software packages that requires     customized support:<ul> <li>ANSYS     (#398),     HPCG     (#408)</li> </ul> </li> <li>various enhancements, including:<ul> <li>updated ABAQUS easyblock so that it works for version 13.2     (#406)</li> <li>enhance BLAT easyblock by using <code>super</code>'s <code>build_step</code> and     <code>prebuildopts</code>/<code>buildopts</code>     (#423)</li> <li>enhance Mothur easyblock to guess correct start dir for recent     versions     (#424)</li> <li>replace use of deprecated (pre)makeopts with (<code>pre</code>)<code>buildopts</code>     in all easyblocks     (#427)</li> <li>fix poor mans version of toolchain compiler detection in imkl     easyblock     (#429)</li> </ul> </li> <li>various bug fixes:<ul> <li>only check for <code>idb</code> for older versions of icc     (#426)</li> <li>fix issues with installing RPMS when <code>rpmrebuild</code> is required     (#433)</li> <li>correctly disable parallel build for ATLAS     (#434)</li> <li>fix sanity check for Intel MPI v5.x (only provides bin64)     (#432)</li> <li>add <code>$MIC_LD_LIBRARY_PATH</code> for MKL v11.x     (#437)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 17 new software packages:<ul> <li>ANSYS     (#836),     Beast     (#912),     ELPH     (#910,     #911),     FastTree     (#900,     #947),     GEM-library     (#858),     HPCG     (#853),     mdtest     (#925),     ncview     (#648),     PRANK     (#917),     RDP-Classifier     (#903),     SDPA     (#955),     SIBELia     (#886),     SOAPaligner     (#857),     SPAdes     (#884),     stemming     (#891),     WHAM     (#872),     YAXT     (#656)</li> </ul> </li> <li>added easyconfigs for new toolchains     (#935,     #944,     #948):<ul> <li>foss/2014b, ictce/6.3.5, intel/2014b</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...</li> <li>various enhancements, including:<ul> <li>replace use of deprecated <code>(pre)makeopts</code> with <code>(pre)buildopts</code>     in all easyblocks     (#954)</li> <li>disable running embossupdate on installation of EMBOSS     (#963)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>really enable OpenMP support in FastTree easyconfigs     (#947)</li> <li>fix easyconfigs unit tests after changes in framework     (#958)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1130-may-29th-2014","title":"EasyBuild v1.13.0 (May 29th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>make <code>--try-X</code> command line options work recursively (i.e.     collaborate with <code>--robot</code>)     (#922)<ul> <li>EasyBuild will first build a full dependency graph of the     specified easyconfigs, and then apply the <code>--try</code> specifications<ul> <li>the elements of the dependency graph for the used toolchain     and its dependencies are left untouched</li> </ul> </li> <li>this makes     <code>eb foo-1.0-goolf-1.4.10.eb --try-toolchain=ictce,5.5.0 --robot</code>     also work when <code>foo</code> has dependencies</li> <li>caveat: the specified easyconfig files must all use the same     toolchain (version)</li> </ul> </li> <li>add support for testing easyconfig pull requests from EasyBuild     command line     (#920,     #924,     #925,     #932,     #933,     #938)<ul> <li>add <code>--from-pr</code> command line option for downloading easyconfig     files from pull requests</li> <li>add <code>--upload-test-report</code> command line option for uploading a     detailed test report to GitHub as a gist<ul> <li>this requires specifying a GitHub username for which a     GitHub token is available, using <code>--github-user</code></li> <li>with <code>--dump-test-report</code>, the test report can simply be     dumped to file rather than being uploaded to GitHub</li> <li>see also     https://github.com/easybuilders/easybuild/wiki/Review-process-for-contributions#testing-result</li> </ul> </li> </ul> </li> <li>the <code>makeopts</code> and <code>premakeopts</code> easyconfig parameter are     deprecated, and replaced by <code>buildopts</code> and <code>prebuildopts</code>     (#918)<ul> <li>both <code>makeopts</code> and <code>premakeopts</code> will still be honored in     future EasyBuild v1.x versions, but should no longer be used</li> </ul> </li> <li>various other enhancements, including:<ul> <li>add <code>--disable-cleanup-builddir</code> command line option, to keep     the build dir after a (successful) build     (#853)<ul> <li>the build dir is still cleaned up by default for successful     builds, i.e. <code>--cleanup-builddir</code> is the default</li> </ul> </li> <li>also consider lib32 in paths checked for <code>$LD_LIBRARY_PATH</code> and     <code>$LIBRARY_PATH</code>     (#912)</li> <li>reorganize support for file/git/svn repositories into     <code>repository</code> package, making it extensible     (#913)</li> <li>add support for <code>postinstallcmds</code> easyconfig parameter, to     specify commands that need to be run after the install step     (#918)</li> <li>make <code>VERSION=</code> part in version of C environment modules tool     optional, which is required for older versions     (#930)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix small issues in bootstrap script: correctly determine     EasyBuild version and make sure modules path exists     (#915)</li> <li>fix github unit tests     (#916)</li> <li>disable useless debug logging for unit tests     (#919)</li> <li>fix unit test for <code>--skip</code>     (#929)</li> <li>make sure <code>start_dir</code> can be set based on location of unpacked     first source file     (#931)</li> <li>the <code>vsc</code> package shipped with easybuild-framework is synced     with vsc-base v1.9.1     (#935)<ul> <li>fancylogger (used for logging in EasyBuild) is now robust     against strings containing UTF8 characters</li> <li>the <code>deprecated</code> logging function now does a non-strict     version check (rather than an erroneous strict check)</li> <li>the <code>easybuild.tools.agithub</code> module is removed,     <code>vsc.utils.rest</code> now provides the required functionality</li> </ul> </li> <li>fix support for unpacking gzipped source files, don't unpack     <code>.gz</code> files in-place in the source directory     (#936)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 1 new software package that requires     customized support:<ul> <li>Go     (#417)</li> </ul> </li> <li>various enhancements, including:<ul> <li>enhance OpenFOAM easyblock so OpenFOAM-Extend fork can be built     too + style fixes     (#253,     #416)</li> <li>enhance CPLEX easyblock by adding support for staged     installation     (#372)</li> <li>include support for <code>configure_cmd_prefix</code> easyconfig parameter     in ConfigureMake generic easyblock     (#393)</li> <li>enhance GCC easyblock for building v4.9.0 and versions prior to     v4.5     (#396,     #400)</li> <li>enhance easyblocks for Intel ipp and itac to support recent     versions     (#399)</li> <li>enhance Clang easyblock: install static analyzer     (#402),     be more robust against changing source dir names     (#413)</li> <li>enhance FoldX easyblock, update list of potential FoldX binaries     to support recent versions     (#407)</li> <li>add runtime patching in Boost easyblock to fix build issue with     old Boost versions and recent glibc (&gt; 2.15)     (#412)</li> <li>enhance <code>MakeCp</code> generic easyblock: use location of 1st unpacked     source as fallback base dir for <code>files_to_copy</code>     (#415)</li> </ul> </li> <li>various bug fixes:<ul> <li>fix installing Mathematica when X forwarding is enabled (make     sure <code>$DISPLAY</code> is unset)     (#391)</li> <li>fix permissions of installed files in SAMtools easyblock, ensure     read/execute for group/other     (#409)</li> <li>fix implementation of <code>det_pylibdir</code> function in PythonPackage     generic easyblock     (#419,     #420)<ul> <li>determine Python lib dir via <code>distutils</code> Python, which works     cross-OS (as opposed to hardcoding <code>lib</code>)</li> </ul> </li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 32 new software packages:<ul> <li>APBS     (#742),     BayesTraits     (#770),     bc     (#888),     BitSeq     (#791),     CEM     (#789),     CVS     (#888),     eXpress     (#786),     file     (#888),     GEMSTAT     (#861),     GMAP     (#594),     Go     (#887),     iscp     (#602),     IsoInfer     (#773),     Jellyfish     (#868),     less     (#888),     libcircle     (#883),     mcpp     (#602),     MMSEQ     (#795),     MUSTANG     (#800),     OpenFOAM-Extend     (#437),     popt     (#759),     pscom     (#759),     psmpi2     (#759),     QuadProg++     (#773),     rSeq     (#771),     RSEQtools     (#870),     Ruby     (#873),     segemehl     (#792),     SOAPec     (#879),     SOAPdenovo2     (#874),     SRA-Toolkit     (#793),     texinfo     (#888)</li> </ul> </li> <li>added easyconfig for new toolchain goolfc/1.4.10</li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>e.g., older versions of Boost (1.47.0), GCC (4.1-4.4), &amp; recent     versions of Clang, GCC, Lmod, etc.</li> </ul> </li> <li>various enhancements, including:<ul> <li>add OpenSSL dependency for cURL, to enable HTTPS support     (#881)</li> <li>also install esl-X binaries for HMMER     (#889)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>properly pass down compiler flags for ParMGridGen     (#437)</li> <li>specify proper make options for PLINK, fixing the build on SL6     (#594,     #772)</li> <li>fix netloc version (0.5 rather than 0.5beta)     (#707)</li> <li>remove Windows-style line ending in netCDF patch file     (#796)</li> <li>bump version of OpenSSL dep for BOINC     (#882)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1121-april-25th-2014","title":"EasyBuild v1.12.1 (April 25th 2014)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>return to original directory after executing a command in a subdir     (#908)</li> <li>fix bootstrap with Lmod, fix issue with module function check and     Lmod     (#911)</li> </ul> <p>easyblocks</p> <p>(no changes compared to v1.12.0, simple version bump to stay in sync with easybuild-framework)</p> <p>easyconfigs</p> <p>(no changes compared to v1.12.0, simple version bump to stay in sync with easybuild-framework)</p>"},{"location":"release-notes/#easybuild-v1120-april-4th-2014","title":"EasyBuild v1.12.0 (April 4th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>completed support for custom module naming schemes     (#879,     #904)<ul> <li>a fully parsed easyconfig file is now passed to the     <code>det_full_module_name</code> function</li> <li>this does require that an easyconfig file matching the     dependency specification is available</li> </ul> </li> <li>added more features to better support using a shared install     target with multiple users     (#902,     #903,     #904)</li> <li>further development on support for new easyconfig format (v2.0)     (#844,     #848)<ul> <li>not considered stable yet, so still requires using     <code>--experimental</code></li> </ul> </li> <li>enhanced bootstrap script to also support Lmod and     <code>modulecmd.tcl</code> module tools     (#869)</li> <li>added support to <code>run_cmd_qa</code> function to supply a list of     answers     (#887)</li> <li>detect mismatch between definition of <code>module</code> function and     selected modules tool     (#871)<ul> <li>allowing mismatch now requires     <code>--allow-modules-tool-mismatch</code>; an empty <code>module</code> function     is simply ignored</li> </ul> </li> <li>provide lib64 fallback option for directories in default sanity     check paths     (#896)</li> <li>add support for adding JAR files to <code>$CLASSPATH</code>     (#898)</li> <li>enhanced and cleaned up unit tests     (#877,     #880,     #884,     #899,     #901)</li> <li>code cleanup and refactoring<ul> <li>get rid of global variable for configuration settings in     <code>config.py</code>, use singleton instead     (#874,     #888,     #890,     #892)</li> <li>track build options via singleton in <code>config.py</code> rather than     passing them around all over     (#886,     #889)</li> <li>avoid parsing easyconfig files multiple times by passing a     parsed easyconfig to the easyblock     (#891)</li> <li>deprecate list of tuples return type of <code>extra_options</code>     static method     (#893,     #894)</li> <li>move OS dependency check to <code>systemtools.py</code> module     (#895)</li> </ul> </li> </ul> </li> <li>bug fixes, including:<ul> <li>fix linking with <code>-lcudart</code> if CUDA is part of the toolchain,     should also include <code>-lrt</code>     (#882)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>various enhancements, including:<ul> <li>also run <code>Perl Build build</code> for Perl modules (usually not     required, but sometimes it is)     (#380)</li> <li>added glob support in generic makecp block     (#367,     #384)</li> <li>enhance sanity check in GCC easyblock such that it also     passes/works on OpenSuSE     (#365)</li> <li>add multilib support in GCC easyblock     (#379)</li> </ul> </li> <li>various bug fixes:<ul> <li>Clang: disable sanitizer tests when vmem limit is set     (#366)</li> <li>make sure all libraries are installed for recent Intel MKL     versions     (#375)</li> <li>fix appending Intel MPI include directories to <code>$CPATH</code>     (#371)</li> <li>statically link readline/ncurses libraries in Python and NWChem     easyblocks     (#370,     #383,     #385)</li> <li>fix easyblock unit tests after changes in framework     (#376,     #377,     #378)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 6 new software packages:<ul> <li>CLooG     (#653),     ELPA     (#738),     LIBSVM     (#788),     netaddr     (#753),     netifcas     (#753),     slalib-c     (#750)</li> </ul> </li> <li>added easyconfigs for new toolchains:<ul> <li>ClangGCC/1.3.0     (#653),     goolf/1.4.10-no-OFED     (#749),     goolf/1.5.14(-no-OFED)     (#764,     #767),     ictce/6.2.5     (#726),     iomkl     (#747)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...</li> <li>various enhancements, including:<ul> <li>tweak BOINC easyconfig to make use of <code>glob</code> support available     for <code>files_to_copy</code>     (#781)</li> <li>enable <code>-fPIC</code> for libreadline, so it can be linked into shared     libs (e.g. <code>libpython2.x.so</code>)     (#798)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix Qt source_urls     (#756)</li> <li>enable <code>-fPIC</code> in ncurses 5.9 ictce/5.2.0 easyconfig, just like     in the others     (#801)</li> <li>fix unit tests after changes to framework     (#763,     #766,     #769)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1111-february-28th-2014","title":"EasyBuild v1.11.1 (February 28th 2014)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>various bug fixes, including:<ul> <li>fix hard crash when <code>$LMOD_CMD</code> specified full path to lmod     binary, but <code>spider</code> binary is not in <code>$PATH</code>     (#861,     #873)</li> <li>fix bug in initialisation of repositories, causing problems when     a repository subdirectory is specified     (#852)</li> <li>avoid long wait when dependency resolution fails if <code>--robot</code> is     not specified     (#875)</li> </ul> </li> </ul> <p>easyblocks</p> <p>(no changes compared to v1.11.0, simple version bump to stay in sync with easybuild-framework)</p> <p>easyconfigs</p> <p>(no changes compared to v1.11.0, simple version bump to stay in sync with easybuild-framework)</p>"},{"location":"release-notes/#easybuild-v1110-february-16th-2014","title":"EasyBuild v1.11.0 (February 16th 2014)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>add checksum support for extensions     (#807)</li> <li>make checksum functionality more memory efficient by reading in     blocks     (#836)</li> <li>rewrite of dependency solving for speed and better reporting of     missing dependencies     (#806,     #818)</li> <li>refactoring of <code>main.py</code>     (#815,     #828)<ul> <li>function/method signatures to pass down build options</li> <li>move functions from main.py into easybuild.framework.X or     easybuild.tools</li> </ul> </li> <li>provide better build statistics     (#824)</li> <li>add --experimental, <code>--deprecated</code> and <code>--oldstyleconfig</code>     command line options     (#838)<ul> <li>with <code>--experimental</code>, new but incomplete (or partially     broken) features are enabled</li> <li>with <code>--deprecated</code>, removed of deprecated functionality can     be tested (anything deprecated will fail hard)</li> <li>with <code>--disable-oldstyleconfig</code>, support for the old style     configuration is disabled</li> </ul> </li> <li>define <code>$LIBRARY_PATH</code> in generated module files     (#832)</li> <li>more constants for source URLs (e.g. for downloads from     bitbucket)     (#831)</li> <li>prefer <code>$XDG_CONFIG_HOME</code> and <code>~/.config/easybuild</code> over     <code>~/.easybuild</code> for configuration files     (#820)</li> <li>add support for specifying footers to be appended to generated     module files     (#808)<ul> <li>see <code>--modules-footer</code> command line option</li> </ul> </li> <li>track version of modules tool + cleanup of <code>modules.py</code>     (#839)</li> <li>move actual <code>run_cmd</code> and <code>run_cmd_qa</code> implementations from     <code>tools.filetools</code> into <code>tools.run</code>     (#842,     #843)</li> <li>add support for generating modules that support recursive     unloading     (#830)<ul> <li>see <code>--recursive-module-unload</code> command line option</li> </ul> </li> <li>add flexibility support for specifying OS dependencies     (#846)<ul> <li>alternatives can be specified, e.g. (<code>openssl-devel</code>,     <code>libssl-dev</code>)</li> </ul> </li> <li>initial (incomplete) support for easyconfig files in new format     (v2.0)     (#810,     #826,     #827,     #841)<ul> <li>requires <code>--experimental</code> to be able to experiment with     format v2 easyconfig files</li> </ul> </li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix problems with use of new-style configuration file     (#821)</li> <li>fix removal of old build directories, unless <code>cleanupoldbuild</code>     easyconfig parameter is set     (#809)</li> <li>fix support for different types of repository path     specifications     (#814)</li> <li>fix unit tests sensitive to <code>$MODULEPATH</code> and available     easyblocks     (#845)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock:     <code>VSCPythonPackage</code>     (#348)</li> <li>added support for 1 new software package that requires     customized support:<ul> <li>netcdf4-python     (#347)</li> </ul> </li> <li>various enhancements, including:<ul> <li>add support for installing recent tbb versions     (#341)</li> <li>use <code>makeopts</code> in the build step of the generic <code>PythonPackage</code>     easyblock     (#352)</li> <li>define the <code>$CMAKE_INCLUDE_PATH</code> and <code>$CMAKE_LIBRARY_PATH</code> in     the generic <code>CMakeMake</code> easyblock     (#351,     #360)</li> <li>update Clang easyblock to support v3.4     (#346)</li> <li>make sure Python is built with SSL support, adjust Python     easyblock to pick up OpenSSL dep     (#359)<ul> <li>note: providing OpenSSL via an OS package is still     recommended, such that security updates are picked up</li> </ul> </li> <li>add support for recent netCDF versions     (#347)</li> <li>update SuiteSparse easyblock for new versions, and clean it up a     bit     (#350)</li> </ul> </li> <li>various bug fixes:<ul> <li>fix name of <code>VersionIndependentPythonPackage</code> easyblock,     deprecate <code>VersionIndependendPythonPackage</code> easyblock     (#348)</li> <li>fix detection of machine architecture in FSL easyblock     (#353)</li> <li>fix bug in NWChem easyblock w.r.t. creating local dummy     <code>.nwchem</code> file     (#360)</li> <li>make sure <code>$LIBRARY_PATH</code> is set for Intel compilers and Intel     MPI, fix 64-bit specific paths     (#360)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 30 new software packages:<ul> <li>argtable     (#669),     Clustal-Omega     (#669),     Coreutils     (#582),     GMT     (#560),     gperftools     (#596),     grep     (#582),     h4toh5     (#597),     libunwind     (#596),     Lmod     (#600,     #692),     Lua     (#600,     #692),     MAFFT     (#654),     Molekel     (#597),     NEdit     (#597),     netcdf4-python     (#660),     nodejs     (#678),     OCaml     (#704),     patch     (#582),     PhyML     (#664),     PRACE Common Production Environment     (#599),     protobuf     (#680),     python-dateutil     (#438),     sed     (#582),     sickle     (#651),     Tesla-Deployment-Kit     (#489),     TREE-PUZZLE     (#662),     VCFtools     (#626),     Vim     (#665),     vsc-mympirun-scoop     (#661),     vsc-processcontrol     (#661),     XZ     (#582)</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>OpenSSL with ictce toolchain     (#703)</li> </ul> </li> <li>various enhancements, including:<ul> <li>using more constants and templates     (#613,     #615)</li> <li>specify OS dependency for SSL support, with OpenSSL dependency     as fallback     (#703)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix unit tests after (internal) framework API changes     (#667,     #672)</li> <li>fix homepage in vsc-mympirun easyconfig file     (#681)</li> <li>align OpenMPI easyconfigs     (#650)</li> <li>add additional source URL in Qt easyconfigs     (#676)</li> <li>specify correct $PATH specification and define <code>$CHPL_HOME</code> for     Chapel     (#683)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v1100-december-24th-2013","title":"EasyBuild v1.10.0 (December 24th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>set unique default temporary directory, add <code>--tmpdir</code> command     line option     (#695)</li> <li>add support for computing and verifying source/patch file     checksums     (#774,     #777,     #779,     #801,     #802)<ul> <li>cfr. <code>checksums</code> easyconfig parameter</li> </ul> </li> <li>add support for eb --confighelp, which prints out     an example configuration file     (#775)</li> <li>add initial support for <code>eb</code> tab completion in bash shells     (#775,     #797,     #798)<ul> <li>see also     https://github.com/easybuilders/easybuild/wiki/Setting-up-tab-completion-for-bash</li> <li>note: may be quite slow for now</li> </ul> </li> <li>enhancements for using Lmod as modules tool     (#780,     #795,     #796):<ul> <li>ignore Lmod spider cache by setting <code>$LMOD_IGNORE_CACHE</code>     (requires Lmod 5.2)</li> <li>bump required Lmod version to v5.2</li> <li>get rid of slow workaround for detecting module directories     (only required for older Lmod versions)</li> <li>fix version parsing for Lmod release candidates (rc)</li> <li>improve integration with lmod spider by adding     <code>Description:</code> prefix to <code>module-whatis</code> field of module</li> </ul> </li> <li>add <code>--dry-short-short</code>/<code>-D</code> and <code>--search-short</code>/<code>-S</code> command     line options     (#781)</li> <li>add toolchain definition for 'gompic', intended for using with     CUDA-aware OpenMPI     (#783)</li> <li>add support for specifying multiple robot paths     (#786)</li> <li>add various source URL constants, add support for     <code>%(nameletter)s</code> and <code>%(nameletterlower)s</code> templates     (#793)</li> <li>add <code>buildininstalldir</code> easyconfig parameter     (#794)</li> <li>add <code>--ignore-osdeps</code> command line option     (#799,     #802)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>enable <code>-mt_mpi</code> compiler flag if both <code>usempi</code> and <code>openmp</code>     toolchain options are enabled     (#771)</li> <li>only use <code>libmkl_solver*</code> libraries for Intel MKL versions prior     to 10.3     (#776)</li> <li>fix toolchain support for recent Intel tools     (#785)</li> <li>code style fixes in <code>main.py</code> to adhere more to PEP8     (#789)</li> <li>make sure <code>easyblock</code> easyconfig parameter is listed in <code>eb -a</code>     (#791)</li> <li>fix error that may pop up when using <code>skipsteps=source</code>     (#792)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock:     <code>VersionIndependendPythonPackage</code>     (#329,     #334)</li> <li>added support for 2 new software packages that require     customized support:<ul> <li>Charmm     (#318),     GROMACS     (#335,     #339)</li> </ul> </li> <li>various enhancements, including:<ul> <li>fix support for recent SAMtools version (&gt;= 0.1.19)     (#320)</li> <li>fix support for recent Intel tools (icc, ifort, imkl, impi)     (#325,     #327,     #338)</li> <li>enhance generic easyblock for installing RPMs     (#332)</li> <li>pick up <code>preinstallopts</code> in generic <code>PythonPackage</code> easyblock     (#334)</li> <li>enhance CP2K easyblock (libxc support, new versions) + style     cleanup     (#336)</li> </ul> </li> <li>various bug fixes:<ul> <li>use unwanted env var functionality to unset <code>$MKLROOT</code> rather     than failing with an error     (#273)</li> <li>always include <code>-w</code> flag for preprocessor to suppress warnings     that may break QuantumESPRESSO configure     (#317)</li> <li>link with multithreaded LAPACK libs for ESMF     (#319)</li> <li>extend <code>noqanda</code> list of patterns in CUDA easyblock     (#328,     #337)</li> <li>add <code>import _ctypes</code> to Python sanity check commands to capture     a common build issue     (#329)</li> <li>bug fixes in generic <code>IntelBase</code> easyblock     (#331,     #333,     #335)<ul> <li>remove broken symlink <code>$HOME/intel</code> if present</li> <li>fix use of gettempdir to obtain a common (user-specific) tmp     dir to symlink <code>$HOME/intel</code> to</li> </ul> </li> <li>fix build of recent scipy versions with GCC-based toolchain     (#334)</li> <li>fix use of gettempdir to obtain common (user-specific) tmp dir     for <code>$HOME/.nwchemrc</code> symlink     (#340,     #342)</li> <li>extend <code>noqanda</code> list in Qt easyblock     (#342)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 18 new software packages:<ul> <li>BEDTools     (#579,     #632,     #635),     CAP3     (#548),     CHARMM     (#584),     cutadapt     (#620),     ErlangOTP     (#556,     #630),     Ghostscript     (#547,     #632),     HTSeq     (#554,     #632),     Jansson     (#545),     libjpeg-turbo     (#574),     Molden     (#566),     netloc     (#545),     o2scl     (#633),     packmol     (#566),     PP     (#405),     qtop     (#500),     TAMkin     (#566),     vsc-base     (#621),     vsc-mympirun     (#621)</li> </ul> </li> <li>added easyconfigs for new toolchains     (#545,     #609,     #629):<ul> <li>gcccuda/2.6.10, gompic/2.6.10, goolfc/2.6.10, ictce/6.0.5,     ictce/6.1.5</li> </ul> </li> <li>added additional easyconfigs for various supported software     packages: version updates, different toolchains, ...<ul> <li>new versions of icc, ifort, imkl, impi     (#609,     #629)</li> <li>large collection of ictce/5.3.0 easyconfigs     (#627)</li> </ul> </li> <li>various enhancements, including:<ul> <li>extended list of Python packages as extensions to Python     (#625)</li> <li>add MPI-enabled version of GROMACS + easyconfigs using ictce     (#606,     #636)</li> <li>clean up templating of <code>source_urls</code>     (#637)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>provide alternative download URL for Mesa     (#532)</li> <li>add Python versionsuffix in OpenBabel filenames     (#566)</li> <li>apply no-gets patch in all M4 v1.4.16 easyconfigs     (#623)</li> <li>fix patching of Python w.r.t. <code>libffi</code>/<code>_ctypes</code> issues     (#625,     #642)</li> <li>bug fixes in GROMACS easyconfigs     (#606)<ul> <li>change versionsuffix for non-MPI GROMACS easyconfigs to     <code>-mt</code></li> <li>stop using 'CMakeMake' easyblock for GROMACS now that     there's a dedicated GROMACS easyblock, which correctly     specifies building against external BLAS/LAPACK libraries</li> </ul> </li> <li>fix Qt dependency for CGAL     (#642)</li> <li>fix libctl, libmatheval, Meep, PSI build issues caused by full     paths in <code>guile-config</code>/<code>python-config</code> shebang     (#642)</li> <li>make sure HDF easyconfigs specify dedicated <code>include/hdf</code>     include dir     (#642)<ul> <li>this is required to avoid build issues with NCL, because HDF     ships it's own <code>netcdf.h</code></li> <li>this also triggered removal of patch files for NCL that     rewrote <code>include/hdf</code> to <code>include</code></li> </ul> </li> <li>fix WPS v3.5.1 patch file after upstream source tarball was     changed, supply checksum for verification     (#642)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v190-november-17th-2013","title":"EasyBuild v1.9.0 (November 17th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add support for Tcl environment modules (<code>modulecmd.tcl</code>)     (#728,     #729,     #739)<ul> <li>special care was taken to make sure also the DEISA variant of     <code>modulecmd.tcl</code> can be used</li> </ul> </li> <li>code refactoring to prepare for supporting two formats for     easyconfig files     (#693,     #750)<ul> <li>this prepares the codebase for supporting easyconfig format v2.0</li> <li>some initial work on adding support for the new easyconfig     format is included, but it's by no means complete yet</li> <li>the current easyconfig format (now dubbed v1.0) is still the     default and only supported format, for now</li> <li>for more details, see     https://github.com/easybuilders/easybuild/wiki/Easyconfig-format-two</li> </ul> </li> <li>various other enhancements, including:<ul> <li>include a full version of vsc-base (see the <code>vsc</code> subdirectory)     (#740)<ul> <li>this is a first step towards switching to using vsc-base as     a proper dependency</li> </ul> </li> <li>implement get_avail_core_count function in systemtools module     that takes cpusets and co into account     (#700)<ul> <li>the <code>get_core_count</code> function is now deprecated</li> </ul> </li> <li>add <code>impmkl</code> toolchain definition     (#736)</li> <li>make regtest more robust: put holds on jobs without     dependencies, release holds once all jobs are submitted     (#751)</li> <li>add support for specifying multiple alternatives for sanity     check paths     (#753)</li> <li>add <code>get_software_libdir</code> function to modules.py (along with     unit tests)     (#758)</li> <li>add support for more file extensions and constants w.r.t.     sources     (#738,     #760,     #761)</li> <li>add MPICH2 support in <code>mpi_cmd_for</code> function     (#761)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix checking of OS dependencies on Debian/Ubuntu that have <code>rpm</code>     command available     (#732)</li> <li>make unit tests more robust w.r.t. non-writeable <code>/tmp</code> and     loaded modules prior to starting unit tests     (#752,     #756)</li> <li>also call <code>EasyBlock</code>'s sanity check in <code>ExtensionEasyblock</code> if     paths/commands are specified in easyconfig     (#757)</li> <li>set compiler family for dummy compiler, add definition of     toolchain constant for dummy     (#759)</li> </ul> </li> <li>other<ul> <li>add build status badges for master/develop branches to <code>README</code>     (#742)</li> <li>add scripts for installing EasyBuild develop version or setting     up git development environment     (#730,     #755)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 8 new software packages that require     customized support:<ul> <li>Allinea DDT/MAP     (#279),     ARB     (#291),     GenomeAnalysisTK     (#278),     OpenBabel     (#305,     #309),     picard     (#278),     PyQuante     (#297),     Scalasca v1.x     (#304),     Score-P     (#304)<ul> <li>the Score-P easyblock is also used for Cube 4.x, LWM2, OTF2,     and Scalasca v2.x</li> </ul> </li> </ul> </li> <li>various enhancements, including:<ul> <li>add support building ScaLAPACK on top of MPICH2, required for     gmpolf toolchain     (#274)</li> <li>add support to ConfigureMake easyblock to customize configure     <code>--prefix</code> option     (#287)</li> <li>add support for specifying install command in Binary easyblock     (#288)</li> <li>enhance CMakeMake easyblock to specify srcdir via easyconfig     parameter, and to perform out-of-source builds     (#303)</li> </ul> </li> <li>various bug fixes:<ul> <li>use correct configure flag for Szip in HDF5 easyblocks, should     be <code>--with-szlib</code>     (#286,     #301)</li> <li>add support for serial HDF5 builds     (#290,     #301)</li> <li>enhance robustness of Qt easyblock w.r.t. interactive configure     (#295,     #302)</li> <li>enhance support for picking up license specification via     environment variables     (#298,     #307)</li> <li>extend list of values for <code>$CPATH</code> in libint2 easyblock     (#300)</li> <li>fix <code>extra_options</code> <code>super</code> call in Clang easyblock     (#306)</li> <li>add support in Boost easyblock to specify toolset in easyconfig     file     (#308)</li> </ul> </li> <li>other:<ul> <li>add build status badges for master/develop branches to README     (#289)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 58 new software packages:<ul> <li>Allinea     (#468),     ARB + dependencies     (#396,     #493,     #495),     arpack-ng     (#451,     #481),     CDO     (#484,     #521),     Cube     (#505),     ed     (#503),     FLTK     (#503),     GenomeAnalysisTK     (#467),     GIMPS     (#527),     GTI     (#511),     IPython     (#485,     #519),     LWM2     (#510),     MPICH2     (#460),     MUST     (#511),     ncdf     (#496,     #522),     OPARI2     (#505),     OpenBabel     (#504,     #524),     OTF     (#505),     OTF2     (#505),     PandaSEQ     (#475),     ParaView     (#498,     #514),     ParFlow     (#483,     #520),     PCC     (#486,     #528),     PDT     (#505),     picard     (#467),     PnMPI     (#511),     PyQuante     (#499,     #523),     pysqlite     (#519),     Scalasca     (#505),     Score-P     (#505),     SDCC     (#486,     #528),     Silo     (#483,     #520),     Stride     (#503),     SURF     (#503),     TCC     (#486,     #528)</li> <li>ARB dependencies (23): fixesproto, imake, inputproto, kbproto,     libICE, libSM, libX11, libXau, libXaw, libXext, libXfixes,     libXi, libXmu, libXp, libXpm, libXt, lynx, motif, printproto,     Sablotron, xbitmaps, xextproto, xtrans</li> </ul> </li> <li>added easyconfigs for new gmpich2/1.4.8, gmpolf/1.4.8 and     goolf/1.6.10 toolchains     (#460,     #525,     #530)</li> <li>added additional easyconfigs for various software packages (list too     long to include here)<ul> <li>version updates, different toolchains, ...</li> </ul> </li> <li>various bug fixes, including:<ul> <li>enable building of shared libraries for MPICH     (#482)</li> <li>fix HDF configure option for Szip, should be <code>--with-szlib</code>     (#533)<ul> <li>for HDF5, this issue is fixed in the HDF5 easyblock</li> </ul> </li> </ul> </li> <li>other<ul> <li>add build status badges for master/develop branches to README     (#490)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v182-october-18th-2013","title":"EasyBuild v1.8.2 (October 18th 2013)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>fix regular expression used for obtaining list of modules from     <code>module avail</code>     (#724)<ul> <li>modules marked as default were being hidden from EasyBuild,     causing problems when they are used as dependency</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>fix installing of EasyBuild with a loaded EasyBuild module     (#280)<ul> <li>this is important to make upgrading to the latest EasyBuild     version possible with a bootstrapped EasyBuild</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>port thread pool patch to PSI 4.0b4 and include it to avoid hanging     tests     (#471)</li> </ul>"},{"location":"release-notes/#easybuild-v181-october-14th-2013","title":"EasyBuild v1.8.1 (October 14th 2013)","text":"<p>bugfix release</p> <ul> <li>various bug fixes, including:<ul> <li>fix bugs in regtest procedure     (#713)<ul> <li>force 2nd and 3rd attempt of build in case 1st attempt     failed</li> </ul> </li> <li>fix copying of install log to install directory     (#716)</li> <li>only create first source path if multiple paths are specified     (#718)</li> <li>detect failed PBS job submission by checking obtained job ID for     <code>None</code> value     (#713,     #717,     #719,     #720)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>various bug fixes:<ul> <li>fix problems in PSI easyblock causing build to fail     (#270)</li> <li>fix issues with running NWChem test cases, fail early in case     broken symlink is present     (#275)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added additional easyconfigs for various software packages     (#457):<ul> <li>Boost, bzip2, libreadline, ncurses, PSI, Python, zlib</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fix faulty easyconfig file names for HPCBIOS_Math, MUSCLE,     XML-LibXML and YAML-Syck     (#459,     #462)</li> <li>stop (re)specifying default maximum ratio for failed tests in     NWChem easyconfig     (#457)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v180-october-4th-2013","title":"EasyBuild v1.8.0 (October 4th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>add support for using alternative module naming schemes     (#679,     #696,     #705,     #706,     #707)<ul> <li>see     https://github.com/easybuilders/easybuild/wiki/Using-a-custom-module-naming-scheme     for documentation</li> <li>module naming scheme classes that derive from the 'abstract'     <code>ModuleNamingScheme</code> class can be provided to EasyBuild<ul> <li>the Python module providing the class must be available in     the <code>easybuild.tools.module_naming_scheme</code> namespace</li> <li>a function named <code>det_full_module_name</code> must be implemented,     that determines the module name in the form of an string     based on the supplied dictionary(-like) argument</li> </ul> </li> <li>the active module naming scheme is determined by EasyBuild     configuration option <code>--module-naming-scheme</code></li> <li>for now, only the <code>name</code>/<code>version</code>/<code>versionsuffix</code>/<code>toolchain</code>     easyconfig parameters are guaranteed to be provided<ul> <li>consistently providing all easyconfig parameters (i.e., also     for dependencies) requires more work (see     #687)</li> </ul> </li> <li>implementing this involved a number of intrusive changes:<ul> <li>the API of the modules.py module needed to be changed,     breaking backward compatibility<ul> <li>the function for which the signatures were modified are     considered to be internal to the framework, so this     should have very minor impact w.r.t. easyblocks not     included with EasyBuild</li> <li>affected functions include: <code>available</code>, <code>exists</code>,     <code>show</code>, <code>modulefile_path</code>, <code>dependencies_for</code></li> </ul> </li> <li>the format for specifying dependencies was extended, to     allow for specifying a custom toolchain<ul> <li>this allows to fix inaccurate dependency specifications,     for example:     <code>('OpenMPI', '1.6.4-GCC-4.7.2')\" to \"('OpenMPI', '1.6.4', '', ('GCC', '4.7.2'))</code></li> <li>see also     easyconfigs#431</li> </ul> </li> <li>the recommended version for Lmod was bumped to v5.1.5<ul> <li>using earlier 5.x version still works, but may be very     slow when 'available' is used, due to bugs and a     missing feature in Lmod versions prior to v5.1.5 on     which we rely</li> </ul> </li> </ul> </li> </ul> </li> <li>various other enhancements, including:<ul> <li>only (try to) change group id if it is different from what is     wanted     (#685)</li> <li>added toy build unit test     (#688)</li> <li>support for specifying a list of source paths in EasyBuild     configuration     (#690,     #702)</li> <li>add function to determine CPU clock speed in <code>systemtools.py</code>     (#694,     #699)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>avoid importing toolchain modules over and over again to make     toolchain constants available in toolchain module     (#679)</li> <li>only change the group id if current gid is different from what     we want in <code>adjust_permissions</code> function     (#685)</li> <li>restore original environment after running 'module purge'     (#698)<ul> <li>important sidenote: this results in resetting the entire     environment, and has impact on the sanity check step;</li> <li>any environment variables that are set before the     EasyBlock.sanity_check_step method fires, are no longer     there when the sanity check commands are run (cfr.     easyblocks#268)</li> </ul> </li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock: <code>BinariesTarball</code>     (#255)</li> <li>added support for 5 new software packages that require     customized support:<ul> <li>DB     (#226),     FDTD Solutions     (#239),     FoldX     (#256),     Mathematica     (#240),     MUMPS     (#262)</li> </ul> </li> <li>various enhancements, including:<ul> <li>support optionally running configure in generic <code>MakeCp</code>     easyblock     (#252)</li> <li>enhanced Clang easyblock to support building Clang 3.3     (#248)</li> <li>add support for <code>$INTEL_LICENSE_FILE</code> specifying multiple paths     (#251)</li> <li>enhanced ATLAS easyblock to support building ATLAS 3.10.1     (#258)</li> </ul> </li> <li>various bug fixes:<ul> <li>add zlib lib dir in link path dirs for WPS     (#249)</li> <li>stop using deprecated <code>add_module</code> function in imkl easyblock     (#250)</li> <li>fixed PSI easyblock w.r.t. support for building plugins     (#254,     #269)</li> <li>move OS check for Clang to <code>check_readiness_step</code>, to allow a     build job to be submitted from SL5     (#263,     #264)</li> <li>enable verbose build for DOLFIN, to allow for proper debugging     if the build fails     (#265)</li> <li>make sure <code>$LDFLAGS</code> and <code>$INSTANT_*_DIR</code> env vars are set for     DOLFIN sanity check commands     (#268)<ul> <li>this is required after resetting the environment after     running module purge (see framework release notes)</li> </ul> </li> <li>don't try to load module in LAPACK test-only build     (#264,     #266)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 9 new software packages:<ul> <li>BOINC     (#436),     DB     (#343,     #449),     fastahack     (#374),     FDTD Solutions     (#387),     FoldX     (#440,     #442),     Mathematica     (#394),     Mesquite     (#447),     MUMPS     (#447),     ParMGridGen     (#447)</li> </ul> </li> <li>added additional easyconfigs for goalf, gompi, ClangGCC, cgmvapich2,     cgmvolf toolchains     (#350,     #441)</li> <li>added additional easyconfigs for various software packages:<ul> <li>ATLAS, Bison, bzip2, Clang, CMake, cURL, EasyBuild, expat, FFTW,     GDB, gettext, git, HPL, LAPACK, libreadline, M4, METIS,     MVAPICH2, Mercurial, ncurses, OpenBLAS, OpenMPI, ParMETIS,     Python, ScaLAPACK, SCOTCH, Valgrind, zlib</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>fix source URL for lockfile in Python easyconfigs     (#428)</li> <li>correct dependency specifications w.r.t. versionsuffix and     toolchain     (#431)<ul> <li>this is required to support building the affected     easyconfigs with a custom module naming scheme</li> </ul> </li> <li>correct PSI patch file to avoid errors w.r.t. memcpy not being     in scope     (#446)</li> <li>fix gettext build with adding <code>--without-emacs</code> configure     options, add gettext as dependency for a2ps     (#448)</li> <li>exclude EMACS support in a2ps because of build failures     (#452)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v170-september-2nd-2013","title":"EasyBuild v1.7.0 (September 2nd 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>also search for patch files in directory where easyconfig file     is located     (#667)</li> <li>reduce false positives in reporting of possible errors messages     (#669)</li> <li>make module update <code>$ACLOCAL</code> if a share/aclocal subdir is found     (#670)</li> <li>add <code>unwanted_env_vars</code> easyconfig parameter to list environment     variables to unset during install procedure     (#673)</li> <li>add support for updating list easyconfig values (next to string     values)     (#676)</li> <li>add <code>--dry-run</code> command line option which prints installation     overview for specified easyconfig files     (#677)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>ensure that all extensions are listed in <code>$EBEXTSLISTX</code> set by     module, also when using <code>--skip</code>     (#671)</li> <li>report reason for failed sanity check for extensions     (#672,     #678)</li> <li>fix <code>--list-toolchains</code> command line option     (#675)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 3 new software packages that require     customized support:<ul> <li>Libint2     (#236),     Qt     (#210),     Rosetta     (#218)</li> </ul> </li> <li>various enhancements, including:<ul> <li>allow building OpenFOAM without 3rd party tools     (#230)</li> <li>also add sitelib path to <code>$PERL5LIB</code>, refactor code to add     generic <code>get_site_suffix</code> function     (#232,     #233)</li> <li>support building imkl FFT wrappers using MVAPICH2 MPI library     (#234)</li> <li>remove libnpp from CUDA sanity check to support installing CUDA     v5.5     (#238)</li> <li>pick up <code>$INTEL_LICENSE_FILE</code> for Intel tools, if it is set     (#243)<ul> <li>note: gets preference over <code>license_file</code> easyconfig     parameter</li> </ul> </li> </ul> </li> <li>various bug fixes:<ul> <li>call WRF build script with '<code>tcsh &lt;script&gt;</code> to ensure that tcsh     available in <code>$PATH</code> is used     (#231)</li> <li>make sure some environment variables that may disrupt the GCC     install procedure are unset     (#237)<ul> <li>e.g., <code>$CPATH</code>, <code>$C_INCLUDE_PATH</code>, <code>$CPLUS_INCLUDE_PATH</code>,     <code>$OBJC_INCLUDE_PATH</code>, <code>$LIBRARY_PATH</code></li> </ul> </li> <li>code cleanup in GEANT4 easyblock: use <code>self.version</code> (instead of     <code>self.get_installversion()</code>)     (#242)</li> <li>enhance list of <code>noqanda</code> patterns for CUDA, to get less failing     installations     (#244)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 15 new software packages:<ul> <li>Glib     (#294,     #400),     GLPK     (#400),     horton     (#413),     libint2     (#413),     molmod     (#413),     Rosetta     (#336),     SCons     (#336),     Stacks     (#367,     #377),     sympy     (#413),     Qt     (#294),     XML-LibXML     (#397),     XML-Simple     (#397),     yaff     (#413),     YAML-Syck     (#380),     zsh     (#376)</li> </ul> </li> <li>added additional easyconfigs for various software packages:<ul> <li>BLAST, BamTools, BioPerl, Bison, Boost, bzip2, CMake, Cython,     CUDA, FFTW, FIAT, GCC, GMP, gettext, git, h5py, HDF5, libffi,     libreadline, libxc, matplotlib, METIS, ncurses, Oases, Python,     RAxML, ScientificPython, Szip, tcsh, imkl, MVAPICH2, TotalView,     VTune, WRF, zlib</li> </ul> </li> <li>added toolchain easyconfig files for HPCBIOS policies     (#402,     #407)<ul> <li>HPCBIOS_BioInfo, HPCBIOS_Debuggers, HPCBIOS_LifeSciences,     HPCBIOS_Math, HPCBIOS_Profilers</li> </ul> </li> <li>various enhancements, including:<ul> <li>added more XML Perl modules to non-bare Perl easyconfigs     (#375)</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>fix website/description in scipy easyconfigs     (#399)</li> <li>specify OpenMPI libibverbs-dev(el) OS dependency in an     OS-dependent way     (#403)</li> <li>add patch file for M4 to fix building on systems with recent     glibc (&gt;=2.16)     (#406)</li> <li>align moduleclass in R easyconfigs     (#411)</li> <li>fixed filename of Biopython/CD-HIT easyconfig files     (#407)</li> <li>disable parallel building of otcl     (#419)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v160-july-11th-2013","title":"EasyBuild v1.6.0 (July 11th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>added support for using Lmod as module tool     (#645)</li> <li>various other enhancements, including:<ul> <li>allow prepending to/appending to/overwriting list easyconfig     parameters using <code>--try-amend-X</code>     (#658,     #664)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>add salt to temporary log file name     (#656,     #665)</li> <li>fix determining CPU architecture on Raspberry Pi (ARM) systems     (#655,     #662)</li> <li>fix support for determining base path of tarballs containing a     single file     (#660)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 2 new software packages that require     customized support:<ul> <li>BamTools     (#224),     BLAT     (#214)</li> </ul> </li> <li>various enhancements, including:<ul> <li>update impi easyblock to allow installing impi v4.1.1, which     features a slight change in build procedure     (#217)</li> <li>enhance <code>PackedBinary</code> easyblock to copy both files and     directories     (#212)</li> <li>added get <code>sitearch_suffix</code> to Perl search path and use it in     <code>PerlModule</code> easyblock     (#209)</li> </ul> </li> <li>various bug fixes:<ul> <li>make sure EasyBuild configuration is initialized when running     unit tests     (#220)</li> <li>make Boost easyblock pick up configopts easyconfig parameter     (#221)</li> <li>add <code>-DMPICH_IGNORE_CXX_SEEK</code> compiler flag for Mothur when MPI     support is enabled     (#222)</li> <li>fix Boost sanity check, only check for <code>libboost_python.so</code> if     Python module is loaded     (#223)</li> <li>enhance Trinity support w.r.t. jellyfish     (#225,     #227)</li> <li>fix checking for <code>beagle-lib</code> dep (deprecate checking for     BEAGLE) for MrBayes     (#228)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 26 new software packages:<ul> <li>ALLPATHS-LG     (#359),     AutoMake     (#347),     BamTools     (#319,     #338),     BLAT     (#340),     Biopython     (#356),     cairo     (#361),     CCfits     (#327),     CD-HIT     (#344),     CFITSIO     (#327),     Diffutils     (#347),     FASTA     (#358,     #361),     findutils     (#347),     fontconfig     (#361),     gawk     (#347),     gettext     (#361),     GLIMMER     (#357,     #361),     libidn     (#361),     LibTIFF     (#347),     libungif     (#347),     make     (#355),     MUSCLE     (#339),     Oases     (#354),     pixman     (#361),     PLINK     (#352),     RCS     (#347),     SQLite     (#347)</li> </ul> </li> <li>added additional easyconfigs for various software packages:<ul> <li>ant, Bash, Bison, bzip2, cURL, expat, GCC, EasyBuild, freetype,     FFTW, GDB, git, HMMER, JUnit, libreadline, libpng, libtool,     libxml2, libxslt, M4, makedepend, Mothur, MVAPICH2, Mercurial,     ncurses, OpenBLAS, Python, ScaLAPACK, Tcl, tcsh, TopHat,     Trinity, Valgrind, Velvet, VTune, zlib (see     #169,     #297,     #298,     #301,     #309,     #323,     #331,     #332,     #341,     #347,     #349,     #351,     #355,     #361)</li> </ul> </li> <li>various enhancements, including:<ul> <li>added easyconfigs for <code>ictce/5.4.0</code>, <code>ictce/5.5.0</code> and     <code>gmvolf/1.7.12</code> toolchain modules     (#297,     #332,     #349)</li> <li>added a template sanity_check_paths as 'MUST' in TEMPLATE.eb     (#329)</li> <li>introduced biodeps 'toolchain' to ease keeping common     dependencies for bio* software in sync     (#309)</li> <li>added collection of easyconfigs for ictce/5.3.0     (#309,     #323)<ul> <li>bam2fastq, bbFTP, BLAST, Boost, DL_POLY Classic, EMBOSS,     FFTW, libharu, libxml2, libxslt, libyaml, lxml, Mercurial,     Mothur, mpi4py, ncurses, ns, orthomcl, otcl, PAML, Perl,     PyYAML, pandas, problog, scikit-learn, TiCCutils, TiMBL,     TinySVM, TopHat, tclcl, YamCha</li> </ul> </li> <li>added missing dependencies for various software packages     (#323,     #328,     #348,     #361)</li> <li>style fixes in various easyconfigs     (#309,     #323,     #345,     #349,     #355,     #361)</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>added <code>pic</code> toolchain option for Perl goolf easyconfig     (#299)</li> <li>fixed source URLs for R (use correct template     <code>%(version_major)s</code>)     (#302)</li> <li>synced libreadline easyconfigs w.r.t. ncurses dependency     (#303)</li> <li>make sure EasyBuild configuration is initialized when running     unit tests     (#334)</li> <li>specify <code>lowopt</code> (-O1) optimization level for OpenIFS, to avoid     floating-point related issues     (#328)</li> <li>fix naming of 'beagle-lib' (used to be 'BEAGLE'), to avoid     name clashes with other software package(s)     (#346)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v150-june-1st-2013","title":"EasyBuild v1.5.0 (June 1st 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>various enhancements, including:<ul> <li>define <code>SHLIB_EXT</code> constant for shared library extension (<code>.so</code>,     <code>.dylib</code>), deprecate <code>shared_lib_ext</code> global var     (#630)</li> <li>enhance support for sanity checking extensions     (#632,     #649)</li> <li>add support for <code>modextrapaths</code> easyconfig parameter     (#634,     #637)</li> <li>allow <code>source_urls</code> to be templated for extensions     (#639,     #646,     #647)</li> <li>set <code>OMPI_*</code> environment variables for OpenMPI     (#640)</li> <li>make BLACS optional as toolchain element, depending on ScaLAPACK     version     (#638)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fixed <code>--list-toolchains</code>, avoid listing toolchains multiple     times     (#628)</li> <li>fix templating dictionary after parsing easyconfig file     (#633)</li> <li>fix support for ACML as compiler toolchain element     (#632)</li> <li>make unit tests clean up after themselves more thoroughly     (#641,     #642,     #643)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock: <code>MakeCp</code>     (#208)</li> <li>added support for 5 new software packages that require     customized support:<ul> <li>CBLAS     (#192),     FreeSurfer     (#194),     Mothur     (#206),     OpenIFS     (#200),     PSI     (#191)</li> </ul> </li> <li>various enhancements, including:<ul> <li>add support for building ScaLAPACK 2.x on top of QLogic MPI     (#195)</li> <li>support newer BWA versions     (#199)</li> <li>explicitly list license server type in ABAQUS install options,     required for correct installation of v6.12     (#198)</li> <li>update SCOTCH and OpenFOAM easyblock for recent versions     (#201)</li> </ul> </li> <li>various bug fixes:<ul> <li>fix numpy easyblock to get an optimal build (w.r.t. <code>numpy.dot</code>     performance)     (#192)</li> <li>correct build procedure for MUMmer to yield a complete     installation     (#196,     #197)</li> <li>make unit tests clean up after themselves more thoroughly     (#203,     #204)</li> <li>fix getting Perl version for extensions     (#205)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 23 new software packages:<ul> <li>bam2fastq     (#287),     CBLAS     (#263),     EMBOSS     (#265,     #290),     FCM     (#272),     FRC_align     (#273),     freeglut     (#271),     FreeSurfer     (#271),     FSL     (#271),     GATK     (#287),     libharu     (#290),     libxslt     (#235),     MariaDB     (#292),     Mothur     (#265)     mpi4py     (#276),     OpenIFS     (#272),     orthomcl     (#265),     PAML     (#287),     pandas     (#262),     phonopy     (#235),     problog     (#277),     PSI     (#258),     PyYAML     (#235),     RAxML     (#277)</li> </ul> </li> <li>added additional example easyconfig files for:<ul> <li>ABINIT     (#235),     ACML     (#267),     BLAST     (#275),     Boost     (#273),     BWA     (#270),     bzip2     (#263),     Chapel     (#240),     CMake     (#290),     FFTW2     (#247,     #267),     flex     (#267),     freetype     (#235),     grib_api     (#272),     gzip     (#265),     Java     (#279),     libpng     (#240,     #279),     libreadline     (#267),     libxml2     (#235),     libxml     (#235),     matplotlib     (#235),     MCL     (#265),     MUMmer     (#265),     ncurses     (#267),     numpy     (#267),     OpenFOAM     (#267),     Perl     (#265),     Python     (#276,     #263),     R     (#240,     #279),     SCOTCH     (#267),     ScaLAPACK     (#267),     TopHat     (#289),     Valgrind     (#255),     zlib     (#267)</li> </ul> </li> <li>various enhancements, including:<ul> <li>enhance unit test suite, include testing for module conflicts     (#256)     and presence of patch files     (#264)</li> <li>use provided constants and templates in easyconfig files where     appropriate     (#248,     #266,     #281)</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>get rid of hardcoded license_file paths for VTune, Inspector     (#253)</li> <li>assign proper moduleclass where they were missing     (#278)</li> <li>fix naming for LZO     (#280)</li> <li>make unit tests clean up after themselves more thoroughly     (#283,     #284,     #285,     #286)</li> <li>fix TopHat dependencies     (#289)</li> <li>fix source URLs for XML     (#279)</li> <li>fix versions for all listed R extensions     (#279)</li> <li>fix CUDA easyconfig file for use on Debian Squeeze     (#291)</li> <li>correct easyconfig filename and module name mismatches (bbcp,     DL_POLY Classic, ...)     (#295)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v140-may-2nd-2013","title":"EasyBuild v1.4.0 (May 2nd 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>the unit tests for easybuild-framework were moved to test/framework,     to make things consistent with easybuild-easyblocks and     easybuild-easyconfigs     (#611,     #613,     #624)<ul> <li>running the framework unit tests should now be using     <code>python -m test.framework.suite</code></li> </ul> </li> <li>various other enhancements, including:<ul> <li>extend unit test suite     (#593,     #599,     #603,     #618,     #620,     #622,     #624,     ...)</li> <li>extended list of constants and templates that can be used in     easyconfig files     (#566)</li> <li>add support for additional compiler toolchains<ul> <li>CUDA-enabled toolchain: <code>goolfc</code>     (#603,     #624)</li> <li>Clang(+GCC)-based toolchains: <code>cgoolf</code>, <code>cgmpolf</code>, <code>cgmvolf</code>     (#593,     #598,     #600)</li> <li>gmvolf (GCC+MVAPICH2+...)     (#585)</li> </ul> </li> <li>properly decode easyblock to module name using <code>decode_*</code>     functions     (#618)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>fixed default value for <code>--stop</code>     (#601)</li> <li>remove useless <code>sleep()</code> calls in <code>run_cmd</code>, <code>run_cmd_qa</code>     (#599)</li> <li>determine module path based on class name, not software name     (#606)</li> <li>remove unwanted characters in build dirs     (#591,     #607)</li> <li>ignore some error codes spit out by modulecmd that are actually     warnings     (#609)</li> <li>fix <code>agithub.py</code> w.r.t. changes in GitHub API (user-agent string     is now obligatory for non-authenticated connections)     (#617)</li> <li>fix typo breaking the <code>adjust_cmd</code> decorator on SuSE     (#615)</li> <li>fix prepending paths with absolute paths in module file     (#621)</li> <li>clean up open file handles properly     (#620,     #624)</li> <li>fix <code>--search</code> help and implementation     (#622)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added a unit test suite for easyblocks     (#175,     #177,     #178)<ul> <li>every easyblock is parsed and instantiated as a sanity check</li> </ul> </li> <li>added one new generic easyblock: <code>PerlModule</code>     (#183)</li> <li>added support for 8 new software packages that require     customized support:<ul> <li>ABAQUS     (#179),     Bowtie     (#174,     #185,     #186),     Clang     (#151),     DL_POLY Classic     (#118),     ESMF     (#171),     Perl     (#183),     Intel VTune and Intel Inspector     (#180)</li> </ul> </li> <li>the <code>CMakeMake.configure_step</code> parameter <code>builddir</code> was renamed to     <code>srcdir</code>, because the name <code>builddir</code> is incorrect     (#151)<ul> <li><code>builddir</code> will remain supported for legacy purposes up until     v2.0</li> </ul> </li> <li>various enhancements, including:<ul> <li>reverted back to hardcoding Python library path, since it's     hardcoded by setuptools too     (#184)</li> <li>added MPICH support in ScaLAPACK easyblock     (#172)</li> <li>enhanced NCL easyblock: add support UDUNITS and ESMF     dependencies     (#171)</li> <li>enhanced MATLAB easyblock: avoid hardcoding Java options, make     sure <code>$DISPLAY</code> is unset, extend list of sanity check paths     (#181)</li> <li>enhanced TotalView easyblock: add support for license file     (#146)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added a unit test suite for easyconfigs     (#228,     #230)</li> <li>added example easyconfig files for 20 new software packages:<ul> <li>ABAQUS     (#231),     BioPerl     (#242),     Bowtie     (#227),     Clang     (#177),     CRF++     (#131),     DL_POLY Classic     (#132),     ESMF, GROMACS     (#165),     HH-suite     (#219),     Inspector     (#232),     likwid     (#131),     Perl     (#242),     scikit     (#133),     TiCCutils     (#131),     TiMBL     (#131),     TinySVM     (#131),     UDUNITS     (#167),     VTune     (#232),     YamCha     (#131)</li> </ul> </li> <li>add example easyconfigs for new compiler toolchains (use     <code>eb --list-toolchains</code> for a full list of supported toolchains):<ul> <li>the newly added toolchains only differ in compilers/MPI library,     and all feature OpenBLAS, LAPACK, ScaLAPACK and FFTW</li> <li>goolfc: GCC, CUDA (co-compiler), OpenMPI     (#191)<ul> <li>a goolfc easyconfig for GROMACS is included as     proof-of-concept     (#165)</li> </ul> </li> <li>cgmpolf: Clang (C/C++ compilers), GCC (Fortran compilers),     MPICH     (#213)</li> <li>cgmvolf: Clang, GCC, MVAPICH2     (#218)</li> <li>cgoolf: Clang, GCC, OpenMPI     (#213)</li> <li>gmvolf: GCC, MVAPICH     (#202,     #222)</li> </ul> </li> <li>ported already available easyconfigs to new compiler toolchains:<ul> <li>ictce-5.3.0: 193 easyconfigs     (#229)</li> <li>cgmpolf: 11 easyconfigs     (#213)</li> <li>cgmvolf: 11 easyconfigs     (#218)</li> <li>cgoolf: 12 easyconfigs     (#213)</li> <li>gmvolf: 10 easyconfigs     (#215)</li> </ul> </li> <li>added additional example easyconfig files for:<ul> <li>CMake     (#163),     git     (#210),     Java     (#206),     #221,     Mercurial     (#201,     #215),     ncurses     (#225),     TotalView     (#160)</li> </ul> </li> <li>various enhancements, including:<ul> <li>added ESMF and UDUNITS dependencies to NCL easyconfigs     (#211)</li> <li>changed value of source_urls in R easyconfigs, to be generic     enough for version 3.0 and possibly beyond     (#251)</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>add <code>--enable-mpirun-prefix-by-default</code> configure option for all     OpenMPI easyconfigs     (#205)</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v130-april-1st-2013","title":"EasyBuild v1.3.0 (April 1st 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>added script to bootstrap EasyBuild with EasyBuild, see     https://github.com/easybuilders/easybuild/wiki/Bootstrapping-EasyBuild     (#531)</li> <li>reorganize framework/easyconfig.py module into framework/easyconfig     package with modules     (#574,     #580)</li> <li>support EasyBuild configuration via command line, environment     variables and configuration files     (#529,     #552,     #556,     #558,     #559)</li> <li>various other enhancements, including:<ul> <li>extended set of unit tests for eb command line options and     EasyBuild configuration     (#517,     #556,     #559,     #571)</li> <li>made <code>--search</code> also useful when easybuild-easyconfigs package     is not installed     (#524)</li> <li>extended set of default module classes     (#525)</li> <li>add support for license easyconfig parameter (which will be     mandatory in v2.x)     (#526,     #569)</li> <li>added <code>setup.cfg</code> for <code>setup.py</code> to allow creating RPMs     (#528)</li> <li>added support for obtaining system information, see <code>get_os_*</code>     functions in <code>easybuild/tools/systemtools.py</code>     (#543,     #546,     #547)</li> <li>added support for iterated builds that require cycling over     multiple sets of configure/build/install options, e.g. FFTW     (#549)</li> <li>added support for OpenBLAS as toolchain lib for linear algebra     (#537,     #565)</li> <li>added support for tweaking prefix and separator for library     toolchain variables (<code>LIB*</code>)     (#572,     #576)</li> <li>skip already built modules in regression testing mode, to ease     regression testing     (#582)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>added <code>zip_safe</code> flag to <code>setup.py</code>, to silence multitude of     warnings     (#521)</li> <li>only define <code>LIBFFT</code> for Intel MKL if FFTW interface libraries     are available     (#518,     #567,     #579)</li> <li>set POSIX group early in build process, make EasyBuild aware of     consistent chmod/chown failures     (#527)</li> <li>properly order the name/version keys for the toolchain     easyconfig parameter when using <code>--try-toolchain</code>     (#563)</li> <li>take the <code>skipsteps</code> easyconfig parameter into account in     regression testing mode as well     (#583)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added support for 2 new software packages that require     customized support:<ul> <li>CUDA     (#145),     Ferret     (#160,     #163)</li> </ul> </li> <li>remove <code>license</code> easyconfig parameter from <code>IntelBase</code>, since it     clashes with generic <code>license</code> parameter     (#153,     #158)<ul> <li><code>license_file</code> should be used instead (see     framework#569)</li> <li>using <code>license</code> instead of <code>license_file</code> will be supported     until v2.x for legacy purposes</li> </ul> </li> <li>various enhancements, including:<ul> <li>stop hardcoding Python site-packages library dir, obtain it via     <code>distutils.sysconfig</code> instead     (#141,     #156,     #159,     #161)</li> <li>stop hardcoding list of libraries for BLAS libs, ask toolchain     modules or use <code>$LIBBLAS</code> instead     (#150,     #155)</li> <li>enhanced CP2K easyblock, following Intel guidelines for <code>ictce</code>     builds     (#138)</li> <li>added <code>setup.cfg</code> for <code>setup.py</code> to allow creating RPMs     (#140)</li> <li>clean up specifying BLAS/LAPACK libs for building numpy, check     whether requires patch is being used for IMKL builds     (#155,     #161)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>added <code>zip_safe</code> flag to <code>setup.py</code>, to silence multitude of     warnings     (#135)</li> <li>install EasyBuild packages in reversed order to avoid funky     setuptools issues     (#139)</li> <li>fixed a typo in the ScaLAPACK easyblock, and set CCFLAGS and     FCFLAGS for v2.x     (#149,     #162)</li> <li>fix sanity check for python-meep     (#159)</li> <li>exclude Python tests from DOLFIN sanity check, since they hang     sometimes     (#161)</li> <li>add support in ALADIN easyblock for answering question on     location of <code>libgrib_api.a</code>     (#165)</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 13 new software packages:<ul> <li>Bash, CUDA, ccache, Ferret, gzip, libxc, ns, numactl, OpenBLAS,     otcl, Tar, tclcl, tcsh</li> <li>several of these easyconfig files were contributed by attendees     of the EasyBuild hackathon in Cyprus!</li> </ul> </li> <li>added example easyconfigs for goolf toolchain     (#158)</li> <li>added example easyconfigs for builds with goolf toolchain, i.e. for     all goalf easyconfigs     (#189)<ul> <li>for several software packages, a patch file was needed to get     them to build with GCC 4.7:<ul> <li>AMOS, BEAGLE, Cufflinks, DOLFIN, GATE, ns, Pasha, Trilinos,     Trinity</li> </ul> </li> <li>for PETSc, a patch file was required to make it build with a     toolchain that doesn't include BLACS</li> </ul> </li> <li>added additional example easyconfig files for:<ul> <li>gompi, hwloc, LAPACK, MVAPICH2, OpenMPI, ScaLAPACK</li> </ul> </li> <li>various enhancements, including:<ul> <li>define a proper module class in all easyconfigs,     cfr. default module classes defined in framework     (#150,     #159,     #161,     #162,     #179,     #181)</li> <li>extend FFTW easyconfig to 'fat' builds that include single,     double, long double and quad precision libraries in the same     module<ul> <li>quad precision is disabled for Intel compiler based builds     (it requires GCC v4.6+)</li> </ul> </li> <li>the imkl easyconfigs used for the ictce 3.2.2.u3 toolchain now     also enable FFTW interfaces</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>fix filename for Mercurial and ROOT easyconfig files</li> <li>fix homepage/description for Hypre</li> <li>fix enabling OpenMP support in OpenMPI: use <code>--enable-openmp</code>,     not <code>--with-openmp</code></li> <li>use correct configure flag for enabling OpenMPI threading     support in v1.6     (#186)<ul> <li><code>--enable-mpi-thread-multiple</code> instead of     <code>--enable-mpi-threads</code></li> </ul> </li> <li>explicitly add <code>--without-openib --without-udapl</code> configure     options in OpenMPI easyconfig using versionsuffix <code>-no-OFED</code>     (#168)<ul> <li>this avoids that OpenMPI auto-detects that it can enable     Infiniband (OpenIB) support, which doesn't fit the -no-OFED     versionsuffix</li> <li>Note: this makes goalf-1.1.0-no-OFED effectively not     suitable to produce software builds that are IB-capable!</li> </ul> </li> <li>remove explicit <code>--with-udapl</code> from OpenMPI easyconfigs, does     more harm than good     (#178)</li> <li>remove libibvers, libibmad, libibumad as explicit dependencies     for OpenMPI/MVAPICH2     (#173,     #182)<ul> <li>leave it up to the OS to provide these, since the required     version is too much tied to the version of IB drivers</li> </ul> </li> <li>use <code>license_file</code> in Intel tools easyconfigs, as opposed to the     new generic <code>license</code> parameter with a different meaning     (#180)</li> <li>modify patch for impi to avoid installation problems due to     hardcoded path in /tmp     (#185)<ul> <li>now uses <code>$USER-$RANDOM</code> subdir to avoid clashes between     different users on the same system</li> </ul> </li> <li>the patch file for numpy was extended to also supporting ATLAS     and other BLAS libraries spread across multiple directories<ul> <li>the extension for ATLAS is required because we now no longer     rely on the automatic numpy mechanism to find the ATLAS libs</li> </ul> </li> <li>fixed dependencies:<ul> <li>libibumad as dependency for libibmad</li> <li>ncurses as dependency for libreadline</li> <li>ncurses and zlib as dependency for SAMtools (+ enhanced     patch)</li> <li>remove explicit FFTW dependency for Meep, ... since     toolchain already provided FFTW</li> </ul> </li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v120-february-28th-2013","title":"EasyBuild v1.2.0 (February 28th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>new backend module for option parsing: generaloption</li> <li>support for using constants and string templates in easyconfig files<ul> <li>currently disabled for <code>exts_filter</code> and <code>exts_list</code> easyconfig     parameters, for backward compatibility</li> </ul> </li> <li>various other enhancements, including:<ul> <li>support for iqacml and iiqmpi toolchains (Intel compilers +     QLogic MPI based)</li> <li>clearer errors messages when sanity check failed</li> <li>unit tests for (about half of) the <code>eb</code> command line options</li> <li>support for specifying build/install steps to skip in easyconfig     file (<code>skipsteps</code>)</li> <li>support for allowing certain dependencies to be resolved by the     system instead of modules (<code>allow_system_deps</code>)</li> <li>cache ppn value required by regtest, clean up temporary files     let behind by <code>--regtest</code>/<code>--job</code></li> <li>make sure MPD is used as process manager for Intel MPI (required     for impi v4.1 and later)</li> <li>rename template names <code>name</code> and <code>version</code> used in exts_filter     to <code>ext_name</code>, <code>ext_version</code><ul> <li><code>name</code> and <code>version</code> are still supported for legacy reasons</li> </ul> </li> <li>cleaned up module docstrings w.r.t. list of authors</li> </ul> </li> <li>various bug fixes, including:<ul> <li>print correct (lowercase) toolchain names with     <code>--list-toolchains</code></li> <li>correct easyconfig parameter name <code>license_server_port</code></li> <li>fix string quoting in develop modules</li> <li>ensure <code>modulecmd</code> is run with original <code>$LD_LIBRARY_PATH</code> value<ul> <li>to avoid breaking <code>modulecmd</code>, see     https://bugzilla.redhat.com/show_bug.cgi?id=719785</li> </ul> </li> <li>remove use of hardcoded files/dirs in unit tests</li> <li>fix various inconsistencies w.r.t. paths considered with     <code>--robot</code></li> <li>various cleanup and fixes w.r.t. logging<ul> <li>use correct logger instance in main script</li> <li>stop passing logger instances around</li> <li>make module logging variables private</li> </ul> </li> <li>get rid of <code>ModuleGenerator</code> deconstructor, clean up via     <code>EasyBlock.clean_up_fake_module</code></li> <li>fix disabling of <code>optarch</code> toolchain option (and extend unit     tests to check on this)</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added one new generic easyblock: <code>Rpm</code></li> <li>added support for 6 new software packages that require     customized support:<ul> <li>EasyBuild, EPD (Enthought Python Distribution), freetype,     MATLAB, QLogic MPI (RPM), TotalView</li> <li>support for installing EasyBuild with EasyBuild enables     bootstrapping an EasyBuild installation!</li> </ul> </li> <li>various enhancements, including:<ul> <li>corrections in WRF/WPS to also enable building with iqacml     toolchain<ul> <li>use <code>mpi_cmd_for</code> instead of hardcoding test commands, using     correct Fortran compilers (F90)</li> </ul> </li> <li>fix NCL easyblock to also support v6.1.x<ul> <li>use correct Fortran compiler (F90), set correct lib/include     paths for dependencies (netCDF-Fortran, GDAL)</li> </ul> </li> <li>cleanup sweep of license headers and authors list in easyblock     module docstrings</li> <li>use new <code>ext_name</code> template name in <code>exts_filter</code> in Python and     R easyblocks</li> </ul> </li> <li>various bug fixes, including:<ul> <li>general code cleanup<ul> <li>don't set <code>sanityCheckOK</code> in <code>Toolchain</code> easyblock</li> <li>get rid of using <code>os.putenv</code></li> </ul> </li> <li>NEURON easyblock: don't hardcode number of processes used in     test cases</li> <li>make sure <code>easybuild.easyblocks.generic</code> namespace is extendable</li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 41 new software packages:<ul> <li>a2ps, AnalyzeFMRI, aria, bbcp, bbFTP, bbftpPRO, binutils,     Bonnie++, ccache, cflow, cgdb, Corkscrew, EasyBuild, Elinks,     EPD, FLUENT, fmri, GDB, GDAL, gnuplot, gnutls, gperf, Iperf,     lftp, libyaml, lzo, MATLAB, mc, nano, NASM, nettle, numexpr,     parallel, pyTables, QLogic MPI, Stow, TotalView, Valgrind, VTK,     Yasm, zsync</li> </ul> </li> <li>added example easyconfigs for iqacml and iiqmpi toolchains</li> <li>added additional example easyconfig files for:<ul> <li>ABINIT, ABySS, ACML, BFAST, Bison, BLACS, Cython, cURL, Doxygen,     FFTW, flex, g2clib, g2lib, GHC, h5py, HDF, HDF5, HMMER, JasPer,     icc, ictce, ifort, imkl, impi, libpng, libreadline, M4,     matplotlib, MCL, MEME, mpiBLAST, NCL, ncurses, netCDF,     netCDF-Fortran, NWChem, R, ScaLAPACK, Tcl, Tk, WPS, WRF, zlib</li> </ul> </li> <li>various enhancements, including:<ul> <li>fix version of xtable R library in list of extensions for R, to     avoid installation failures</li> </ul> </li> <li>various 'bug' fixes, including:<ul> <li>fix toolchain and file names for ABINIT easyconfigs</li> <li>fix sanity check paths for cURL</li> <li>don't disable <code>optarch</code> for WRF, it's not needed (only disable     heavy optimizations is required)</li> <li>fix homepage/description for ALADIN</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v110-january-27th-2013","title":"EasyBuild v1.1.0 (January 27th 2013)","text":"<p>feature + bugfix release</p> <p>framework</p> <ul> <li>improvements w.r.t. support for software extensions (tested on     Python and R, see easyblocks package)<ul> <li>cleaned up support for building/installing extensions</li> <li>define <code>ExtensionEasyblock</code> class that implements support for     installing extensions as stand-alone module as well</li> <li>return to build dir before building/installing each extension</li> <li>define <code>EBEXTSLIST&lt;NAME&gt;</code> environment variable in module if     <code>exts_list</code> was defined</li> <li>make sure sanity check for extensions results in an error if it     fails</li> </ul> </li> <li>various enhancements, including:<ul> <li>log both framework and easyblocks versions</li> <li>add support for <code>gimkl</code>, <code>gmacml</code>, <code>iccifort</code>, <code>iomkl</code> and     <code>ismkl</code> toolchains</li> <li>define <code>*_SEQ compiler</code> variables for sequential compilers</li> <li>add <code>--list-toolchains</code> command line option for listing     supported toolchains</li> <li>add support for customizing software and modules install path     suffixes</li> <li>support both setuptools and distutils installation methods for     finding installed easyconfigs</li> <li>also consider robot path in list of paths searched for patch     files</li> <li>allow skipping of default extension sanity check (by setting     <code>modulename</code> to False in options)</li> </ul> </li> <li>various bug fixes, including:<ul> <li>typos in toolchain Python modules w.r.t. <code>imkl</code> support,     handling of <code>i8</code>/<code>optarch</code>/<code>unroll</code> options</li> <li>purge before loading 'fake' module, unload 'fake' module     before removing it, use original <code>$MODULEPATH</code></li> <li>restore environment after unloading fake module, set variables     that were incorrectly unset, i.e., that were defined before as     well</li> <li>unset <code>$TMPDIR</code> for builds submitted as jobs (required by     <code>IntelBase</code> easyblock)</li> <li>correctly track easyconfig parse error</li> <li>always run all jobs in regtest, also if dependency jobs failed</li> <li>cosmetic adjustments to default EasyBuild configuration file to     avoid confusion between e.g. <code>build_dir</code> and <code>build_path</code> (only     latter matters)</li> <li>fix SuSe hack, only prefix command with sourcing of     <code>/etc/profile.d/modules.sh</code> if it is there</li> <li>leave build directory before it is removed during cleanup step</li> <li>load generated module file before running test cases</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>added 3 new generic easyblocks:     <code>CMakePythonPackage</code>, <code>JAR</code>, <code>RPackage</code></li> <li>added support for 23 new software packages that require     customized support:<ul> <li>ACML, ALADIN, ant, Bioconductor (R packages), Chapel, Cufflinks,     ESPResSo, FLUENT, Geant4, GHC, Java, NEURON, NWChem, PyZMQ,     QuantumESPRESSO, R, Rmpi, ROOT, Rserve, SCOOP, Trinity,     VSC-tools, XML</li> </ul> </li> <li>various enhancements, including:<ul> <li>clean up of <code>python.py</code> easyblock:<ul> <li>merge <code>EB_DefaultPythonPackage</code> and <code>PythonPackage</code>     easyblocks into generic easyblock <code>PythonPackage</code>, which derives from <code>ExtensionEasyblock</code></li> <li>move <code>EB_FortranPythonPackage</code> into dedicated     generic <code>FortranPythonPackage</code> easyblock     module</li> <li>split off support for building/installing <code>nose</code>, <code>numpy</code>,     <code>scipy</code> into dedicated <code>EB_*</code> easyblock modules, which     allows them to be built as stand-alone modules as well</li> </ul> </li> <li>clean up testing of Python packages (<code>PythonPackage</code> easyblock)</li> <li>make sure there is no <code>site.cfg</code> in home dir when building     Python packages, because e.g. <code>scipy</code> will pick it up</li> <li>added support for building Intel MKL wrappers with OpenMPI     toolchain</li> <li>cleaning up of fake module that was loaded for running tests</li> <li>move calls to functions that rely on environment up in the chain     of steps (mostly for cleanup reasons)</li> <li>use better module name for UFC sanity check, minor change to     sanity check paths for UFC</li> </ul> </li> <li>various bug fixes, including:<ul> <li>only call <code>make ptcheck</code> for ATLAS when multi-threading support     is enabled</li> <li>use a symbolic link for $HOME/intel instead of a randomly     suffixed subdirectory in home and patching of Intel install     scripts<ul> <li>latter does not work anymore with recent versions of Intel     tools (2013.x)</li> </ul> </li> </ul> </li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 48 new software packages:<ul> <li>ABINIT, ABySS, ACML, ALADIN, ant, BFAST, BLAST, Chapel, CLHEP,     Cufflinks, ESPRresSo, GATE, GHC, Geant4, Greenlet,     google-sparsehash, grib_api, HMMER, Java, JUnit, libibmad,     libibumad, libibverbs, MCL, MDP, MEME, mpiBLAST, NCBI Toolkit,     NEURON, NWChem, numpy, MDP, Oger, OpenPGM, paycheck, PyZMQ,     QuantumESPRESSO, R, ROOT, SCOOP, scipy, Tophat, Trinity,     util-linux, VSC-tools, wiki2beamer, XML, ZeroMQ</li> </ul> </li> <li>added example easyconfigs for gmacml, gmvapich2, iccifort, ictce,     iomkl toolchains</li> <li>added additional example easyconfig files for:<ul> <li>ATLAS, BLACS, Boost, Bowtie2, bzip2, CP2K, Doxygen, FFTW, GCC,     HDF5, hwloc, icc, ifort, imkl, impi, JasPer, Libint,     libreadline, libsmm, libxml, ncurses, netCDF, M4, Meep,     MVAPICH2, OpenMPI, Python, ScaLAPACK, Szip, zlib</li> </ul> </li> <li>various enhancements, including:<ul> <li>major style cleanup of all example easyconfig file (PEP008     compliance)</li> <li>added setuptools to list of Python extensions</li> <li>get rid of <code>parallel</code> versionsuffix for HDF5, as its meaningless     (MPI-enabled build is always parallel)</li> </ul> </li> <li>various 'bug' fixes, i.e. added missing dependencies or replaced     OS dependencies with proper dependencies</li> </ul>"},{"location":"release-notes/#easybuild-v102-december-8th-2012","title":"EasyBuild v1.0.2 (December 8th 2012)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>properly catch failing sanity check commands</li> <li>fix bug in toolchain support which cause linking environment     variables set by toolchain to include too many libraries<ul> <li>elements in toolchain variables were being passed by reference     instead of by value</li> </ul> </li> <li>fix selecting a compiler toolchain for a specified software package     (<code>--software-name</code>) if only a template is a viable option</li> <li>fix passing command line parameters with <code>--job</code></li> <li>fix list of valid stops (<code>-s</code>/<code>--stop</code>)</li> <li>fix minor issues in help messages (<code>-h</code>/<code>--help</code>)</li> </ul> <p>easyblocks</p> <ul> <li>fix typos in WIEN2k easyblock (missing commas after list elements)</li> </ul> <p>easyconfigs</p> <ul> <li>fixed source URL for ligtextutils (toolchain refactoring error)</li> </ul>"},{"location":"release-notes/#easybuild-v101-november-24th-2012","title":"EasyBuild v1.0.1 (November 24th 2012)","text":"<p>bugfix release</p> <p>framework</p> <ul> <li>fix support for installing with <code>distutils</code> (broken import in     <code>setup.py</code>)</li> <li>fix support for ACML as a toolchain element     (<code>toolchains/linalg/acml.py</code>)</li> <li>add name to aggregated regtest XML so that is parsed correctly by     Jenkins</li> <li>reorder code in <code>main.py</code> so that regtest also works with incomplete     easyconfig paths</li> <li>add bash script for running regression test and sending a trigger to     Jenkins to pull in the XML with results</li> <li>get rid of assumption that loaded modules should have name like     <code>foo/bar</code>, make it more flexible</li> <li>retry failed builds in regtest twice to ignore fluke errors</li> <li>report leaf nodes in dependency graph when regtest is submitted<ul> <li>this is required for setting job dependencies in the regtest     script for the Jenkins trigger job</li> </ul> </li> <li>implement and use rmtree2 as more (NFS) robust replacement for     <code>shutil.rmtree</code></li> <li>bump max hit count for <code>run_cmd_qa</code> from 20 to 50, to make false     positives of unasnwered questions less likely</li> </ul> <p>easyblocks</p> <ul> <li>fix support for installing with <code>distutils</code> (broken import in     <code>setup.py</code>)</li> <li>only build GMP/CLooG/PPL libraries during GCC build in parallel,     don't install in parallel<ul> <li><code>make -j N install</code> doesn't work consistently for GMP</li> </ul> </li> <li>fix GCC build on OS X<ul> <li>location of libraries is slightly different (<code>lib</code> vs <code>lib64</code>     dir)</li> </ul> </li> <li>add support to <code>ConfigureMake</code> easyblock for pre-passing tar options     to configure<ul> <li>see <code>tar_config_opts</code> easyconfig parameter</li> <li>workaround for issue with pax hanging <code>configure</code> with an     interactive prompt</li> </ul> </li> <li>enhance Q&amp;A for WRF and WIEN2k by adding entries to <code>qa</code> dict and     <code>no_qa</code> list</li> <li>use <code>rmtree2</code> from <code>tools/filetools.py</code> as more (NFS) robust     replacement for <code>shutil.rmtree</code></li> </ul> <p>easyconfigs</p> <ul> <li>remove patch file for OpenMPI to resolve issue with pax hanging     configure<ul> <li><code>tar_config_opts</code> should be enabled as needed</li> </ul> </li> <li>disable parallel build for PAPI, seems to be causing problems</li> </ul>"},{"location":"release-notes/#easybuild-v10-november-13th-2012","title":"EasyBuild v1.0 (November 13th 2012)","text":"<ul> <li>split up EasyBuild across three repositories: framework, easyblocks     and easyconfigs</li> <li>packaged EasyBuild, different parts can now be installed easily     using <code>easy_install</code></li> </ul> <p>framework</p> <ul> <li>various changes to both internal and external API:<ul> <li>renamed main script to main.py (from <code>build.py</code>)</li> <li>file and directory organisation</li> <li>module, class, function and function argument renaming and     reorganisation</li> <li>split up <code>Application</code> into <code>EasyBlock</code> and <code>ConfigureMake</code> (see     easybuild-easyblocks for the latter)</li> <li>created <code>EasyConfig</code> class for handling easyconfig files</li> <li>renaming of EasyBuild configuration parameters (non-camelCase)</li> <li>renaming of various easyconfig parameters (non-camelCase)</li> <li>rename <code>SOFTROOT</code> and <code>SOFTVERSION</code> environment variables set in     generated module files to <code>EBROOT</code> and <code>EBVERSION</code></li> <li>use 'extension' as generic terminology for Python packages, R     libraries, Perl modules, ...</li> </ul> </li> <li>added support for building software packages in parallel via PBS     jobs</li> <li>added unit testing framework and initial set of unit tests for basic     functionality<ul> <li>and run them in Jenkins continuous integration service, see     https://jenkins1.ugent.be/view/EasyBuild/</li> </ul> </li> <li>implement single-command regression test (e.g. to test building all     supported software)<ul> <li>eb <code>--regtest</code> --robot</li> </ul> </li> <li>switch to new style Python classes</li> <li>replaced <code>toolkit</code> module with <code>toolchain</code> package (total rewrite),     providing modular support for toolchains</li> <li>adjust default EasyBuild configuration to only use     <code>$HOME/.local/easybuild</code> by default</li> <li>added support for running EasyBuild without supplying an easyconfig     file<ul> <li>make EasyBuild search for a matching easyconfig file</li> <li>support automatic rewriting of an existing partially-matching     easyconfig file (use this with care!)</li> <li>support for automatically generating an easyconfig file     according to given specifications (best effort!)</li> </ul> </li> <li>add support for looking for easyconfig file in Python search path if     it can't be found on specified (relative) path (that way,     easyconfig files available in the easybuild-easyconfigs package can     be used easily)</li> <li>various other enhancements and bug fixes, e.g.:<ul> <li>extended sanity check capabilities</li> <li>cleaned up logging</li> <li>creating of devel module which allows to mimic environment that     was used by EasyBuild to build the software</li> <li>support for creating dependency graphs for a set of easyconfig     files</li> <li>grouped options in help output and categorised available     easyconfig parameters</li> <li>more consistent code style</li> </ul> </li> </ul> <p>easyblocks</p> <ul> <li>implement class name encoding scheme, see wiki     https://github.com/easybuilders/easybuild/wiki/Encode-class-names<ul> <li>(non-generic) easyblock class names are now prefixed with <code>EB_</code>     and non-alphanumeric characters are escaped</li> </ul> </li> <li>split off generic easyblocks into separate package     <code>easyblocks.generic</code></li> <li>added custom support for 39 software packages:<ul> <li>Armadillo, BiSearch, Boost, Bowtie2, BWA, bzip2, CGAL, CPLEX,     DOLFIN, Eigen, flex, FSL, Hypre, libxml2, MetaVelvet, METIS,     MTL4, MUMmer, ncurses, OpenFOAM, OpenSSL, ParMETIS, Pasha,     PETSc, Primer3, python-meep, SAMtools, SCOTCH, SHRiMP, SLEPc,     SOAPdenovo, SuiteSparse, SWIG, Tornado, Trilinos, UFC, Velvet,     WIEN2k, XCrySDen</li> </ul> </li> <li>various enhancements and bug fixes to existing easyblocks</li> </ul> <p>easyconfigs</p> <ul> <li>added example easyconfig files for 106 new software packages:<ul> <li>AMOS, Armadillo, ASE, Autoconf, BiSearch, Boost, Bowtie2, BWA,     byacc, bzip2, CGAL, ClustalW2, CMake, CPLEX, cURL, CVXOPT,     Cython, Docutils, DOLFIN, ECore, Eigen, expat, FASTX-Toolkit,     FFC, FIAT, freetype, FSL, GEOS, git, glproto, GMP, gmvapich2,     gompi, GPAW, GSL, guile, h5py, h5utils, Harminv, hwloc, Hypre,     Infernal, Instant, Jinja2, libctl, libdrm, libffi,     libgtextutils, libmatheval, libpciaccess, libpthread-stubs,     libreadline, libtool, libunistring, libxcb, libxml2, makedepend,     matplotlib, Meep, Mercurial, Mesa, MetaVelvet, METIS, MPFR,     MTL4, MUMmer, ncurses, OpenFOAM, OpenSSL, ORCA, PAPI, ParMETIS,     Pasha, PCRE, PETSc, petsc4py, pkg-config, Primer3, python-meep,     RNAz, SAMtools, ScientificPython, SCOTCH, setuptools, Shapely,     SHRiMP, SLEPc, SOAPdenovo, Sphinx, SuiteSparse, SWIG, Tcl,     Theano, Tk, Tornado, Trilinos, UFC, UFL, Velvet, ViennaRNA,     Viper, WIEN2k, xcb-proto, XCrySDen, xorg-macros, xproto</li> </ul> </li> <li>added additional example easyconfig files (versions, builds) for     several software packages<ul> <li>Bison, BLACS, Doxygen, flex, GCC, HDF5, icc, ifort, libpng, M4,     MVAPICH2, OpenMPI, Szip, tbb, zlib</li> </ul> </li> <li>replaced GCC/OpenMPI based easyconfig files with equivalents using     the gompi toolchain<ul> <li>ATLAS, BLACS, FFTW, LAPACK, ScaLAPACK</li> </ul> </li> <li>enhanced Python example easyconfig files (more dependencies required     for features, e.g. libreadline, bzip2, zlib, ...)</li> <li>corrected file name of easyconfig files to adher to standard as     followed by EasyBuild robot dependency resolver</li> <li>style cleanup in existing easyconfig files</li> </ul>"},{"location":"release-notes/#easybuild-v08-june-29th-2012","title":"EasyBuild v0.8 (June 29th 2012)","text":"<ul> <li>added support for building/installing 17 additional software     packages:<ul> <li>BEAGLE, Doxygen, g2clib, g2lib, HDF, HDF5, JasPer, libpng,     Maple, MrBayes, NCL, netCDF, netCDF-Fortran, Szip, WPS, WRF,     zlib</li> </ul> </li> <li>the build procedure for WRF and WPS includes running the tests     available for these packages</li> <li>various bug fixes and enhancements:<ul> <li>made support for interactive installers (<code>run_cmd_qa</code>) more     robust</li> <li>fixed Python git package check</li> <li>implemented toolkit functions for determine compiler family, MPI     type, MPI run command, ...</li> </ul> </li> </ul>"},{"location":"release-notes/#easybuild-v07-june-18th-2012","title":"EasyBuild v0.7 (June 18th 2012)","text":"<ul> <li>fixed BLACS build<ul> <li>diagnostic tools to determine <code>INTERFACE</code> and <code>TRANSCOMM</code> values     are now used</li> </ul> </li> <li>added support for building Bison, CP2K, flex<ul> <li>with regression test enabled for CP2K as part of build process</li> <li>note: BLACS built with EasyBuild prior to v0.7 needs to be     rebuilt for CP2K to work correctly</li> </ul> </li> <li>added <code>--enable-mpi-threads</code> to OpenMPI example easyconfigs<ul> <li>required for correct CP2K psmp build</li> </ul> </li> <li>adjusted libsmm example easyconfig for lower build time<ul> <li>to make the full regression test finish in a reasonable amount     of time</li> </ul> </li> <li>added script to make porting of easyblocks from old to new EasyBuild     codebase easier<ul> <li>takes care of refactoring, checks for PyLint warnings/errors,     ...</li> </ul> </li> <li>fixed several small bugs</li> <li>prefixed EasyBuild messages with <code>==</code></li> <li>full regression test passed (58 easyconfigs tested)</li> </ul>"},{"location":"release-notes/#easybuild-v06-may-11th-2012","title":"EasyBuild v0.6 (May 11th 2012)","text":"<ul> <li>added support for Intel compiler toolkit (ictce)<ul> <li>which included the Intel compilers, Intel Math Kernel Library     (imkl) and Intel MPI library (impi)</li> </ul> </li> <li>added support for building Python with nose/numpy/scipy packages</li> <li>added simple regression test</li> <li>this version is able to build all supplied example easyconfigs</li> </ul>"},{"location":"release-notes/#easybuild-v05-april-6th-2012","title":"EasyBuild v0.5 (April 6th 2012)","text":"<ul> <li>first public release of EasyBuild<ul> <li>after a thorough cleanup of the EasyBuild framework of the     in-house version</li> </ul> </li> <li>supports building HPL with goalf compiler toolkit<ul> <li>the goalf toolkit consists of the GCC compilers, and the     OpenMPI, ATLAS, LAPACK, FFTW and ScaLAPACK libraries</li> </ul> </li> <li>also support build and installation of MVAPICH2</li> </ul>"},{"location":"removed-functionality/","title":"Removed functionality","text":"<p>Some of the functionality that was available in previous EasyBuild versions is now removed, after it was deprecated first in an earlier EasyBuild version (see Deprecation policy).</p>"},{"location":"removed-functionality/#overview_removed_40","title":"Overview of removed functionality since EasyBuild v4.0","text":"<p>In EasyBuild v4.0, some intrusive changes were made that break backward compatibility with earlier versions.</p>  <p>Note</p> <p>In addition, please take into account the additional changes in EasyBuild v4.0, which are documented here.</p>  <p>For authors of easyconfig files:</p> <ul> <li><code>use_fma</code> custom easyconfig parameter for FFTW</li> <li>Specifying source files as 2-element tuples to provide a custom extraction command</li> <li><code>use_easy_install</code> and <code>use_setup_py_develop</code> custom easyconfig parameters for <code>PythonPackage</code> easyblock</li> </ul> <p>For developers of easyblocks:</p> <ul> <li><code>copytree</code> function</li> <li><code>skip_symlinks</code> named argument for <code>adjust_permissions</code></li> </ul> <p>For EasyBuild framework developers:</p> <ul> <li><code>default_fallback</code> named argument for <code>get_easyblock_class</code></li> <li><code>add_dependencies</code> method in <code>Toolchain</code> class</li> </ul>"},{"location":"removed-functionality/#depr_fftw_use_fma4","title":"<code>use_fma</code> custom easyconfig parameter for FFTW","text":"<ul> <li>deprecated since: EasyBuild v3.2.0 (May 5th 2017)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: use <code>use_fma4</code> easyconfig parameter instead</li> </ul> <p>The <code>use_fma</code> easyconfig parameter is no longer supported, and was replaced by the equivalent easyconfig parameter <code>use_fma4</code>.</p> <p><code>use_fma</code> was introduced in EasyBuild v3.1.0 allow configuring FFTW with <code>--enable-avx-128-fma</code>. Since it is only supported on systems with AMD processors that have the <code>FMA4</code> feature, it was replaced by the more fittingly named <code>use_fma4</code> parameter in EasyBuild v3.2.0.</p>"},{"location":"removed-functionality/#depr_sources_2_element_tuple","title":"Specifying source files as 2-element tuples to provide a custom extraction command","text":"<ul> <li>deprecated since: EasyBuild v3.3.0 (June 22nd 2017)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: use <code>extract_cmd</code> key in Python dictionary     format instead</li> </ul> <p>Specyfing a custom extraction command for a particular source file by using a 2-element tuple in <code>sources</code> is no longer supported.</p> <p>Instead, a Python dictionary containing the <code>filename</code> and <code>extract_cmd</code> keys should be used instead, see Alternative formats for <code>sources</code>.</p> <p>So, this:</p> <pre><code># source file is actually a gzipped tarball (filename should be .tar.gz)\n# DEPRECATED FORMAT, don't use this anymore!\nsources = [('example.gz', \"tar xfvz %s\")]\n</code></pre> <p>should be replaced with:</p> <pre><code>sources = [{\n  'filename': 'example-%(version)s.gz',\n  'extract_cmd': \"tar xfvz %s\",  # source file is actually a gzipped tarball (filename should be .tar.gz)\n}]\n</code></pre>"},{"location":"removed-functionality/#depr_pythonpackage_use_easy_install_setup_py_develop","title":"<code>use_easy_install</code> and <code>use_setup_py_develop</code> custom easyconfig parameters for <code>PythonPackage</code> easyblock","text":"<ul> <li>deprecated since: EasyBuild v3.5.1 (Jan 17th 2018)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: use <code>install_target</code> easyconfig parameter     instead</li> </ul> <p>The custom easyconfig parameters <code>use_easy_install</code> and <code>use_setup_py_develop</code> for the <code>PythonPackage</code> easyblock are no longer supported. They are obsolete since the <code>install_target</code> custom easyconfig parameter was added in https://github.com/easybuilders/easybuild-easyblocks/pull/1341.</p> <p>Rather than using <code>use_easy_install = True</code>, you should now use <code>install_target = 'easy_install'</code> instead.</p> <p>Rather than using <code>use_setup_py_develop = True</code>, you should now use <code>install_target = 'develop'</code> instead.</p>"},{"location":"removed-functionality/#depr_copytree_function","title":"<code>copytree</code> function","text":"<ul> <li>deprecated since: EasyBuild v3.2.0 (May 5th 2017)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: use <code>copy_dir</code> instead</li> </ul> <p>The <code>copytree</code> function, which was a copy of the <code>shutil.copytree</code> function (introduced when Python 2.4 was still supported) is no longer supported. It has been replaced by the superior <code>copy_dir</code> function in the <code>easybuild.tools.filetools</code> module.</p> <p><code>copy_dir</code> graciously handles any exceptions that occur, and is aware of the EasyBuild dry run mode.</p>"},{"location":"removed-functionality/#depr_adjust_permissions_skip_symlinks","title":"<code>skip_symlinks</code> named argument for <code>adjust_permissions</code>","text":"<ul> <li>deprecated since: EasyBuild v3.8.0 (Nov 2018)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: (none required)</li> </ul> <p>The <code>skip_symlinks</code> argument for the <code>adjust_permissions</code> function is no longer supported since <code>adjust_permissions</code> has been changed to always skip symbolic links (this was already the default behaviour); see also https://github.com/easybuilders/easybuild-framework/pull/2644 .</p>"},{"location":"removed-functionality/#depr_get_easyblock_class_default_fallback","title":"<code>default_fallback</code> named argument for <code>get_easyblock_class</code>","text":"<ul> <li>deprecated since: EasyBuild v3.2.0 (May 5th 2017)</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: use <code>error_on_missing_easyblock</code> named     parameter instead</li> </ul> <p>The <code>get_easyblock_class</code> implementation was cleaned up to remove the support for falling back to the generic <code>ConfigureMake</code> easyblock in EasyBuild v3.2.0 (see https://github.com/easybuilders/easybuild-framework/pull/2178), following the disabling of the Automagic fallback to <code>ConfigureMake</code> in EasyBuild v2.0.</p> <p>The <code>default_fallback</code> named argument for <code>get_easyblock_class</code> was replaced by <code>error_on_missing_easyblock</code>, to retain support for ignoring a missing matching easyblock rather than raising an error.</p>"},{"location":"removed-functionality/#depr_toolchain_add_dependencies","title":"<code>add_dependencies</code> method in <code>Toolchain</code> class","text":"<ul> <li>deprecated since: EasyBuild v3.8.0</li> <li>removed in: EasyBuild v4.0</li> <li>alternatives: pass list of dependencies to <code>deps</code> named     argument of <code>prepare</code> method instead</li> </ul> <p>The <code>add_dependencies</code> method in the <code>Toolchain</code> class is no longer supported, to provide more flexibility in the EasyBuild framework w.r.t. handling of dependencies (see https://github.com/easybuilders/easybuild-framework/pull/2674).</p> <p>Instead, the list of dependencies should be passed to the <code>Toolchain.prepare</code> method, via the <code>deps</code> named argument.</p>"},{"location":"removed-functionality/#overview_removed_30","title":"Overview of removed functionality since EasyBuild v3.0","text":"<p>In EasyBuild v3.0, some intrusive changes were made that break backward compatibility with earlier versions.</p> <p>For EasyBuild users &amp; authors of easyconfig files:</p> <ul> <li>Archived easyconfigs</li> </ul> <p>For developers of easyblocks:</p> <ul> <li><code>error</code> and <code>exception</code> log methods no longer raise an exception</li> <li><code>get_blas_lib</code> function provided by <code>LAPACK</code> easyblock has been removed</li> <li><code>get_netcdf_module_set_cmds</code> function provided by <code>netCDF</code> easyblock was removed</li> </ul> <p>For EasyBuild framework developers:</p> <ul> <li><code>error</code> and <code>exception</code> log methods no longer raise an exception</li> </ul>"},{"location":"removed-functionality/#depr_error_reporting","title":"<code>error</code> and <code>exception</code> log methods no longer raise an exception","text":"<ul> <li>deprecated since: EasyBuild v2.1.0 (April'15)</li> <li>removed in: EasyBuild v3.0</li> <li>alternative(s): use <code>raise EasyBuildError(...)</code> instead</li> </ul> <p>The <code>error()</code> and <code>exception()</code> log methods defined by EasyBuild (in the <code>easybuild.tools.build_log</code> module) did not match the semantics of the standard Python log methods, in the sense that they used to also raise an exception next to logging messages.</p> <p>This caused problems when 3rd party libraries (e.g., gc3pie) were being used by EasyBuild, since they may be using these log methods without expecting an exception being raised.</p> <p>The custom definitions for the <code>error()</code> and <code>exception()</code> log methods was removed in EasyBuild v3.0.</p> <p>Hence, these log methods should no longer be used to report errors since they will not raise an exception anymore once. Note that this applies both to the EasyBuild framework and to (custom) easyblocks.</p> <p>To report errors, an <code>EasyBuildError</code> should be raised instead. For example:</p> <pre><code># make sure config.sh script is there\nif not os.path.exists(os.path.join(self.builddir, 'config.sh')):\n    raise EasyBuildError(\"config.sh script is missing in %s\", self.builddir)\n</code></pre>"},{"location":"removed-functionality/#depr_lapack_get_blas_lib","title":"<code>get_blas_lib</code> function provided by <code>LAPACK</code> easyblock has been removed","text":"<ul> <li>deprecated since: EasyBuild v1.3.0 (April'13); see     https://github.com/easybuilders/easybuild-easyblocks/pull/150</li> <li>removed in: EasyBuild v3.0</li> <li>alternative(s): leverage modules from <code>easybuild.toolchain.linalg</code></li> </ul> <p>The <code>get_blas_lib</code> function provided by the <code>LAPACK</code> easyblock was removed, mainly because it included a hardcoded list of BLAS libraries.</p> <p>It was replaced by 'inlining' similar code into the easyblocks that rely on it (e.g. ScaLAPACK, cfr. https://github.com/easybuilders/easybuild-easyblocks/pull/1014), which only refers to the BLAS libraries that are relevant in that context.</p>"},{"location":"removed-functionality/#depr_get_netcdf_module_set_cmds","title":"<code>get_netcdf_module_set_cmds</code> function provided by <code>netCDF</code> easyblock was removed","text":"<ul> <li>deprecated since: EasyBuild v2.1.0 (April'15); see     https://github.com/easybuilders/easybuild-easyblocks/pull/590</li> <li>removed in: EasyBuild v3.0</li> <li>alternative(s): rely on <code>set_netcdf_env_vars</code> and use <code>self.module_generator.set_environment</code></li> </ul> <p>The <code>get_netcdf_module_set_cmds</code> function provided by the <code>netCDF</code> easyblock was removed, because it returned <code>setenv</code> statements to be included in module files that are only compatible with module files in Tcl syntax; i.e. it did not take into account the <code>--module-syntax</code> configuration option.</p> <p>The use of <code>get_netcdf_module_set_cmds</code> should be replaced by using <code>set_netcdf_env_vars</code> to define the <code>NETCDF*</code> environment variables, in combination with <code>self.module_generator.set_environment</code> to obtain <code>setenv</code> statements that are compatible with the module syntax (<code>Tcl</code> or <code>Lua</code>) being used.</p> <p>See for example the changes made to the <code>WRF</code> and <code>WPS</code> easyblocks in https://github.com/easybuilders/easybuild-easyblocks/commit/7a05cbd823769e343b951002b4735dc7632e19c0.</p>"},{"location":"removed-functionality/#overview_removed_20","title":"Overview of removed functionality since EasyBuild v2.0","text":"<p>In EasyBuild v2.0, some intrusive changes were made that break backward compatibility with earlier versions.</p> <p>For EasyBuild users:</p> <ul> <li>Python version compatibility</li> <li>EasyBuild configuration</li> <li><code>$SOFTX</code> environment variables in generated module files</li> </ul> <p>For authors of easyconfig files:</p> <ul> <li>Automagic fallback to <code>ConfigureMake</code></li> <li>Easyconfig parameters</li> <li><code>BEAGLE</code> dependency in <code>MrBayes</code> easyblock replaced by <code>beagle-lib</code></li> </ul> <p>For developers of easyblocks:</p> <ul> <li>Easyblocks API (<code>EasyBlock</code> class from <code>easybuild.framework.easyblock</code>)</li> <li>Renamed/relocated functions</li> <li>Changes in (generic) easyblocks</li> </ul> <p>For EasyBuild framework developers:</p> <ul> <li><code>easybuild.tools.modules</code> Python module</li> </ul>"},{"location":"removed-functionality/#depr_python_version_compatibility","title":"Python version compatibility","text":"<p>Compatibility with Python 2.6 is removed.</p> <ul> <li>deprecated since: EasyBuild v4.1.0 (Nov'19)</li> <li>removed in: EasyBuild v4.4.0</li> <li>alternative(s): upgrade to Python v2.7.x or v3.5+</li> </ul> <p>Support for running EasyBuild on top of Python 2.6 was removed in EasyBuild version 4.4.0.</p> <p>You should upgrade to a newer version of Python (see also Compatibility with Python 2 and Python 3).</p> <p>Compatibility with Python 2.4 is removed.</p> <ul> <li>deprecated since: EasyBuild v1.14.0 (July'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): upgrade to Python v2.6.x or v2.7.x</li> </ul> <p>Ever since EasyBuild v1.0, the codebase has been Python 2.4 compatible. One reason for this is that EasyBuild was being used on a daily basis on Scientific Linux 5, in which the Python 2.4.x is the system default.</p> <p>Starting with EasyBuild v2.0 support for Python 2.4 is removed, and only ensure compatibility with Python 2.6.x or a more recent Python 2.x.</p> <p>This will enable us to gradually also make the codebase compatible with Python 3.x, which is difficult to do without removing support for Python 2.4.</p>"},{"location":"removed-functionality/#depr_easybuild_configuration_eb1","title":"EasyBuild configuration","text":"<p>Old-style EasyBuild configuration is removed.</p> <ul> <li>deprecated since: EasyBuild v1.3.0 (Apr'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternatives: new-style configuration (see     Configuring EasyBuild)</li> </ul> <p>Early versions of EasyBuild v1.x provided support for configuring EasyBuild via a Python module that was automagically executed when available.</p> <p>Since EasyBuild v1.3 a safer and more consistent way of configuring EasyBuild is supported, which aligns the EasyBuild command line options, <code>$EASYBUILD_X</code> environment variables and key-value style configuration files.</p> <p>More information about the new(er) and recommended configuration style is available Configuring EasyBuild.</p> <p>For detailed information with respect to porting from the old to the new configuration style, see Legacy configuration.</p>"},{"location":"removed-functionality/#location-of-default-configuration-file","title":"Location of default configuration file","text":"<p>The default configuration file location <code>$HOME/.easybuild/config.cfg</code> is no longer considered.</p> <ul> <li>deprecated since: EasyBuild v1.11.0 (Feb'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternatives: <code>$XDG_CONFIG_HOME/easybuild/config.cfg</code> (equivalent     to <code>$HOME/.config/easybuild/config.cfg</code>)</li> </ul> <p>The default path for the new-style configuration path is <code>$XDG_CONFIG_HOME/easybuild/config.cfg</code> (or <code>$HOME/.config/easybuild/config.cfg</code> if <code>$XDG_CONFIG_HOME</code> is not set), see List of used configuration files.</p> <p>The previous default path <code>$HOME/.easybuild/config.cfg</code> that was in place since EasyBuild v1.3.0 is no longer considered.</p>"},{"location":"removed-functionality/#depr_ConfigureMake_fallback_eb1","title":"Automagic fallback to <code>ConfigureMake</code>","text":"<p>The automagic fallback to the <code>ConfigureMake</code> easyblock is removed.</p> <ul> <li>deprecated since: EasyBuild v1.16.0 (Dec'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): specify <code>easyblock = 'ConfigureMake'</code> in     easyconfig file</li> </ul> <p>If the <code>easyblock</code> easyconfig was not specified, EasyBuild tries to find a matching easyblock based on the software name. In EasyBuild v1.x, the generic <code>ConfigureMake</code> easyblock was used if no matching easyblock could be found.</p> <p>This behavior is now removed; instead, easyconfigs that require using the <code>ConfigureMake</code> easyblock must include the following:</p> <pre><code>easyblock = 'ConfigureMake'\n</code></pre>"},{"location":"removed-functionality/#depr_easyconfig_parameters_eb1","title":"Easyconfig parameters","text":"<p>Some easyconfig parameters are removed.</p>"},{"location":"removed-functionality/#depr_premakeopts_makeopts_eb1","title":"Options for build command","text":"<p>The <code>premakeopts</code> and <code>makeopts</code> easyconfig parameters are removed.</p> <ul> <li>deprecated since: EasyBuild v1.13.0 (May'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use <code>prebuildopts</code>/<code>buildopts</code> instead</li> </ul> <p>For consistency in terminology, the <code>premakeopts</code> and <code>makeopts</code> generic easyconfig parameters are removed, in favor of their alternative parameters, <code>prebuildopts</code> and <code>buildopts</code>, resp.</p> <p>(see also Configure/build/install command options)</p>  <p>Note</p> <p>Since EasyBuild v1.13.0, <code>buildopts</code> is automatically defined with the value of <code>makeopts</code>, unless <code>buildopts</code> was specified by itself. When both values are specified, <code>buildopts</code> takes precedence of <code>makeopts</code> (analogous for <code>prebuildopts</code>/<code>premakeopts</code>).</p>"},{"location":"removed-functionality/#depr_shared_lib_ext_eb1","title":"Shared library extension","text":"<p>The <code>shared_lib_ext</code> 'constant' in easyconfigs is no longer defined.</p> <ul> <li>deprecated since: EasyBuild v1.5.0 (June'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use <code>SHLIB_EXT</code> instead</li> </ul> <p>The <code>shared_lib_ext</code> \"magic\" variable representing the extension for shared libraries (<code>.so</code> on Linux, <code>.dylib</code> on OS X) is no longer defined; the easyconfig constant <code>SHLIB_EXT</code> should be using instead.</p>"},{"location":"removed-functionality/#depr_license_eb1","title":"Software license","text":"<p>The <code>license</code> easyconfig parameter is removed.</p> <ul> <li>deprecated since: EasyBuild v1.11.0 (Feb'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use <code>license_file</code> or <code>software_license</code> instead</li> </ul> <p>The <code>license</code> easyconfig parameter, which was specific to the <code>IntelBase</code> generic easyblock and thus relevant for Intel tools, is removed. The generic <code>license_file</code> easyconfig parameter should be used instead, to specify the location of the license file (or server).</p> <p>This change was made to avoid confusion with the <code>software_license</code> generic easyconfig parameter, which can be used to specify the license under which the software was released (e.g., GPLv2, BSD, etc.). Here, the specified value must be a known license type (see <code>eb --avail-easyconfig-licenses</code>).</p>  <p>Note</p> <p>The software_license easyconfig parameter will become mandatory at some point.</p>"},{"location":"removed-functionality/#depr_mrbayes_beagle_eb1","title":"<code>BEAGLE</code> dependency in <code>MrBayes</code> easyblock replaced by <code>beagle-lib</code>","text":"<p>The <code>MrBayes</code> easyblock no longer considers <code>BEAGLE</code> as a valid dependency.</p> <ul> <li>deprecated since: EasyBuild v1.6.0 (Jul'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use <code>beagle-lib</code> instead</li> </ul> <p>Due to a misnomer in the easyconfig files for <code>beagle-lib</code> (formerly named <code>BEAGLE</code>), the custom easyblock for <code>MrBayes</code> now no longer considers <code>BEAGLE</code> as a dependency.</p> <p>The library required by <code>MrBayes</code> must now be provided as a dependency named <code>beagle-lib</code>.</p>"},{"location":"removed-functionality/#easybuild-api-changes","title":"EasyBuild API changes","text":"<p>Some changes in the EasyBuild API were made, which potentially affects easyblocks and the EasyBuild framework itself.</p>"},{"location":"removed-functionality/#depr_easyblocks_API_eb1","title":"Easyblocks API (<code>EasyBlock</code> class from <code>easybuild.framework.easyblock</code>)","text":"<p>The API for easyblocks was modified slightly, to correct for a couple of historic mistakes.</p>"},{"location":"removed-functionality/#return-type-of-extra_options-method","title":"Return type of <code>extra_options</code> method","text":"<p>The list-of-tuples return type of the <code>extra_options</code> method must now be a <code>dict</code> instead.</p> <ul> <li>deprecated since: EasyBuild v1.12.0 (Apr'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): ensure/assume <code>dict</code> return type</li> </ul> <p>The return type of the <code>extra_options</code> static method in the <code>EasyBlock</code> class has been changed to a dictionary (<code>dict</code>), rather than a list of key-value tuples.</p> <p>Custom easyconfig parameters should be added via a dict-typed value to the <code>extra_options</code> function of parent easyblock.</p> <p>For example (taken from the generic easyblock <code>Binary</code>):</p> <pre><code>@staticmethod\ndef extra_options(extra_vars=None):\n    \"\"\"Extra easyconfig parameters specific to Binary easyblock.\"\"\"\n    extra_vars = EasyBlock.extra_options(extra_vars)\n    extra_vars.update({\n        'install_cmd': [None, \"Install command to be used.\", CUSTOM],\n    })\n    return extra_vars\n</code></pre>"},{"location":"removed-functionality/#extension-filter-template","title":"Extension filter template","text":"<p>The <code>name</code> and <code>version</code> templates in <code>exts_filter</code> are removed.</p> <ul> <li>deprecated since: EasyBuild v1.2.0 (Feb'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use <code>ext_name</code> and <code>ext_version</code> instead</li> </ul> <p>Only the <code>ext_name</code>, <code>ext_version</code> and <code>src</code> template strings can be used in the <code>exts_filter</code> extension filter easyconfig parameter; the <code>name</code> and <code>version</code> template strings are removed.</p> <p>For example (default extension filter for Python packages):</p> <pre><code>exts_filter = (\"python -c 'import %(ext_name)s'\", \"\")\n</code></pre>"},{"location":"removed-functionality/#module-path-of-default-class-for-extensions","title":"Module path of default class for extensions","text":"<p>Specifying the module path in <code>exts_defaultclass</code> is no longer possible.</p> <ul> <li>deprecated since: EasyBuild v0.5 (Apr'12)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): (none required, module path is derived from     specified class name)</li> </ul> <p>Explicitly specifying the module path for the default class to use for extensions (via <code>exts_defaultclass</code>) is no longer possible. Only the class name should be specified, the corresponding module path is derived from it.</p>"},{"location":"removed-functionality/#module-path-for-easyblocks","title":"Module path for easyblocks","text":"<p>Deriving the module path for easyblocks from the software name is removed.</p> <ul> <li>deprecated since: EasyBuild v1.4.0 (May'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use easyblock class name according to encoding     scheme (e.g., <code>EB_Foo</code>)</li> </ul> <p>Determining the location of Python modules representing easyblocks based on the software name (<code>name</code>) is removed.</p> <p>EasyBuild must be able to determine the easyblock module path solely based on the name of the easyblock Python class.</p> <p>Easyblocks with a class name that is already honoring the encoding scheme implemented by the <code>encode_class_name</code> function will not be affected.</p>"},{"location":"removed-functionality/#depr_easybuild_tools_modules_eb1","title":"<code>easybuild.tools.modules</code> Python module","text":"<p>The API of the <code>easybuild.tools.modules</code> module has been updated, certain aspects of the old API are removed.</p> <ul> <li>deprecated since: EasyBuild v1.8.0 (Oct'13) &amp; v1.15.0 (Sept'15)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use equivalents available in new API (see below)</li> </ul> <p>The API of the <code>easybuild.tools.modules</code> Python module has been changed extensively when implementing support for alternative module naming schemes:</p> <ul> <li>the <code>modules</code> class variable and the <code>add_module</code>/<code>remove_module</code>     methods are removed; modules should be (un)loaded using the <code>load</code>     and <code>unload</code> methods instead</li> <li>the <code>mod_paths</code> and <code>modulePath</code> named arguments for the     <code>run_module</code> method are removed; the class instance should be     created with a specific list of module paths instead</li> <li>the <code>Modules</code> class to obtain a class instance representing a     modules tool interface is removed; the <code>modules_tool</code> function     should be used instead</li> </ul> <p>Additionally, the <code>exists</code> method which only takes a single module name is removed; it is replaced by the <code>exist</code> method, which takes a list of module names (since EasyBuild v1.15.0 (Sept'15)).</p> <p>Easyblocks should not be using <code>easybuild.tools.modules</code> directly, and hence should be unaffected.</p>"},{"location":"removed-functionality/#depr_softroot_version_env_vars_eb1","title":"<code>$SOFTX</code> environment variables in generated module files","text":"<p><code>$SOFTX</code> environment variables set by module files generated with EasyBuild v0.x will no longer be taken into account.</p> <ul> <li>deprecated since: EasyBuild v1.3.0 (Apr'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): reinstall (ancient) module files which are only     defining the <code>$SOFTX</code> environment variables</li> </ul> <p>The <code>get_software_root</code> and <code>get_software_version</code> functions will only take <code>$EBROOTFOO</code> and <code>$EBVERSIONFOO</code> environment variables into account, as opposed to also considering the <code>$SOFTROOTFOO</code> and <code>$SOFTVERSIONFOO</code> environment variables (which were set in modules generated by EasyBuild v0.x). Likewise, adhering to the <code>$SOFTDEVELFOO</code> environment variables is removed.</p> <p>This is only relevant to early adopters who are still using module files generated by EasyBuild v0.x.</p>"},{"location":"removed-functionality/#depr_renamed_relocated_functions_eb1","title":"Renamed/relocated functions","text":"<p>Some functions/methods have been renamed or relocated, their equivalents under a previous location/name are removed.</p> <ul> <li>deprecated since: (depends on function/method, see below)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): use new location/name</li> </ul> <p>A number of functions and methods that are part of the EasyBuild framework API have been renamed, mainly for consistency reasons.</p> <ul> <li>the <code>moduleGenerator</code> handle to the <code>ModuleGenerator</code> object     instance has been renamed to <code>module_generator</code>; hence, easyblock     should be using <code>self.module_generator</code> rather than     <code>self.moduleGenerator</code> (since EasyBuild v1.16.0 (Dec'14))</li> <li><code>source_paths()</code> (in <code>easybuild.tools.config</code>) replaces the removed     <code>source_path()</code> (since EasyBuild v1.8.0 (Oct'13))</li> <li><code>get_avail_core_count()</code> (in <code>easybuild.tools.systemtools</code>) replaces     the removed <code>get_core_count()</code> (since EasyBuild v1.9.0 (Nov'13))</li> <li><code>get_os_type()</code> (in <code>easybuild.tools.systemtools</code>) replaces the     removed <code>get_kernel_name</code> (since EasyBuild v1.3.0 (Apr'13))</li> <li>the <code>det_full_ec_version</code> function available from     <code>easybuild.tools.module_generator</code> replaces the removed     <code>det_installversion</code> function that was available from     <code>easybuild.framework.easyconfig.*</code> (since EasyBuild v1.8.0     (Oct'13))</li> </ul> <p>Some functions have moved to a different location:</p> <ul> <li>the <code>read_environment</code> function is now provided by the     <code>easybuild.tools.environment</code> module, rather than by     <code>easybuild.tools.config</code> or <code>easybuild.tools.utilities</code> (since     EasyBuild v1.7.0 (Sept'13))</li> <li>the <code>modify_env</code> function is now provided by the     <code>easybuild.tools.environment</code> module, rather than by     <code>easybuild.tools.filetools</code> (since EasyBuild v1.7.0 (Sep'13))</li> <li>the <code>run_cmd</code>, <code>run_cmd_qa</code> and <code>parse_log_for_error</code> functions are     now provided by the <code>easybuild.tools.run</code> module, rather than by     <code>easybuild.tools.filetools</code> (since EasyBuild v1.11.0 (Feb'14))</li> </ul> <p>The <code>get_log</code> function provided by the <code>easybuild.tools.build_log</code> module has been removed entirely, no alternatives are provided (since none are needed). (since EasyBuild v1.3.0 (Apr'13))</p>"},{"location":"removed-functionality/#depr_changes_generic_easyblocks_eb1","title":"Changes in (generic) easyblocks","text":""},{"location":"removed-functionality/#srcdir-replaces-builddir-as-named-argument-in-cmakemakeconfigure_step","title":"<code>srcdir</code> replaces <code>builddir</code> as named argument in <code>CMakeMake.configure_step</code>","text":"<p>The named argument <code>builddir</code> in the <code>configure_step</code> method of the generic <code>CMakeMake</code> easyblock was replaced by <code>srcdir</code> .</p> <ul> <li>deprecated since: EasyBuild v1.4.0 (May'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): equivalent <code>srcdir</code> named argument</li> </ul> <p>Since the <code>builddir</code> named argument in the <code>configure_step</code> method of the generic <code>CMakeMake</code> easyblock was a misnomer (it specifies the location of the source directory that should be provided to <code>cmake</code>), it was replaced with an equivalent named argument <code>srcdir</code>.</p>"},{"location":"removed-functionality/#versionindependentpythonpackage-replaces-versionindependendpythonpackage","title":"<code>VersionIndependentPythonPackage</code> replaces <code>VersionIndependendPythonPackage</code>","text":"<p>The generic easyblock <code>VersionIndependendPythonPackage</code> was replaced with the equivalent generic easyblock <code>VersionIndependentPythonPackage</code> .</p> <ul> <li>deprecated since: EasyBuild v1.11.0 (Feb'14)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): <code>VersionIndependentPythonPackage</code></li> </ul> <p>Because of to a typo in the name, the <code>VersionIndependendPythonPackage</code> generic easyblock was replaced by the equivalent <code>VersionIndependentPythonPackage</code> generic easyblock.</p>"},{"location":"removed-functionality/#get_sitearch_suffix-function-in-perl-easyblock-is-removed","title":"<code>get_sitearch_suffix</code> function in <code>Perl</code> easyblock is removed","text":"<p>The <code>get_sitearch_suffix</code> function in the <code>Perl</code> easyblock was replaced in favor of the more generic <code>get_site_suffix</code> function.</p> <ul> <li>deprecated since: EasyBuild v1.7.0 (Sept'13)</li> <li>removed in: EasyBuild v2.0</li> <li>alternative(s): <code>get_site_suffix('sitearch')</code></li> </ul> <p>The <code>get_sitearch_suffix</code> function provided by the <code>Perl</code> easyblock, which can be (and is) imported in/used by other easyblocks, has been replaced by the more generic <code>get_site_suffix</code> function.</p> <p>To obtain the same functionality as was provided by <code>get_sitearch_suffix</code>, use <code>get_site_suffix('sitearch')</code> instead.</p>"},{"location":"rpath-support/","title":"Support for RPATH","text":"<p>Since EasyBuild v3.5.2, (stable) support is available for using RPATH.</p>"},{"location":"rpath-support/#rpath_support_what","title":"What is RPATH?","text":"<p>RPATH is a mechanism to include a list of directories in a binary where required shared libraries may be available. These locations are considered by the dynamic loader (<code>ld*.so</code>) to locate the libraries that are required by a particular binary.</p> <p>Hence, instructing the dynamic linker (<code>ld</code>) to include RPATH entries in a binary is an alternative to specifying library locations through <code>$LD_LIBRARY_PATH</code>.</p> <p>For more information on RPATH, see https://linux.die.net/man/8/ld-linux</p>"},{"location":"rpath-support/#rpath_support_why","title":"Why RPATH?","text":"<p>Using RPATH can be interesting for a number of reasons:</p> <ul> <li>it can help to avoid a (too) large environment, since:<ul> <li><code>$LD_LIBRARY_PATH</code> does not need to be set anymore for all     dependencies providing libraries</li> <li>it leads to fewer runtime dependencies (and hence fewer modules     need to be loaded)</li> </ul> </li> <li>binaries can be used without problems w.r.t. resolving required     libraries in other environments</li> <li>it may result in better startup performance, since     <code>$LD_LIBRARY_PATH</code> does not have to be iterated over</li> </ul> <p>A minor downside is that it becomes less trivial to move installations of dependencies to a different location (which is something that you should not do without good reason anyway).</p>"},{"location":"rpath-support/#rpath_support_enable","title":"Enabling RPATH linking","text":"<p>To instruct EasyBuild to enable RPATH linking, use the <code>--rpath</code> configuration option.</p>"},{"location":"rpath-support/#rpath_support_implementation","title":"Implementation","text":"<p>When EasyBuild is configured to use RPATH, wrapper scripts are put in place for the dynamic linker commands (<code>ld</code>, <code>ld.gold</code>), as well as for every compiler command that is part of the toolchain being used. This is done during the <code>prepare</code> step.</p> <p>The wrapper scripts will analyze and rewrite the list of arguments supplied to the command they are wrapping as needed, i.e.:</p> <ul> <li>inject an <code>-rpath</code> argument for every <code>-L</code> argument that specifies a     library directory (with some exceptions, see also     Filtering RPATH entries via <code>--rpath-filter</code>)</li> <li>filter out arguments that affect RPATH (e.g., <code>--enable-new-dtags</code>)</li> <li>ensure that the library subdirectories (<code>lib</code>, <code>/lib64</code>) of the     installation directory also have an RPATH entry</li> <li>include additional arguments related to RPATH (e.g.     <code>--disable-new-dtags</code>)</li> </ul> <p>As such, <code>ps</code> may show something like:</p> <pre><code>\\_ /bin/bash /tmp/eb-M3393U/tmpRVJqwr/rpath_wrappers/gcc -O2 example.c -L/example -lexample\n|  \\_ /example/software/GCCcore/4.9.3/bin/gcc -Wl,-rpath=$ORIGIN/../lib -Wl,-rpath=$ORIGIN/../lib64 -Wl,--disable-new-dtags -Wl,-rpath=/example -O2 example.c -L/example -lexample\n</code></pre> <p>Here, <code>/tmp/eb-M3393U/tmpRVJqwr/rpath_wrappers/gcc</code> is the wrapper script for <code>gcc</code>, which tweaks the list of command line arguments for <code>gcc</code> before calling out to the real <code>gcc</code> command (i.e., <code>/example/software/GCCcore/4.9.3/bin/gcc</code> in this example).</p>"},{"location":"rpath-support/#rpath_support_impl_logs","title":"RPATH wrapper script log files","text":"<p>When EasyBuild is used in debug mode (<code>--debug</code>), the RPATH wrapper script will generate log files in the temporary directory used by EasyBuild, for debugging purposes:</p> <pre><code>$ ls -l /tmp/eb-_hoff5/rpath_wrapper*log | sed 's/vsc40023/example/g'\n-rw-rw-r-- 1 example example  739692 Nov 16 15:50 /tmp/eb-_hoff5/rpath_wrapper_gcc.log\n-rw-rw-r-- 1 example example   27814 Nov 16 15:50 /tmp/eb-_hoff5/rpath_wrapper_g++.log\n-rw-rw-r-- 1 example example 1589626 Nov 16 15:50 /tmp/eb-_hoff5/rpath_wrapper_ld.gold.log\n-rw-rw-r-- 1 example example    8870 Nov 16 15:50 /tmp/eb-_hoff5/rpath_wrapper_ld.log\n</code></pre> <p>These log files include details on every captured compiler/linker command, i.e. the original list of arguments, the tweaked list of arguments that includes the injected <code>-rpath</code> arguments, etc., and may be helpful to debug the RPATH support.</p>"},{"location":"rpath-support/#rpath_support_impl_overhead","title":"Overhead of RPATH wrapper scripts","text":"<p>Wrapping each compiler and linker command being executed comes at a cost, especially since the wrapper (shell) script calls out to a Python script (<code>rpath_args.py</code>) to do the heavy lifting.</p> <p>Some early benchmarking has shown that this overhead is quite limited however, with observed slowdowns of the build and installation procedure of 10-15%.</p>"},{"location":"rpath-support/#rpath_support_filtered_paths","title":"Filtering RPATH entries via <code>--rpath-filter</code>","text":"<p>To avoid that the wrapper scripts inject RPATH entries for particular locations, EasyBuild can be configured with an RPATH filter via <code>--rpath-filter</code>.</p> <p>The specified value should be a comma-separated list of (Python) regular expressions for paths. Only paths that match either of the specified patterns will be filtered out.</p> <p>For example, to filter out locations in either <code>/opt/lib</code> or <code>/apps/lib</code>, use:</p> <pre><code>eb --rpath-filter='/opt/lib.*,/apps/lib.*'\n</code></pre> <p>By default, no RPATH entries will be injected for system locations that start with either <code>/lib</code> (incl. <code>/lib64</code>) or <code>/usr</code> (which is equivalent with <code>--rpath-filter='/lib.*,/usr.*'</code>).</p>  <p>Note</p> <p>If you are specifying <code>--rpath--filter</code>, the default filter is overwritten, so if you want to retain the filtering for system locations you should also include <code>/lib.*</code> and <code>/usr.*</code>. For example, to also filter out paths starting with <code>/example</code>:</p> <pre><code>eb --rpath-filter='/lib.*,/usr.*,/example.*'\n</code></pre>"},{"location":"rpath-support/#rpath_support_LD_LIBRARY_PATH","title":"Relation to <code>$LD_LIBRARY_PATH</code>","text":"<p>As mentioned above (Why RPATH?), using RPATH avoids the need to update <code>$LD_LIBRARY_PATH</code> for every dependency.</p> <p>However, there is a chicken-or-egg situation: even though a particular dependency itself can be built and installed using RPATH, it does not mean that software packages that require it have to built with RPATH...</p> <p>Hence, EasyBuild does not automatically exclude <code>$LD_LIBRARY_PATH</code> update statements from the generated module files. You need to configure EasyBuild to do so, using the <code>---filter-env-vars</code> configuration option.</p> <p>For example:</p> <pre><code>eb --rpath --filter-env-vars=LD_LIBRARY_PATH example.eb\n</code></pre> <p>To consistently configure EasyBuild to both use RPATH and not include <code>$LD_LIBRARY_PATH</code> update statements in generated module files, you can use either environment variables or a configuration file; see Configuring EasyBuild.</p>"},{"location":"submitting-jobs/","title":"Submitting jobs using <code>--job</code>","text":"<p>Topics:</p> <ul> <li>Quick introduction to <code>--job</code></li> <li>Configuring <code>--job</code></li> <li>Usage of <code>--job</code></li> <li>Examples</li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_quick_intro","title":"Quick introduction to <code>--job</code>","text":"<p>Using the <code>--job</code> command line option, you can instruct EasyBuild to submit jobs for the installations that should be performed, rather than performing the installations locally on the system you are on.</p> <p>If dependency resolution is enabled using <code>--robot</code> (see also Enabling dependency resolution, <code>--robot</code> / <code>-r</code> and <code>--robot-paths</code>), EasyBuild will submit separate jobs and set dependencies between them to ensure they are run in the order dictated by the software dependency graph(s).</p>"},{"location":"submitting-jobs/#submitting_jobs_configuration","title":"Configuring <code>--job</code>","text":""},{"location":"submitting-jobs/#selecting-the-job-backend-job-backend","title":"Selecting the job backend (<code>--job-backend</code>)","text":"<p>The job backend to be used can be specified using the <code>--job-backend</code> EasyBuild configuration option.</p> <p>Since EasyBuild 3.8.0, three backends are supported:</p> <ul> <li><code>GC3Pie</code> (default) (supported since EasyBuild 2.2.0)<ul> <li><code>GC3Pie</code> version 2.5.0 (or more recent) required (https://gc3pie.readthedocs.org)</li> <li>works with different resource managers and job schedulers, including TORQUE/PBS, Slurm, etc.</li> <li>note: requires that a GC3Pie configuration file is provided, see Configuring the job backend</li> </ul> </li> <li><code>PbsPython</code><ul> <li><code>pbs_python</code> version 4.1.0 (or more recent) required (https://oss.trac.surfsara.nl/pbs_python)</li> <li>note: requires TORQUE resource manager (https://adaptivecomputing.com/cherry-services/torque-resource-manager)</li> </ul> </li> <li><code>Slurm</code> (supported since EasyBuild 3.8.0)<ul> <li>requires Slurm version 17.0 (or more recent), (https://slurm.schedmd.com/)</li> </ul> </li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_backend_config","title":"Configuring the job backend (<code>--job-backend-config</code>)","text":"<p>To configure the job backend, the path to a configuration file must be specified via <code>--job-backend-config</code>.</p> <ul> <li>for <code>PbsPython</code> backend: (irrelevant, no configuration file required)</li> <li>for <code>GC3Pie</code> backend: see https://gc3pie.readthedocs.org/en/latest/users/configuration.html<ul> <li>example configuration files are available at Example configurations for GC3Pie job backend</li> </ul> </li> <li>for <code>Slurm</code> backend: (irrelevant, no configuration file required)</li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_cores","title":"Number of requested cores per job (<code>--job-cores</code>)","text":"<p>The number of cores that should be requested for each job that is submitted can be specified using <code>--job-cores</code> (default: not specified).</p> <p>The mechanism for determining the number of cores to request in case <code>--job-cores</code> was not specified depends on which job backend is being used:</p> <ul> <li>if the <code>PbsPython</code> job backend is used, the (most common) number of available cores per workernode in the   target resource is determined; this usually results in jobs requesting full workernodes (at least in terms of cores)   by default</li> <li>if the <code>GC3Pie</code> or <code>Slurm</code> job backend is used, the requested number of cores is left unspecified,   which results in falling back to the default mechanism used by GC3Pie/Slurm to pick a number of cores;   most likely, this results in single-core jobs to be submitted by default</li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_job_dependency_type","title":"Job dependency type (<code>-job-deps-type</code>)","text":"<p>The type of dependency that is set by EasyBuild when submitting a job that depends on one or more other jobs can be specified via the <code>--job-deps-type</code> configuration setting:</p> <ul> <li>with <code>--job-deps-type=abort_on_error</code>, job dependencies will be set such that a job that depends on other jobs   will be aborted if one of those jobs completes with an error<ul> <li>for both <code>PbsPython</code> and <code>Slurm</code>, this is equivalent with setting job dependencies using <code>afterok</code></li> </ul> </li> <li>with <code>--job-deps-type=always_run</code>, job dependencies will be set such that a job that depends on other jobs are   always run, regardless of whether or not those jobs completed successfully<ul> <li>for both <code>PbsPython</code> and <code>Slurm</code>, this is equivalent with setting job dependencies using <code>afterany</code></li> </ul> </li> </ul> <p>The default value for <code>-job-deps-type</code> depends on the job backend being used (see [Configuring the job backend][submitting_jobs_cfg_job_backend_config):</p> <ul> <li>for the <code>GC3Pie</code> and <code>Slurm</code> backends, <code>--job-deps-type=abort_on_error</code> is the default;</li> <li>for the <code>PbsPython</code> backend, <code>--job-deps-type=always_run</code> is the default (because of historical reasons,   and for the sake of backward compatibility)</li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_max_walltime","title":"Maximum walltime of jobs (<code>--job-max-walltime</code>)","text":"<p>An integer value specifying the maximum walltime for jobs (in hours) can be specified via <code>--job-max-walltime</code> (default: 24).</p> <p>For easyconfigs for which a reference required walltime is available via the <code>build_stats</code> parameter in a matching easyconfig file from the easyconfig repository (see Easyconfigs repository (<code>--repository</code>, <code>--repositorypath</code>)), EasyBuild will set the walltime of the corresponding job to twice that value (unless the resulting value is higher than the maximum walltime for jobs).</p> <p>If no such reference walltime is available, the maximum walltime is used.</p>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_output_dir","title":"Job output directory (<code>--job-output-dir</code>)","text":"<p>The directory where job log files should be placed can be specified via <code>--job-output-dir</code> (default: current directory).</p>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_polling_interval","title":"Job polling interval (<code>--job-polling-interval</code>)","text":"<p>The frequency with which the status of submitted jobs should be checked can be specified via <code>--job-polling-interval</code>, using a floating-point value representing the number of seconds between two checks (default: 30 seconds).</p>  <p>Note</p> <p>This setting is currently only relevant to GC3Pie; see also [Submitting jobs to a <code>GC3Pie</code> backend]][submitting_jobs_usage_gc3pie].</p>"},{"location":"submitting-jobs/#submitting_jobs_cfg_job_target_resource","title":"Target resource for job backend (<code>--job-target-resource</code>)","text":"<p>The target resource that should be used by the job backend can be specified using <code>--job-target-resource</code>.</p> <ul> <li>for <code>PbsPython</code> backend: hostname of TORQUE PBS server to submit jobs to (default: <code>$PBS_DEFAULT</code>)</li> <li>for <code>GC3Pie</code> backend: name of resource to submit jobs to (default: none, which implies weighted round-robin   submission across all available resources)</li> <li>for <code>Slurm</code> backend: (not used)</li> </ul>"},{"location":"submitting-jobs/#submitting_jobs_usage","title":"Usage of <code>--job</code>","text":"<p>To make EasyBuild submit jobs to the job backend rather than performing the installations directly, the <code>--job</code> command line option can be used.</p> <p>This following assumes that the required configuration settings w.r.t. the job backend to use are in place, see Configuring <code>--job</code>.</p>"},{"location":"submitting-jobs/#submitting_jobs_usage_pbs_python","title":"Submitting jobs to a <code>PbsPython</code> or <code>Slurm</code> backend","text":"<p>When using the <code>PbsPython</code> or <code>Slurm</code> backend, EasyBuild will submit separate jobs for each installation to be performed, and then exit reporting a list of submitted jobs.</p> <p>To ensure that the installations are performed in the order dictated by the software dependency graph, dependencies between installations are specified via job dependencies (see also Job dependency type (<code>-job-deps-type</code>)).</p> <p>See also Example: submitting installations to TORQUE via pbs_python.</p>  <p>Note</p> <p>Submitted jobs will be put on hold until all jobs have been submitted. This is required to ensure that the dependencies between jobs can be specified correctly; if a job would run to completion before other jobs that depend on it were submitted, the submission process may fail.</p>"},{"location":"submitting-jobs/#submitting_jobs_usage_gc3pie","title":"Submitting jobs to a <code>GC3Pie</code> backend","text":"<p>When using the <code>GC3Pie</code> backend, EasyBuild will create separate tasks for each installation to be performed and supply them to GC3Pie, which will then take over and pass the installations through as jobs to the available resource(s) (see also Configuring the job backend).</p> <p>To ensure that the installations are performed in the order dictated by the software dependency graph, dependencies between installations are specified to GC3Pie as inter-task dependencies. GC3Pie will then gradually feed the installations to its available resources as their dependencies have been satisfied.</p> <p>Any log messages produced by GC3Pie are included in the EasyBuild log file, and are tagged with <code>gc3pie</code>.</p> <p>See also Example: submitting installations to SLURM via GC3Pie.</p>  <p>Note</p> <p>The <code>eb</code> process will not exit until the full set of tasks that GC3Pie was provided with has been processed. An overall progress report will be printed regularly (see also Job polling interval (<code>--job-polling-interval</code>)). As such, it is advised to run the <code>eb</code> process in a screen/tmux session when using the GC3Pie backend for <code>--job</code>.</p>"},{"location":"submitting-jobs/#submitting_jobs_examples","title":"Examples","text":""},{"location":"submitting-jobs/#submitting_jobs_examples_gc3pie_cfg","title":"Example configurations for GC3Pie job backend","text":"<p>When using GC3Pie as a job backend, a configuration file must be provided via <code>--job-backend-config</code>. This section includes a couple of examples of GC3Pie configuration files (see also https://gc3pie.readthedocs.org/en/latest/users/configuration.html).</p>"},{"location":"submitting-jobs/#example-gc3pie-configuration-for-local-system","title":"Example GC3Pie configuration for local system","text":"<pre><code>[resource/localhost]\nenabled = yes\ntype = shellcmd\nfrontend = localhost\ntransport = local\nmax_memory_per_core = 10GiB\nmax_walltime = 100 hours\n# max # jobs ~= max_cores / max_cores_per_job\nmax_cores_per_job = 1\nmax_cores = 4\narchitecture = x86_64\nauth = none\noverride = no\nresourcedir = /tmp/gc3pie\n</code></pre>"},{"location":"submitting-jobs/#example-gc3pie-configuration-for-torquepbs","title":"Example GC3Pie configuration for TORQUE/PBS","text":"<pre><code>[resource/pbs]\nenabled = yes\ntype = pbs\n\n# use settings below when running GC3Pie on the cluster front-end node\nfrontend = localhost\ntransport = local\nauth = none\n\nmax_walltime = 2 days\n# max # jobs ~= max_cores / max_cores_per_job\nmax_cores_per_job = 16\nmax_cores = 1024\nmax_memory_per_core = 2 GiB\narchitecture = x86_64\n\n# to add non-std options or use TORQUE/PBS tools located outside of\n# the default PATH, use the following:\n#qsub = /usr/local/bin/qsub -q my-special-queue\n</code></pre>"},{"location":"submitting-jobs/#example-gc3pie-configuration-for-slurm","title":"Example GC3Pie configuration for SLURM","text":"<pre><code>[resource/slurm]\nenabled = yes\ntype = slurm\n\n# use settings below when running GC3Pie on the cluster front-end node\nfrontend = localhost\ntransport = local\nauth = none\n\nmax_walltime = 2 days\n# max # jobs ~= max_cores / max_cores_per_job\nmax_cores_per_job = 16\nmax_cores = 1024\nmax_memory_per_core = 2 GiB\narchitecture = x86_64\n\n# to add non-std options or use SLURM tools located outside of\n# the default PATH, use the following:\n#sbatch = /usr/bin/sbatch --mail-type=ALL\n</code></pre>"},{"location":"submitting-jobs/#submitting_jobs_examples_gc3pie_backend","title":"Example: submitting installations to SLURM via GC3Pie","text":"<p>When submitting jobs to the <code>GC3Pie</code> job backend, the <code>eb</code> process will not exit until all tasks have been completed. A job overview will be printed every N seconds (see Job polling interval (<code>--job-polling-interval</code>)).</p> <p>Jobs are only submitted to the resource manager (SLURM, in this case) when all task dependencies have been resolved.</p> <pre><code>$ export EASYBUILD_JOB_BACKEND=GC3Pie\n$ export EASYBUILD_JOB_BACKEND_CONFIG=$PWD/gc3pie.cfg\n$ eb GCC-4.6.0.eb OpenMPI-1.8.4-GCC-4.9.2.eb --robot --job --job-cores=16 --job-max-walltime=10\n== temporary log file in case of crash /tmp/eb-ivAiwD/easybuild-PCgmCB.log\n== resolving dependencies ...\n== GC3Pie job overview: 2 submitted (total: 9)\n== GC3Pie job overview: 2 running (total: 9)\n== GC3Pie job overview: 2 running (total: 9)\n...\n== GC3Pie job overview: 4 terminated, 4 ok, 1 submitted (total: 9)\n== GC3Pie job overview: 4 terminated, 4 ok, 1 running (total: 9)\n...\n== GC3Pie job overview: 8 terminated, 8 ok, 1 running (total: 9)\n== GC3Pie job overview: 9 terminated, 9 ok (total: 9)\n== GC3Pie job overview: 9 terminated, 9 ok (total: 9)\n== Done processing jobs\n== GC3Pie job overview: 9 terminated, 9 ok (total: 9)\n== Submitted parallel build jobs, exiting now\n== temporary log file(s) /tmp/eb-ivAiwD/easybuild-PCgmCB.log* have been removed.\n== temporary directory /tmp/eb-ivAiwD has been removed.\n</code></pre> <p>Checking which jobs have been submitted to SLURM at regular intervals reveals that indeed only tasks for which all dependencies have been processed are actually submitted as jobs::</p> <pre><code>$ squeue -u $USER\nJOBID       USER       ACCOUNT           NAME     REASON   START_TIME     END_TIME  TIME_LEFT NODES CPUS   PRIORITY\n6161545     easybuild  example      GCC-4.9.2       None 2015-07-01T1 2015-07-01T2    9:58:55     1 16       1242\n6161546     easybuild  example      GCC-4.6.0       None 2015-07-01T1 2015-07-01T2    9:58:55     1 16       1242\n\n$ squeue -u $USER\nJOBID       USER       ACCOUNT           NAME     REASON   START_TIME     END_TIME  TIME_LEFT NODES CPUS   PRIORITY\n6174527     easybuild  example Automake-1.15-  Resources          N/A          N/A   10:00:00     1 16       1120\n\n$ squeue -u $USER\nJOBID       USER       ACCOUNT           NAME     REASON   START_TIME     END_TIME  TIME_LEFT NODES CPUS   PRIORITY\n6174533     easybuild  example OpenMPI-1.8.4-       None 2015-07-03T0 2015-07-03T1    9:55:59     1 16       1119\n</code></pre>"},{"location":"submitting-jobs/#submitting_jobs_examples_pbs_python_backend","title":"Example: submitting installations to TORQUE via pbs_python","text":"<p>Using the <code>PbsPython</code> job backend, <code>eb</code> submits jobs directly to TORQUE for processing, and exits as soon as all jobs have been submitted::</p> <pre><code>$ eb GCC-4.6.0.eb OpenMPI-1.8.4-GCC-4.9.2.eb --robot --job\n== temporary log file in case of crash /tmp/eb-OMNQAV/easybuild-9fTuJA.log\n== resolving dependencies ...\n== List of submitted jobs (9): GCC-4.6.0 (GCC/4.6.0): 508023.example.pbs; GCC-4.9.2 (GCC/4.9.2): 508024.example.pbs;\nlibtool-2.4.2-GCC-4.9.2 (libtool/2.4.2-GCC-4.9.2): 508025.example.pbs; M4-1.4.17-GCC-4.9.2 (M4/1.4.17-GCC-4.9.2): 50\n8026.example.pbs; Autoconf-2.69-GCC-4.9.2 (Autoconf/2.69-GCC-4.9.2): 508027.example.pbs; Automake-1.15-GCC-4.9.2 (Au\ntomake/1.15-GCC-4.9.2): 508028.example.pbs; numactl-2.0.10-GCC-4.9.2 (numactl/2.0.10-GCC-4.9.2): 508029.example.pbs;\nhwloc-1.10.0-GCC-4.9.2 (hwloc/1.10.0-GCC-4.9.2): 508030.example.pbs; OpenMPI-1.8.4-GCC-4.9.2 (OpenMPI/1.8.4-GCC-4.9.\n2): 508031.example.pbs\n== Submitted parallel build jobs, exiting now\n== temporary log file(s) /tmp/eb-OMNQAV/easybuild-9fTuJA.log* have been removed.\n== temporary directory /tmp/eb-OMNQAV has been removed.\n\n$ qstat -a\n\nexample.pbs:\n                                                                              Req'd    Req'd       Elap\nJob ID              Username    Queue    Jobname          SessID  NDS   TSK   Memory   Time    S   Time\n------------------- ----------- -------- ---------------- ------ ----- ------ ------ --------- - ---------\n508023.example.pbs  easybuild   batch    GCC-4.6.0           --      1     16    --   24:00:00 R  00:02:16 \n508024.example.pbs  easybuild   batch    GCC-4.9.2           --      1     16    --   24:00:00 Q       -- \n508025.example.pbs  easybuild   batch    libtool-2.4.2-GC    --      1     16    --   24:00:00 H       -- \n508026.example.pbs  easybuild   batch    M4-1.4.17-GCC-4.    --      1     16    --   24:00:00 H       -- \n508027.example.pbs  easybuild   batch    Autoconf-2.69-GC    --      1     16    --   24:00:00 H       -- \n508028.example.pbs  easybuild   batch    Automake-1.15-GC    --      1     16    --   24:00:00 H       -- \n508029.example.pbs  easybuild   batch    numactl-2.0.10-G    --      1     16    --   24:00:00 H       -- \n508030.example.pbs  easybuild   batch    hwloc-1.10.0-GCC    --      1     16    --   24:00:00 H       -- \n508031.example.pbs  easybuild   batch    OpenMPI-1.8.4-GC    --      1     16    --   24:00:00 H       -- \n</code></pre> <p>Holds are put in place to ensure that the jobs run in the order dictated by the dependency graph(s). These holds are released by the TORQUE server as soon as they jobs on which they depend have completed::</p> <pre><code>$ qstat -a\n\nexample.pbs:\n                                                                              Req'd    Req'd       Elap\nJob ID              Username    Queue    Jobname          SessID  NDS   TSK   Memory   Time    S   Time\n------------------- ----------- -------- ---------------- ------ ----- ------ ------ --------- - ---------\n508025.example.pbs  easybuild   batch    libtool-2.4.2-GC    --      1     16    --   24:00:00 Q       -- \n508026.example.pbs  easybuild   batch    M4-1.4.17-GCC-4.    --      1     16    --   24:00:00 Q       -- \n508027.example.pbs  easybuild   batch    Autoconf-2.69-GC    --      1     16    --   24:00:00 H       -- \n508028.example.pbs  easybuild   batch    Automake-1.15-GC    --      1     16    --   24:00:00 H       -- \n508029.example.pbs  easybuild   batch    numactl-2.0.10-G    --      1     16    --   24:00:00 H       -- \n508030.example.pbs  easybuild   batch    hwloc-1.10.0-GCC    --      1     16    --   24:00:00 H       -- \n508031.example.pbs  easybuild   batch    OpenMPI-1.8.4-GC    --      1     16    --   24:00:00 H       -- \n\n...\n\n$ qstat -a\n\nexample.pbs:\n                                                                              Req'd    Req'd       Elap\nJob ID              Username    Queue    Jobname          SessID  NDS   TSK   Memory   Time    S   Time\n------------------- ----------- -------- ---------------- ------ ----- ------ ------ --------- - ---------\n508031.example.pbs  easybuild   batch    OpenMPI-1.8.4-GC    --      1     16    --   24:00:00 R  00:03:46\n</code></pre>"},{"location":"system-toolchain/","title":"System toolchain","text":"<p>In EasyBuild v4.0, the infamous <code>dummy</code> toolchain has been deprecated, and replaced with the <code>system</code> toolchain.</p> <p>This page provides more information about this change, and how to deal with the transition.</p>  <p>Note</p> <p>To ease the transition from <code>dummy</code> to <code>system</code>, EasyBuild v3.9.4 already supports using the <code>system</code> toolchain as an alias for the <code>dummy</code> toolchain.</p>"},{"location":"system-toolchain/#system_toolchain_semantics","title":"Use case for the <code>system</code> toolchain","text":"<p>The System toolchain is intended for the same use case as the <code>dummy</code> toolchain was: it should (only) be used for software installations where the compiler &amp; libraries provided by the operating system are assumed to be sufficient.</p> <p>This includes installing binary software (for which no compiler is used at all), installations that boil down to only unpacking a source tarball, and building and installing a (base) toolchain compiler like GCC(core).</p> <p>For all intents and purposes, the <code>system</code> toolchain can be considered as a drop-in replacement for the (deprecated) <code>dummy</code> toolchain (see also Impact of deprecating dummy toolchain).</p>"},{"location":"system-toolchain/#system_toolchain_usage","title":"Using the <code>system</code> compiler","text":"<p>To use the <code>system</code> toolchain in an easyconfig file, simply use <code>'system'</code> as toolchain name:</p> <pre><code>toolchain = {'name': 'system', 'version': ''}\n</code></pre>  <p>Note</p> <p>The toolchain version you specify is totally irrelevant when using the <code>system</code> compiler, it could be <code>'system'</code>, <code>''</code> or any other (string) value.</p> <p>EasyBuild does not interpret the version of the <code>system</code> toolchain in any way (as opposed to the <code>dummy</code> toolchain in EasyBuild versions prior to version 4.0, see Impact of version of dummy toolchain w.r.t. dependencies).</p>"},{"location":"system-toolchain/#system_toolchain_SYSTEM_constant","title":"<code>SYSTEM</code> constant","text":"<p>For convenience, a <code>SYSTEM</code> constant is available to easily specify the use of the <code>system</code> toolchain (and to make it stand out against using a regular toolchain):</p> <pre><code>toolchain = SYSTEM\n</code></pre> <p>We strongly recommend using the <code>SYSTEM</code> constant to specify the use of the <code>system</code> toolchain.</p>"},{"location":"system-toolchain/#system_toolchain_impact_deprecated_dummy","title":"Impact of deprecating <code>dummy</code> toolchain","text":"<p>The only impact of deprecating the <code>dummy</code> toolchain is that a warning will be printed whenever an easyconfig file that still uses the <code>dummy</code> toolchain is parsed:</p> <pre><code>WARNING: Deprecated functionality, will no longer work in v5.0:\nUse of 'dummy' toolchain is deprecated, use 'system' toolchain instead;\nsee http://easybuild.readthedocs.org/en/latest/Deprecated-functionality.html for more information\n</code></pre> <p>Other than this warning, there is no impact on the EasyBuild functionality whatsoever.</p> <p>Use of the <code>dummy</code> toolchain has been deprecated, but is still supported in EasyBuild v4.x; it is simply an alias for the <code>system</code> toolchain which replaces it.</p> <p>Hence, software installations for easyconfig files that are still using the <code>dummy</code> toolchain will proceed as before, and the contents of the easyconfig files will be interpreted exactly as before, with one exception: the (build) dependencies specified in the easyconfig files will always be loaded in the build environment, regardless of the toolchain version (see also Impact of version of dummy toolchain w.r.t. dependencies).</p> <p>Since the <code>dummy</code> toolchain has been deprecated, so has the <code>--add-dummy-to-minimal-toolchains</code> configuration option. It has been replaced with the <code>--add-system-to-minimal-toolchains</code> configuration option (see also Considering system as minimal toolchain).</p>"},{"location":"system-toolchain/#system_toolchain_updating_dummy","title":"Updating easyconfig files that use the <code>dummy</code> toolchain","text":"<p>To update easyconfig files that still use the <code>dummy</code> toolchain, you should simply change the definition of the <code>toolchain</code> parameter to use <code>'system'</code> as a toolchain name (see also Using the system compiler).</p> <p>We recommend using the <code>SYSTEM</code> constant for this, see <code>SYSTEM</code> constant.</p> <p>To automatically update easyconfig files still using the <code>dummy</code> toolchain, you can also use <code>eb --fix-deprecated-easyconfigs</code>. Do take into account that this option could also result in additional changes being made to the easyconfig files, see Renaming local variables to match the recommended naming scheme using <code>eb --fix-deprecated-easyconfigs</code>.</p>"},{"location":"system-toolchain/#system_toolchain_motivation_deprecating_dummy","title":"Motivation for deprecating the <code>dummy</code> toolchain","text":"<p>Deprecating the <code>dummy</code> toolchain was done for a number of reasons:</p> <ul> <li><code>dummy</code> toolchain name</li> <li>Impact of version of dummy toolchain w.r.t. dependencies</li> </ul>"},{"location":"system-toolchain/#system_toolchain_motivation_deprecating_dummy_name","title":"<code>dummy</code> toolchain name","text":"<p>The <code>dummy</code> name may be rather confusing, especially if you are new to EasyBuild. Just based on the name, it is unclear how the <code>dummy</code> toolchain is different from a regular toolchain.</p> <p>Hopefully, the name of the <code>system</code> toolchain does speak more for itself: when using it, you are relying on the compiler &amp; libraries provided by the operating system (as opposed to compilers &amp; libraries that are a part of a regular toolchain).</p>"},{"location":"system-toolchain/#system_toolchain_motivation_deprecating_dummy_version_and_deps","title":"Impact of version of <code>dummy</code> toolchain w.r.t. dependencies","text":"<p>The version that was being used for a <code>dummy</code> toolchain was interpreted by EasyBuild in a rather surprising way.</p> <p>If <code>'dummy'</code> was specified as a toolchain version, then the (build) dependencies that were specified in the easyconfig file were not loaded in the build environment. <code>module load</code> statements for the (non-build) dependencies were included in the generated module file, however...</p> <p>Using any version other than <code>'dummy'</code> resulted in the usual behaviour of loading the dependencies in the build environment.</p> <p>Why this mechanism was in place has been lost to the sands of time...</p> <p>This often led to outright confusing installation problems, and hence it was the main motivator for deprecating the <code>dummy</code> toolchain. Rather than just changing the semantics of the <code>dummy</code> toolchain, we saw this as an opportunity to also fix the name.</p>"},{"location":"terminology/","title":"Concepts and terminology","text":"<p>EasyBuild consists of a collection of Python modules and packages that interact with each other, dynamically picking up additional Python modules as needed for building and installing a (stack of) software package(s) specified via simple specification files.</p> <p>Or, in EasyBuild terminology: the EasyBuild framework leverages easyblocks to automatically build and install software using particular compiler toolchains, as specified by one or multiple easyconfig files.</p>"},{"location":"terminology/#framework","title":"EasyBuild framework","text":"<p>The EasyBuild framework embodies the core of the tool, providing functionality commonly needed when installing scientific software on HPC systems. For example, it deals with downloading, unpacking and patching of sources, loading module files for dependencies, setting up the build environment, autonomously running (interactive) shell commands, creating module files that match the specification files, etc.</p> <p>Included in the framework is an <code>abstract</code> implementation of a software build and install procedure, which is split up into different <code>steps</code>:</p> <ul> <li>unpacking sources</li> <li>configuration</li> <li>build</li> <li>installation</li> <li>module generation</li> <li>etc.</li> </ul> <p>Most of these steps, i.e., the ones which are generally more-or-less analogous across different software packages, have appropriate (default) implementations. The only exceptions are the configuration, build and installation steps that are purposely left unimplemented (since there is no common procedure for them).</p> <p>Each of the steps can be tweaked and steered via different parameters known to the framework, for which values are either obtained from the provided specification files or set to reasonable default values. See Easyconfig files.</p>  <p>In EasyBuild version |version| the framework source code consists of about 19000 lines of code, organized across about 125 Python modules in roughly a dozen Python package directories, next to almost 7000 lines of code for tests. This provides some notion of the size of the EasyBuild framework and the amount of supporting functionality it has to offer.</p>"},{"location":"terminology/#easyblocks","title":"Easyblocks","text":"<p>The implementation of a particular software build and install procedure is done in a Python module, which is aptly referred to as an easyblock.</p> <p>Each easyblock ties in with the framework API by defining (or extending/replacing) one or more of the step functions that are part of the abstract procedure used by the EasyBuild framework. Easyblocks typically heavily rely on the supporting functionality provided by the framework, for example for (autonomously) executing (interactive) shell commands and obtaining the command's output and exit code.</p> <p>A distinction is made between software-specific and generic easyblocks. Software-specific easyblocks implement a build and install procedure which is entirely custom to one particular software package (e.g., WRF), while generic easyblocks implement a procedure using standard tools (e.g., CMake). Since easyblocks are implemented in an object-oriented scheme, the step methods implemented by a particular easyblock can be reused in others via inheritance, enabling code reuse across build procedure implementations.</p> <p>For each software package being built, the EasyBuild framework will determine which easyblock should be used, based on the name of the software package or the value of the <code>easyblock</code> specification parameter (see Easyblock specification). Since EasyBuild v2.0, an easyblock must be specified in case no matching easyblock is found based on the software name (cfr. Automagic fallback to ConfigureMake).</p>  <p>EasyBuild version 2.4.0 includes 154 software-specific easyblocks and 28 generic easyblocks (see also List of easyblocks), providing support for automatically installing a wide range of software packages. Examples range from fairly easy-to-build programs like gzip, other basic tools like compilers, various MPI stacks and commonly used libraries, primarily for x86_64 architecture systems, to large scientific software packages that are notorious for their involved and tedious install procedures, such as: <code>CP2K</code>, <code>NWChem</code>, <code>OpenFOAM</code>, <code>QuantumESPRESSO</code>, <code>WRF</code>.</p>"},{"location":"terminology/#toolchains","title":"Toolchains","text":"<p>EasyBuild employs so-called compiler toolchains or, simply <code>toolchains</code> for short, which are a major concept in handling the build and installation processes.</p> <p>A typical toolchain consists of one or more compilers, usually put together with some libraries for specific functionality, e.g., for using an MPI stack for distributed computing, or which provide optimized routines for commonly used math operations, e.g., the well-known BLAS/LAPACK APIs for linear algebra routines.</p> <p>For each software package being built, the toolchain to be used must be specified in some way.</p> <p>The EasyBuild framework prepares the <code>build environment</code> for the different toolchain components, by loading their respective modules and defining environment variables to specify compiler commands (e.g., via <code>$F90</code>), compiler and linker options (e.g., via <code>$CFLAGS</code> and <code>$LDFLAGS</code>), the list of library names to supply to the linker (via <code>$LIBS</code>), etc. This enables making easyblocks largely <code>toolchain-agnostic</code> since they can simply rely on these environment variables; that is, unless they need to be aware of, for example, the particular compiler being used to determine the build configuration options.</p> <p>Recent releases of EasyBuild include out-of-the-box toolchain support for:</p> <ul> <li>various compilers, including GCC, Intel, Clang, CUDA</li> <li>common MPI libraries, such as Intel MPI, MPICH, MVAPICH2, OpenMPI</li> <li>various numerical libraries, including ATLAS, Intel MKL, OpenBLAS, ScalaPACK, FFTW</li> </ul> <p>Please see the Common toolchains page for details about the two most common toolchains, one for \"free and open source software\" (<code>foss</code>) based on GCC and one based on the Intel compilers (<code>intel</code>).</p>"},{"location":"terminology/#system_toolchain_terminology","title":"<code>system</code> toolchain","text":"<p>The <code>system</code> toolchain is a special case. It is an empty toolchain, i.e. a toolchain without any components, and corresponds to using the readily available compilers and libraries (e.g., the ones provided by the operating system, or by modules which were loaded before issuing the <code>eb</code> command).</p> <p>When the <code>system</code> toolchain is used, a corresponding <code>system</code> module file is not required/loaded and no build environment is being defined.</p>"},{"location":"terminology/#dummy_toolchain","title":"<code>dummy</code> toolchain (DEPRECATED)","text":"<p>The <code>dummy</code> toolchain has been deprecated in EasyBuild v4.0, and replaced by the <code>system</code> toolchain.</p>"},{"location":"terminology/#common-toolchains","title":"Common toolchains","text":"<p>For more information on the concept of common toolchains, see Common toolchains.</p>"},{"location":"terminology/#easyconfig_files","title":"Easyconfig files","text":"<p>The specification files that are supplied to EasyBuild are referred to as easyconfig files (or simply <code>easyconfigs</code>), which are basically plain text files containing (mostly) key-value assignments for build parameters supported by the framework, also referred to as easyconfig parameters (see Writing easyconfig files: the basics for more information).</p> <p>Note that easyconfig files only provide the bits of information required to determine the corresponding module name; the module name itself is computed by EasyBuild framework by querying the module naming scheme being used. The complete list of supported easyconfig parameters can be easily obtained via the EasyBuild command line using <code>eb -a</code> (see also All available easyconfig parameters, <code>--avail-easyconfig-params</code> / <code>-a</code>).</p> <p>As such, each easyconfig file provides a complete specification of which particular software package should be installed, and which settings should be used for building it. After completing an installation, EasyBuild copies the used easyconfig file to the install directory, as a template, and also supports maintaining an easyconfig archive which is updated on every successful installation. Therefore, reproducing installations becomes trivial.</p>"},{"location":"terminology/#extensions","title":"Extensions","text":"<p>Some software packages support installing additional add-ons alongside the 'main' software, either in the same installation prefix, or in a separate location.</p> <p>In EasyBuild, we use the neutral term 'extensions' to refer these add-ons.</p> <p>Well-known examples include:</p> <ul> <li>Perl modules</li> <li>Python packages</li> <li>R libraries</li> <li>Ruby gems</li> </ul>"},{"location":"tracing-progress/","title":"Tracing progress","text":"<p>To trace the progress of EasyBuild while it is installing software, you can use <code>eb --trace</code>.</p>  <p>Note</p> <p>Tracing support was added as an experimental feature in EasyBuild v3.4.0, and thus required using <code>--experimental</code>. Since EasyBuild v3.4.1, <code>--trace</code> is considered stable and no longer requires the use of <code>--experimental</code>.</p>"},{"location":"tracing-progress/#trace_output","title":"Trace output","text":"<p>When <code>eb --trace</code> is used, EasyBuild will print additional output on top of the standard output, which only mentions which step of the installation procedure is being executed (without any further details).</p> <p>This output includes:</p> <ul> <li>location of build and install directories</li> <li>list of sources and patches</li> <li>modules being loaded</li> <li>executed commands</li> <li>results of the sanity check</li> <li>location of generated module file</li> </ul> <p>For each (non-trivial) executed command, the location to a temporary log file will be provided so the output of that command can be monitored while it is running. In addition, the start time of the command is printed, to allow determining how long the command has been running.</p>"},{"location":"tracing-progress/#trace_example","title":"Example","text":"<pre><code>$ eb HDF5-1.10.1-intel-2017a.eb -df --trace --experimental\n== temporary log file in case of crash /tmp/eb-ieEeg3/easybuild-Ouw3jV.log\n== processing EasyBuild easyconfig /home/example/HDF5/HDF5-1.10.1-intel-2017a.eb\n== building and installing HDF5/1.10.1-intel-2017a...\n  &gt;&gt; installation prefix: /prefix/software/HDF5/1.10.1-intel-2017a\n== fetching files...\n  &gt;&gt; sources:\n  &gt;&gt; /prefix/sources/h/HDF5/hdf5-1.10.1.tar.gz [SHA256: 048a9d149fb99aaa1680a712963f5a78e9c43b588d0e79d55e06760ec377c172]\n== creating build dir, resetting environment...\n  &gt;&gt; build dir: /tmp/HDF5/1.10.1/intel-2017a\n== unpacking...\n  &gt;&gt; running command 'tar xzf /prefix/sources/h/HDF5/hdf5-1.10.1.tar.gz' (output in /tmp/eb-ieEeg3/easybuild-run_cmd-P9kf6c.log) [started at: 2017-09-06 08:28:42]\n== patching...\n== preparing...\n  &gt;&gt; loading toolchain module: intel/2017a\n  &gt;&gt; (no build dependencies specified)\n  &gt;&gt; loading modules for (runtime) dependencies:\n  &gt;&gt;  * zlib/1.2.11-GCCcore-6.3.0\n  &gt;&gt;  * Szip/2.1-intel-2017a\n  &gt;&gt; defining build environment for intel/2017a toolchain\n== configuring...\n  &gt;&gt; running command './configure --prefix=/prefix/software/HDF5/1.10.1-intel-2017a  --with-szlib=/prefix/software/Szip/2.1-intel-2017a  --with-zlib=/prefix/software/zlib/1.2.11-GCCcore-6.3.0  --with-pic --with-pthread --enable-shared  --enable-cxx --enable-fortran FC=\"mpiifort\"  --enable-unsupported --enable-parallel' (output in /tmp/eb-ieEeg3/easybuild-run_cmd-dPat3D.log) [started at: 2017-09-06 08:28:44]\n== building...\n  &gt;&gt; running command 'make -j 24  CXXFLAGS=\"$CXXFLAGS -DMPICH_IGNORE_CXX_SEEK\"  FC=\"mpiifort\"' (output in /tmp/eb-ieEeg3/easybuild-run_cmd-25vKdK.log) [started at: 2017-09-06 08:31:01]\n== testing...\n== installing...\n  &gt;&gt; running command 'make install' (output in /tmp/eb-ieEeg3/easybuild-run_cmd-BepE8P.log) [started at: 2017-09-06 08:34:09]\n== taking care of extensions...\n== postprocessing...\n== sanity checking...\n  &gt;&gt; file 'bin/h52gif' found: OK\n  &gt;&gt; file 'bin/h5c++' found: OK\n  &gt;&gt; file 'bin/h5copy' found: OK\n  &gt;&gt; file 'bin/h5debug' found: OK\n  &gt;&gt; file 'bin/h5diff' found: OK\n  &gt;&gt; file 'bin/h5dump' found: OK\n  &gt;&gt; file 'bin/h5import' found: OK\n  &gt;&gt; file 'bin/h5jam' found: OK\n  &gt;&gt; file 'bin/h5ls' found: OK\n  &gt;&gt; file 'bin/h5mkgrp' found: OK\n  &gt;&gt; file 'bin/h5perf_serial' found: OK\n  &gt;&gt; file 'bin/h5redeploy' found: OK\n  &gt;&gt; file 'bin/h5repack' found: OK\n  &gt;&gt; file 'bin/h5repart' found: OK\n  &gt;&gt; file 'bin/h5stat' found: OK\n  &gt;&gt; file 'bin/h5unjam' found: OK\n  &gt;&gt; file 'bin/gif2h5' found: OK\n  &gt;&gt; file 'bin/h5perf' found: OK\n  &gt;&gt; file 'bin/h5pcc' found: OK\n  &gt;&gt; file 'bin/h5pfc' found: OK\n  &gt;&gt; file 'bin/ph5diff' found: OK\n  &gt;&gt; file 'lib/libhdf5.so' found: OK\n  &gt;&gt; file 'lib/libhdf5_cpp.so' found: OK\n  &gt;&gt; file 'lib/libhdf5_fortran.so' found: OK\n  &gt;&gt; file 'lib/libhdf5_hl_cpp.so' found: OK\n  &gt;&gt; file 'lib/libhdf5_hl.so' found: OK\n  &gt;&gt; file 'lib/libhdf5hl_fortran.so' found: OK\n  &gt;&gt; (non-empty) directory 'include' found: OK\n== cleaning up...\n== creating module...\n  &gt;&gt; generating module file @ /prefix/modules/all/HDF5/1.10.1-intel-2017a.lua\n== permissions...\n== packaging...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file(s) /prefix/software/HDF5/1.10.1-intel-2017a/easybuild/easybuild-HDF5-1.10.1-20170906.083425.log\n== Build succeeded for 1 out of 1\n== Temporary log file(s) /tmp/eb-ieEeg3/easybuild-Ouw3jV.log* have been removed.\n== Temporary directory /tmp/eb-ieEeg3 has been removed.\n</code></pre>"},{"location":"typical-workflow-example-with-wrf/","title":"Typical workflow example: building and installing WRF","text":"<p>This section shows an example case of building Weather Research and Forecasting (WRF) scientific software application, which is a notoriously complex software application to build and install. With EasyBuild however, WRF can be installed quite easily and here is how.</p> <p>First, you search which easyconfigs are available for WRF, using <code>--search</code> (see Searching for easyconfigs, <code>--search</code> / <code>-S</code>) and you select one based on the software version, toolchain, etc.</p> <p>Using the selected easyconfig file, you can get an overview of the planned installations using <code>--dry-run</code> (see Getting an overview of planned installations <code>--dry-run</code> / <code>-D</code>).</p> <p>Finally, building and installing WRF is done by specifying the matching easyconfig file in the eb command line, and using <code>--robot</code> (see Enabling dependency resolution, <code>--robot</code> / <code>-r</code> and <code>--robot-paths</code>) to enable dependency resolution. That way WRF and all of its dependencies are installed with <code>a single command</code>!</p>"},{"location":"typical-workflow-example-with-wrf/#searching-for-available-easyconfigs-files","title":"Searching for available easyconfigs files","text":"<p>Searching for build specification for a particular software package can be done using the <code>--search</code>/<code>-S</code> command line options (see Searching for easyconfigs, <code>--search</code> / <code>-S</code>); for example, to get a list of available easyconfig files for WRF:</p> <pre><code>$ eb -S WRF\nCFGS1=/home/example/.local/easybuild/software/EasyBuild/4.1.1/easybuild/easyconfigs\n * $CFGS1/w/WPS/WPS-4.0.1_find-wrfdir.patch\n * $CFGS1/w/WPS/WPS-4.0.2_find-wrfdir.patch\n [ . . . ]\n * $CFGS1/w/WRF/WRF-4.0.1-intel-2018b-dmpar.eb\n * $CFGS1/w/WRF/WRF-4.0.2-foss-2018b-dmpar.eb\n [ . . . ]\n\nNote: 16 matching archived easyconfig(s) found, use --consider-archived-easyconfigs to see them\n</code></pre> <p>Various easyconfig files are found: for different versions of WRF (e.g., v4.0.1 and v4.0.2), for different (versions of) compiler toolchains (e.g., foss 2018b, intel 2018b), etc.</p> <p>For the remainder of this example, we will use the available <code>WRF-4.0.2-foss-2018b-dmpar.eb</code> easyconfig file to specify to EasyBuild to build and install WRF v4.0.2 using version 2018b of the <code>foss</code> toolchain, which is one of the Common toolchains.  The <code>foss</code> toolchain stands for <code>GCC, OpenMPI, OpenBLAS/LAPACK, ScaLAPACK, and FFTW</code>. See List of known toolchains for a list of all available toolchains.</p>"},{"location":"typical-workflow-example-with-wrf/#getting-an-overview-of-planned-installations","title":"Getting an overview of planned installations","text":"<p>To get an overview of the software that EasyBuild is going to build and install we can use the <code>--dry-run</code>/<code>-D</code> (see Getting an overview of planned installations <code>--dry-run</code> / <code>-D</code>) command line option. This will show a list of easyconfig files that will be used, together with the module files that will be installed, as well as their current availability (<code>[x]</code> marks available modules).</p> <p>Note that EasyBuild will take care of all of the dependencies of WRF as well, and can even install the compiler toolchain as well if the corresponding modules are not available yet:</p> <pre><code>$ eb WRF-4.0.2-foss-2018b-dmpar.eb -Dr\n== temporary log file in case of crash /tmp/eb-eEnBF5/easybuild-pvrvNP.log\nDry run: printing build status of easyconfigs and dependencies\nCFGS=/home/example/.local/easybuild/software/EasyBuild/4.1.1/easybuild/easyconfigs\n * [x] $CFGS/m/M4/M4-1.4.18.eb (module: M4/1.4.18)\n * [x] $CFGS/z/zlib/zlib-1.2.11.eb (module: zlib/1.2.11)\n * [x] $CFGS/h/help2man/help2man-1.47.4.eb (module: help2man/1.47.4)\n * [x] $CFGS/m/M4/M4-1.4.17.eb (module: M4/1.4.17)\n * [x] $CFGS/b/Bison/Bison-3.0.4.eb (module: Bison/3.0.4)\n * [x] $CFGS/f/flex/flex-2.6.4.eb (module: flex/2.6.4)\n * [x] $CFGS/b/binutils/binutils-2.30.eb (module: binutils/2.30)\n * [x] $CFGS/g/GCCcore/GCCcore-7.3.0.eb (module: GCCcore/7.3.0)\n * [x] $CFGS/h/help2man/help2man-1.47.4-GCCcore-7.3.0.eb (module: help2man/1.47.4-GCCcore-7.3.0)\n * [x] $CFGS/m/M4/M4-1.4.18-GCCcore-7.3.0.eb (module: M4/1.4.18-GCCcore-7.3.0)\n * [x] $CFGS/z/zlib/zlib-1.2.11-GCCcore-7.3.0.eb (module: zlib/1.2.11-GCCcore-7.3.0)\n * [x] $CFGS/b/Bison/Bison-3.0.4-GCCcore-7.3.0.eb (module: Bison/3.0.4-GCCcore-7.3.0)\n * [x] $CFGS/b/Bison/Bison-3.0.5-GCCcore-7.3.0.eb (module: Bison/3.0.5-GCCcore-7.3.0)\n * [x] $CFGS/f/flex/flex-2.6.4-GCCcore-7.3.0.eb (module: flex/2.6.4-GCCcore-7.3.0)\n * [x] $CFGS/b/binutils/binutils-2.30-GCCcore-7.3.0.eb (module: binutils/2.30-GCCcore-7.3.0)\n * [ ] $CFGS/n/ncurses/ncurses-6.1-GCCcore-7.3.0.eb (module: ncurses/6.1-GCCcore-7.3.0)\n * [ ] $CFGS/c/CMake/CMake-3.11.4-GCCcore-7.3.0.eb (module: CMake/3.11.4-GCCcore-7.3.0)\n * [x] $CFGS/a/Autoconf/Autoconf-2.69-GCCcore-7.3.0.eb (module: Autoconf/2.69-GCCcore-7.3.0)\n * [x] $CFGS/a/Automake/Automake-1.16.1-GCCcore-7.3.0.eb (module: Automake/1.16.1-GCCcore-7.3.0)\n * [x] $CFGS/g/GCC/GCC-7.3.0-2.30.eb (module: GCC/7.3.0-2.30)\n * [ ] $CFGS/p/pkg-config/pkg-config-0.29.2-GCCcore-7.3.0.eb (module: pkg-config/0.29.2-GCCcore-7.3.0)\n * [ ] $CFGS/c/cURL/cURL-7.60.0-GCCcore-7.3.0.eb (module: cURL/7.60.0-GCCcore-7.3.0)\n * [x] $CFGS/l/libtool/libtool-2.4.6-GCCcore-7.3.0.eb (module: libtool/2.4.6-GCCcore-7.3.0)\n * [ ] $CFGS/s/Szip/Szip-2.1.1-GCCcore-7.3.0.eb (module: Szip/2.1.1-GCCcore-7.3.0)\n * [x] $CFGS/o/OpenBLAS/OpenBLAS-0.3.1-GCC-7.3.0-2.30.eb (module: OpenBLAS/0.3.1-GCC-7.3.0-2.30)\n * [ ] $CFGS/t/tcsh/tcsh-6.20.00-GCCcore-7.3.0.eb (module: tcsh/6.20.00-GCCcore-7.3.0)\n * [ ] $CFGS/j/JasPer/JasPer-2.0.14-GCCcore-7.3.0.eb (module: JasPer/2.0.14-GCCcore-7.3.0)\n * [x] $CFGS/a/Autotools/Autotools-20180311-GCCcore-7.3.0.eb (module: Autotools/20180311-GCCcore-7.3.0)\n * [ ] $CFGS/d/Doxygen/Doxygen-1.8.14-GCCcore-7.3.0.eb (module: Doxygen/1.8.14-GCCcore-7.3.0)\n * [x] $CFGS/n/numactl/numactl-2.0.11-GCCcore-7.3.0.eb (module: numactl/2.0.11-GCCcore-7.3.0)\n * [x] $CFGS/x/xorg-macros/xorg-macros-1.19.2-GCCcore-7.3.0.eb (module: xorg-macros/1.19.2-GCCcore-7.3.0)\n * [x] $CFGS/l/libpciaccess/libpciaccess-0.14-GCCcore-7.3.0.eb (module: libpciaccess/0.14-GCCcore-7.3.0)\n * [x] $CFGS/n/ncurses/ncurses-6.0.eb (module: ncurses/6.0)\n * [x] $CFGS/g/gettext/gettext-0.19.8.1.eb (module: gettext/0.19.8.1)\n * [x] $CFGS/x/XZ/XZ-5.2.4-GCCcore-7.3.0.eb (module: XZ/5.2.4-GCCcore-7.3.0)\n * [x] $CFGS/l/libxml2/libxml2-2.9.8-GCCcore-7.3.0.eb (module: libxml2/2.9.8-GCCcore-7.3.0)\n * [x] $CFGS/h/hwloc/hwloc-1.11.10-GCCcore-7.3.0.eb (module: hwloc/1.11.10-GCCcore-7.3.0)\n * [x] $CFGS/o/OpenMPI/OpenMPI-3.1.1-GCC-7.3.0-2.30.eb (module: OpenMPI/3.1.1-GCC-7.3.0-2.30)\n * [x] $CFGS/g/gompi/gompi-2018b.eb (module: gompi/2018b)\n * [x] $CFGS/f/FFTW/FFTW-3.3.8-gompi-2018b.eb (module: FFTW/3.3.8-gompi-2018b)\n * [x] $CFGS/s/ScaLAPACK/ScaLAPACK-2.0.2-gompi-2018b-OpenBLAS-0.3.1.eb (module: ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.3.1)\n * [x] $CFGS/f/foss/foss-2018b.eb (module: foss/2018b)\n * [ ] $CFGS/h/HDF5/HDF5-1.10.2-foss-2018b.eb (module: HDF5/1.10.2-foss-2018b)\n * [ ] $CFGS/n/netCDF/netCDF-4.6.1-foss-2018b.eb (module: netCDF/4.6.1-foss-2018b)\n * [ ] $CFGS/n/netCDF-Fortran/netCDF-Fortran-4.4.4-foss-2018b.eb (module: netCDF-Fortran/4.4.4-foss-2018b)\n * [ ] $CFGS/w/WRF/WRF-4.0.2-foss-2018b-dmpar.eb (module: WRF/4.0.2-foss-2018b-dmpar)\n== Temporary log file(s) /tmp/eb-eEnBF5/easybuild-pvrvNP.log* have been removed.\n== Temporary directory /tmp/eb-eEnBF5 has been removed.\n</code></pre>"},{"location":"typical-workflow-example-with-wrf/#installing-a-software-stack","title":"Installing a software stack","text":"<p>To make EasyBuild build and install WRF, including all of its dependencies, a single command is sufficient.</p> <p>By using the <code>--robot</code>/<code>-r</code> (see Enabling dependency resolution, <code>--robot</code> / <code>-r</code> and <code>--robot-paths</code>) command line option, we enable dependency resolution such that the entire software stack is handled:</p> <pre><code>$ eb WRF-4.0.2-foss-2018b-dmpar.eb --robot\n== temporary log file in case of crash /tmp/eb-LfQa8b/easybuild-TBXLTy.log\n== resolving dependencies ...\n== processing EasyBuild easyconfig /home/example/.local/easybuild/software/EasyBuild/4.1.1/easybuild/easyconfigs/n/ncurses/ncurses-6.1-GCCcore-7.3.0.eb\n== building and installing ncurses/6.1-GCCcore-7.3.0...\n[...]\n== building and installing tcsh/6.20.00-GCCcore-7.3.0...\n[...]\n== building and installing CMake/3.11.4-GCCcore-7.3.0...\n[...]\n== building and installing JasPer/2.0.14-GCCcore-7.3.0...\n[...]\n== building and installing pkg-config/0.29.2-GCCcore-7.3.0...\n[...]\n== building and installing Doxygen/1.8.14-GCCcore-7.3.0...\n..]\n== building and installing cURL/7.60.0-GCCcore-7.3.0...\n[...]\n== building and installing Szip/2.1.1-GCCcore-7.3.0...\n[...]\n== building and installing HDF5/1.10.2-foss-2018b...\n[...]\n== building and installing netCDF/4.6.1-foss-2018b...\n[...]\n== building and installing netCDF-Fortran/4.4.4-foss-2018b...\n[...]\n== building and installing WRF/4.0.2-foss-2018b-dmpar...\n[...]\n== Build succeeded for 12 out of 12\n== Temporary log file(s) /tmp/eb-LfQa8b/easybuild-TBXLTy.log* have been removed.\n== Temporary directory /tmp/eb-LfQa8b has been removed.\n</code></pre> <p>Once the installation has succeeded, modules will be available for WRF and all of its dependencies:</p> <pre><code>$ module load WRF\n$ module list\n$ module list\n\nCurrently Loaded Modules:\n  1) EasyBuild/4.1.1                  13) gompi/2018b\n  2) GCCcore/7.3.0                    14) FFTW/3.3.8-gompi-2018b\n  3) zlib/1.2.11-GCCcore-7.3.0        15) ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.3.1\n  4) binutils/2.30-GCCcore-7.3.0      16) foss/2018b\n  5) GCC/7.3.0-2.30                   17) JasPer/2.0.14-GCCcore-7.3.0\n  6) numactl/2.0.11-GCCcore-7.3.0     18) Szip/2.1.1-GCCcore-7.3.0\n  7) XZ/5.2.4-GCCcore-7.3.0           19) HDF5/1.10.2-foss-2018b\n  8) libxml2/2.9.8-GCCcore-7.3.0      20) cURL/7.60.0-GCCcore-7.3.0\n  9) libpciaccess/0.14-GCCcore-7.3.0  21) netCDF/4.6.1-foss-2018b\n 10) hwloc/1.11.10-GCCcore-7.3.0      22) netCDF-Fortran/4.4.4-foss-2018b\n 11) OpenMPI/3.1.1-GCC-7.3.0-2.30     23) WRF/4.0.2-foss-2018b-dmpar\n 12) OpenBLAS/0.3.1-GCC-7.3.0-2.30\n</code></pre> <p>For more information, see the other topics discussed in the documentation (see Introductory topics).</p>"},{"location":"unit-tests/","title":"Unit tests","text":"<p>Since EasyBuild v1.0, an extensive suite of unit tests has been implemented. The unit tests have become an indispensable factor in keeping EasyBuild stable and backward-compatible during development.</p> <p>We refer to the available tests as unit tests, even though they may not be unit tests in the strict sense of the word. Some tests are actually end-to-end tests or integration tests, see also https://en.wikipedia.org/wiki/Software_testing#Testing_levels.</p> <p>Following the test-driven development paradigm, additional unit tests are implemented when new features are added or when bugs are uncovered (and fixed).</p>"},{"location":"unit-tests/#unit_tests_what","title":"What the unit tests are not","text":"<p>Each of the EasyBuild unit tests aim to test a specific characteristic of EasyBuild, e.g., a configuration option, a particular function or method in the EasyBuild framework, some specific feature, how EasyBuild handles a particular type of input, etc.</p> <p>The unit tests do not test the build and installation process of particular supported software packages (other than a handful of toy ones included in the tests themselves), let alone test the software installations obtained using EasyBuild themselves.</p> <p>Each stable EasyBuild release is subjected to a (time- and resource-consuming) regression test, however, which is out of scope here.</p>"},{"location":"unit-tests/#unit_tests_suites","title":"Available unit test suites","text":"<p>Three different unit test suites are available for EasyBuild, each of which tied to one of the EasyBuild code repositories on GitHub: EasyBuild framework, easyblocks, easyconfigs.</p>"},{"location":"unit-tests/#unit_tests_framework","title":"EasyBuild framework unit tests","text":"<p>The unit test suite for the EasyBuild framework is by far the most extensive one, in terms of code size, coverage and the amount of effort that is put into it.</p> <p>These tests probe the functionality provided by the EasyBuild framework, ranging from standard operation (building and installing software, and generating module files) to specific configuration options, selected functional aspects, optional features and edge cases.</p> <p>At the time of writing (EasyBuild v2.0), more than 250 tests were implemented, organised in 28 subgroups.</p> <p>Running the full EasyBuild framework unit test suite takes about 15-40 minutes, depending on your system resources and testing configuration.</p>"},{"location":"unit-tests/#unit_tests_easyblocks","title":"easyblocks unit tests","text":"<p>The easyblocks unit test suite consists of a coupe of light-weight tests that are run per easyblock:</p> <ul> <li>initialising the easyblock, to check for Python syntax errors and faulty imports</li> <li>checking for the use of deprecated (or no longer supported) functionality</li> </ul> <p>Running the full easyblocks unit test suite takes less than one minute.</p>"},{"location":"unit-tests/#unit_tests_easyconfigs","title":"easyconfigs unit tests","text":"<p>The easyconfigs unit test suite consists a couple of tests for each of the available easyconfig files, followed by two large-scale overall tests.</p> <p>For each of the available easyconfig files, the following aspects are tested:</p> <ul> <li>parsing the easyconfig file, to make sure no syntax errors are present</li> <li>verifying that the filename matches the contents of the easyconfig file (software name/version, version suffix and   toolchain name/version)</li> <li>creating an <code>EasyBlock</code> instance using the parsed easyconfig, to check whether mandatory easyconfig parameters   are defined</li> <li>ensuring that all required patch files are available (right next to the easyconfig file)</li> <li>making sure that the specified sanity check paths adhere to the requirements, i.e. only (and both) the <code>files</code>/<code>dirs</code>   keys are listed, with the value for either one being non-empty</li> <li>checking for the use of deprecated (or no longer supported) functionality</li> <li>verifying whether <code>eb --check-style</code> on the easyconfig file passes</li> <li>ensuring SHA256 checksums are included in new or changed easyconfig files</li> </ul> <p>If these tests pass for each and every available easyconfig file, two additional overall tests are run, i.e.:</p> <ul> <li>ensuring that an easyconfig file is available for each specified dependency</li> <li>checking whether any version conflicts occur in the dependency graph for each easyconfig file</li> </ul> <p>Running the full easyconfigs unit test suite should only take a couple of minutes.</p>"},{"location":"unit-tests/#unit_tests_applications","title":"Applications","text":"<p>The unit test suites are automatically triggered for:</p> <ul> <li>each pull request (update)</li> <li>each (set of) change(s) that is merged in (usually via a pull request)</li> </ul> <p>The status of the different unit test suites is tracked separately for the <code>main</code> and <code>develop</code> branches of the EasyBuild code repositories:</p> <ul> <li><code>main</code> (stable, latest EasyBuild release)</li> <li><code>develop</code> (development, potentially unstable)</li> </ul> <p>We strictly adhere to the policy of only merging pull requests for which the corresponding (latest) run of the full unit test suite passes successfully.</p>"},{"location":"unit-tests/#unit_tests_usage","title":"Usage","text":"<p>Using the unit tests is deliberately kept very simple.</p>"},{"location":"unit-tests/#unit_tests_config","title":"Configuration","text":"<p>Since EasyBuild v2.0, the unit test suites are fully isolated from any (system- or user-level) EasyBuild configuration which is in place in the environment where the tests are being run.</p> <p>The easyblocks and easyconfigs unit test suite are oblivious to any defined configuration options.</p> <p>For the EasyBuild framework unit tests, all configuration files and <code>EASYBUILD_</code>-prefixed environment variables are ignored.</p> <p>To enable running the EasyBuild framework unit test suite under a specific configuration that differs from the default, environment variables can be defined for each of the configuration options supported by EasyBuild.</p> <p>Before starting a set of EasyBuild framework tests, all defined environment variables for which the name is prefixed by <code>TEST_EASYBUILD_</code> will be injected into the test environment as environment variables prefixed with <code>EASYBUILD_</code> instead. Thus, to set a particular configuration option <code>--foo</code>, you should define the environment variable <code>$TEST_EASYBUILD_FOO</code>.</p>"},{"location":"unit-tests/#unit_tests_modules_tool","title":"Modules tool to use for running tests","text":"<p>One particular configuration option worth mentioning explicitly is the modules tool that is to be used by the EasyBuild framework, which is by default the traditional Tcl/C environment modules, referred to as <code>EnvironmentModulesC</code> in EasyBuild configuration terms (see <code>eb --help</code> and <code>eb --avail-modules-tools</code>).</p> <p>To run the EasyBuild framework unit tests with a particular modules tool, simply define the <code>$TEST_EASYBUILD_MODULES_TOOL</code> environment variable with the corresponding value. For example::</p> <pre><code>export TEST_EASYBUILD_MODULES_TOOL=Lmod\n</code></pre> <p>Just like for EasyBuild itself, the EasyBuild framework unit test suite expects that the modules tool binary/script (<code>modulecmd</code>, <code>modulecmd.tcl</code> or <code>lmod</code>) is available via <code>$PATH</code>, see Required modules tool.</p>"},{"location":"unit-tests/#unit_tests_github_token","title":"Installing a GitHub token for the unit tests","text":"<p>Some of the EasyBuild framework unit tests require that a GitHub token is in place for the <code>easybuild_test</code> user, in a non-encrypted keyring (so it can be obtained without having to provide a password).</p> <p>This can be done as follows (copy-paste the GitHub token at the <code>Password:</code> prompt)::</p> <pre><code>$ python\n&gt;&gt;&gt; import getpass, keyring\n&gt;&gt;&gt; keyring.set_keyring(keyring.backends.file.PlaintextKeyring())\n&gt;&gt;&gt; keyring.set_password('github_token', 'easybuild_test', getpass.getpass())\nPassword:\n&gt;&gt;&gt; exit()\n</code></pre> <p>More details about obtaining and installing a GitHub token in your keyring are available at https://github.com/easybuilders/easybuild/wiki/Review-process-for-contributions#setting-things-up.</p>"},{"location":"unit-tests/#unit_tests_running","title":"Running","text":"<p>To run a full unit test suite, simply run the respective <code>suite</code> Python module.</p> <ul> <li>EasyBuild framework: <code>python -m test.framework.suite</code></li> <li>easyblocks: <code>python -m test.easyblocks.suite</code></li> <li>easyconfigs: <code>python -m test.easyconfigs.suite</code></li> </ul> <p>For the EasyBuild framework unit tests, each of the test subgroups can be run separately via a dedicated Python module other than <code>suite</code>, to focus on testing a particular aspect. See https://github.com/easybuilders/easybuild-framework/tree/main/test/framework for an overview of the available Python modules corresponding to subgroups of tests (note: <code>__init__.py</code> and <code>utilities.py</code> are not such modules).</p> <p>For example, to run the full EasyBuild framework unit test suite using Lmod as a modules tool::</p> <pre><code>export TEST_EASYBUILD_MODULES_TOOL=Lmod\npython -m test.framework.suite\n</code></pre> <p>To only run the subgroup of tests for <code>filetools</code>::</p> <pre><code>python -m test.framework.filetools\n</code></pre> <p>Since EasyBuild v2.8.2, tests can be filtered by name. Simply add the string to filter with to the test command.</p> <p>For example, to run only the tests containing the word <code>load</code> in the subgroup <code>modules</code>, run::</p> <pre><code>$ python -m test.framework.modules load\n\nFiltered ModulesTest tests using 'load', retained 2/19 tests: test_load, test_load_in_hierarchy\n..\n----------------------------------------------------------------------\nRan 2 tests in 2.688s\n\nOK\n</code></pre> <p>This works with as many filter words as you want to use. For example, to run every test method in <code>modules</code> containing the words <code>load</code> or <code>bash</code>:</p> <pre><code>python -m test.framework.modules load bash\n</code></pre>"},{"location":"unit-tests/#unit_tests_results","title":"Results","text":"<p>The test results will be printed as the unit test suite progresses, potentially producing a lot of information for failing tests to help determine the cause of the failure. It may thus be useful to capture the output for later inspection, for example::</p> <pre><code>python -m test.framework.suite 2&gt;&amp;1 | tee eb_test.log\n</code></pre>  <p>Note</p> <p>Some tests will be skipped deliberately, because of missing optional dependencies or other provisions, for example a GitHub token. The output of the unit tests will clearly indicate which tests were skipped.</p>"},{"location":"unit-tests/#unit_tests_examples","title":"Examples","text":"<p>A successful run of the EasyBuild framework test suite, without skipped tests::</p> <pre><code>$ python -m test.framework.suite\nRunning tests...\n----------------------------------------------------------------------\n..........................................................................................................................................................................................................................................................\n----------------------------------------------------------------------\nRan 250 tests in 1404.897s\n\nOK\n</code></pre> <p>A run with a couple of deliberately skipped tests and a single failed test (denoted by <code>F</code>), along with the corresponding traceback::</p> <pre><code>$ python -m test.framework.suite\nRunning tests...\n----------------------------------------------------------------------\n................Skipping test_from_pr, no GitHub token available?\n.Skipping test_from_pr, no GitHub token available?\n......F..............(skipping GitRepository test)\n..(skipping SvnRepository test)\n..................................................................................................................Skipping test_fetch_easyconfigs_from_pr, no GitHub token available?\n.Skipping test_read, no GitHub token available?\n.Skipping test_read_api, no GitHub token available?\n.Skipping test_walk, no GitHub token available?\n.............................................................................................\n======================================================================\nFAIL: Test listing easyblock hierarchy.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/tmp/example/easybuild-framework/test/framework/options.py\", line 544, in test_list_easyblocks\n    self.assertTrue(re.search(pat, outtxt), \"Pattern '%s' is found in output of --list-easyblocks: %s\" % (pat, outtxt))\nAssertionError: Pattern 'EasyBlock\\n' is found in output of --list-easyblocks:\n\n----------------------------------------------------------------------\nRan 250 tests in 2641.200s\n\nFAILED (failures=1)\nERROR: Not all tests were successful.\nLog available at /tmp/example/easybuild-dy2ZTx/easybuild-tests-l0doQ2.log\n</code></pre>"},{"location":"useful-scripts/","title":"Useful scripts","text":"<p>A couple of useful stand-alone scripts are provided along with the EasyBuild framework.</p> <p>The latest stable version of these scripts is available in the <code>easybuild-framework</code> GitHub repository at https://github.com/easybuilders/easybuild-framework/tree/main/easybuild/scripts.</p> <p>This documentation provides some information on how to use these scripts.</p>"},{"location":"useful-scripts/#install_EasyBuild_develop_script","title":"<code>install-EasyBuild-develop.sh</code>","text":"<p>download from: https://github.com/easybuilders/easybuild-framework/blob/main/easybuild/scripts/install-EasyBuild-develop.sh</p> <p>A script to set up an EasyBuild development environment. For more information, see Installation of latest development version using provided script.</p>"},{"location":"useful-scripts/#clean_gists_script","title":"<code>clean_gists.py</code>","text":"<p>download from: https://github.com/easybuilders/easybuild-framework/blob/main/easybuild/scripts/clean_gists.py</p> <p>When using <code>--from-pr</code> in combination with <code>--upload-test-report</code> (see https://github.com/easybuilders/easybuild/wiki/Review-process-for-contributions#automated-testing-of-easyconfigs-pull-requests), you can end up with a bunch of gists in your GitHub account containing test reports, that may no longer be relevant.</p> <p>To help with that the <code>clean_gists.py</code> script is available, to clean up gists containing test reports:</p> <ul> <li><code>clean_gists.py -p</code>: delete all gists from closed pull requests     (default action if no other action is specified)</li> <li><code>clean_gists.py -a</code>: delete all gists generated by Easybuild</li> <li><code>clean_gists.py -o</code>: delete all gists without a matching pull     request (created by using <code>--upload-test-report</code> without <code>--from-pr</code>)</li> </ul> <p>By default, the script will use the same GitHub account that Easybuild uses (see <code>--github-user</code>); to specify a different GitHub account, use <code>-g</code>.</p> <p>The script expects that a valid GitHub token for the used GitHub account username is available, see Installing a GitHub token.</p>"},{"location":"using-easybuild/","title":"Using the EasyBuild command line","text":"<p>Basic usage of EasyBuild is described in the following sections, covering the most important range of topics if you are new to EasyBuild.</p> <p><code>eb</code> is EasyBuild\u2019s main command line tool, to interact with the EasyBuild framework and hereby the most common command line options are being documented.</p>"},{"location":"using-easybuild/#specifying_easyconfigs","title":"Specifying what to install","text":"<p>To instruct EasyBuild which software packages it should build/install and which build parameters it should use, one or more easyconfig files must be specified.</p> <p>This can be done in a number of ways:</p> <ul> <li>by providing a single easyconfig file</li> <li>via command line options</li> <li>by providing a set of easyconfig files</li> <li>using <code>eb --from-pr</code></li> </ul> <p>Whenever EasyBuild searches for explicitly specified easyconfig files, it considers a couple of locations, i.e. (in order of preference):</p> <ul> <li>(i)   the local working directory</li> <li>(ii)  the robot search path (see robot search path)</li> <li>(iii) the path to easyconfig files that are part of the active EasyBuild installation         (which is included in the default robot search path)</li> </ul> <p>These locations are only considered for easyconfig files that are specified only by filename or using a relative path, not for easyconfig files that are specified via an absolute path. The dependencies are resolved using the robot search path (see robot search path).</p>  <p>Note</p> <p>For easyconfig files specified on the <code>eb</code> command line, the full robot search path is only considered since EasyBuild v2.0.0. Earlier versions only considered the local working directory and the easyconfig files that are part of the active EasyBuild installation for explicitly specified easyconfig files.</p>"},{"location":"using-easybuild/#specifying_easyconfigs_single","title":"By providing a single easyconfig file","text":"<p>The most basic usage is to simply provide the name of an easyconfig file to the <code>eb</code> command. EasyBuild will (try and) locate the easyconfig file, and perform the installation as specified by that easyconfig file.</p> <p>For example, to build and install <code>HPL</code> using the <code>foss/2021b</code> toolchain:</p> <pre><code>$ eb HPL-2.3-foss-2021b.eb --robot\n[...]\n== building and installing GCC/11.2.0...\n[...]\n== building and installing foss/2021b...\n[...]\n== building and installing HPL/2.3-foss-2021b...\n== fetching files...\n== creating build dir, resetting environment...\n== unpacking...\n== patching...\n== preparing...\n== configuring...\n== building...\n== testing...\n== installing...\n== taking care of extensions...\n== packaging...\n== postprocessing...\n== sanity checking...\n== cleaning up...\n== creating module...\n== COMPLETED: Installation ended successfully\n== Results of the build can be found in the log file /home/example/.local/easybuild/software/HPL/2.3-foss-2021b/easybuild/easybuild-HPL-2.3-20221027.223237.log\n== Build succeeded for 9 out of 9\n</code></pre> <p>Then, we can actually load the freshly installed HPL module:</p> <pre><code>$ module load HPL/2.3-foss-2021b\n$ which xhpl\n/home/example/.local/easybuild/software/HPL/2.3-foss-2021b/bin/xhpl\n</code></pre> <p>All easyconfig file names' suffixes are <code>.eb</code> and follow format: <code>&lt;name&gt;-&lt;version&gt;-&lt;toolchain&gt;&lt;versionsuffix&gt;</code></p> <p>This is a crucial design aspect, since the dependency resolution mechanism (see robot) relies upon this convention.</p>  <p>Tip</p> <p>You may wish to modify the installation prefix (e.g., using <code>--prefix</code> or by defining <code>$EASYBUILD_PREFIX</code>), in order to redefine the build/install/source path prefix to be used; default value is: <code>$HOME/.local/easybuild</code>; see Configuration</p>"},{"location":"using-easybuild/#specifying_easyconfigs_command_line","title":"Via command line options","text":"<p>An alternative approach is to only use command line options to specify which software to build. Refer to the <code>Software search and build options</code> section in the <code>eb --help</code> output for an overview of the available command line options for this purpose (see also <code>--help</code>).</p> <p>Here is how to build and install last version of HPL (that EasyBuild is aware of) using the <code>foss/2021b</code> toolchain:</p> <pre><code>$ eb --software-name=HPL --toolchain=foss,2021b\n[...]\n== building and installing HPL/2.3-foss-2021b...\n[...]\n== COMPLETED: Installation ended successfully\n[...]\n</code></pre> <p>At this point, a module <code>HPL/2.3-foss-2021b</code> should have been installed.</p>"},{"location":"using-easybuild/#specifying_easyconfigs_set_of_easyconfigs","title":"By providing a set of easyconfig files","text":"<p>Multiple easyconfig files can be provided as well, either directly or by specifying a directory that contains easyconfig files.</p> <p>For example, to build and install both HPL and GCC with a single command, simply list the easyconfigs for both on the <code>eb</code> command line (note that HPL is not being reinstalled, since a matching module is already available):</p> <pre><code>$ eb HPL-2.3-foss-2021b.eb GCC-12.2.0.eb\n[...]\n== HPL/2.3-foss-2021b is already installed (module found), skipping\n[...]\n== building and installing GCC/12.2.0...\n[...]\n== Build succeeded for 1 out of 1\n[...]\n</code></pre> <p>When one or more directories are provided, EasyBuild will (recursively) traverse them to find easyconfig files. For example:</p> <pre><code>$ find set_of_easyconfigs/ -type f\nset_of_easyconfigs/GCC-12.2.0.eb\nset_of_easyconfigs/foo.txt\nset_of_easyconfigs/tools/HPL-2.3-foss-2021b.eb\n</code></pre> <pre><code>$ eb set_of_easyconfigs/\n== temporary log file in case of crash /tmp/easybuild-1yxCvv/easybuild-NeNmZr.log\n== HPL/2.3-foss-2021b is already installed (module found), skipping\n== GCC/12.2.0 is already installed (module found), skipping\n== No easyconfigs left to be built.\n== Build succeeded for 0 out of 0\n</code></pre>  <p>Note</p> <p>EasyBuild will only pick up the files which end with <code>.eb</code> -- anything else will be ignored.</p>   <p>Tip</p> <p>Calling EasyBuild is designed as an idempotent operation; if a module is available that matches with an provided easyconfig file, the installation will simply be skipped.</p>"},{"location":"using-easybuild/#commonly-used-command-line-options","title":"Commonly used command line options","text":""},{"location":"using-easybuild/#command-line-help","title":"Command line help","text":"<p>(<code>--help</code>, <code>-H</code>)</p> <p>Detailed information about the usage of the eb command is available via the <code>--help</code>, <code>-H</code>, <code>-h</code> help options.</p>  <p>Note</p> <p><code>--help</code> / <code>-H</code> spit out the long help info (i.e. including long option names), <code>-h</code> only includes short option names.</p>   <p>Tip</p> <p>This is the best way to query for certain information, esp. recent features, since this is in sync with the actual EasyBuild version being used.</p>"},{"location":"using-easybuild/#report-version","title":"Report version","text":"<p>(<code>--version</code>)</p> <p>You can query which EasyBuild version you are using with <code>--version</code>:</p> <pre><code>$ eb --version\nThis is EasyBuild 4.6.2 (framework: 4.6.2, easyblocks: 4.6.2) on host example.local.\n</code></pre>  <p>Tip</p> <p>Asking EasyBuild to print own its version is a quick way to ensure that <code>$PYTHONPATH</code> is set up correctly, so that the entire EasyBuild installation (framework and easyblocks) is available.</p>"},{"location":"using-easybuild/#list_toolchains","title":"List of known toolchains","text":"<p>(<code>--list-toolchains</code>)</p> <p>For an overview of known toolchains, use <code>eb --list-toolchains</code>.</p> <p>The complete table of available toolchains is available here.</p>"},{"location":"using-easybuild/#list_easyblocks","title":"List of available easyblocks","text":"<p>(<code>--list-easyblocks</code>)</p> <p>You can obtain a list of available easyblocks via <code>--list-easyblocks</code>.</p> <p>The <code>--list-easyblocks</code> command line option prints the easyblocks in a hierarchical way, showing the inheritance patterns, with the \"base\" easyblock class <code>EasyBlock</code> on top.</p> <p>Software-specific easyblocks have a name that starts with <code>EB_</code>; the ones that do not are generic easyblocks. (see easyblocks for the distinction between both types of easyblocks).</p> <p>For example, a list of easyblocks can be obtained with:</p> <pre><code>eb --list-easyblocks\n</code></pre> <p>To see more details about the available easyblocks, i.e., in which Python module the class is defined, and where it is located, use <code>--list-easyblocks=detailed</code>.</p>"},{"location":"using-easybuild/#avail_easyconfig_params","title":"All available easyconfig parameters","text":"<p>(<code>--avail-easyconfig-params</code> / <code>-a</code>)</p> <p>EasyBuild provides a significant amount of easyconfig parameters. An overview of all available easyconfig parameters can be obtained via <code>eb --avail-easyconfig-params</code>, or <code>eb -a</code> for short.</p> <p>See available easyconfig parameters for more information, the supported parameters are a very rich set.</p> <p>Combine -a with <code>--easyblock</code>/<code>-e</code> to include parameters that are specific to a particular easyblock.</p>  Overview of easyconfig parameters, including those specific to the easyblock for WRF (indicated with (<code>*</code>)): <pre><code>$ eb -a -e EB_WRF\n\nAvailable easyconfig parameters (* indicates specific for the EB_WRF EasyBlock)\nMANDATORY\n---------\nbuildtype(*):         Specify the type of build (serial, smpar (OpenMP), dmpar (MPI), dm+sm (hybrid OpenMP/MPI)). (default: None)\ndescription:          A short description of the software (default: None)\ndocurls:              List of urls with documentation of the software (not necessarily on homepage) (default: None)\nhomepage:             The homepage of the software (default: None)\nname:                 Name of software (default: None)\nsoftware_license:     Software license (default: None)\nsoftware_license_urls:        List of software license locations (default: None)\ntoolchain:            Name and version of toolchain (default: None)\nversion:              Version of software (default: None)\n\nEASYBLOCK-SPECIFIC\n------------------\nrewriteopts(*):       Replace -O3 with CFLAGS/FFLAGS (default: True)\nruntest(*):           Build and run WRF tests (default: True)\n\nTOOLCHAIN\n---------\nonlytcmod:            Boolean/string to indicate if the toolchain should only load the environment with module (True) or also set all other variables (False) like compiler CC etc (if string: comma separated list of variables that will be ignored). (default: False)\ntoolchainopts:        Extra options for compilers (default: None)\n\nBUILD\n-----\nbuildopts:            Extra options passed to make step (default already has -j X) (default: )\nchecksums:            Checksums for sources and patches (default: [])\nconfigopts:           Extra options passed to configure (default already has --prefix) (default: )\neasyblock:            EasyBlock to use for building (default: ConfigureMake)\neasybuild_version:    EasyBuild-version this spec-file was written for (default: None)\ninstallopts:          Extra options for installation (default: )\nmaxparallel:          Max degree of parallelism (default: None)\nparallel:             Degree of parallelism for e.g. make (default: based on the number of cores, active cpuset and restrictions in ulimit) (default: None)\npatches:              List of patches to apply (default: [])\npostinstallcmds:      Commands to run after the install step. (default: [])\nprebuildopts:         Extra options pre-passed to build command. (default: )\npreconfigopts:        Extra options pre-passed to configure. (default: )\npreinstallopts:       Extra prefix options for installation. (default: )\nruntest(*):           Indicates if a test should be run after make; should specify argument after make (for e.g.,\"test\" for make test) (default: None)\nsanity_check_commands:        format: [(name, options)] e.g. [('gzip','-h')]. Using a non-tuple is equivalent to (name, '-h') (default: [])\nsanity_check_paths:   List of files and directories to check (format: {'files':&lt;list&gt;, 'dirs':&lt;list&gt;}) (default: {})\nskip:                 Skip existing software (default: False)\nskipsteps:            Skip these steps (default: [])\nsource_urls:          List of URLs for source files (default: [])\nsources:              List of source files (default: [])\nstop:                 Keyword to halt the build process after a certain step. (default: None)\ntests:                List of test-scripts to run after install. A test script should return a non-zero exit status to fail (default: [])\nunpack_options:       Extra options for unpacking source (default: None)\nunwanted_env_vars:    List of environment variables that shouldn't be set during build (default: [])\nversionprefix:        Additional prefix for software version (placed before version and toolchain name) (default: )\nversionsuffix:        Additional suffix for software version (placed after toolchain name) (default: )\n\nFILE-MANAGEMENT\n---------------\nbuildininstalldir:    Boolean to build (True) or not build (False) in the installation directory (default: False)\ncleanupoldbuild:      Boolean to remove (True) or backup (False) the previous build directory with identical name or not. (default: True)\ncleanupoldinstall:    Boolean to remove (True) or backup (False) the previous install directory with identical name or not. (default: True)\ndontcreateinstalldir: Boolean to create (False) or not create (True) the install directory (default: False)\nkeeppreviousinstall:  Boolean to keep the previous installation with identical name. Experts only! (default: False)\nkeepsymlinks:         Boolean to determine whether symlinks are to be kept during copying or if the content of the files pointed to should be copied (default: False)\nstart_dir:            Path to start the make in. If the path is absolute, use that path. If not, this is added to the guessed path. (default: None)\n\nDEPENDENCIES\n------------\nallow_system_deps:    Allow listed system dependencies (format: (&lt;name&gt;, &lt;version&gt;)) (default: [])\nbuilddependencies:    List of build dependencies (default: [])\ndependencies:         List of dependencies (default: [])\nhiddendependencies:   List of dependencies available as hidden modules (default: [])\nosdependencies:               OS dependencies that should be present on the system (default: [])\n\nLICENSE\n-------\ngroup:                Name of the user group for which the software should be available (default: None)\nkey:                  Key for installing software (default: None)\nlicense_file:         License file for software (default: None)\nlicense_server:       License server for software (default: None)\nlicense_server_port:  Port for license server (default: None)\n\nEXTENSIONS\n----------\nexts_classmap:        Map of extension name to class for handling build and installation. (default: {})\nexts_defaultclass:    List of module for and name of the default extension class (default: None)\nexts_filter:          Extension filter details: template for cmd and input to cmd (templates for name, version and src). (default: None)\nexts_list:            List with extensions added to the base installation (default: [])\n\nMODULES\n-------\ninclude_modpath_extensions: Include $MODULEPATH extensions specified by module naming scheme. (default: True)\nmodaliases:           Aliases to be defined in module file (default: {})\nmodextrapaths:        Extra paths to be prepended in module file (default: {})\nmodextravars:         Extra environment variables to be added to module file (default: {})\nmodloadmsg:           Message that should be printed when generated module is loaded (default: {})\nmodtclfooter:         Footer to include in generated module file (Tcl syntax) (default: )\nmoduleclass:          Module class to be used for this software (default: base)\nmoduleforceunload:    Force unload of all modules when loading the extension (default: False)\nmoduleloadnoconflict: Don't check for conflicts, unload other versions instead  (default: False)\n\nOTHER\n-----\nbuildstats:           A list of dicts with build statistics (default: None)\n</code></pre>"},{"location":"using-easybuild/#enable-debug-logging","title":"Enable debug logging","text":"<p>(<code>--debug</code> / <code>-d</code>)</p> <p>Use <code>eb --debug</code>/<code>-d</code> to enable debug logging, to include all details of how EasyBuild performed a build in the log file:</p> <pre><code>eb HPL-2.3-foss-2021b.eb --debug\n</code></pre>  <p>Tip</p> <p>You may enable this by default via adding <code>debug = True</code> in your EasyBuild configuration file.</p>   <p>Note</p> <p>Debug log files are significantly larger than non-debug logs, beware!</p>"},{"location":"using-easybuild/#rebuild_option","title":"Rebuild installation","text":"<p>(<code>--rebuild</code>)</p> <p>Use <code>eb --rebuild</code> to rebuild a given easyconfig/module.</p>  <p>Warning</p> <p>Use with care, since the reinstallation of existing modules will be done without requesting confirmation first!</p>   <p>Tip</p> <p>Combine <code>--rebuild</code> with <code>--dry-run</code> to get a good view on which installations will be rebuilt (see also Getting an overview of planned installations).</p>   <p>Note</p> <p>To create a backup of existing modules that are regenerated when <code>--rebuild</code> is used, use <code>--backup-modules</code> (see also Backing up of existing modules).</p>"},{"location":"using-easybuild/#force_option","title":"Forced reinstallation","text":"<p>(<code>--force</code> / <code>-f</code>)</p> <p>Use <code>eb --force</code>/<code>-f</code> to force the reinstallation of a given easyconfig/module. The behavior of <code>--force</code> is the same as <code>--rebuild</code> and <code>--ignore-osdeps</code>.</p>  <p>Warning</p> <p>Use with care, since the reinstallation of existing modules will be done without requesting confirmation first!</p>   <p>Tip</p> <p>Combine <code>--force</code> with <code>--dry-run</code> to get a good view on which installations will be forced (see also Getting an overview of planned installations).</p>   <p>Note</p> <p>To create a backup of existing modules that are regenerated when <code>--rebuild</code> is used, use <code>--backup-modules</code> (see also Backing up of existing modules).</p>"},{"location":"using-easybuild/#searching_for_easyconfigs","title":"Searching for easyconfigs","text":"<p>(<code>--search</code> / <code>-S</code>)</p> <p>Searching for available easyconfig files can be done using the <code>--search</code> (long output) and <code>-S</code> (short output) command line options. All easyconfig files available in the robot search path are considered (see robot search path), and searching is done case-insensitive.</p> <p>For example, to see which easyconfig files are available for the software package named <code>Mesquite</code>:</p> <pre><code>$ eb --search mesquite\n== temporary log file in case of crash /tmp/eb-_TYdTf/easybuild-iRJ2vb.log\n== Searching (case-insensitive) for 'mesquite' in /home/example/easybuild-easyconfigs/easybuild/easyconfigs\n* /home/example/easybuild-easyconfigs/easybuild/easyconfigs/m/Mesquite/Mesquite-2.3.0-GCCcore-8.3.0.eb\n</code></pre> <p>The same query with <code>-S</code> is more readable, when there is a joint path that can be collapsed to a variable like <code>$CFGS1</code>:</p> <pre><code>$ eb -S mesquite\n== temporary log file in case of crash /tmp/eb-5diJjn/easybuild-nUXlkj.log\n== Searching (case-insensitive) for 'mesquite' in /home/example/easybuild-easyconfigs/easybuild/easyconfigs\nCFGS1=/home/example/easybuild-easyconfigs/easybuild/easyconfigs/m/Mesquite\n* $CFGS1/Mesquite-2.3.0-GCCcore-8.3.0.eb\n</code></pre> <p>For more specific searching, a regular expression pattern can be supplied (since EasyBuild v2.1.1).</p> <p>For example, to search which easyconfig files are available for GCC v11.x, without listing easyconfig files that use GCC v11.x as a toolchain:</p> <pre><code>$ eb -S ^GCC-11.\n== temporary log file in case of crash /tmp/eb-PpwTwm/easybuild-b8yrOG.log\n== Searching (case-insensitive) for '^GCC-11.' in /home/example/easybuild-easyconfigs/easybuild/easyconfigs\nCFGS1=/home/example/easybuild-easyconfigs/easybuild/easyconfigs/g/GCC\n * $CFGS1/GCC-11.1.0.eb\n * $CFGS1/GCC-11.2.0.eb\n * $CFGS1/GCC-11.3.0.eb\n</code></pre> <p>Or, to find all easyconfig files for matplotlib versions 3.5.1 and 3.5.2 that use the <code>intel</code> toolchain:</p> <pre><code>$ eb -S '^matplotlib-3.5.[12].*intel'\n== temporary log file in case of crash /tmp/eb-Dv5LEJ/easybuild-xpGGSF.log\n== Searching (case-insensitive) for '^matplotlib-3.5.[12].*intel' in /home/example/easybuild-easyconfigs/easybuild/easyconfigs\nCFGS1=/home/example/easybuild-easyconfigs/easybuild/easyconfigs/m/matplotlib\n * $CFGS1/matplotlib-3.5.1-intel-2020b.eb\n * $CFGS1/matplotlib-3.5.2-intel-2022a.eb\n</code></pre>"},{"location":"using-easybuild/#use_robot","title":"Enabling dependency resolution","text":"<p>(<code>--robot</code> / <code>-r</code> and <code>--robot-paths</code>)</p> <p>EasyBuild supports installing an entire software stack, including the required toolchain if needed, with a single <code>eb</code> invocation.</p> <p>To enable dependency resolution, use the <code>--robot</code> command line option (or <code>-r</code> for short):</p> <pre><code>$ eb binutils-2.39.eb --robot\n[...]\n== building and installing zlib/1.2.12...\n[...]\n== building and installing M4/1.4.19...\n[...]\n== building and installing Bison/3.8.2...\n[...]\n== building and installing flex/2.6.4...\n[...]\n== building and installing binutils/2.39...\n[...]\n== Build succeeded for 5 out of 5\n</code></pre> <p>The dependency resolution mechanism will construct a full dependency graph for the software package(s) being installed, after which a list of dependencies is composed for which no module is available yet. Each of the retained dependencies will then be built and installed, in the required order as indicated by the dependency graph.</p>  <p>Tip</p> <p>Using <code>--robot</code> is particularly useful for software packages that have an extensive list of dependencies, or when reinstalling software using a different compiler toolchain (you can use the <code>--try-toolchain</code> command line option in combination with <code>--robot</code>).</p>   <p>Warning</p> <p>Unless dependency resolution is enabled, EasyBuid requires that modules are available for every dependency. If <code>--robot</code> is not used and one or more modules are missing, <code>eb</code> will exit with an error stating that a module for a particular dependency could not be found. For example:</p> <pre><code>Missing modules for dependencies (use --robot?): zlib/1.2.12\n</code></pre>"},{"location":"using-easybuild/#robot_search_path","title":"Searching for easyconfigs: the robot search path","text":"<p>For each dependency that does not have a matching module installed yet, EasyBuild requires a corresponding easyconfig file. If no such easyconfig file was specified on the <code>eb</code> command line, the dependency resolution mechanism will try to locate one in the <code>robot search path</code>.</p> <p>Searching for easyconfigs is done based on filename (see also What is an easyconfig (file)?), with filenames being derived from the dependency specification (i.e. software name/version, toolchain and version suffix). For each entry in the robot search path, a couple of different filepaths are considered, mostly determined by the software name.</p> <p>For example, when looking for an easyconfig for <code>OpenMPI</code> version <code>4.1.4</code> and version suffix <code>-test</code> with toolchain <code>GCC/11.3.0</code>, the following filepaths are considered (relative to each entry in the robot search path):</p> <ul> <li><code>OpenMPI/4.1.4-GCC-11.3.0-test.eb</code></li> <li><code>OpenMPI/OpenMPI-4.1.4-GCC-11.3.0-test.eb</code></li> <li><code>o/OpenMPI/OpenMPI-4.1.4-GCC-11.3.0-test.eb</code></li> <li><code>OpenMPI-4.1.4-GCC-11.3.0-test.eb</code></li> </ul>  <p>Note</p> <p>Sometimes easyconfig files are needed even when the modules for the dependencies are already available, i.e., whenever the information provided by the dependency specification (software name/version, toolchain and version suffix) is not sufficient. This is the case when using <code>--dry-run</code> to construct the complete dependency graph, or when the active module naming scheme requires some additional information (e.g., the <code>moduleclass</code>).</p>   <p>Warning</p> <p>If EasyBuild is unable to locate required easyconfigs, an appropriate error message will be shown. For example:</p> <pre><code>Irresolvable dependencies encountered: GCC/4.7.2\n</code></pre> <p>or:</p> <pre><code>Failed to find easyconfig file 'GCC-4.7.2.eb' when determining module name for: {...}\n</code></pre>"},{"location":"using-easybuild/#default-robot-search-path","title":"Default robot search path","text":"<p>By default, EasyBuild will only include the collection of easyconfig files that is part of the EasyBuild installation in the robot search path. More specifically, only directories listed in the <code>Python search path</code> (partially specified by the <code>$PYTHONPATH</code> environment variable) that contain a subdirectory named <code>easybuild/easyconfigs</code> are considered part of the robot search path (in the order they are encountered).</p>"},{"location":"using-easybuild/#controlling_robot_search_path","title":"Controlling the robot search path","text":"<p>To control the robot search path, you can specify a (colon-separated list of) path(s) to <code>--robot</code>/<code>-r</code> and/or <code>--robot-paths</code> (or, equivalently, <code>$EASYBUILD_ROBOT</code> and/or <code>$EASYBUILD_ROBOT_PATHS</code>):</p> <pre><code>eb --robot=$PWD:$HOME ...\n</code></pre> <p>These two configuration options each serve a particular purpose, and together define the robot search path:</p> <ul> <li><code>--robot</code>, <code>-r</code>:<ul> <li>intended to be used (only) as a command line option to <code>eb</code> (although it can also be defined through another   configuration type);</li> <li>enables the dependency resolution mechanism (which is disabled by default);</li> <li>optionally a list of paths can be specified, which is included first in the robot search path;</li> <li>by default, the corresponding list of paths is empty;</li> </ul> </li> <li><code>--robot-paths</code>:<ul> <li>intended to be defined in an EasyBuild configuration file, or via <code>$EASYBUILD_ROBOT_PATHS</code>;</li> <li>does not enable the dependency resolution mechanism;</li> <li>the specified list of paths is included last in the robot search path;</li> <li>by default, only the path to the easyconfig files that are part of the EasyBuild installation is listed;</li> <li>note: setting this configuration option implies redefining the default robot search path, unless a   prepending/appending list of paths is specified, see   Prepending/appending to the default robot search path;</li> </ul> </li> </ul> <p>For both options, the list of paths should be specified as a colon-separated (<code>:</code>) list.</p> <p>By combining <code>--robot</code> and <code>--robot-paths</code> using the different configuration types (see also Supported configuration types), you have full control over the robot search path: which paths are included, the order of those paths, whether or not the easyconfig files that are part of the EasyBuild installation should be considered, etc.</p> <p>A constant named <code>DEFAULT_ROBOT_PATHS</code> is available that can be used (only) in EasyBuild configuration files to refer to the default robot search path, i.e. the path to the easyconfigs that are part of the EasyBuild installation. For more information on using constants in EasyBuild configuration files, see Templates and constants supported in configuration files.</p>  <p>Tip</p> <p>Only use <code>--robot</code> to enable the dependency resolution mechanism; define <code>robot-paths</code> in your EasyBuild configuration file or via <code>$EASYBUILD_ROBOT_PATHS</code> to specify which sets of easyconfig files EasyBuild should consider, and in which order. By means of exception, a path can be specified to <code>--robot</code> to give a specific set of easyconfig files precedence over others, for example when testing modified easyconfig files.</p>   <p>Note</p> <p>The paths specified on the configuration type with the highest order of preference replace any paths specified otherwise, i.e. values are not retained across configuration types. That is: <code>--robot</code> overrides the value in <code>$EASYBUILD_ROBOT</code>, <code>$EASYBUILD_ROBOT_PATHS</code> overrides the <code>robot-paths</code> specification in an EasyBuild configuration file, etc. Of course, the value specified for <code>--robot</code> does not directly affect the value specified for <code>--robot-paths</code>, on any configuration level, and vice versa. For more information on the relation between the different configuration types, see Supported configuration types.</p>"},{"location":"using-easybuild/#robot_search_path_prepend_append","title":"Prepending/appending to the default robot search path","text":"<p>Prepending or appending to the default robot search path is supported via the <code>--robot-paths</code> configuration option.</p> <p>To prepend one or more paths, a list of paths followed by a '<code>:</code>' should be specified.</p> <p>Analogously, to append one or more paths, a list of paths preceded by a '<code>:</code>' should be specified.</p> <p>For example:</p> <ul> <li>\"<code>export EASYBUILD_ROBOT_PATHS=/tmp:</code>\" specifies to prepend <code>/tmp</code> to the robot search path;</li> <li>\"<code>--robot-paths :/tmp:$HOME/test</code>\" specifies to append <code>/tmp</code> and <code>$HOME/test</code> to the robot search path (in that order);</li> <li>\"<code>--robot-paths=/tmp::$HOME/test</code>\" specifies to prepend <code>/tmp</code> and to append <code>$HOME/test</code> to the robot search path;</li> </ul>"},{"location":"using-easybuild/#example-use-case","title":"Example use case","text":"<p>For example, say we want to configure EasyBuild to behave as follows w.r.t. the robot search path:</p> <ul> <li>(i) (always) prefer easyconfig files in the archive/repository over the ones that are included in the EasyBuild installation;</li> <li>(ii) consider easyconfig files located in the current directory or home directory first (in that order), before any others;</li> </ul> <p>Matching setup:</p> <ul> <li>satisfy (i) using <code>robot-paths</code> in one of the active EasyBuild configuration files (see also   List of configuration files):</li> </ul> <pre><code>[basic]\nrepositorypath = /home/example/easybuild/easyconfigs_archive\nrobot-paths = %(repositorypath)s:%(DEFAULT_ROBOT_PATHS)s\n</code></pre> <ul> <li>satisfy (ii) via <code>--robot</code> on the <code>eb</code> command line:</li> </ul> <pre><code>eb example.eb --robot $PWD:$HOME\n</code></pre>"},{"location":"using-easybuild/#get_an_overview","title":"Getting an overview of planned installations","text":"<p>(<code>--dry-run</code> / <code>-D</code>)</p> <p>You can do a \"dry-run\" overview by supplying <code>-D/--dry-run</code>:</p> <pre><code>$ eb binutils-2.39.eb -D\n== Temporary log file in case of crash /tmp/eb-3lh496ml/easybuild-hxmie76g.log\nDry run: printing build status of easyconfigs and dependencies\nCFGS=/Volumes/work/easybuild-easyconfigs/easybuild/easyconfigs\n * [x] $CFGS/z/zlib/zlib-1.2.12.eb (module: zlib/1.2.12)\n * [x] $CFGS/m/M4/M4-1.4.19.eb (module: M4/1.4.19)\n * [x] $CFGS/b/Bison/Bison-3.8.2.eb (module: Bison/3.8.2)\n * [ ] $CFGS/f/flex/flex-2.6.4.eb (module: flex/2.6.4)\n * [ ] $CFGS/b/binutils/binutils-2.39.eb (module: binutils/2.39)\n</code></pre> <p>Note how the different status symbols denote distinct handling states by EasyBuild:</p> <ul> <li><code>[ ]</code> The build is not available, EasyBuild will deliver it</li> <li><code>[x]</code> The build is available, EasyBuild will skip building this module</li> <li><code>[F]</code> The build is available, however EasyBuild has been asked to force a rebuild via <code>--force</code> and will do so</li> <li><code>[R]</code> The build is available, and the application will be rebuilt as request via <code>--rebuild</code></li> </ul>  <p>Note</p> <p>Since EasyBuild v2.4.0, a detailed overview of the build and install procedure that EasyBuild will be execute can be obtained using <code>--extended-dry-run</code> or <code>-x</code>, see Extended dry run.</p>"},{"location":"using-easybuild/#eb_missing","title":"Getting an overview of missing installations","text":"<p>(<code>--missing-modules</code> / <code>-M</code>)</p> <p>Since EasyBuild v3.9.1, you can obtain a list of missing installations (i.e. easyconfigs for which no corresponding environment module file is available yet) using <code>eb --missing-modules</code> (or <code>-eb -M</code> for short):</p> <pre><code>$ eb TensorFlow-1.13.1-foss-2019a-Python-3.7.2.eb --missing-modules\n== temporary log file in case of crash /tmp/eb-bjCz9b/easybuild-CSAvhK.log\n\n2 out of 54 required modules missing:\n\n* Bazel/0.20.0-GCCcore-8.2.0 (Bazel-0.20.0-GCCcore-8.2.0.eb)\n* TensorFlow/1.13.1-foss-2019a-Python-3.7.2 (TensorFlow-1.13.1-foss-2019a-Python-3.7.2.eb)\n</code></pre> <p>Note that dependency resolution is enabled automatically (i.e., <code>--robot</code> is implied when using <code>--missing-modules</code> or <code>-M</code>).</p>"},{"location":"using-easybuild/#tweaking_easyconfigs_using_try","title":"Tweaking existing easyconfig files","text":"<p>(<code>--try-*</code>)</p> <p>Making minor changes to existing easyconfig files can be done straight from the <code>eb</code> command line. This way, having to manually copying and editing easyconfig files can be avoided.</p> <p>Tweaking existing easyconfig files can be done using the <code>--try-*</code> command line options. For each of the software build options that can be used as an alternative to specifying easyconfig file names, a matching <code>--try-X</code> command line options is available:</p> <ul> <li> <p><code>--try-toolchain</code> to try using the toolchain with the given name and version</p> <ul> <li>format: <code>--try-toolchain=&lt;name&gt;,&lt;version&gt;</code></li> <li><code>--try-toolchain-name</code> to try using the latest toolchain version of a toolchain</li> <li><code>--try-toolchain-version</code> to try using a different toolchain version</li> </ul> </li> <li> <p><code>--try-software-version</code> to try building a different software version</p> </li> <li> <p><code>--try-amend</code> to try tweaking a different easyconfig parameter</p> <ul> <li>format: <code>--try-amend=&lt;param&gt;=&lt;value&gt;</code></li> <li>only supports string and list-of-strings value types</li> </ul> </li> </ul> <p>For example, to build and install BWA and its dependencies with a different toolchain version:</p> <pre><code>$ eb BWA-0.7.17-GCC-10.3.0.eb --try-toolchain-version 11.2.0 -Dr\n== Temporary log file in case of crash /tmp/eb-93m2gyhf/easybuild-_c86e81n.log\nDry run: printing build status of easyconfigs and dependencies\n ...\n * [x] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/g/GCC/GCC-11.2.0.eb (module: GCC/11.2.0)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/g/groff/groff-1.22.4-GCCcore-11.2.0.eb (module: groff/1.22.4-GCCcore-11.2.0)\n * [ ] /tmp/eb-93m2gyhf/tweaked_dep_easyconfigs/expat-2.2.9-GCCcore-11.2.0.eb (module: expat/2.2.9-GCCcore-11.2.0)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/n/ncurses/ncurses-6.2-GCCcore-11.2.0.eb (module: ncurses/6.2-GCCcore-11.2.0)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/l/libreadline/libreadline-8.1-GCCcore-11.2.0.eb (module: libreadline/8.1-GCCcore-11.2.0)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/p/pkgconf/pkgconf-1.8.0.eb (module: pkgconf/1.8.0)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/o/OpenSSL/OpenSSL-1.1.eb (module: OpenSSL/1.1)\n * [ ] /home/example/easybuild-easyconfigs/easybuild/easyconfigs/d/DB/DB-18.1.40-GCCcore-11.2.0.eb (module: DB/18.1.40-GCCcore-11.2.0)\n * [ ] /tmp/eb-93m2gyhf/tweaked_dep_easyconfigs/Perl-5.32.1-GCCcore-11.2.0.eb (module: Perl/5.32.1-GCCcore-11.2.0)\n * [ ] /tmp/eb-93m2gyhf/tweaked_easyconfigs/BWA-0.7.17-GCC-11.2.0.eb (module: BWA/0.7.17-GCC-11.2.0)\n</code></pre>  <p>Note</p> <p>The <code>--try-*</code> command line options behave as expected when combined with <code>--robot</code>.</p> <p>For example: a modified toolchain specified via <code>--try-toolchain</code> only trickles down until the toolchain level (not deeper). This makes for a particularly powerful combo for rebuilding entire software stacks using a different toolchain.</p>   <p>Note</p> <p>Modifying the software version does not trickle down the entire software stack, even when combined with <code>--robot</code>, since a software version is tied to a particular software package.</p>"},{"location":"using-external-modules/","title":"Using external modules","text":"<p>Since EasyBuild v2.1, support for using modules that were not installed via EasyBuild is available. We refer to such modules as external modules.</p> <p>This can be useful to reuse vendor-supplied modules, for example on Cray systems.</p>"},{"location":"using-external-modules/#using-external-modules-as-dependencies","title":"Using external modules as dependencies","text":"<p>External modules can be used as dependencies, by including the module name in the <code>dependencies</code> list (see Dependencies), along with the <code>EXTERNAL_MODULE</code> constant marker.</p> <p>For example, to specify the readily available module <code>fftw/3.3.4.2</code> as a dependency:</p> <pre><code>dependencies = [('fftw/3.3.4.2', EXTERNAL_MODULE)]\n</code></pre> <p>For such dependencies, EasyBuild will:</p> <ul> <li>load the module before initiating the software build and install procedure</li> <li>include a '<code>module load</code>' statement in the generated module file (for non-build dependencies)</li> </ul> <p>If the specified module is not available, EasyBuild will exit with an error message stating that the dependency can not be resolved because the module could not be found. It will not search for a matching easyconfig file in order to try and install the module to resolve the dependency.</p>"},{"location":"using-external-modules/#using_external_modules_metadata","title":"Metadata for external modules","text":"<p>Since very little information is available for external modules based on the dependency specification alone (i.e., only the module name), metadata can be supplied to EasyBuild for external modules.</p> <p>Using the <code>--external-modules-metadata</code> configuration option, the location of one or more files can be specified that provide such metadata. The files are expected to be in INI format, with a section per module name and key-value assignments denoting the metadata specific to that module.</p> <p>Format:</p> <pre><code>[modulename]\nkey1 = value1\nkey2 = value2, value3\n</code></pre>"},{"location":"using-external-modules/#default","title":"Default","text":"<p>Up until EasyBuild v2.6.0, no metadata for external modules was available by default.</p> <p>Since EasyBuild v2.7.0, a file providing metadata for Cray-provided modules on Cray systems is included, and is active by default (i.e., unless other files are specified via <code>--external-modules-metadata</code>); see https://github.com/easybuilders/easybuild-framework/blob/main/etc/cray_external_modules_metadata.cfg.</p>"},{"location":"using-external-modules/#using-wildcards","title":"Using wildcards","text":"<p>Since EasyBuild v4.1.0, you can use so-called glob patterns to specify a list of paths to <code>--external-modules-metadata</code>, using wildcard characters like <code>*</code> and <code>?</code>.</p> <p>For example, to specify that the metadata for external modules in all <code>*.cfg</code> files in the directory <code>/example</code> should be taken into account, you can use:</p> <pre><code>export EASYBUILD_EXTERNAL_MODULES_METADATA='/example/*.cfg'\n</code></pre>"},{"location":"using-external-modules/#example","title":"Example","text":"<p>For example, the following file provides metadata for a handful of modules that may be provided on Cray systems:</p> <pre><code>[cray-hdf5/1.8.13]\nname = HDF5\nversion = 1.8.13\nprefix = HDF5_DIR\n\n[cray-hdf5-parallel/1.8.13]\nname = HDF5\nversion = 1.8.13\nprefix = /opt/cray/hdf5-parallel/1.8.13/GNU/49\n\n[cray-netcdf/4.3.2]\nname = netCDF, netCDF-Fortran\nversion = 4.3.2, 4.3.2\nprefix = NETCDF_DIR\n\n[fftw/3.3.4.5]\nname = FFTW\nversion = 3.3.4.5\nprefix = FFTW_INC/..\n</code></pre>"},{"location":"using-external-modules/#supported-metadata-values","title":"Supported metadata values","text":"<p>The following keys are supported:</p> <ul> <li><code>name</code>: specifies the software name(s) that is (are) provided by the module</li> <li><code>version</code>: specifies the software version(s) that is (are) provided by the module</li> <li><code>prefix</code>: specifies the installation prefix of the software that is provided by the module</li> </ul> <p>For <code>prefix</code>, a couple of different options are available, i.e.:</p> <ul> <li>specifying an absolute path (cfr. <code>cray-hdf5-parallel/1.8.13</code> in the example above)</li> <li>specifying the environment variable that is defined by the module and provides the installation prefix   (cfr. <code>cray-netcdf/4.3.2</code> in the example above)</li> <li>this can be optionally combined with a relative path that serves as a 'correction'      (cfr. <code>fftw/3.3.4.5</code> in the example above) [supported since EasyBuild v2.7.0]</li> </ul> <p>Any other keys are simply ignored.</p>  <p>Note</p> <p>When both <code>name</code> and <code>version</code> are specified, they must provide an equal number of values (see for example the <code>cray-netcdf</code> example above).</p>"},{"location":"using-external-modules/#handling-of-provided-metadata","title":"Handling of provided metadata","text":"<p>Using the provided metadata, EasyBuild will define environment variables that are also defined by modules that are generated by EasyBuild itself, if an external module for which metadata is available is loaded as a dependency.</p> <p>In particular, for each software name that is specified:</p> <ul> <li>the corresponding environment variable <code>$EBROOT&lt;NAME&gt;</code> is defined to the specified <code>prefix</code> value (if any)</li> <li>the corresponding environment variable <code>$EBVERSION&lt;NAME&gt;</code> is defined to the corresponding <code>version</code> value (if any)</li> </ul> <p>For example, for the external modules for which metadata is provided in the example above, the following environment variables are set in the build environment when the module is used as a dependency:</p> <ul> <li>for <code>cray-hdf5/1.8.1.13</code>:</li> <li><code>$EBROOTHDF5</code> = <code>$HDF5_DIR</code></li> <li><code>$EBVERSIONHDF5</code> = <code>1.8.13</code></li> <li>for <code>cray-hdf5-parallel/1.8.13</code>:</li> <li><code>$EBROOTHDF5</code> = <code>/opt/cray/hdf5-parallel/1.8.13/GNU/49</code></li> <li><code>$EBVERSIONHDF5</code> = <code>1.8.13</code></li> <li>for <code>cray-netcdf/4.3.2</code>:</li> <li><code>$EBROOTNETCDF</code> = <code>$NETCDF_DIR</code></li> <li><code>$EBROOTNETCDFMINFORTRAN</code> = <code>$NETCDF_DIR</code></li> <li><code>$EBVERSIONNETCDF</code> = <code>4.3.2</code></li> <li><code>$EBVERSIONNETCDFMINFORTRAN</code> = <code>4.3.2</code></li> <li>for <code>fftw/3.3.4.5</code>:</li> <li><code>$EBROOTFFTW</code> = <code>$FFTW_INC/../</code></li> <li><code>$EBVERSIONFFTW</code> = <code>3.3.4.5</code></li> </ul> <p>The <code>get_software_root</code> and <code>get_software_version</code> functions that are commonly used occasionally in easyblocks pick up the <code>$EBROOT*</code> and <code>$EBVERSION*</code> environment variables, respectively.</p>"},{"location":"what-is-easybuild/","title":"What is EasyBuild?","text":"<p>EasyBuild is a software build and installation framework that allows you to manage (scientific) software on High  Performance Computing (HPC) systems in an efficient way. It is motivated by the need for a tool that combines the following features: </p> <ul> <li>a flexible framework for building/installing (scientific) software</li> <li>fully automates software builds</li> <li>divert from the standard <code>configure</code> / <code>make</code> / <code>make install</code> with custom procedures</li> <li>allows for easily reproducing previous builds</li> <li>keep the software build recipes/specifications simple and human-readable</li> <li>supports co-existence of versions/builds via dedicated installation prefix and module files</li> <li>enables sharing with the HPC community (win-win situation)</li> <li>automagic dependency resolution</li> <li>retain logs for traceability of the build processes</li> </ul> <p>Some key features of EasyBuild:</p> <ul> <li> <p>build &amp; install (scientific) software fully autonomously</p> </li> <li> <p>also interactive installers, code patching, generating module file, ...</p> </li> <li> <p>easily configurable: configuration files / environment variables / command line options</p> </li> <li> <p>including aspects like module naming scheme</p> </li> <li> <p>thorough logging and archiving (see Log files)</p> </li> <li> <p>entire build process is logged thoroughly, logs are stored in install directory;</p> </li> <li> <p>easyconfig file used for build is archived (install directory + file/svn/git repo) </p> </li> <li> <p>automatic dependency resolution (see <code>--robot</code>)</p> </li> <li> <p>build entire software stack with a single command, using <code>--robot</code></p> </li> <li> <p>building software in parallel</p> </li> <li>robust and thoroughly tested code base, fully unit-tested before each release</li> <li>thriving, growing community</li> </ul> <p>Take a look at our HUST'14 workshop paper Modern Scientific Software Management Using EasyBuild and Lmod (PDF), and use that as a reference in case you present academic work mentioning EasyBuild.</p>"},{"location":"wrapping-dependencies/","title":"Wrapping dependencies","text":"<p>Since EasyBuild v3.7.0 a special-purpose generic easyblock named <code>ModuleRC</code> is available, which can be used to generate a (software-specific) <code>.modulerc</code> file (as opposed to generating an actual module file).</p>  <p>Note</p> <p>For compatibility with the different modules tools supported by EasyBuild (see Modules tool (<code>--modules-tool</code>)), the <code>.modulerc</code> file is always generated in Tcl syntax (for now), regardless of the module syntax that is used for module files. Only Lmod 7.8 (or later) supports <code>.modulerc.lua</code> files in Lua syntax.</p>  <p>The <code>ModuleRC</code> easyblock supports including <code>module-version</code> in the generated <code>.modulerc</code> file, which defines a so-called \"symbolic version\".</p> <p>This can be used to install a \"wrapper\" for a particular module, which can be useful in the context of dependencies. For example, it can be used to avoid depending on a specific version of a particular software package by specifying the dependency only on the <code>&lt;major&gt;.&lt;minor&gt;</code> version instead (i.e., without including the \"subminor\" version, which usually corresponds to a bugfix release).</p> <p>One particular example where this is employed is for <code>Java</code>. Since the <code>2018b</code> generation of the Common toolchains, we use a wrapper for <code>Java</code> (e.g., <code>Java/1.8</code>), rather than depending on a specific version (e.g., <code>Java/1.8.0_181</code>):</p> <pre><code># specify dependency on Java/1.8 \"wrapper\", rather than a specific Java version\ndependencies = [('Java', '1.8', '', SYSTEM)]\n</code></pre> <p>This has a couple of advantages:</p> <ul> <li>it helps with avoiding version conflicts on the <code>Java</code> dependency used by two (or more) otherwise independent   module files;</li> <li>it allows to perform an in-place update of the <code>Java</code> wrapper to a more recent <code>Java</code> (bugfix) release   in the blink of an eye, since it only involves re-generating a <code>.modulerc</code> file (as opposed to performing   actual installation and generating a module file); in addition, it doesn't require updating/re-generating existing   module files that depend on the <code>Java</code> wrapper (since the version of the wrapper does not change)</li> </ul> <p>Since <code>ModuleRC</code> is a generic easyblock , it can also be employed to install module \"wrappers\" for dependencies other than <code>Java</code>.</p>"},{"location":"writing-easyconfig-files/","title":"Writing easyconfig files: the basics","text":"<p>This page explains all the basic information about how to write easyconfig files.</p> <p>For software builds that follow established build patterns, an easyconfig is all that you need to create in order to build and install the software and the corresponding module file.</p> <p>Luckily, the majority of software delivery mechanisms are being designed around either autotools or CMake or, perhaps, some simple file extraction/copy pattern. In that case, a generic easyblock can be leveraged; see Overview of generic easyblocks.</p> <p>Yet, in case the software build calls for more elaborate steps (scientific software never fails to surprise us in this regard), a software-specific easyblock may be required; see Implementing easyblocks.</p>"},{"location":"writing-easyconfig-files/#what_is_an_easyconfig","title":"What is an easyconfig (file)?","text":"<p>An easyconfig file serves as a build specification for EasyBuild.</p> <p>It consists of a plain text file (in Python syntax) with mostly key-value assignment to define easyconfig parameters.</p> <p>Easyconfigs typically follow a (fixed) strict naming scheme, i.e. <code>&lt;name&gt;-&lt;version&gt;[-&lt;toolchain&gt;][&lt;versionsuffix&gt;].eb</code>.</p> <p>The <code>-&lt;toolchain&gt;</code> label (which includes the toolchain name and version) is omitted when a <code>system</code> toolchain is used. The <code>&lt;versionsuffix&gt;</code> label is omitted when the version suffix is empty.</p>  <p>Note</p> <p>the filename of an easyconfig is only important w.r.t. dependency resolution (<code>--robot</code>), see Enabling dependency resolution.</p>  <p>Example:</p> <pre><code># easyconfig file for GCC v4.8.3\nname = 'GCC'\nversion = '4.8.3'\n...\n</code></pre>  <p>Tip</p> <p>Comments can be included in easyconfig files using the hash (<code>#</code>) character (just like in Python code).</p>"},{"location":"writing-easyconfig-files/#available-easyconfig-parameters","title":"Available easyconfig parameters","text":"<p>About 50 different (generic) easyconfig parameters are supported currently. An overview of all available easyconfig parameters is available via the <code>-a</code> command line option.</p> <p>By default, the parameters specific to generic (default) easyblock <code>ConfigureMake</code> are included; using <code>--easyblock</code>/<code>-e</code> parameters that are specific to a particular easyblock can be consulted.</p> <p>See Available easyconfig parameters for more details.</p> <p>Example:</p> <pre><code>$ eb -a -e Binary\nAvailable easyconfig parameters (* indicates specific for the Binary EasyBlock)\nMANDATORY\n---------\n[..]\nname:           Name of software (default: None)\n[...]\nEASYBLOCK-SPECIFIC\n------------------\ninstall_cmd(*):     Install command to be used. (default: None)\n[...]\n</code></pre>"},{"location":"writing-easyconfig-files/#mandatory-easyconfig-parameters","title":"Mandatory easyconfig parameters","text":"<p>A handful of easyconfig parameters are mandatory:</p> <ul> <li>name, version: specify what software (version) to build</li> <li>homepage, description: metadata (used for module help)</li> <li>toolchain: specifies name and version of compiler toolchain to     use<ul> <li>format: dictionary with name/version keys, e.g.,     <code>{'name': 'foo', 'version': '1.2.3'}</code></li> <li>a list of supported toolchains can be found     here</li> </ul> </li> </ul> <p>Remarks:</p> <ul> <li>some others are planned to be required in the future<ul> <li>docurls, software license, software license urls</li> </ul> </li> </ul> <p>Example:</p> <pre><code>name = 'HPL'\nversion = '2.0'\n\nhomepage = 'http://www.netlib.org/benchmark/hpl/'\ndescription = \"High Performance Computing Linpack Benchmark\"\n\ntoolchain = {'name': 'goolf', 'version': '1.4.10'}\n[...]\n</code></pre>"},{"location":"writing-easyconfig-files/#common-easyconfig-parameters","title":"Common easyconfig parameters","text":"<p>This section includes an overview of some commonly used (optional) easyconfig parameters.</p>"},{"location":"writing-easyconfig-files/#common_easyconfig_param_sources","title":"Source files, patches and checksums","text":"<ul> <li>sources: list of source files (filenames only)</li> <li>source urls: list of URLs where sources can be downloaded</li> <li>patches: list of patch files to be applied (<code>.patch</code> extension)</li> <li>checksums: list of checksums for source and patch files</li> </ul> <p>Remarks:</p> <ul> <li>sources are downloaded (best effort), unless already available</li> <li>proxy settings are taken into account, since the urllib2 Python     package is used for     downloading (since EasyBuild v2.0)</li> <li>patches need to be EasyBuild-compatible<ul> <li>unified diff format (<code>diff -ruN</code>)</li> <li>patched locations relative to unpacked sources</li> </ul> </li> <li>see Patches for more information on <code>patches</code></li> <li>see Checksums for more information on <code>checksums</code></li> <li><code>sources</code> is usually specified as a list of strings representing     filenames for source files, but other formats are supported too, see     Alternative formats for <code>sources</code></li> </ul> <p>Example:</p> <pre><code>name = 'HPL'\nversion = '2.2'\n\n[...]\n\nsource_urls = ['http://www.netlib.org/benchmark/hpl']\nsources = ['hpl-%(version)s.tar.gz']\n\n# fix Make dependencies, so parallel build also works\npatches = ['HPL_parallel-make.patch']\n\nchecksums = ['ac7534163a09e21a5fa763e4e16dfc119bc84043f6e6a807aba666518f8df440']\n\n[...]\n</code></pre>  <p>Note</p> <p>Rather than hardcoding the version (and name) in the list of sources, a string template <code>%(version)s</code> can be used, see also Dynamic values for easyconfig parameters.</p>"},{"location":"writing-easyconfig-files/#common_easyconfig_param_sources_patches","title":"Patches","text":"<p>Patches can be provided via the <code>patches</code> easyconfig parameter (list). A patch can be defined as:</p> <ul> <li>a <code>string</code>,</li> <li>a <code>tuple</code> of 2 elements, or</li> <li>a <code>dict</code></li> </ul> <p>The most straight-forward use-case is <code>string</code>, which contains the name of the patch file (and must have <code>.patch</code> extension).</p> <p>A <code>tuple</code> adds the possibility to specify where patch should be applied. This is mostly needed if a patch file adds new files or it is generally not possible to determine the starting directory. The first element is the patch file and the second is either the patch level (as an integer) which is used in the patch command (<code>patch -p&lt;n&gt;</code>) or a directory relative to the unpacked source dir.</p>  <p>Note</p> <p><code>tuple</code> also has a special use case if the patch file has any other extension than <code>.patch</code>. In this case, the first tuple argument is a file which should be copied to the unpacked source dir and the second tuple argument is the target path, where the files should be copied to (relative to the unpacked source dir). See below for an example of this use case.</p>  <p>A <code>dict</code> adds the ability to pass the <code>patch</code> command additional arguments. For example, the <code>--binary</code> flag is needed to patch files with CRLF endings. The <code>dict</code> has a required <code>filename</code> key, with <code>level</code> and <code>opts</code> being optional ones.</p>  <p>Note</p> <p>Specifying only <code>filename</code> in <code>dict</code> is the same as using a plain <code>string</code> definition. Specifying <code>filename</code> and <code>level</code> is same as using a <code>tuple</code> definition.</p>  <p>Example:</p> <pre><code>patches = [\n  # a simple patch file\n  'name-versions-fix.patch',\n\n  # when creating only new files by patch file, you need to specify the level:\n  ('name-versions-fix.patch', 1),\n\n  # apply the patch in a (sub-)subdirectory inside the source tree\n  ('name-versions-fix.patch', 'src/subfolder'),\n\n  # copy file to target_path folder\n  ('Makefile', 'target_path'),\n\n  # specify patch file and optionally level and opts for patch command\n  {'filename': 'name-versions-fix.patch', 'level': 1, 'opts': '-l'}\n]\n</code></pre>"},{"location":"writing-easyconfig-files/#common_easyconfig_param_sources_checksums","title":"Checksums","text":"<p>Checksums for source files and patches can be provided via the <code>checksums</code> easyconfig parameter.</p> <p>EasyBuild does not enforce checksums to be available for all source files and patches. Provided checksums will be 'consumed' first for the specified sources (in order), and subsequently also for patches.</p> <p>Nevertheless, providing checksums for all source files and patches is highly recommended.</p> <p>If checksums are provided, the checksum of the corresponding source files and patches is verified to match.</p> <p>The <code>checksums</code> easyconfig parameter is usually defined as a list of strings.</p> <p>Until EasyBuild v3.3.0, only MD5 checksums could be provided through a list of strings. Since EasyBuild v3.3.0, the checksum type is determined by looking at the length of the string:</p> <ul> <li>32-character strings are considered to be MD5 checksums (<code>md5</code>)</li> <li>64-character strings are considered to be SHA256 checksums     (<code>sha256</code>)</li> <li>(other lengths will result in an error message)</li> </ul> <p>The intention is to move towards making <code>sha256</code> the recommended and default checksum type.</p> <p>Other checksum types are also supported: <code>adler32</code>, <code>crc32</code>, <code>sha1</code>, <code>sha512</code>, <code>size</code> (filesize in bytes). To provide checksum values of a specific type, elements of the <code>checksums</code> list can also be 2-element tuples of the form <code>('&lt;checksum type&gt;', '&lt;checksum value&gt;')</code>. For example:</p> <pre><code>checksums = [('sha512', 'f962008105639f58e9a4455c8057933ab0a5e2f43db8340ae1e1afe6dc2d24105bfca3b2e1f79cb242495ca4eb363c9820d8cea6084df9d62c4c3e5211d99266')]\n</code></pre>"},{"location":"writing-easyconfig-files/#inject_checksums","title":"Adding or replacing checksums using <code>--inject-checksums</code>","text":"<p>Using the <code>--inject-checksums</code> command line option, you can let EasyBuild add or update checksums in one or more easyconfig files (which is significantly more convenient than doing it manually).</p> <p>With <code>--inject-checksums</code>, checksums are injected for all sources and patches (if any), as well as for all sources &amp; patches of every extension listed in <code>exts_list</code> (if any, see Extensions).</p> <p>If the sources (&amp; patches) are not available yet, EasyBuild will try to download them first; i.e., the <code>fetch</code> step is run prior to computing &amp; injecting the checksums.</p> <p>A backup is created of every easyconfig file that is touched by <code>--inject-checksums</code>, to avoid accidental loss of information. Backups are given an additional extension of the form <code>.bak_&lt;year&gt;&lt;month&gt;&lt;day&gt;&lt;hour&gt;&lt;min&gt;&lt;sec&gt;</code>.</p>  <p>Note</p> <p>To clean up backup easyconfig files, you can use this one-liner:</p> <pre><code>find . -name '*.eb.bak_*' | xargs rm -v\n</code></pre> <p>The <code>-v</code> option makes <code>rm</code> print the path of files that are being removed.</p> <p>Do use this with care; just run <code>find . -name '*.eb.bak_*'</code> first in case of doubt!</p>  <p>Multiple easyconfigs can be specified when using <code>--inject-checksums</code>, they will be processed in sequence. In addition, you can also combine <code>--inject-checksums</code> with <code>--robot</code>, see Synergy between <code>--inject-checksums</code> and <code>--robot</code>.</p>"},{"location":"writing-easyconfig-files/#inject_checksums_adding","title":"Adding checksums when none are specified yet","text":"<p>If the easyconfig file does not specify any checksums yet, they are simply injected after the <code>sources</code> (or <code>patches</code>, if present) specification when <code>--inject-checksums</code> is used.</p> <p>For example:</p> <pre><code>$ eb bzip2-1.0.6.eb --inject-checksums\n== temporary log file in case of crash /tmp/eb-Vm6w3e/easybuild-cAVQl6.log\n== injecting sha256 checksums in /example/bzip2-1.0.6.eb\n== fetching sources &amp; patches for bzip2-1.0.6.eb...\n== backup of easyconfig file saved to /example/bzip2-1.0.6.eb.bak_20170824200906...\n== injecting sha256 checksums for sources &amp; patches in bzip2-1.0.6.eb...\n== * bzip2-1.0.6.tar.gz: a2848f34fcd5d6cf47def00461fcb528a0484d8edef8208d6d2e2909dc61d9cd\n== Temporary log file(s) /tmp/eb-Vm6w3e/easybuild-cAVQl6.log* have been removed.\n== Temporary directory /tmp/eb-Vm6w3e has been removed.\n</code></pre> <p>The backup easyconfig file can be used to double-check the difference between the original easyconfig file and the one produced by <code>--inject-checksums</code>:</p> <pre><code>$ diff -u /example/bzip2-1.0.6.eb.bak_20170824200906 /example/bzip2-1.0.6.eb\ndiff --git a//example/bzip2-1.0.6.eb.bak_20170824200906 b/example/bzip2-1.0.6.eb\nindex 46b2debed..2eb73f15a 100644\n--- a/example/bzip2-1.0.6.eb.bak_20170824200906\n+++ b/example/bzip2-1.0.6.eb\n@@ -9,8 +9,9 @@ compressors), whilst being around twice as fast at compression and six times fas\n toolchain = SYSTEM\n toolchainopts = {'pic': True}\n\n-sources = [SOURCE_TAR_GZ]\n source_urls = ['http://www.bzip.org/%(version)s/']\n+sources = [SOURCE_TAR_GZ]\n+checksums = ['a2848f34fcd5d6cf47def00461fcb528a0484d8edef8208d6d2e2909dc61d9cd']\n\n buildopts = \"CC=gcc CFLAGS='-Wall -Winline -O3 -fPIC -g $(BIGFILES)'\"\n</code></pre>  <p>Note</p> <p>Along with injecting checksums, EasyBuild will also reorder the <code>source_urls</code>, <code>sources</code> and <code>patches</code> specifications, in that order and if they are present, and include the <code>checksums</code> specification afterwards. This is done to facilitate working towards a uniform style in easyconfig files, which also applies to the order of specified easyconfig parameters.</p>"},{"location":"writing-easyconfig-files/#inject_checksums_replacing","title":"Replacing existing checksums","text":"<p>When one or more checksums are already specified, EasyBuild requires the use of <code>--force</code> together with <code>--inject-checksums</code> to replace those checksums. A clear warning will be printed to notify that existing checksums will be replaced.</p> <p>For example:</p> <pre><code>$ eb bzip2-1.0.6.eb --inject-checksums\n== temporary log file in case of crash /tmp/eb-WhSwVH/easybuild-HCODnl.log\n== injecting sha256 checksums in /example/bzip2-1.0.6.eb\n== fetching sources &amp; patches for bzip2-1.0.6.eb...\nERROR: Found existing checksums, use --force to overwrite them\n</code></pre> <pre><code>$ eb bzip2-1.0.6.eb --inject-checksums --force\n== temporary log file in case of crash /tmp/eb-dS2QLa/easybuild-JGxOzC.log\n== injecting sha256 checksums in /example/bzip2-1.0.6.eb\n== fetching sources &amp; patches for bzip2-1.0.6.eb...\n\nWARNING: Found existing checksums in bzip2-1.0.6.eb, overwriting them (due to use of --force)...\n\n== backup of easyconfig file saved to /example/bzip2-1.0.6.eb.bak_20170824203850...\n== injecting sha256 checksums for sources &amp; patches in bzip2-1.0.6.eb...\n...\n</code></pre>  <p>Note</p> <p>Any existing checksums are blindly replaced when <code>--inject-checksums --force</code> is used: the existing checksums are not verified to be correct as during normal use of EasyBuild (since that would kind of defeat the purpose of <code>--inject-checksums</code>). In addition, it also doesn't matter whether or not checksums are available for all sources &amp; patches: with <code>--inject-checksums</code>, checksums will be added for all sources and patches, including for extensions listed in <code>exts_list</code> (if any).</p>"},{"location":"writing-easyconfig-files/#inject_checksums_robot_synergy","title":"Synergy between <code>--inject-checksums</code> and <code>--robot</code>","text":"<p>When <code>--inject-checksums</code> is combined with <code>--robot</code>, checksums are injected for each easyconfig file in the dependency graph for which no module is available yet.</p> <p>For example, to inject checksums in every easyconfig file required to build HPL 2.2 with the <code>foss/2017a</code> toolchain:</p> <pre><code>$ MODULEPATH= eb HPL-2.2-foss-2017a.eb --installpath /tmp/$USER/sandbox --inject-checksums --robot\n== temporary log file in case of crash /tmp/eb-8HpJc3/easybuild-H35khM.log\n== resolving dependencies ...\n...\n== injecting sha256 checksums in /example/GCCcore-6.3.0.eb\n...\n== injecting sha256 checksums in /example/OpenMPI-2.0.2-GCC-6.3.0-2.27.eb\n...\n== injecting sha256 checksums in /example/FFTW-3.3.6-gompi-2017a.eb\n...\n== injecting sha256 checksums in /example/HPL-2.2-foss-2017a.eb\n...\n</code></pre>  <p>Note</p> <p>We are clearing <code>$MODULEPATH</code> and specifying a custom (empty) location to <code>--installpath</code> to avoid that EasyBuild skips any easyconfig because a corresponding module is already available.</p>"},{"location":"writing-easyconfig-files/#inject_checksums_type","title":"Type of checksum to inject","text":"<p>By default, <code>--inject-checksums</code> will compute &amp; inject <code>SHA256</code> checksums, but a different checksum type can be specified as an argument (e.g., <code>--inject-checksums md5</code>).</p>  <p>Note</p> <p>Because of the optional argument that can be passed to <code>--inject-checksums</code>, you should not specify an easyconfig file name directly after the <code>--inject-checksums</code>, since it will be assumed to specify a checksum type, which will result in an error message like:</p> <pre><code>$ eb --inject-checksums bzip2-1.0.6.eb\nUsage: eb [options] easyconfig [...]\n\neb: error: option --inject-checksums: invalid choice: 'bzip2-1.0.6.eb' (choose from 'adler32', 'crc32', 'md5', 'sha1', 'sha256', 'sha512', 'size')\n</code></pre>"},{"location":"writing-easyconfig-files/#common_easyconfig_param_sources_alt","title":"Alternative formats for <code>sources</code>","text":"<p>In some cases, it can be required to provide additional information next to the name of a source file, e.g., a custom extraction command (because the one derived from the file extension is not correct), or an altername filename that should be used to download the source file.</p> <p>This can be specified using a Python dictionary value in the <code>sources</code> easyconfig parameter.</p> <p>Since EasyBuild v3.3.0, three keys are supported:</p> <ul> <li><code>filename</code> (mandatory): filename of source file</li> <li><code>download_filename</code>: filename that should be used when downloading     this source file; the downloaded file will be saved using the     <code>filename</code> value</li> <li><code>extract_cmd</code>: custom extraction command for this source file</li> <li><code>source_urls</code>: source URLs to consider for downloading this source     file</li> <li><code>git_config</code>: see     Downloading from a Git repository</li> </ul> <p>For example:</p> <pre><code>sources = [{\n    'source_urls': ['https://example.com'],\n    'filename': 'example-%(version)s.gz',\n    'download_filename': 'example.gz',  # provided source tarball is not versioned...\n    'extract_cmd': \"tar xfvz %s\",  # source file is actually a gzipped tarball (filename should be .tar.gz)\n}]\n</code></pre>  <p>Note</p> <p>Custom extraction commands can also be specified as a 2-element tuple, but this format has been deprecated in favour of the Python dictionary format described above; see also Specifying source files as 2-element tuples to provide a custom extraction command.</p>"},{"location":"writing-easyconfig-files/#using-download_instructions-for-user-side-part-of-installation","title":"Using <code>download_instructions</code> for user-side part of installation","text":"<p>In some cases, getting some of the files required for an installation cannot be automated. Reasons for this include:</p> <ul> <li>there is a manual stage to combine multiple downloaded files into     the required installation file</li> <li>the file requires a login to download</li> </ul> <p>You can use the <code>download_instructions</code> parameter to specify steps for the user to do. This parameter takes string value and prints it whenever build fails because any file needed was not found. If <code>download_instructions</code> is not specified, Easybuild prints the default message stating the paths that were tested.</p> <pre><code>download_instructions = \"\"\"\n  Step 1: Go to example.com and download example.jar.\n  Step 2: Install example.jar (ensure Java is installed).\n  Step 3: Go to the installation directory and create Tarball of its contents (tar -czvf example.tar.gz *).\n  Step 4: Move created Tarball into the same directory, where your easyconfig is located and run build again.\n\"\"\"\n</code></pre>"},{"location":"writing-easyconfig-files/#common_easyconfig_param_sources_git_config","title":"Downloading from a Git repository","text":"<p>Since EasyBuild v3.7.0, support for downloading directly from a Git repository is available.</p> <p>When <code>git_config</code> is provided for a particular source file (see Alternative formats for <code>sources</code>), EasyBuild will create a source tarball after downloading the specified Git repository.</p> <p>The value for <code>git_config</code> is a Python dictionary, where the following keys are mandatory:</p> <ul> <li><code>url</code>: the URL where the Git repository is located</li> <li><code>repo_name</code>: the name of the Git repository</li> </ul> <p>The value for <code>filename</code> in the source specification must end in <code>.tar.gz</code> (because a gzipped tarball will be created from the cloned repository).</p> <p>In addition, either of the following keys must also be defined:</p> <ul> <li><code>tag</code>: the specific tag to download</li> <li><code>commit</code>: the specific commit ID to download</li> </ul> <p>If a recursive checkout should be made of the repository, the <code>recursive</code> key can be set to <code>True</code>.</p> <p>To also retain the <code>.git</code> directory (which holds the Git metadata for the repository), you can set the <code>keep_git_dir</code> to <code>True</code> (supported since EasyBuild v4.2.0).</p> <p>A different name for the top-level directory can be specified via <code>clone_into</code>; by default the name of the repository is used.</p> <p>Examples:</p> <ul> <li> <p>creating a source tarball named <code>example-main.tar.gz</code> of the     <code>main</code> branch of a (fictional) <code>test</code> repository from     <code>https://agitserver.org/example</code>, and use <code>example-test</code> as     top-level directory name:</p> <pre><code>sources = [{\n    'filename': 'example-main.tar.gz',\n    'git_config': {\n        'url': 'https://agitserver.org/example',\n        'repo_name': 'test',\n        'tag': 'main',\n        'clone_into': 'example-test',\n    },\n}]\n</code></pre> </li> <li> <p>creating a source tarball named <code>example-20180920.tar.gz</code> of the     recursive checkout of commit <code>abcdef12</code> of the <code>test</code> repository     from <code>https://agitserver.org/example</code>:</p> <pre><code>sources = [{\n    'filename': 'example-20180920.tar.gz',\n    'git_config': {\n        'url': 'https://agitserver.org/example',\n        'repo_name': 'test',\n        'commit': 'abcdef12',\n        'recursive': True,\n        'keep_git_dir': True,\n    },\n}]\n</code></pre> </li> </ul>  <p>Note</p> <p>Because the source tarball is created locally (by running <code>tar cfvz</code> on the directory containing the cloned repository), the (SHA256) checksum is not guaranteed to be the same across different systems.</p> <p>Whenever you have the option to download a source tarball (or equivalent) directly (for example from GitHub, which also allows downloading a tarball of a specific commit), we strongly recommend you to do so, <code>git_config</code> is intended for other Git repos.</p>"},{"location":"writing-easyconfig-files/#dependency_specs","title":"Dependencies","text":"<ul> <li>dependencies: build/runtime dependencies</li> <li>builddependencies: build-only dependencies (not in module)</li> <li>hiddendependencies: dependencies via hidden modules (see also     Installing dependencies as hidden modules using <code>--hide-deps</code>)</li> <li>osdependencies: system dependencies (package names)</li> </ul> <p>Remarks:</p> <ul> <li>modules must exist for all (non-system) dependencies</li> <li>(non-system) dependencies can be resolved via <code>--robot</code></li> <li>format: <code>(&lt;name&gt;, &lt;version&gt;[, &lt;versionsuffix&gt;[, &lt;toolchain&gt;]])</code></li> </ul> <p>Example:</p> <pre><code>name = 'GTI'\n...\ntoolchain = {'name': 'goolf', 'version': '1.5.14'}\ndependencies = [('PnMPI', '1.2.0')]\nbuilddependencies = [('CMake', '2.8.12', '', ('GCC', '4.8.2'))]\n</code></pre> <p>For each of the specified (build) dependencies, the corresponding module will be loaded in the build environment defined by EasyBuild. For the runtime dependencies, <code>module load</code> statements will be included in the generated module file.</p>  <p>Note</p> <p>By default, EasyBuild will try to resolve dependencies using the same toolchain as specified for the software being installed. As of v3.0, if no easyconfig exists to resolve a dependency using the default toolchain EasyBuild will search for the dependency using a compatible subtoolchain.</p> <p>A different toolchain can be specified on a per-dependency level (cfr. the <code>CMake</code> build dependency in the example above).</p> <p>Alternatively, you can instruct EasyBuild to use the most minimal (sub)toolchain when resolving dependencies, see Using minimal toolchains for dependencies.</p>"},{"location":"writing-easyconfig-files/#loading-of-modules-for-dependencies-with-a-system-toolchain","title":"Loading of modules for dependencies with a <code>system</code> toolchain","text":"<p>When a <code>system</code> toolchain is used, the modules for each of the (build) dependencies are always loaded, regardless of the toolchain version (as opposed the behaviour with the <code>dummy</code> toolchain in EasyBuild versions prior to v4.0, see Motivation for deprecating the <code>dummy</code> toolchain).</p>"},{"location":"writing-easyconfig-files/#specifying-dependencies-using-system-toolchain","title":"Specifying dependencies using <code>system</code> toolchain","text":"<p>To make EasyBuild resolve a dependency using the <code>system</code> toolchain, simply use the <code>SYSTEM</code> template constant as the 4th value in the tuple representing the dependency specification.</p> <p>For example, to specify PnMPI version 1.2.0 built with the <code>system</code> toolchain as a (runtime) dependency:</p> <pre><code>dependencies = [('PnMPI', '1.2.0', '', SYSTEM)]\n</code></pre>"},{"location":"writing-easyconfig-files/#using-external-modules-as-dependencies","title":"Using external modules as dependencies","text":"<p>Since EasyBuild v2.1, specifying modules that are not provided via EasyBuild as dependencies is also supported. See Using external modules for more information.</p>"},{"location":"writing-easyconfig-files/#module_extensions","title":"Extensions","text":"<p>Besides dependencies, which are found outside the software being built but are part of the site's EasyBuild installation, it is also possible to incorporate extensions to the software within the build. This is done via the <code>exts_list</code> array.</p> <p>Each entry in <code>exts_list</code> is a three-component tuple, with the name and version number, and a dictionary of configuration options for the entry:</p> <pre><code>exts_list = [\n    ('name', 'version', { 'option':'value', 'option':'value' })\n]\n</code></pre> <p>The latter may contain essentially any of the full easyconfig parameters, including <code>buildopts</code>, <code>installopts</code>, etc. Among those options, the following exceptions and special cases should be noted:</p> <ul> <li>nosource: If set <code>True</code>, no download will be done</li> <li>source_tmpl: Template string for the file to be downloaded<ul> <li>default is <code>'%(name)s-%(version)s.tar.gz'</code></li> <li><code>%(name)s</code> and <code>%(version)s</code> come from the <code>exts_list</code> entry     (above)</li> </ul> </li> <li>sources: Dictionary specifying details of where to download the     extension<ul> <li>equivalent to a single entry from the easyconfig <code>sources</code> list</li> <li>preferred to use of <code>source_tmpl</code></li> </ul> </li> <li>start_dir: If not set, will be derived; the easyconfig value     will not be used</li> </ul> <pre><code>exts_list = [\n    ('llvmlite', '0.26.0', {\n        'source_urls': ['https://pypi.python.org/packages/source/l/llvmlite/'],\n        'patches': ['llvmlite-0.26.0_fix-ffi-Makefile.patch'],\n        'checksums': [\n            '13e84fe6ebb0667233074b429fd44955f309dead3161ec89d9169145dbad2ebf',    # llvmlite-0.26.0.tar.gz\n            '40e6fe6de48709b45daebf8082f65ac26f73a4afdf58fc1e8099b97c575fecae',    # llvmlite-0.26.0_fix-ffi-Makefile.patch\n        ],\n    }),\n    ('singledispatch', '3.4.0.3', {\n        'source_urls': ['https://pypi.python.org/packages/source/s/singledispatch/'],\n        'checksums': ['5b06af87df13818d14f08a028e42f566640aef80805c3b50c5056b086e3c2b9c'],\n    }),\n    (name, version, {\n        'source_urls': ['https://pypi.python.org/packages/source/n/numba/'],\n        'checksums': ['c62121b2d384d8b4d244ef26c1cf8bb5cb819278a80b893bf41918ad6d391258'],\n    }),\n]\n</code></pre> <p>That third instance uses the <code>name</code> and <code>version</code> variables defined in the easyconfig file. Since EasyBuild v4.2.2, a single-entry <code>sources</code> dictionary (see Alternative formats for <code>sources</code>) may be included in an <code>exts_list</code> entry. For example, to download Git sources from a private repository and convert them to a tar-ball for installation:</p> <pre><code>exts_defaultclass = 'PythonPackage'\nexts_list = [\n    ('pyCAP', '0.1', {\n        'sources': {\n            'filename': '%(name)s-%(version)s.tar.gz',\n            'git_config': {\n                'url': 'ssh://nero.stanford.edu/data/git/Analysis',\n                'repo_name': 'pyCAP',\n                'tag': '%(version)s',\n            }\n        }\n    }),\n]\n</code></pre> <p>Here, the template strings <code>%(name)s</code> and <code>%(version)s</code> will be substituted from the <code>exts_list</code> entry elements (\"pyCAP\" and \"0.1\", respectively), not from the easyconfig values.</p>"},{"location":"writing-easyconfig-files/#configure_build_install_command_options","title":"Configure/build/install command options","text":"<ul> <li>configopts: options for configure command</li> <li>preconfigopts: options used as prefix for configure command</li> </ul> <p>In analogy to configure, also build and install commands are tuneable:</p> <ul> <li>buildopts, prebuildopts: options for build command</li> <li>installopts, preinstallopts: options for install command</li> </ul> <p>Example:</p> <pre><code>easyblock = 'ConfigureMake'\n...\n# configure with: ./autogen.sh &amp;&amp; ./configure CC=\"$CC\" CFLAGS=\"$CFLAGS\"\npreconfigopts = \"./autogen.sh &amp;&amp; \"\nbuildopts = 'CC=\"$CC\" CFLAGS=\"$CFLAGS\"'\n# install with: make install PREFIX=&lt;installation prefix&gt;\ninstallopts = 'PREFIX=%(installdir)s'\n</code></pre>  <p>Note</p> <p>For more details w.r.t. use of string templates like <code>%(installdir)s</code>, see Dynamic values for easyconfig parameters.</p>"},{"location":"writing-easyconfig-files/#configure_build_install_command_options_iterate","title":"List of configure/build/install options","text":"<p>In some cases, the configure-build-install cycle must be executed multiple times during a single installation, using different options for one or more steps.</p> <p>EasyBuild supports specifying a list of strings, each of which specifying a particular set of options to use.</p> <p>For example, to perform the installation procedure with three different sets of configuration options:</p> <pre><code>configopts = [\n    \"--common-opt --one --one-more\",\n    \"--common-opt --two\",\n    \"--common-opt --three\",\n]\n</code></pre> <p>This way, EasyBuild will perform the configure-build-install cycle three times:</p> <ul> <li>configure using <code>--common-opt --one --one-more</code>, build and install</li> <li>configure using <code>--common-opt --two</code>, build and install on top of     the existing installation</li> <li>configure using <code>--common-opt --three</code>, build and install once more     on top of what is installed already</li> </ul> <p>During this process, the environment is reset and the build directory is cleaned up after each cycle, while the installation directory is left untouched (in order to not destroy the result of earlier cycles).</p> <p>If several <code>(pre){config|build|install}opts</code> parameters are defined as being a list of strings, the number of items in the lists must be the same. Any of these parameters defined as a single string value are just reused for each of the cycles performed. For example:</p> <pre><code>easyblock = 'ConfigureMake'\nconfigopts = ['--one', '--two', '--three']\nbuildopts = 'lib'\npreinstallopts = ['TYPE=one', 'TYPE=two', 'TYPE=three']\n</code></pre> <p>would result in:</p> <ul> <li><code>./configure --prefix=... --one; make lib; TYPE=one make install</code></li> <li><code>./configure --prefix=... --two; make lib; TYPE=two make install</code></li> <li><code>./configure --prefix=... --three; make lib; TYPE=three make install</code></li> </ul> <p>An example use case of this is building FFTW with different precisions, see the FFTW easyconfig files.</p>"},{"location":"writing-easyconfig-files/#sanity-check","title":"Sanity check","text":"<p>Custom paths and commands to be used in the sanity check step can be specified using the respective parameters. These are used to make sure that an installation didn't (partly) fail unnoticed.</p> <ul> <li>sanity_check_paths: files/directories that must get installed</li> <li>sanity_check_commands: (simple) commands that must work when the     installed module is loaded</li> </ul> <p>Remarks:</p> <ul> <li>format: Python dictionary with (only) <code>files</code>/<code>dirs</code>     keys</li> <li>values must be lists of (tuples of) strings, one of both must be     non-empty<ul> <li>paths are relative to installation directory</li> <li>for a path specified as a tuple, only one of the specified paths     must be available</li> </ul> </li> <li>default values:<ul> <li>paths: non-empty <code>bin</code> and <code>lib</code> or <code>lib64</code> directories</li> <li>commands: none</li> </ul> </li> </ul> <p>Example:</p> <pre><code>sanity_check_paths = {\n    'files': [\"bin/xhpl\"],\n    'dirs': [],\n}\n</code></pre>"},{"location":"writing-easyconfig-files/#writing_easyconfigs_easyblock_spec","title":"Easyblock specification","text":"<p>To make EasyBuild use a specific (usually generic) easyblock the easyblock parameter can be used.</p> <p>By default, EasyBuild will assume that the easyblock to use can be derived from the software name. For example: for <code>GCC</code>, EasyBuild will look for an easyblock class named <code>EB_GCC</code> in the Python module <code>easybuild.easyblocks.gcc</code>.</p> <p>A list of available easyblocks is available via <code>--list-easyblocks</code> (see also List of available easyblocks); generic easyblocks are the ones for which the name does not start with <code>EB_</code>.</p> <p>Example:</p> <pre><code>easyblock = 'CMakeMake'\nname = 'GTI'\nversion = '1.2.0'\n...\n</code></pre>  <p>Tip</p> <p>It is highly recommended to use existing (generic) easyblocks, where applicable. This avoids the need for creating (and maintaining) new easyblocks. Typically, generic easyblocks support several custom easyconfig parameters which allow to steer their behavior (see also All available easyconfig parameters).</p>  <p>Example:</p> <pre><code>easyblock = 'Binary'\n[...]\ninstall_cmd = \"./install.bin\"\n[...]\n</code></pre>"},{"location":"writing-easyconfig-files/#module-class","title":"Module class","text":"<p>The category to which the software belongs to can be specified using the moduleclass easyconfig parameter. By default, the <code>base</code> module class is used (which should be replaced with a more appropriate category).</p> <p>EasyBuild enforces that only known module classes can be specified (to avoid misclassification due to typos).</p> <p>The default list of module classes is available via <code>--show-default-moduleclasses</code>; additional module classes can be defined via the <code>--moduleclasses</code> configure option.</p> <p>Example:</p> <pre><code>name = 'GCC'\n[...]\nmoduleclass = 'compiler'\n</code></pre>  <p>Note</p> <p>By default, EasyBuild will create a symlink to the generated module file in a module class-specific path. This behavior is configurable through the module naming scheme being used.</p>   <p>Tip</p> <p>The module class may play a significant role in other aspects. For example, the alternative (hierarchical) module naming scheme <code>HierarchicalMNS</code> heavily relies on the <code>moduleclass</code> parameter for discriminating compilers and MPI libraries.</p>"},{"location":"writing-easyconfig-files/#tweaking-existing-easyconfig-files","title":"Tweaking existing easyconfig files","text":"<p>The ability to modify easyconfig files on the fly with EasyBuild, provides a very powerful and flexible feature to describe builds, without having to manually create all the input files.</p> <p>Tweaking existing easyconfigs can be done using the <code>--try-*</code> command lines options. See Tweaking existing easyconfig files for more details.</p> <p>Example:</p> <ul> <li> <p>GCC version update:</p> <pre><code>eb GCC-4.9.0.eb --try-software-version=4.9.1\n</code></pre> </li> <li> <p>install WRF + its dozen dependencies with a different toolchain (!):</p> <pre><code>eb WRF-3.5.1-ictce-5.3.0-dmpar.eb --try-toolchain=intel,2014b -r\n</code></pre> </li> </ul>"},{"location":"writing-easyconfig-files/#easyconfig_param_templates","title":"Dynamic values for easyconfig parameters","text":"<p>String templates are completed using the value of particular easyconfig parameters, typically <code>name</code> and/or <code>version</code>. These help to avoid hardcoding values in multiple locations.</p> <p>A list of available string templates can be obtained using <code>--avail-easyconfig-templates</code>.</p> <p>Additionally, constants that can be used in easyconfig files are available via <code>--avail-easyconfig-constants</code>.</p> <p>Example:</p> <pre><code>name = 'GCC'\nversion = '4.8.3'\n...\nsource_urls = [\n    # http://ftpmirror.gnu.org/gcc/gcc-4.8.3\n    'http://ftpmirror.gnu.org/%(namelower)s/%(namelower)s-%(version)s',\n]\nsources = [SOURCELOWER_TAR_GZ]  # gcc-4.8.3.tar.gz\n...\n</code></pre>  <p>Note</p> <p>Proper use of string templates is important, in particular to avoid hardcoding the software version in multiple locations of an easyconfig file; this is critical to make <code>--try-software-version</code> behave as expected (see also Tweaking existing easyconfig files).</p>"},{"location":"writing-easyconfig-files/#version-specific-documentation-relevant-to-easyconfigs","title":"Version-specific documentation relevant to easyconfigs","text":"<ul> <li>Available config file constants</li> <li>Available easyconfig parameters</li> <li>Constants available for easyconfig files</li> <li>License constants available for easyconfig files</li> <li>List of available easyblocks</li> <li>List of available toolchain options</li> <li>List of known toolchains</li> <li>List of supported software</li> <li>Overview of generic easyblocks</li> <li>Templates available for easyconfig files</li> </ul>"},{"location":"writing-easyconfig-files/#contributing-easyconfigs","title":"Contributing easyconfigs","text":"<p>Contribute your working easyconfig files!</p> <p>Share your expertise with the community, avoid duplicate work, especially if:</p> <ul> <li>the software package is not supported yet</li> <li>an existing easyconfig needs (non-trivial) changes for a different     version/toolchain</li> <li>it is a frequently used software package (compilers, MPI, etc.)</li> </ul> <p>See Contributing for more information.</p>"},{"location":"writing-yeb-easyconfig-files/","title":"Writing easyconfig files in YAML syntax (<code>.yeb</code> format) [IN DEVELOPMENT]","text":"<p>Note</p> <p>Because support for easyconfig files in YAML syntax (a.k.a. <code>.yeb</code> files) is still in development, using them currently requires enabling the use of experimental features (<code>--experimental</code>), see also Experimental features.</p> <p>An up-to-date overview of current progress on support for <code>.yeb</code> easyconfigs is available at https://github.com/easybuilders/easybuild-framework/issues/1407.</p>  <p>Useful links:</p> <ul> <li>YAML syntax specification: https://www.yaml.org/spec/1.2/spec.html</li> </ul>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_requirements","title":"Requirements","text":"<p>To use <code>.yeb</code> easyconfigs, you need to have:</p> <ul> <li>an EasyBuild (development) version which is aware of the <code>.yeb</code> format (i.e., version 2.3.0dev or higher)</li> <li>PyYAML installed and available in your Python search path   (via <code>$PYTHONPATH</code> for example), such that <code>import yaml</code> works</li> </ul>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax","title":"Syntax","text":""},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_YAML_header","title":"YAML header (optional)","text":"<p>Easyconfig files in YAML syntax can start with a standard YAML header.</p> <p>It consists of two lines:</p> <ul> <li>a line with a '<code>%YAML</code>' directive which also indicates the YAML version being used   (the latest YAML version is 1.2, and dates from 2009);</li> <li>followed by a document marker line '<code>---</code>' (which is used to separate directives from content)</li> </ul> <p>For example::</p> <pre><code>%YAML 1.2\n---\n</code></pre> <p>This header is optional, but we recommend including it; one advantage is that editor will use proper syntax highlighting for YAML when the <code>%YAML</code> directory is included.</p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_comments","title":"Comments","text":"<p>Comments can be included anywhere, and are prefixed with a hash character <code>#</code>:</p> <pre><code># this is a comment\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_internal_variables","title":"Internal variables","text":"<p>To define and use temporary/internal variables in easyconfig files, which can be useful to avoid hardcoding (partial) easyconfig parameter values, the YAML anchor/alias functionality can be used (see also https://www.yaml.org/spec/1.2/spec.html#id2765878).</p> <p>A value can be marked for future reference via an anchor, using the ampersand character '<code>&amp;</code>'. Referring to it later is done using an asterisk character '<code>*</code>'.</p> <p>Typically, internal variables are defined at the top of the <code>.yeb</code> easyconfig file using a list named <code>_internal_variables_</code>, but this is just a matter of style; anchors can be defined throughout the entire file if desired.</p> <p>For example, referring to the Python version being used in both the <code>versionsuffix</code> and list of dependencies can be done as follows::</p> <pre><code>_internal_variables_:\n    - &amp;pyver 2.7.10\n\nversionsuffix: !join [-Python-, *pyver]\ndependencies:\n    - [Python, *pyver]\n</code></pre> <p>In this example, the <code>!join</code> is used to concatenate two string values, see also Concatenating strings and/or variables.</p> <p>A more elaborate example of this is the <code>goolf-1.4.10.yeb</code> example easyconfig.</p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_string_concatenation","title":"Concatenating strings and/or variables","text":"<p>The standard YAML format does not support the notion of string concatenation.</p> <p>Since concatenating string values is a common pattern in easyconfig files, the EasyBuild framework defines the <code>!join</code> operator to support this.</p> <p>For example, defining a <code>versionsuffix</code> that contains the Python version being used (which may be referred to elsewhere too) can be done as follows:</p> <pre><code>_internal_variables_:\n    - &amp;pyver 2.7.10\n\nversionsuffix: !join [-Python-, *pyver]\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_escaping","title":"Escaping string values with single or double quotes","text":"<p>Strings in YAML can be unquoted. However, when they contain special characters they need to be escaped by either single- or double-quoting the string.</p> <p>Special characters that require single quotes are: <code>:</code> <code>{</code> <code>}</code> <code>[</code> <code>]</code> <code>,</code> <code>&amp;</code> <code>*</code> <code>#</code> <code>?</code> <code>|</code> <code>-</code> <code>&lt;</code> <code>&gt;</code> <code>=</code> <code>!</code> <code>%</code> <code>@</code> and <code>\\</code>. When using single-quoted strings, any single quote inside the string must be doubled to escape it.</p> <p>If the string contains control characters such as <code>\\n</code>, it must be escaped with double quotes. </p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_easyconfig_parameters","title":"Easyconfig parameter values","text":"<p>To define an easyconfig parameter, simply use <code>&lt;key&gt;: &lt;value&gt;</code> (i.e., use a colon <code>:</code> as a separator).</p> <p>In YAML terminology, an easyconfig file is expressed as a mapping, with easyconfig parameters as keys.</p> <p>Three types of values (nodes) are supported: scalars (strings, integers), sequences (lists) and mappings (dictionaries).</p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_scalars","title":"Scalar values","text":"<p>Using scalar values is straight-forward, no special syntax is required.</p> <p>For string values, no quotes must be used (in general). However, quotes are sometimes required to escape characters that have special meaning in YAML (like '<code>:</code>'). (Also see: Escaping string values with single or double quotes) It's worth noting that there's a subtle difference between using single and double quotes, see Flow Scalar Styles.</p> <p>Examples:</p> <pre><code>name: gzip\nversion: 1.6\n\n# single quotes are required for string values representing URLs, to escape the ':'\nhomepage: 'http://www.gnu.org/software/gzip/'\n\nparallel: 1\n</code></pre> <p>Multiline strings can be expressed using indentation:</p> <pre><code>description:\n    gzip is a popular data compression program\n    as a replacement for compress\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_sequences","title":"Sequences","text":"<p>Sequence values (a.k.a. lists) can be expressed in different ways, depending on their size.</p> <p>If there are a limited number of (short) entries the value can be expressed on a single line, using square brackets '<code>[</code>' '<code>]</code>' and with comma '<code>,</code>' as separator.</p> <p>Example:</p> <pre><code># quotes are required to escape the ':'\nsource_urls: ['http://ftpmirror.gnu.org/gzip/', 'ftp://ftp.gnu.org/gnu/gzip/']\n</code></pre> <p>Alternatively indentation can be used for scope, with each entry on its own line, indicated with a dash and a space <code>- item</code></p> <p>Example:</p> <pre><code># no quotes required here, since there's no ambiguity w.r.t. ':'\nsource_urls:\n    - http://ftpmirror.gnu.org/gzip/\n    - http://ftp.gnu.org/gnu/gzip/\n    - ftp://ftp.gnu.org/gnu/gzip/\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_mappings","title":"Mappings","text":"<p>Mapping values (a.k.a. dictionaries) are expressed using a colon '<code>:</code>' and space as key-value separator, a comma '<code>,</code>' to key-value pairs, and curly braces '<code>{</code>' '<code>}</code>' to mark the start/end.</p> <p>For example:</p> <pre><code>    toolchain: {name: intel, version: 2015b}\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_nesting","title":"Nesting","text":"<p>Different types of values can be nested.</p> <p>For example, sequence values can be used in a mapping:</p> <pre><code>sanity_check_paths: {\n    files: [bin/gunzip, bin/gzip, bin/uncompress],\n    dirs: [],\n}\n</code></pre> <p>And sequences of sequences are also supported:</p> <pre><code>osdependencies\n    - zlib\n    - [openssl-devel, libssl-dev, libopenssl-devel]\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_template_values_constants","title":"Templates values and constants","text":"<p>Template values can be specified as a part of string values, using <code>%(template_name)</code>.</p> <p>Template constants are injected by the easyconfig <code>.yeb</code> parser as node anchors, and can be referred to with an alias node, i.e. using an asterisk <code>*</code>.</p> <p>For example:</p> <pre><code>    source_urls: [*GNU_SOURCE]\n    sources: ['%(name)s-%(version)s.tar.gz']  # equivalent with [*SOURCE_TAR_GZ]\n</code></pre> <p>See also Dynamic values for easyconfig parameters.</p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_syntax_dependencies","title":"Dependencies","text":"<p>We updated the way dependencies are specified to match with the new toolchain format (OS dependencies and sanity check paths) The format is a bit more verbose than before, but easier to read. Each dependency is a list entry, indicated by a dash and space (<code>- item</code>). Each entry can specify a <code>name: version</code> key-value pair, and a <code>versionsuffix</code> and <code>toolchain</code>. Only the <code>name: version</code> pair is required.</p> <p>Dependencies can also be external modules. In this case, the dependency has to be specified with a <code>name</code> and the marker  <code>external_module: True</code>. The boolean value is not case-sensitive.</p> <p>A straightforward example:</p> <pre><code>dependencies:\n    - libreadline: 6.3\n    - Tcl: 8.6.4\n    - name: fftw/3.3.4.4\n      external_module: True\n\nbuilddependencies:\n    # empty versionsuffix, different toolchain (GCC/4.9.2)\n    - CMake: 3.2.2\n      toolchain: GCC, 4.9.2\n</code></pre> <p>A more complicated example from a toolchain easyconfig, where also the <code>!join</code> operator (see Concatenating strings and/or variables) and internal variables (see Internal variables) are used:</p> <pre><code>_internal_variables_:\n    - &amp;comp_name GCC\n    - &amp;comp_version 4.7.2\n    - &amp;comp [*comp_name, *comp_version]\n\n    - &amp;blaslib OpenBLAS\n    - &amp;blasver 0.2.6\n    - &amp;blas !join [*blaslib, -, *blasver]\n    - &amp;blas_suff -LAPACK-3.4.2\n\n    - &amp;comp_mpi_tc [gompi, 1.4.10]\n\ndependencies:\n    - *comp_name: *comp_version\n    - OpenMPI: 1.6.4\n      toolchain: *comp\n    - *blaslib: *blasver\n      versionsuffix: *blas_suff\n      toolchain: *comp_mpi_tc\n    - FFTW: 3.3.3\n      toolchain: *comp_mpi_tc\n    - ScaLAPACK: 2.0.2\n      versionsuffix: !join [-, *blas, *blas_suff]\n      toolchain: *comp_mpi_tc\n</code></pre> <p>For the full version of this easyconfig file, see the example <code>.yeb</code> easyconfig <code>goolf-1.4.10.yeb</code>.</p>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_new","title":"OS dependencies and sanity check paths","text":"<p>To specify parameters that used to contain tuples such as <code>osdependencies</code> and <code>sanity_check_paths</code>, simply use lists (sequences) instead of tuples.</p> <p>For example:</p> <pre><code># note: this is eb syntax, will not work in .yeb files\nosdependencies = [('openssl-devel', 'libssl-dev', 'libopenssl-devel')]\n</code></pre> <p>Becomes:</p> <pre><code>osdependencies: [[openssl-devel, libssl-dev, libopenssl-devel]]\n</code></pre> <p>And:</p> <pre><code># note: this is eb syntax, will not work in .yeb files\nsanity_check_paths = {\n    'files': ['fileA', ('fileB', 'fileC')],\n    'dirs' : ['dirA', 'dirB'],\n}\n</code></pre> <p>Becomes:</p> <pre><code>sanity_check_paths: {\n    files: [fileA, [fileB, fileC]],\n    dirs: [dirA, dirB]\n}\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#shorthands-for-common-easyconfig-parameters","title":"Shorthands for common easyconfig parameters","text":""},{"location":"writing-yeb-easyconfig-files/#toolchain-format","title":"Toolchain format","text":"<p>The easyconfig parameter <code>toolchain</code> in .eb files is defined as a dictionary <code>{'name':'foo', 'version':'bar'}</code>. In the .yeb format, this can be done much easier by just using <code>name, version</code>. E.g:</p> <pre><code># note: this is eb syntax, will not work in yeb files\ntoolchain = {'name':'intel', 'version':'2015b'}\n</code></pre> <p>becomes:</p> <pre><code>toolchain: intel, 2015b\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_examples","title":"Examples","text":""},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_examples_gzip16_GCC492","title":"gzip-1.6-GCC-4.9.2.yeb","text":"<p>Example easyconfig for gzip v1.6 using the <code>GCC/4.9.2</code> toolchain.</p> <pre><code>%YAML 1.2\n---\neasyblock: ConfigureMake\n\nname: gzip\nversion: 1.6\n\nhomepage: 'http://www.gnu.org/software/gzip/'\ndescription:\n    gzip is a popular data compression program\n    as a replacement for compress\n\ntoolchain: GCC, 4.9.2\n\n# http://ftp.gnu.org/gnu/gzip/gzip-1.6.tar.gz\nsource_urls: [*GNU_SOURCE]\nsources: [%(name)s-%(version)s.tar.gz]\n\n# make sure the gzip, gunzip and compress binaries are available after installation\nsanity_check_paths: {\n    files: [bin/gunzip, bin/gzip, bin/uncompress],\n    dirs: [],\n}\n\nmoduleclass: tools\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#easyconfig_yeb_format_examples_goolf1410","title":"goolf-1.4.10.yeb","text":"<p>Easyconfig file in YAML syntax for the goolf v1.4.10 toolchain.</p> <pre><code>_internal_variables_:\n    - &amp;version 1.4.10\n\n    - &amp;comp_name GCC\n    - &amp;comp_version 4.7.2\n    - &amp;comp [*comp_name, *comp_version]\n\n    - &amp;blaslib OpenBLAS\n    - &amp;blasver 0.2.6\n    - &amp;blas !join [*blaslib, -, *blasver]\n    - &amp;blas_suff -LAPACK-3.4.2\n\n    - &amp;comp_mpi_tc [gompi, *version]\n\n\neasyblock: Toolchain\n\nname: goolf\nversion: *version\n\nhomepage: (none)\ndescription: |\n    GNU Compiler Collection (GCC) based compiler toolchain, including\n    OpenMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.\n\ntoolchain: {name: system, version: system}\n\n# compiler toolchain dependencies\n# we need GCC and OpenMPI as explicit dependencies instead of gompi toolchain\n# because of toolchain preparation functions\n    dependencies:\n        - *comp_name: *comp_version\n        - OpenMPI: 1.6.4\n          toolchain: *comp\n        - *blaslib: *blasver\n          versionsuffix: *blas_suff\n          toolchain: *comp_mpi_tc\n        - FFTW: 3.3.3\n          toolchain: *comp_mpi_tc\n        - ScaLAPACK: 2.0.2\n          versionsuffix: !join [-, *blas, *blas_suff]\n          toolchain: *comp_mpi_tc\n\nmoduleclass: toolchain\n</code></pre>"},{"location":"writing-yeb-easyconfig-files/#python-2710-intel-2015byeb","title":"Python-2.7.10-intel-2015b.yeb","text":"<pre><code>_internal_variables_:\n    - &amp;numpyversion 1.9.2\n    - &amp;scipyversion 0.15.1\n\neasyblock: ConfigureMake\n\nname: Python\nversion: 2.7.10\n\nhomepage: http://python.org/\ndescription: |\n    Python is a programming language that lets you work more quickly and integrate your systems\n    more effectively.\n\ntoolchain: intel, 2015b\ntoolchainopts: {pic: True, opt: True, optarch: True}\n\nsource_urls: ['http://www.python.org/ftp/python/%(version)s/']\nsources: [*SOURCE_TGZ]\n\n# python needs bzip2 to build the bz2 package\ndependencies: [\n    - bzip2: 1.0.6\n    - zlib: 1.2.8\n    - libreadline: 6.3\n    - ncurses: 5.9\n    - SQLite: 3.8.10.2\n    - Tk: 8.4.6\n      versionsuffix: -no-X11\n  # - OpenSSL: 1.0.1m\n  #   OS dependency should be preferred if the os version is more recent then this version, its\n  #   nice to have an up to date openssl for security reasons\n]\n\nosdependencies: [[openssl-devel, libssl-dev, libopenssl-devel]]\n\n# order is important!\n# package versions updated May 28th 2015\nexts_list: [\n    [setuptools, '16.0', {\n        source_urls: [\"https://pypi.python.org/packages/source/s/setuptools/\"],\n    }],\n    [pip, 7.0.1, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/pip/\"],\n    }],\n    [nose, 1.3.6, {\n        source_urls: [\"https://pypi.python.org/packages/source/n/nose/\"],\n    }],\n    [numpy, *numpyversion, {\n        source_urls: [\n            [!join [\"http://sourceforge.net/projects/numpy/files/NumPy/\", *numpyversion], download]\n        ],\n        patches: [\n            numpy-1.8.0-mkl.patch, # % numpyversion,\n        ],\n    }],\n    [scipy, *scipyversion, {\n        source_urls: [\n            [!join [\"http://sourceforge.net/projects/scipy/files/scipy/\", *scipyversion], download]],\n    }],\n    [blist, 1.3.6, {\n        source_urls: [\"https://pypi.python.org/packages/source/b/blist/\"],\n    }],\n    [mpi4py, 1.3.1, {\n        source_urls: [\"http://bitbucket.org/mpi4py/mpi4py/downloads/\"],\n    }],\n    [paycheck, 1.0.2, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/paycheck/\"],\n    }],\n    [argparse, 1.3.0, {\n        source_urls: [\"https://pypi.python.org/packages/source/a/argparse/\"],\n    }],\n    [pbr, 1.0.1, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/pbr/\"],\n    }],\n    [lockfile, 0.10.2, {\n        source_urls: [\"https://pypi.python.org/packages/source/l/lockfile/\"],\n    }],\n    [Cython, '0.22', {\n        source_urls: [\"http://www.cython.org/release/\"],\n    }],\n    [six, 1.9.0, {\n        source_urls: [\"https://pypi.python.org/packages/source/s/six/\"],\n    }],\n    [dateutil, 2.4.2, {\n        source_tmpl: python-%(name)s-%(version)s.tar.gz,\n        source_urls: [\"https://pypi.python.org/packages/source/p/python-dateutil/\"],\n    }],\n    [deap, 1.0.2, {\n        # escaped with quotes because yaml values can't start with %\n        source_tmpl: \"%(name)s-%(version)s.post2.tar.gz\",\n        source_urls: [\"https://pypi.python.org/packages/source/d/deap/\"],\n    }],\n    [decorator, 3.4.2, {\n        source_urls: [\"https://pypi.python.org/packages/source/d/decorator/\"],\n    }],\n    [arff, 2.0.2, {\n        source_tmpl: liac-%(name)s-%(version)s.zip,\n        source_urls: [\"https://pypi.python.org/packages/source/l/liac-arff/\"],\n    }],\n    [pycrypto, 2.6.1, {\n        modulename: Crypto,\n        source_urls: [\"http://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/\"],\n    }],\n    [ecdsa, '0.13', {\n        source_urls: [\"https://pypi.python.org/packages/source/e/ecdsa/\"],\n    }],\n    [paramiko, 1.15.2, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/paramiko/\"],\n    }],\n    [pyparsing, 2.0.3, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/pyparsing/\"],\n    }],\n    [netifaces, 0.10.4, {\n        source_urls: [\"https://pypi.python.org/packages/source/n/netifaces\"],\n    }],\n    [netaddr, 0.7.14, {\n        source_urls: [\"https://pypi.python.org/packages/source/n/netaddr\"],\n    }],\n    [mock, 1.0.1, {\n        source_urls: [\"https://pypi.python.org/packages/source/m/mock\"],\n    }],\n    [pytz, '2015.4', {\n        source_urls: [\"https://pypi.python.org/packages/source/p/pytz\"],\n    }],\n    [pandas, 0.16.1, {\n        source_urls: [\"https://pypi.python.org/packages/source/p/pandas\"],\n    }],\n]\n\nmoduleclass: lang\n</code></pre>"},{"location":"api/","title":"API","text":"<p>Warning</p> <p>This page will soon replace https://docs.easybuild.io/en/latest/api.html.</p> <p> It still needs to be ported from reStructuredText (.rst) to MarkDown (.md), and you can help with that! </p> <ul> <li>source: <code>docs/api.rst</code> in <code>easybuilders/easybuild</code> repo</li> <li>target: <code>docs/api/index.md</code> in <code>easybuilders/easybuild-docs</code> repo</li> </ul> <p>See https://github.com/easybuilders/easybuild-docs for more information.</p>"},{"location":"demos/","title":"Demos","text":"<p>List of available demos:</p> <ul> <li>Demo: configuring EasyBuild</li> <li>Demo: reviewing easyconfig pull requests with <code>eb --review-pr</code></li> </ul>"},{"location":"demos/configuring/","title":"Demo: configuring EasyBuild","text":"<p>(see also Configuring EasyBuild)</p>"},{"location":"demos/review-pr/","title":"Demo: reviewing easyconfig pull requests with <code>eb --review-pr</code>","text":"<p>(see also Comparing with existing easyconfigs (<code>--review-pr</code>))</p>"},{"location":"easybuild-v4/overview-of-changes/","title":"Overview of changes in EasyBuild version 4.0","text":"<p>This page provides a concise overview of the most prominent changes in EasyBuild version 4.0, compared to the latest EasyBuild v3.x (version 3.9.4).</p> <p>A detailed overview with links to the pull requests in which the changes are made is available in the EasyBuild release notes (see EasyBuild v4.0.0 (September 20th 2019) in particular).</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_significant_enhancements","title":"Significant enhancements in EasyBuild v4.0","text":"<p>Various significant enhancements are included in EasyBuild v4.0, including:</p> <ul> <li>No more required Python packages</li> <li>Support for running EasyBuild on top of Python 3</li> <li>Custom software-specific easyblocks for <code>iccifort</code>, <code>numexpr</code>, <code>OpenMPI</code></li> <li>2019b update of common toolchains</li> <li>Local variables in easyconfigs should follow recommended naming scheme</li> </ul>"},{"location":"easybuild-v4/overview-of-changes/#eb4_no_required_deps","title":"No more required Python packages","text":"<p>To simplify the installation of EasyBuild, no Python packages other than the ones included in the Python standard library are required for EasyBuild v4.0. More specifically:</p> <ul> <li><code>setuptools</code> is no longer a required dependency, neither for using EasyBuild nor for installing it.   This change was motivated by the various problems with installing EasyBuild that were reported, which could   often be attributed to <code>setuptools</code> in one way or another (ancient versions being installed via the OS package   manager, quirky or broken functionality in specific versions, etc.).</li> <li><code>vsc-base</code> and <code>vsc-install</code> are no longer required dependencies. The relevant parts of these packages   were ingested into the EasyBuild framework codebase itself (see also Ingested functionality from <code>vsc-base</code> and <code>vsc-install</code>),   mostly to facilitate making EasyBuild compatible with Python 3.</li> </ul> <p>Note that specific Python packages may currently still be required for certain EasyBuild functionality outside of the core functionality of building and installing scientific software, including <code>keyring</code> for the GitHub integration features (see Integration with GitHub), etc.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_python3_support","title":"Support for running EasyBuild on top of Python 3","text":"<p>A significant effort has been made to ensure that the EasyBuild framework and the easyblocks included with EasyBuild are compatible with Python 3, while retaining the compatibility with Python 2.</p> <p>Currently supported Python versions include: <code>2.6</code>, <code>2.7</code>, <code>3.5</code>, <code>3.6</code>, <code>3.7</code>.</p> <p>To achieve this in a maintainable way, the <code>easybuild.tools.py2vs3</code> package was introduced. For more details, please see Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_custom_easyblocks","title":"Custom software-specific easyblocks for <code>iccifort</code>, <code>numexpr</code>, <code>OpenMPI</code>","text":"<p>A couple of additional custom software-specific easyblocks were added in EasyBuild v4.0, including:</p> <ul> <li><code>iccifort</code>: to install <code>icc</code> and <code>ifort</code> together in a single prefix, and use that installation as a toolchain</li> <li><code>numexpr</code>: to ensure that <code>numexpr</code> is linked with Intel MKL's VML when it is available</li> <li><code>OpenMPI</code>: to improve the (default) configuration of <code>OpenMPI</code> based on installed OS packages (for example for   InfiniBand support) and available dependencies</li> </ul> <p>In addition, various (generic and software-specific) easyblocks were improved and enhanced (see EasyBuild release notes for more details).</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_2019b_common_toolchains","title":"2019b update of common toolchains","text":"<p>The <code>2019b</code> update of the common toolchains is included with EasyBuild v4.0; see also Common toolchains.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_local_variables","title":"Local variables in easyconfigs should follow recommended naming scheme","text":"<p>A recommended naming scheme for local variables in easyconfig files was introduced.</p> <p>If an easyconfig file contains local variables that do not follow the recommended naming scheme, a warning will be printed (by default).</p> <p>For more information, see Local variables in easyconfig files.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_backwards_incompatible","title":"Backwards-incompatible changes in EasyBuild v4.0","text":"<p>A couple of backwards-incompatible changes were made in EasyBuild v4.0:</p> <ul> <li><code>--fixed-installdir-naming-scheme</code> enabled by default</li> <li>Relocated functions, classes and constants in EasyBuild framework</li> <li>Ingested functionality from <code>vsc-base</code> and <code>vsc-install</code></li> <li>Functions &amp; classes that must be imported from the <code>easybuild.tools.py2vs3</code> namespace</li> </ul>  <p>Note</p> <p>Other than the changed default configuration, these changes are mainly important for developers of the EasyBuild framework and easyblock implementers.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_fixed_installdir_naming_scheme","title":"<code>--fixed-installdir-naming-scheme</code> enabled by default","text":"<p>The <code>--fixed-installdir-naming-scheme</code> was changed to be enabled by default, which makes the name of the software installation directory independent of the module naming scheme being used.</p> <p>With this configuration setting enabled, the name of software installation directories will match the module name generated by the (default) <code>EasyBuildMNS</code> module naming scheme.</p> <p>So, for an easyconfig file <code>example-1.2.3-foss-2019b.eb</code>, the software installation directory will always be <code>&lt;prefix&gt;/software/example/1.2.3-foss-2019b</code>, regardless of the active module naming scheme.</p> <p>This change was done to make it easier to generate module files using one or more additional module naming scheme (using <code>--module-only</code>) for already existing software installations. Only when the name of the software installation directories is independent of the module naming scheme being used during the (first) installation is it possible to later generate additional module files using a different module naming scheme.</p>  <p>Note</p> <p>Having <code>--fixed-installdir-naming-scheme</code> enabled should not cause problems in existing setups.</p> <p>Mixing different naming schemes for software installations directories in a single software stack works just fine; it's mostly a matter of inconsistency that could be confusing for humans.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_fixed_installdir_naming_scheme_disabling","title":"Disabling <code>--fixed-installdir-naming-scheme</code>","text":"<p>If you are using a module naming scheme other than the default <code>EasyBuildMNS</code>, you may prefer disabling <code>--fixed-installdir-naming-scheme</code> to maintain consistency in the names of software installation directories. Do note that this implies that you won't be able to generate additional modules files using a different module naming scheme for existing installations.</p> <p>To disable <code>--fixed-installdir-naming-scheme</code>, you can either</p> <ul> <li> <p>disable the <code>fixed-installdir-naming-scheme</code> configuration option   in the <code>[override]</code> section of an EasyBuild configuration file:</p> <pre><code>[override]\nfixed-installdir-naming-scheme = 0\n</code></pre> <p>(see also Configuration file(s))</p> </li> <li> <p>set the <code>$EASYBUILD_DISABLE_FIXED_INSTALLDIR_NAMING_SCHEME</code> environment variable:</p> <pre><code>export EASYBUILD_DISABLE_FIXED_INSTALLDIR_NAMING_SCHEME=1\n</code></pre> <p>(see also Environment variables)</p> </li> <li> <p>use the <code>--disable-fixed-installdir-naming-scheme ...</code> command line option:</p> <pre><code>eb --disable-fixed-installdir-naming-scheme ...\n</code></pre> <p>(see also Command line arguments)</p> </li> </ul>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_relocated_stuff","title":"Relocated functions, classes and constants in EasyBuild framework","text":"<p>A limited number of functions, classes and constants have been relocated in the EasyBuild framework.</p> <p>This was done mostly to ensure that the <code>__init__.py</code> files that define packages are empty, other than the <code>pkgutil.extend_path</code> (which replaces the <code>pkg_resources.declare_namespace</code> which requires <code>setuptools</code>, see also No more required Python packages).</p> <p>Making EasyBuild compatible with Python 3 also required some similar changes, see Functions &amp; classes that must be imported from the <code>easybuild.tools.py2vs3</code> namespace.</p> <p>A detailed overview of relocated functions and constants is available at Overview of relocated functions, classes and constants in EasyBuild v4.0.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_ingested_vsc_base","title":"Ingested functionality from <code>vsc-base</code> and <code>vsc-install</code>","text":"<p>The functionality from the <code>vsc-base</code> and <code>vsc-install</code> packages required by EasyBuild has been ingested in the EasyBuild framework, see also No more required Python packages.</p> <p>This has primarily been done in the new <code>easybuild.base</code> package, so in general imports from a module in the <code>vsc.utils</code> package should be replaced with a corresponding import statement from that same module in the <code>easybuild.base</code> package.</p> <p>A number of specific functions and classes have been placed in existing modules in the <code>easybuild.tools</code> package instead.</p> <p>The affected functions are listed in Overview of relocated functions, classes and constants in EasyBuild v4.0.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_ingested_vsc_base_fake_vsc_namespace","title":"Fake <code>vsc</code> namespace","text":"<p>To avoid that any functionality is imported from an already installed <code>vsc-base</code> (or <code>vsc-install</code>) package, which could lead to strange side-effects, a fake <code>vsc</code> namespace is injected since EasyBuild v4.0.</p> <p>If an import from <code>vsc.utils.*</code> is detected (for example from an easyblock or from a module that is included via one of the <code>--include-*</code> options), an error like this will be produced:</p> <pre><code>ERROR: Detected import from 'vsc' namespace in /home/example/old_easyblock.py (line 7)\nvsc-base &amp; vsc-install were ingested into the EasyBuild framework in EasyBuild v4.0\nThe functionality you need may be available in the 'easybuild.base.*' namespace.\n</code></pre>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_py2vs3","title":"Functions &amp; classes that must be imported from the <code>easybuild.tools.py2vs3</code> namespace","text":"<p>A handful functions and classes that could be imported directly from the Python standard library should now be imported from the <code>easybuild.tools.py2vs3</code> namespace instead (perhaps under a different name), to ensure compatibility with Python 2 and 3.</p> <p>See Compatibility with Python 2 and Python 3 for more information.</p> <p>The affected functions are also included in Overview of relocated functions, classes and constants in EasyBuild v4.0.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_deprecated","title":"Deprecated functionality in EasyBuild v4.0","text":"<p>Some functionality was deprecated in EasyBuild v4.0, and will no longer be supported in EasyBuild v5.0.</p> <p>If you trigger any deprecated functionality, a warning message will be printed.</p>"},{"location":"easybuild-v4/overview-of-changes/#eb4_changes_dummy_tc","title":"Deprecated <code>dummy</code> toolchain","text":"<p>The <code>dummy</code> toolchain is now deprecated, and has been replaced with the <code>system</code> toolchain.</p> <p>For more information, please consult System toolchain.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/","title":"Overview of relocated functions, classes and constants in EasyBuild v4.0","text":"<p>This page provides an alphabetical overview of relocated functions, classes and constants in EasyBuild version 4.0; see Backwards-incompatible changes in EasyBuild v4.0 for motivation and high-level information.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_basestring","title":"<code>basestring</code> type","text":"<p>Rather than using the <code>basestring</code> type from the Python 2 standard library directly (for example in an <code>isinstance</code> expression), the <code>string_type</code> type from the <code>easybuild.tools.py2vs3</code> package should be used instead, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_configparser","title":"<code>configparser</code> module","text":"<p>The <code>configparser</code> module that is part of the Python 2 standard library (via <code>ConfigParser</code>) must now be imported from the <code>easybuild.tools.py2vs3</code> package, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_DEVEL_MODULE_SUFFIX","title":"<code>DEVEL_MODULE_SUFFIX</code> constant","text":"<p>The <code>DEVEL_MODULE_SUFFIX</code> constant was relocated from <code>easybuild.tools.module_naming_scheme</code> to <code>easybuild.tools.module_naming_scheme.mns</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_DUMMY_TOOLCHAIN_NAME_VERSION:","title":"<code>DUMMY_TOOLCHAIN_NAME</code> and <code>DUMMY_TOOLCHAIN_VERSION</code> constants","text":"<p>The <code>DUMMY_TOOLCHAIN_NAME</code> and <code>DUMMY_TOOLCHAIN_VERSION</code> constants were relocated from <code>easybuild.tools.toolchain</code> to <code>easybuild.tools.toolchain.toolchain</code>.</p>  <p>Note</p> <p>Since the <code>dummy</code> toolchain has been deprecated and is replaced by the <code>system</code> toolchain (see System toolchain), you should use the <code>is_system_toolchain</code> function or <code>Toolchain.is_system_toolchain</code> method to check whether a toolchain is a <code>dummy</code> or <code>system</code> toolchain, rather than using these constants directly (or using the <code>SYSTEM_TOOLCHAIN-*</code> equivalents).</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_FrozenDictKnownKeys","title":"<code>FrozenDictKnownKeys</code> class","text":"<p>The <code>FrozenDictKnownKeys</code> class from <code>vsc.utils.missing</code> is now available from <code>easybuild.base.frozendict</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_GEENRAL_CLASS","title":"<code>GENERAL_CLASS</code> constant","text":"<p>The <code>GENERAL_CLASS</code> constant was relocated from <code>easybuild.tools.module_naming_scheme</code> to <code>easybuild.tools.config</code>.</p> <p><code>get_class_for</code> function {: #eb4_relocated_get_class_for }</p> <p>The <code>get_class_for</code> function from <code>vsc.utils.missing</code> is now available from <code>easybuild.tools.utilities</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_get_subclasses","title":"<code>get_subclasses</code> function","text":"<p>The <code>get_subclasses</code> function from <code>vsc.utils.missing</code> is now available from <code>easybuild.tools.utilities</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_INDENT_4SPACES","title":"<code>INDENT_4SPACES</code> constant","text":"<p>The <code>INDENT_4SPACES</code> constants was relocated from <code>easybuild.framework.easyconfig.format.format</code> to <code>easybuild.tools.utilities</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_mk_rst_table","title":"<code>mk_rst_table</code> function","text":"<p>The <code>mk_rst_table</code> function from <code>vsc.utils.docs</code> is now available from <code>easybuild.tools.docs</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_ModuleNamingScheme","title":"<code>ModuleNamingScheme</code> class","text":"<p>The <code>ModuleNamingScheme</code> class was relocated from <code>easybuild.tools.module_naming_scheme</code> to <code>easybuild.tools.module_naming_scheme.mns</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_nub","title":"<code>nub</code> function","text":"<p>The <code>nub</code> function from <code>vsc.utils.missing</code> is now available from <code>easybuild.tools.utilities</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_OrderedDict","title":"<code>OrderedDict</code> class","text":"<p>The <code>OrderedDict</code> class that is part of the Python 2 standard library (via <code>collections</code>) must now be imported from the <code>easybuild.tools.py2vs3</code> package, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_reload","title":"<code>reload</code> function","text":"<p>The <code>reload</code> function that is a built-in function of the Python 2 standard library must now be imported from the <code>easybuild.tools.py2vs3</code> package, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_shell_quote","title":"<code>shell_quote</code> function","text":"<p>The <code>shell_quote</code> function from <code>vsc.utils.missing</code> is now available from <code>easybuild.tools.utilities</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_sched_getaffinity","title":"<code>sched_getaffinity</code> function","text":"<p>The <code>sched_getaffinity</code> function from <code>vsc.utils.affinity</code> is now available from <code>easybuild.tools.systemtools</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_Singleton","title":"<code>Singleton</code> class","text":"<p>The <code>Singleton</code> class from <code>vsc.utils.patterns</code> is now available from <code>easybuild.tools.config</code>.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_StringIO","title":"<code>StringIO</code> class","text":"<p>Rather than importing the <code>StringIO</code> class from the <code>StringIO</code> module of the Python 2 standard library, it should be imported from the <code>easybuild.tools.py2vs3</code> package instead, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_subprocess_Popen","title":"<code>subprocess.Popen</code> function","text":"<p>Rather than using the <code>subprocess.Popen</code> function directly, the <code>subprocess_popen_text</code> function from the <code>easybuild.tools.py2vs3</code> package should be used instead, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_urlencode","title":"<code>urlencode</code> function","text":"<p>Rather than importing the <code>urlencode</code> function from the <code>urllib</code> module of the Python 2 standard library, it should be imported from the <code>easybuild.tools.py2vs3</code> package instead, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_urllib","title":"<code>urllib</code> module","text":"<p>Rather than using the <code>urllib</code> module from the Python 2 standard library directly, the <code>std_urllib</code> module from the <code>easybuild.tools.py2vs3</code> package should be used instead, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_urllib2","title":"<code>urllib2</code> module","text":"<p>Functions that were imported from the <code>urllib2</code> package that is part of the Python 2 standard library must now be imported from the <code>easybuild.tools.py2vs3</code> package, to ensure that the code is compatible with both Python 2 and 3.</p> <p>See also Compatibility with Python 2 and Python 3.</p>"},{"location":"easybuild-v4/overview-relocated-functions-constants/#eb4_relocated_vsc_utils_modules","title":"<code>vsc.utils.*</code> modules","text":"<p>The functionality from the following <code>vsc.utils.*</code> modules required by EasyBuild has been ingested in the corresponding <code>easybuild.base.*</code> module:</p> <ul> <li><code>vsc.utils.exceptions</code></li> <li><code>vsc.utils.fancylogger</code></li> <li><code>vsc.utils.generaloption</code></li> <li><code>vsc.utils.optcomplete</code></li> <li><code>vsc.utils.rest</code></li> <li><code>vsc.utils.testing</code></li> <li><code>vsc.utils.wrapper</code></li> </ul> <p>See also No more required Python packages.</p>"},{"location":"legacy/configuration/","title":"Configuration Legacy","text":"<p>Legacy configuration is currently deprecated!</p> <p>If you are a new user of EasyBuild you can safely ignore everything below this line, refer instead to Configuring EasyBuild.</p>"},{"location":"legacy/configuration/#porting-from-legacy-configuration-style","title":"Porting from legacy configuration style","text":"<p>In EasyBuild v1.x, a couple of configuration options, other than the standard ones aligned with variables, are available that follow the legacy configuration style, including:</p> <ul> <li>the <code>-C</code> and <code>--config</code> command line arguments ( use <code>--configfiles</code> instead )</li> <li>the <code>$EASYBUILDCONFIG</code> environment variable ( use <code>$EASYBUILD_CONFIGFILES</code> instead )</li> <li>the default path <code>$HOME/.easybuild/config.py</code> ( new-style default     path is <code>$XDG_CONFIG_HOME/easybuild/config.cfg</code>)</li> <li>the legacy fallback path     <code>&lt;installpath&gt;/easybuild/easybuild_config.py</code> ( only     default/fallback path is <code>$XDG_CONFIG_HOME/easybuild/config.cfg</code>)</li> </ul> <p>Likewise, the following legacy environment variables allowed to override selected configuration settings:</p> <ul> <li><code>$EASYBUILDBUILDPATH</code>: build path to be used by EasyBuild ( use <code>$EASYBUILD_BUILDPATH</code> instead )</li> <li><code>$EASYBUILDINSTALLPATH</code>: install path to be used by EasyBuild (     use <code>$EASYBUILD_INSTALLPATH</code> instead )</li> <li><code>$EASYBUILDSOURCEPATH</code>: source path to be used by EasyBuild (     use <code>$EASYBUILD_SOURCEPATH</code> instead )</li> <li><code>$EASYBUILDPREFIX</code>: build/install/source path prefix to be used (     use <code>$EASYBUILD_PREFIX</code> instead )</li> </ul> <p>We strongly advise to switch to the new way of configuring EasyBuild as soon as possible, since the legacy configuration style will no longer be supported in EasyBuild v2.x.</p>"},{"location":"legacy/configuration/#how-easybuild-used-to-be-configured-in-the-early-days","title":"How EasyBuild used to be configured in the early days","text":"<p>Configuring EasyBuild is done by providing a configuration file.</p> <p>EasyBuild expects the configuration file to contain valid Python code, because it executes its contents (using <code>exec</code>). The rationale is that this approach provides a lot of flexibility for configuring EasyBuild.</p> <p>EasyBuild will use the file that is provided by the path/filename in the following order of preference:</p> <ul> <li>path/filename specified on the EasyBuild command line (using     <code>--config</code>),</li> <li>path/filename obtained from the environment variable     <code>EASYBUILDCONFIG</code> (if it is defined)</li> <li><code>$HOME/.easybuild/config.py</code> (as of EasyBuild v1.1)</li> <li>the (default) configuration file at     <code>&lt;path where EasyBuild was installed&gt;/easybuild/easybuild_config.py</code></li> </ul>"},{"location":"legacy/configuration/#configuration-variables","title":"Configuration variables","text":"<p>The configuration file must define the following five variables: <code>build_path</code>, <code>install_path</code>, <code>source_path</code>, <code>repository</code>, and <code>log_format</code>. If one of them is not defined, EasyBuild will complain and exit.</p>"},{"location":"legacy/configuration/#build-path-required","title":"Build path (required)","text":"<p>The <code>build_path</code> variable specifies the directory in which EasyBuild builds its software packages.</p> <p>Each software package is (by default) built in a subdirectory of the <code>build_path</code> under <code>&lt;name&gt;/&lt;version&gt;/&lt;toolchain&gt;&lt;versionsuffix&gt;</code>.</p> <p>Note that the build directories are emptied by EasyBuild when the installation is completed (by default).</p>"},{"location":"legacy/configuration/#install-path-required","title":"Install path (required)","text":"<p>The <code>install_path</code> variable specifies the directory in which EasyBuild installs software packages and the corresponding module files.</p> <p>The packages themselves are installed under <code>install_path/software</code> in their own subdirectory aptly named <code>&lt;name&gt;/&lt;version&gt;-&lt;toolchain&gt;&lt;versionsuffix&gt;</code> (by default), where name is the package name. The corresponding module files are installed under <code>install_path/modules</code>.</p> <p>Setting <code>$MODULEPATH</code></p> <p>After the configuration, you need to make sure that <code>$MODULEPATH</code> environment variable is extended with the <code>modules/all</code> subdirectory of the <code>install_path</code>, i.e.:</p> <pre><code>export MODULEPATH=&lt;install_path&gt;/modules/all:$MODULEPATH\n</code></pre> <p>It is probably a good idea to add this to your (favourite) shell .rc file, e.g., <code>.bashrc</code>, and/or the <code>.profile</code> login scripts, so you do not need to adjust the <code>$MODULEPATH</code> variable every time you start a new session.</p>"},{"location":"legacy/configuration/#source-path-required","title":"Source path (required)","text":"<p>The <code>source_path</code> variable specifies the directory in which EasyBuild looks for software source and install files.</p> <p>Similarly to the configuration file lookup, EasyBuild looks for the installation files as given by the <code>sources</code> variable in the .eb easyconfig file, in the following order of preference:</p> <ul> <li><code>&lt;source_path&gt;/&lt;name&gt;</code>: a subdirectory determined by the name of the     software package</li> <li><code>&lt;source_path&gt;/&lt;letter&gt;/&lt;name&gt;</code>: in the style of the     <code>easyblocks</code>/<code>easyconfigs</code> directories: in a subdirectory determined     by the first letter (in lower case) of the software package and by     its full <code>name</code></li> <li><code>&lt;source_path&gt;</code>: directly in the source path</li> </ul> <p>Note that these locations are also used when EasyBuild looks for patch files in addition to the various <code>easybuild/easyconfigs</code> directories that are listed in the <code>$PYTHONPATH</code>.</p>"},{"location":"version-specific/","title":"Overview of version-specific (auto-generated) documentation pages","text":"<ul> <li>Config file constants</li> <li>Available easyconfig parameters</li> <li>Constants available for easyconfig files</li> <li>License constants available for easyconfig files</li> <li>List of available easyblocks</li> <li>List of available toolchain options</li> <li>List of known toolchains</li> <li>List of supported software</li> <li>Overview of EasyBuild configuration options</li> <li>Overview of generic easyblocks</li> <li>Templates available for easyconfig files</li> </ul>"},{"location":"version-specific/config-file-constants/","title":"Constants available (only) in configuration files","text":""},{"location":"version-specific/config-file-constants/#only-in-default-section","title":"Only in 'DEFAULT' section:","text":"Constant name Constant help Constant value     <code>DEFAULT_REPOSITORYPATH</code> Default easyconfigs repository path <code>/home/example/.local/easybuild/ebfiles_repo</code>   <code>DEFAULT_ROBOT_PATHS</code> List of default robot paths (':'-separated) <code>/home/example/work/easybuild-easyconfigs/easybuild/easyconfigs</code>   <code>HOME</code> Current user's home directory, expanded '~' <code>/home/example</code>   <code>USER</code> Current username, translated uid from password file <code>example</code>    <p>(see also <code>eb --avail-cfgfile-constants</code> )</p>"},{"location":"version-specific/easyblocks/","title":"List of easyblocks","text":"<ul> <li>EasyBlock</li> <li>Binary<ul> <li>Conda</li> <li>EB_ABAQUS</li> <li>EB_Allinea</li> <li>EB_Anaconda</li> <li>EB_Mamba</li> <li>EB_Anaconda</li> <li>EB_Mamba</li> <li>EB_AOMP</li> <li>EB_CPLEX</li> <li>EB_CRISPR_minus_DAV</li> <li>EB_CUDA</li> <li>EB_CUDAcompat</li> <li>EB_EPD</li> <li>EB_IMOD</li> <li>EB_Maple</li> <li>EB_Mathematica</li> <li>EB_Molpro</li> <li>EB_TensorRT</li> <li>JAR</li> <li>PackedBinary</li> <li>EB_ANSYS</li> <li>EB_ant</li> <li>EB_AOCC</li> <li>EB_BiSearch</li> <li>EB_Chimera</li> <li>EB_code_minus_server</li> <li>EB_COMSOL</li> <li>EB_FDTD_underscore_Solutions</li> <li>EB_FLUENT</li> <li>EB_IronPython</li> <li>EB_Java</li> <li>EB_MATLAB</li> <li>EB_MCR</li> <li>EB_MotionCor2</li> <li>EB_NVHPC</li> <li>EB_ORCA</li> <li>EB_PGI</li> <li>EB_Samcef</li> <li>EB_Stata</li> <li>EB_Tornado</li> <li>EB_TotalView</li> <li>Rpm</li> <li>EB_Mono</li> </ul> </li> <li>Bundle<ul> <li>BuildEnv</li> <li>CrayToolchain</li> <li>EB_Clang_minus_AOMP</li> <li>EB_OpenSSL_wrapper</li> <li>JuliaBundle</li> <li>PythonBundle</li> <li>SystemCompiler</li> <li>SystemMPI</li> <li>Toolchain</li> </ul> </li> <li>ConfigureMake<ul> <li>CMakeMake</li> <li>CMakeMakeCp</li> <li>CMakeNinja</li> <li>CMakePythonPackage<ul> <li>EB_DOLFIN</li> <li>EB_pybind11</li> <li>EB_UFC</li> </ul> </li> <li>EB_Amber</li> <li>EB_Armadillo</li> <li>EB_BamTools</li> <li>EB_Blender</li> <li>EB_CGAL</li> <li>EB_Clang</li> <li>EB_Doxygen</li> <li>EB_Eigen</li> <li>EB_ELSI</li> <li>EB_FlexiBLAS</li> <li>EB_GATE</li> <li>EB_Geant4</li> <li>EB_GROMACS</li> <li>EB_LAMMPS</li> <li>EB_Libint</li> <li>EB_LLVM</li> <li>EB_netCDF</li> <li>EB_NEURON</li> <li>EB_OpenBabel</li> <li>EB_OpenCV</li> <li>EB_PSI</li> <li>EB_ROOT</li> <li>EB_ScaLAPACK</li> <li>EB_SuperLU</li> <li>EB_Trilinos</li> <li>ConfigureMakePythonPackage</li> <li>EB_ARB</li> <li>EB_ATLAS</li> <li>EB_BerkeleyGW</li> <li>EB_binutils</li> <li>EB_BLACS</li> <li>EB_Bowtie</li> <li>EB_BWA</li> <li>EB_bzip2</li> <li>EB_CBLAS</li> <li>EB_Chapel</li> <li>EB_CMake</li> <li>EB_cppcheck</li> <li>EB_Cufflinks</li> <li>EB_DB</li> <li>EB_DL_underscore_POLY_underscore_Classic</li> <li>EB_Doris</li> <li>EB_EggLib</li> <li>EB_ELPA</li> <li>EB_ESMF</li> <li>EB_ESPResSo</li> <li>EB_Extrae</li> <li>EB_Ferret</li> <li>EB_FFTW</li> <li>EB_FFTW_period_MPI</li> <li>EB_flex</li> <li>EB_FreeFEM</li> <li>EB_freetype</li> <li>EB_g2clib</li> <li>EB_g2lib</li> <li>EB_GCC</li> <li>SystemCompiler</li> <li>EB_GHC</li> <li>EB_Go</li> <li>EB_HDF5</li> <li>EB_HEALPix</li> <li>EB_HPCG</li> <li>EB_HPL</li> <li>EB_Hypre</li> <li>EB_LAPACK</li> <li>EB_libdrm</li> <li>EB_libQGLViewer</li> <li>EB_libxml2</li> <li>EB_Lua</li> <li>EB_MetaVelvet</li> <li>EB_METIS</li> <li>EB_Molpro</li> <li>EB_Mono</li> <li>EB_Mothur</li> <li>EB_MPICH</li> <li>EB_MVAPICH2</li> <li>EB_psmpi</li> <li>EB_MrBayes</li> <li>EB_MUMmer</li> <li>EB_MUMPS</li> <li>EB_MyMediaLite</li> <li>EB_NCCL</li> <li>EB_ncurses</li> <li>EB_netCDF_minus_Fortran</li> <li>EB_NWChem</li> <li>EB_OCaml</li> <li>EB_Octave</li> <li>EB_OpenBLAS</li> <li>EB_OpenMPI</li> <li>EB_OpenSSL</li> <li>EB_Paraver</li> <li>EB_Pasha</li> <li>EB_PDT</li> <li>EB_Perl</li> <li>EB_PETSc</li> <li>EB_pplacer</li> <li>EB_Primer3</li> <li>EB_Python</li> <li>EB_Tkinter</li> <li>EB_QScintilla</li> <li>EB_Qt</li> <li>EB_QuantumESPRESSO</li> <li>EB_R</li> <li>EB_Ruby</li> <li>EB_SAMtools</li> <li>EB_Scalasca1</li> <li>EB_Score_minus_P</li> <li>EB_SHRiMP</li> <li>EB_Siesta</li> <li>EB_SLEPc</li> <li>EB_SOAPdenovo</li> <li>EB_SuiteSparse</li> <li>EB_SWIG</li> <li>EB_TAU</li> <li>EB_tbb</li> <li>EB_tbb</li> <li>EB_UCX_Plugins</li> <li>EB_Velvet</li> <li>EB_VMD</li> <li>EB_XALT</li> <li>EB_XCrySDen</li> <li>MakeCp</li> <li>CMakeMakeCp</li> <li>CmdCp<ul> <li>EB_fastStructure</li> </ul> </li> <li>EB_BamTools</li> <li>EB_BLAT</li> <li>EB_Bowtie2</li> <li>EB_BWISE</li> <li>EB_MSM</li> <li>EB_mutil</li> <li>EB_MXNet</li> <li>EB_NAMD</li> <li>EB_ORCA</li> <li>PerlModule</li> <li>SystemMPI</li> </ul> </li> <li>EB_ACML</li> <li>EB_ADF</li> <li>EB_ALADIN</li> <li>EB_Bazel</li> <li>EB_Boost</li> <li>EB_CFDEMcoupling</li> <li>EB_CHARMM</li> <li>EB_code_minus_server</li> <li>EB_CP2K</li> <li>EB_FSL</li> <li>EB_GAMESS_minus_US</li> <li>EB_Gctf</li> <li>EB_libsmm</li> <li>EB_Modeller</li> <li>EB_MRtrix</li> <li>EB_NCL</li> <li>EB_NEMO</li> <li>EB_Nim</li> <li>EB_OpenFOAM</li> <li>EB_OpenIFS</li> <li>EB_ParMETIS</li> <li>EB_Rosetta</li> <li>EB_SAS</li> <li>EB_SCOTCH</li> <li>EB_SNPhylo</li> <li>EB_STAR_minus_CCM_plus_</li> <li>EB_TINKER</li> <li>EB_Trinity</li> <li>EB_VEP</li> <li>EB_WIEN2k</li> <li>EB_WPS</li> <li>EB_WRF</li> <li>EB_WRF_minus_Fire</li> <li>ExtensionEasyBlock<ul> <li>EB_Scipion</li> <li>JuliaPackage</li> <li>OCamlPackage</li> <li>OctavePackage</li> <li>PerlModule</li> <li>PythonPackage</li> <li>CMakePythonPackage<ul> <li>EB_DOLFIN</li> <li>EB_pybind11</li> <li>EB_UFC</li> </ul> </li> <li>ConfigureMakePythonPackage</li> <li>EB_cryptography</li> <li>EB_dm_minus_reverb</li> <li>EB_EasyBuildMeta</li> <li>EB_EggLib</li> <li>EB_jaxlib</li> <li>EB_libxml2</li> <li>EB_Metagenome_Atlas</li> <li>EB_netcdf4_minus_python</li> <li>EB_nose</li> <li>EB_numexpr</li> <li>EB_PyQuante</li> <li>EB_python_minus_meep</li> <li>EB_PyTorch</li> <li>EB_PyZMQ</li> <li>EB_SEPP</li> <li>EB_TensorFlow</li> <li>EB_TensorRT</li> <li>EB_torchvision</li> <li>EB_VSC_minus_tools</li> <li>EB_wxPython</li> <li>FortranPythonPackage<ul> <li>EB_numpy</li> <li>EB_scipy</li> </ul> </li> <li>VersionIndependentPythonPackage<ul> <li>VSCPythonPackage</li> </ul> </li> <li>RPackage</li> <li>EB_Bioconductor</li> <li>EB_pbdMPI</li> <li>EB_pbdSLAP</li> <li>EB_reticulate</li> <li>EB_Rmpi</li> <li>EB_Rserve</li> <li>EB_XML</li> <li>RubyGem</li> <li>Tarball</li> <li>BinariesTarball</li> <li>EB_cuDNN</li> <li>EB_FoldX</li> <li>EB_FreeSurfer</li> <li>EB_Gurobi</li> <li>EB_Hadoop</li> <li>EB_MTL4</li> <li>EB_picard</li> <li>EB_RepeatMasker</li> <li>EB_RepeatModeler</li> </ul> </li> <li>GoPackage</li> <li>IntelBase<ul> <li>EB_Advisor</li> <li>EB_icc</li> <li>EB_iccifort</li> <li>EB_ifort<ul> <li>EB_iccifort</li> <li>SystemCompiler</li> </ul> </li> <li>EB_ifort</li> <li>EB_iccifort</li> <li>SystemCompiler</li> <li>EB_imkl</li> <li>EB_imkl_minus_FFTW</li> <li>EB_impi</li> <li>SystemMPI</li> <li>EB_Inspector</li> <li>EB_intel_minus_compilers</li> <li>EB_ipp</li> <li>EB_itac</li> <li>EB_tbb</li> <li>EB_tbb</li> <li>EB_VTune</li> </ul> </li> <li>MesonNinja<ul> <li>CMakeNinja</li> <li>EB_Mesa</li> </ul> </li> <li>ModuleRC</li> <li>PackedBinary<ul> <li>EB_ANSYS</li> <li>EB_ant</li> <li>EB_AOCC</li> <li>EB_BiSearch</li> <li>EB_Chimera</li> <li>EB_code_minus_server</li> <li>EB_COMSOL</li> <li>EB_FDTD_underscore_Solutions</li> <li>EB_FLUENT</li> <li>EB_IronPython</li> <li>EB_Java</li> <li>EB_MATLAB</li> <li>EB_MCR</li> <li>EB_MotionCor2</li> <li>EB_NVHPC</li> <li>EB_ORCA</li> <li>EB_PGI</li> <li>EB_Samcef</li> <li>EB_Stata</li> <li>EB_Tornado</li> <li>EB_TotalView</li> </ul> </li> <li>SCons<ul> <li>EB_Xmipp</li> </ul> </li> <li>Waf</li> <li>Extension</li> <li>ExtensionEasyBlock<ul> <li>EB_Scipion</li> <li>JuliaPackage</li> <li>OCamlPackage</li> <li>OctavePackage</li> <li>PerlModule</li> <li>PythonPackage</li> <li>CMakePythonPackage<ul> <li>EB_DOLFIN</li> <li>EB_pybind11</li> <li>EB_UFC</li> </ul> </li> <li>ConfigureMakePythonPackage</li> <li>EB_cryptography</li> <li>EB_dm_minus_reverb</li> <li>EB_EasyBuildMeta</li> <li>EB_EggLib</li> <li>EB_jaxlib</li> <li>EB_libxml2</li> <li>EB_Metagenome_Atlas</li> <li>EB_netcdf4_minus_python</li> <li>EB_nose</li> <li>EB_numexpr</li> <li>EB_PyQuante</li> <li>EB_python_minus_meep</li> <li>EB_PyTorch</li> <li>EB_PyZMQ</li> <li>EB_SEPP</li> <li>EB_TensorFlow</li> <li>EB_TensorRT</li> <li>EB_torchvision</li> <li>EB_VSC_minus_tools</li> <li>EB_wxPython</li> <li>FortranPythonPackage<ul> <li>EB_numpy</li> <li>EB_scipy</li> </ul> </li> <li>VersionIndependentPythonPackage<ul> <li>VSCPythonPackage</li> </ul> </li> <li>RPackage</li> <li>EB_Bioconductor</li> <li>EB_pbdMPI</li> <li>EB_pbdSLAP</li> <li>EB_reticulate</li> <li>EB_Rmpi</li> <li>EB_Rserve</li> <li>EB_XML</li> <li>RubyGem</li> <li>Tarball</li> <li>BinariesTarball</li> <li>EB_cuDNN</li> <li>EB_FoldX</li> <li>EB_FreeSurfer</li> <li>EB_Gurobi</li> <li>EB_Hadoop</li> <li>EB_MTL4</li> <li>EB_picard</li> <li>EB_RepeatMasker</li> <li>EB_RepeatModeler</li> </ul> </li> </ul> <p>(see also <code>eb --list-easyblocks</code> and overview of generic easyblocks )*</p>"},{"location":"version-specific/easyconfig-constants/","title":"Constants that can be used in easyconfigs","text":"Constant name Constant value Description     <code>ARCH</code> <code>aarch64</code> CPU architecture of current system (aarch64, x86_64, ppc64le, ...)   <code>EXTERNAL_MODULE</code> <code>EXTERNAL_MODULE</code> External module marker   <code>HOME</code> <code>/home/example</code> Home directory ($HOME)   <code>OS_NAME</code> <code>UNKNOWN</code> System name (e.g. 'fedora' or 'RHEL')   <code>OS_PKG_IBVERBS_DEV</code> <code>('libibverbs-dev', 'libibverbs-devel', 'rdma-core-devel')</code> OS packages providing ibverbs/infiniband development support   <code>OS_PKG_OPENSSL_BIN</code> <code>openssl</code> OS packages providing the openSSL binary   <code>OS_PKG_OPENSSL_DEV</code> <code>('openssl-devel', 'libssl-dev', 'libopenssl-devel')</code> OS packages providing openSSL development support   <code>OS_PKG_OPENSSL_LIB</code> <code>('libssl', 'libopenssl')</code> OS packages providing openSSL libraries   <code>OS_PKG_PAM_DEV</code> <code>('pam-devel', 'libpam0g-dev')</code> OS packages providing Pluggable Authentication Module (PAM) development support   <code>OS_TYPE</code> <code>Darwin</code> System type (e.g. 'Linux' or 'Darwin')   <code>OS_VERSION</code> <code>UNKNOWN</code> System version   <code>SYSTEM</code> <code>{'name': 'system', 'version': 'system'}</code> System toolchain   <code>SYS_PYTHON_VERSION</code> <code>3.9.6</code> System Python version (platform.python_version())    <p>(see also <code>eb --avail-easyconfig-constants</code> )</p>"},{"location":"version-specific/easyconfig-license-constants/","title":"License constants that can be used in easyconfigs","text":"License name License description Version     <code>GCC</code> The GNU General Public License is a free, copyleft license for software and other kinds of works. The GCC Runtime Library Exception is an additional permission under section 7 of the GNU General Public License, version 3. <code>3</code>   <code>GCCOld</code> The GNU General Public License is a free, copyleft license for software and other kinds of works. The GCC Runtime Library Exception is an additional permission under section 7 of the GNU General Public License, version 3. <code>2</code>   <code>GPLv2</code> The GNU General Public License is a free, copyleft license for software and other kinds of works. <code>2</code>   <code>GPLv3</code> The GNU General Public License is a free, copyleft license for software and other kinds of works. <code>3</code>   <code>Libpng</code> Permission is granted to use, copy, modify, and distribute the source code, or portions hereof, for any purpose, without fee, subject to 3 restrictions; http://libpng.org/pub/png/src/libpng-LICENSE.txt for full license <code>None</code>   <code>Unknown</code> None <code>None</code>   <code>VeryRestrictive</code> None <code>None</code>    <p>(see also <code>eb --avail-easyconfig-licenses</code> )</p>"},{"location":"version-specific/easyconfig-parameters/","title":"Available easyconfig parameters","text":""},{"location":"version-specific/easyconfig-parameters/#mandatory-parameters","title":"Mandatory parameters","text":"Parameter name Description Default value     <code>description</code> A short description of the software <code>None</code>   <code>docurls</code> List of urls with documentation of the software (not necessarily on homepage) <code>None</code>   <code>homepage</code> The homepage of the software <code>None</code>   <code>name</code> Name of software <code>None</code>   <code>software_license</code> Software license <code>None</code>   <code>software_license_urls</code> List of software license locations <code>None</code>   <code>toolchain</code> Name and version of toolchain <code>None</code>   <code>version</code> Version of software <code>None</code>"},{"location":"version-specific/easyconfig-parameters/#toolchain-parameters","title":"Toolchain parameters","text":"Parameter name Description Default value     <code>onlytcmod</code> Boolean/string to indicate if the toolchain should only load the environment with module (True) or also set all other variables (False) like compiler CC etc (if string: comma separated list of variables that will be ignored). <code>False</code>   <code>toolchainopts</code> Extra options for compilers <code>None</code>"},{"location":"version-specific/easyconfig-parameters/#build-parameters","title":"Build parameters","text":"Parameter name Description Default value     <code>banned_linked_shared_libs</code> List of shared libraries (names, file names, or paths) which are not allowed to be linked in any installed binary/library <code>[]</code>   <code>bin_lib_subdirs</code> List of subdirectories for binaries and libraries, which is used during sanity check to check RPATH linking and banned/required libraries <code>[]</code>   <code>bitbucket_account</code> Bitbucket account name to be used to resolve template values in source URLs <code>\"%(namelower)s\"</code>   <code>buildopts</code> Extra options passed to make step (default already has -j X) <code>\"\"</code>   <code>checksums</code> Checksums for sources and patches <code>[]</code>   <code>configopts</code> Extra options passed to configure (default already has --prefix) <code>\"\"</code>   <code>cuda_compute_capabilities</code> List of CUDA compute capabilities to build with (if supported) <code>[]</code>   <code>download_instructions</code> Specify steps to acquire necessary file, if obtaining it is difficult <code>\"\"</code>   <code>easyblock</code> EasyBlock to use for building; if set to None, an easyblock is selected based on the software name <code>None</code>   <code>easybuild_version</code> EasyBuild-version this spec-file was written for <code>None</code>   <code>enhance_sanity_check</code> Indicate that additional sanity check commands &amp; paths should enhance the existing sanity check, not replace it <code>False</code>   <code>fix_bash_shebang_for</code> List of files for which Bash shebang should be fixed to '#!/usr/bin/env bash' (glob patterns supported) <code>None</code>   <code>fix_perl_shebang_for</code> List of files for which Perl shebang should be fixed to '#!/usr/bin/env perl' (glob patterns supported) <code>None</code>   <code>fix_python_shebang_for</code> List of files for which Python shebang should be fixed to '#!/usr/bin/env python' (glob patterns supported) <code>None</code>   <code>github_account</code> GitHub account name to be used to resolve template values in source URLs <code>\"%(namelower)s\"</code>   <code>hidden</code> Install module file as 'hidden' by prefixing its version with '.' <code>False</code>   <code>installopts</code> Extra options for installation <code>\"\"</code>   <code>maxparallel</code> Max degree of parallelism <code>None</code>   <code>parallel</code> Degree of parallelism for e.g. make (default: based on the number of cores, active cpuset and restrictions in ulimit) <code>None</code>   <code>patches</code> List of patches to apply <code>[]</code>   <code>postinstallcmds</code> Commands to run after the install step. <code>[]</code>   <code>postinstallmsgs</code> Messages to print after running the install step. <code>[]</code>   <code>postinstallpatches</code> Patch files to apply after running the install step. <code>[]</code>   <code>prebuildopts</code> Extra options pre-passed to build command. <code>\"\"</code>   <code>preconfigopts</code> Extra options pre-passed to configure. <code>\"\"</code>   <code>preinstallopts</code> Extra prefix options for installation. <code>\"\"</code>   <code>pretestopts</code> Extra prefix options for test. <code>\"\"</code>   <code>required_linked_shared_libs</code> List of shared libraries (names, file names, or paths) which must be linked in all installed binaries/libraries <code>[]</code>   <code>runtest</code> Indicates if a test should be run after make; should specify argument after make (for e.g.,\"test\" for make test) <code>None</code>   <code>sanity_check_commands</code> format: [(name, options)] e.g. [('gzip','-h')]. Using a non-tuple is equivalent to (name, '-h') <code>[]</code>   <code>sanity_check_paths</code> List of files and directories to check (format: {'files':, 'dirs':}) <code>{}</code>   <code>skip</code> Skip existing software <code>False</code>   <code>skipsteps</code> Skip these steps <code>[]</code>   <code>source_urls</code> List of URLs for source files <code>[]</code>   <code>sources</code> List of source files <code>[]</code>   <code>stop</code> Keyword to halt the build process after a certain step. <code>None</code>   <code>testopts</code> Extra options for test. <code>\"\"</code>   <code>tests</code> List of test-scripts to run after install. A test script should return a non-zero exit status to fail <code>[]</code>   <code>unpack_options</code> Extra options for unpacking source <code>\"\"</code>   <code>unwanted_env_vars</code> List of environment variables that shouldn't be set during build <code>[]</code>   <code>versionprefix</code> Additional prefix for software version (placed before version and toolchain name) <code>\"\"</code>   <code>versionsuffix</code> Additional suffix for software version (placed after toolchain name) <code>\"\"</code>"},{"location":"version-specific/easyconfig-parameters/#file-management-parameters","title":"File-management parameters","text":"Parameter name Description Default value     <code>buildininstalldir</code> Boolean to build (True) or not build (False) in the installation directory <code>False</code>   <code>cleanupoldbuild</code> Boolean to remove (True) or backup (False) the previous build directory with identical name or not. <code>True</code>   <code>cleanupoldinstall</code> Boolean to remove (True) or backup (False) the previous install directory with identical name or not. <code>True</code>   <code>dontcreateinstalldir</code> Boolean to create (False) or not create (True) the install directory <code>False</code>   <code>keeppreviousinstall</code> Boolean to keep the previous installation with identical name. Experts only! <code>False</code>   <code>keepsymlinks</code> Boolean to determine whether symlinks are to be kept during copying or if the content of the files pointed to should be copied <code>False</code>   <code>start_dir</code> Path to start the make in. If the path is absolute, use that path. If not, this is added to the guessed path. <code>None</code>"},{"location":"version-specific/easyconfig-parameters/#dependencies-parameters","title":"Dependencies parameters","text":"Parameter name Description Default value     <code>allow_system_deps</code> Allow listed system dependencies (format: (, )) <code>[]</code>   <code>builddependencies</code> List of build dependencies <code>[]</code>   <code>dependencies</code> List of dependencies <code>[]</code>   <code>hiddendependencies</code> List of dependencies available as hidden modules <code>[]</code>   <code>moddependpaths</code> Absolute path(s) to prepend to MODULEPATH before loading dependencies <code>None</code>   <code>multi_deps</code> Dict of lists of dependency versions over which to iterate <code>{}</code>   <code>multi_deps_load_default</code> Load module for first version listed in multi_deps by default <code>True</code>   <code>osdependencies</code> OS dependencies that should be present on the system <code>[]</code>"},{"location":"version-specific/easyconfig-parameters/#license-parameters","title":"License parameters","text":"Parameter name Description Default value     <code>accept_eula</code> Accepted End User License Agreement (EULA) for this software <code>False</code>   <code>group</code> Name of the user group for which the software should be available; format: string or 2-tuple with group name + custom error for users outside group <code>None</code>   <code>key</code> Key for installing software <code>None</code>   <code>license_file</code> License file for software <code>None</code>   <code>license_server</code> License server for software <code>None</code>   <code>license_server_port</code> Port for license server <code>None</code>"},{"location":"version-specific/easyconfig-parameters/#extensions-parameters","title":"Extensions parameters","text":"Parameter name Description Default value     <code>exts_classmap</code> Map of extension name to class for handling build and installation. <code>{}</code>   <code>exts_default_options</code> List of default options for extensions <code>{}</code>   <code>exts_defaultclass</code> List of module for and name of the default extension class <code>None</code>   <code>exts_download_dep_fail</code> Fail if downloaded dependencies are detected for extensions <code>False</code>   <code>exts_filter</code> Extension filter details: template for cmd and input to cmd (templates for ext_name, ext_version and src). <code>None</code>   <code>exts_list</code> List with extensions added to the base installation <code>[]</code>"},{"location":"version-specific/easyconfig-parameters/#modules-parameters","title":"Modules parameters","text":"Parameter name Description Default value     <code>allow_prepend_abs_path</code> Allow specifying absolute paths to prepend in modextrapaths <code>False</code>   <code>citing</code> Free-form text that describes how the software should be cited in publications <code>None</code>   <code>docpaths</code> List of paths for documentation relative to installation directory <code>None</code>   <code>examples</code> Free-form text with examples on using the software <code>None</code>   <code>include_modpath_extensions</code> Include $MODULEPATH extensions specified by module naming scheme. <code>True</code>   <code>modaliases</code> Aliases to be defined in module file <code>{}</code>   <code>modaltsoftname</code> Module name to use (rather than using software name <code>None</code>   <code>modextrapaths</code> Extra paths to be prepended in module file <code>{}</code>   <code>modextravars</code> Extra environment variables to be added to module file <code>{}</code>   <code>modloadmsg</code> Message that should be printed when generated module is loaded <code>{}</code>   <code>modluafooter</code> Footer to include in generated module file (Lua syntax) <code>\"\"</code>   <code>modtclfooter</code> Footer to include in generated module file (Tcl syntax) <code>\"\"</code>   <code>module_depends_on</code> Use depends_on (Lmod 7.6.1+) for dependencies in generated module (implies recursive unloading of modules). <code>False</code>   <code>moduleclass</code> Module class to be used for this software <code>\"base\"</code>   <code>moduleforceunload</code> Force unload of all modules when loading the extension <code>False</code>   <code>moduleloadnoconflict</code> Don't check for conflicts, unload other versions instead <code>False</code>   <code>recursive_module_unload</code> Recursive unload of all dependencies when unloading module (True/False to hard enable/disable; None implies honoring the --recursive-module-unload EasyBuild configuration setting <code>None</code>   <code>site_contacts</code> String/list of strings with site contacts for the software <code>None</code>   <code>upstream_contacts</code> String/list of strings with upstream contact addresses (e.g., support e-mail, mailing list, bugtracker) <code>None</code>   <code>usage</code> Usage instructions for the software <code>None</code>   <code>whatis</code> List of brief (one line) description entries for the software <code>None</code>"},{"location":"version-specific/easyconfig-parameters/#other-parameters","title":"Other parameters","text":"Parameter name Description Default value     <code>block</code> List of other 'block' sections on which this block depends (only relevant in easyconfigs with subblocks) <code>None</code>   <code>buildstats</code> A list of dicts with build statistics <code>None</code>   <code>deprecated</code> String specifying reason why this easyconfig file is deprecated and will be archived in the next major release of EasyBuild <code>False</code>    <p>(see also <code>eb -a</code> or <code>eb --avail-easyconfig-params</code> )</p>"},{"location":"version-specific/easyconfig-templates/","title":"Available template values for easyconfigs","text":""},{"location":"version-specific/easyconfig-templates/#template-namesvalues-derived-from-easyconfig-instance","title":"Template names/values derived from easyconfig instance","text":"Template name Template value     <code>%(module_name)s</code> Module name   <code>%(nameletter)s</code> First letter of software name   <code>%(toolchain_name)s</code> Toolchain name   <code>%(toolchain_version)s</code> Toolchain version   <code>%(version_major_minor)s</code> Major.Minor version   <code>%(version_major)s</code> Major version   <code>%(version_minor)s</code> Minor version"},{"location":"version-specific/easyconfig-templates/#template-namesvalues-for-short-software-versions","title":"Template names/values for (short) software versions","text":"Template name Template value     <code>%(cudashortver)s</code> short version for CUDA (.)   <code>%(cudaver)s</code> full version for CUDA   <code>%(cudashortver)s</code> short version for CUDAcore (.)   <code>%(cudaver)s</code> full version for CUDAcore   <code>%(javashortver)s</code> short version for Java (.)   <code>%(javaver)s</code> full version for Java   <code>%(perlshortver)s</code> short version for Perl (.)   <code>%(perlver)s</code> full version for Perl   <code>%(pyshortver)s</code> short version for Python (.)   <code>%(pyver)s</code> full version for Python   <code>%(rshortver)s</code> short version for R (.)   <code>%(rver)s</code> full version for R"},{"location":"version-specific/easyconfig-templates/#template-namesvalues-as-set-in-easyconfig","title":"Template names/values as set in easyconfig","text":"<ul> <li><code>%(bitbucket_account)s</code></li> <li><code>%(github_account)s</code></li> <li><code>%(name)s</code></li> <li><code>%(parallel)s</code></li> <li><code>%(version)s</code></li> <li><code>%(versionsuffix)s</code></li> <li><code>%(versionprefix)s</code></li> </ul>"},{"location":"version-specific/easyconfig-templates/#lowercase-values-of-template-values","title":"Lowercase values of template values","text":"Template name Template value     <code>%(namelower)s</code> lower case of value of name   <code>%(nameletterlower)s</code> lower case of value of nameletter"},{"location":"version-specific/easyconfig-templates/#template-values-set-outside-easyblock-runstep","title":"Template values set outside EasyBlock runstep","text":"Template name Template value     <code>%(builddir)s</code> Build directory   <code>%(installdir)s</code> Installation directory"},{"location":"version-specific/easyconfig-templates/#template-values-which-are-defined-dynamically","title":"Template values which are defined dynamically","text":"Template name Template value     <code>%(arch)s</code> System architecture (e.g. x86_64, aarch64, ppc64le, ...)   <code>%(mpi_cmd_prefix)s</code> Prefix command for running MPI programs (with default number of ranks)   <code>%(cuda_compute_capabilities)s</code> Comma-separated list of CUDA compute capabilities, as specified via --cuda-compute-capabilities configuration option or via cuda_compute_capabilities easyconfig parameter   <code>%(cuda_cc_cmake)s</code> List of CUDA compute capabilities suitable for use with $CUDAARCHS in CMake 3.18+   <code>%(cuda_cc_space_sep)s</code> Space-separated list of CUDA compute capabilities   <code>%(cuda_cc_semicolon_sep)s</code> Semicolon-separated list of CUDA compute capabilities   <code>%(cuda_sm_comma_sep)s</code> Comma-separated list of sm_* values that correspond with CUDA compute capabilities   <code>%(cuda_sm_space_sep)s</code> Space-separated list of sm_* values that correspond with CUDA compute capabilities"},{"location":"version-specific/easyconfig-templates/#template-constants-that-can-be-used-in-easyconfigs","title":"Template constants that can be used in easyconfigs","text":"Constant Template value Template name     <code>APACHE_SOURCE</code> apache.org source url <code>https://archive.apache.org/dist/%(namelower)s</code>   <code>BITBUCKET_SOURCE</code> bitbucket.org source url (namelower is used if bitbucket_account easyconfig parameter is not specified) <code>https://bitbucket.org/%(bitbucket_account)s/%(namelower)s/get</code>   <code>BITBUCKET_DOWNLOADS</code> bitbucket.org downloads url (namelower is used if bitbucket_account easyconfig parameter is not specified) <code>https://bitbucket.org/%(bitbucket_account)s/%(namelower)s/downloads</code>   <code>CRAN_SOURCE</code> CRAN (contrib) source url <code>https://cran.r-project.org/src/contrib</code>   <code>FTPGNOME_SOURCE</code> http download for gnome ftp server <code>https://ftp.gnome.org/pub/GNOME/sources/%(namelower)s/%(version_major_minor)s</code>   <code>GITHUB_SOURCE</code> GitHub source URL (namelower is used if github_account easyconfig parameter is not specified) <code>https://github.com/%(github_account)s/%(name)s/archive</code>   <code>GITHUB_LOWER_SOURCE</code> GitHub source URL (lowercase name, namelower is used if github_account easyconfig parameter is not specified) <code>https://github.com/%(github_account)s/%(namelower)s/archive</code>   <code>GITHUB_RELEASE</code> GitHub release URL (namelower is used if github_account easyconfig parameter is not specified) <code>https://github.com/%(github_account)s/%(name)s/releases/download/v%(version)s</code>   <code>GITHUB_LOWER_RELEASE</code> GitHub release URL (namelower is used if github_account easyconfig parameter is not specified) <code>https://github.com/%(github_account)s/%(namelower)s/releases/download/v%(version)s</code>   <code>GNU_SAVANNAH_SOURCE</code> download.savannah.gnu.org source url <code>https://download-mirror.savannah.gnu.org/releases/%(namelower)s</code>   <code>GNU_SOURCE</code> gnu.org source url <code>https://ftpmirror.gnu.org/gnu/%(namelower)s</code>   <code>GOOGLECODE_SOURCE</code> googlecode.com source url <code>http://%(namelower)s.googlecode.com/files</code>   <code>LAUNCHPAD_SOURCE</code> launchpad.net source url <code>https://launchpad.net/%(namelower)s/%(version_major_minor)s.x/%(version)s/+download/</code>   <code>PYPI_SOURCE</code> pypi source url <code>https://pypi.python.org/packages/source/%(nameletter)s/%(name)s</code>   <code>PYPI_LOWER_SOURCE</code> pypi source url (lowercase name) <code>https://pypi.python.org/packages/source/%(nameletterlower)s/%(namelower)s</code>   <code>R_SOURCE</code> cran.r-project.org (base) source url <code>https://cran.r-project.org/src/base/R-%(version_major)s</code>   <code>SOURCEFORGE_SOURCE</code> sourceforge.net source url <code>https://download.sourceforge.net/%(namelower)s</code>   <code>XORG_DATA_SOURCE</code> xorg data source url <code>https://xorg.freedesktop.org/archive/individual/data/</code>   <code>XORG_LIB_SOURCE</code> xorg lib source url <code>https://xorg.freedesktop.org/archive/individual/lib/</code>   <code>XORG_PROTO_SOURCE</code> xorg proto source url <code>https://xorg.freedesktop.org/archive/individual/proto/</code>   <code>XORG_UTIL_SOURCE</code> xorg util source url <code>https://xorg.freedesktop.org/archive/individual/util/</code>   <code>XORG_XCB_SOURCE</code> xorg xcb source url <code>https://xorg.freedesktop.org/archive/individual/xcb/</code>   <code>SHLIB_EXT</code> extension for shared libraries <code>dylib</code>   <code>SOURCE_TAR_GZ</code> Source .tar.gz bundle <code>%(name)s-%(version)s.tar.gz</code>   <code>SOURCELOWER_TAR_GZ</code> Source .tar.gz bundle with lowercase name <code>%(namelower)s-%(version)s.tar.gz</code>   <code>SOURCE_TAR_XZ</code> Source .tar.xz bundle <code>%(name)s-%(version)s.tar.xz</code>   <code>SOURCELOWER_TAR_XZ</code> Source .tar.xz bundle with lowercase name <code>%(namelower)s-%(version)s.tar.xz</code>   <code>SOURCE_TAR_BZ2</code> Source .tar.bz2 bundle <code>%(name)s-%(version)s.tar.bz2</code>   <code>SOURCELOWER_TAR_BZ2</code> Source .tar.bz2 bundle with lowercase name <code>%(namelower)s-%(version)s.tar.bz2</code>   <code>SOURCE_TGZ</code> Source .tgz bundle <code>%(name)s-%(version)s.tgz</code>   <code>SOURCELOWER_TGZ</code> Source .tgz bundle with lowercase name <code>%(namelower)s-%(version)s.tgz</code>   <code>SOURCE_TXZ</code> Source .txz bundle <code>%(name)s-%(version)s.txz</code>   <code>SOURCELOWER_TXZ</code> Source .txz bundle with lowercase name <code>%(namelower)s-%(version)s.txz</code>   <code>SOURCE_TBZ2</code> Source .tbz2 bundle <code>%(name)s-%(version)s.tbz2</code>   <code>SOURCELOWER_TBZ2</code> Source .tbz2 bundle with lowercase name <code>%(namelower)s-%(version)s.tbz2</code>   <code>SOURCE_TB2</code> Source .tb2 bundle <code>%(name)s-%(version)s.tb2</code>   <code>SOURCELOWER_TB2</code> Source .tb2 bundle with lowercase name <code>%(namelower)s-%(version)s.tb2</code>   <code>SOURCE_GTGZ</code> Source .gtgz bundle <code>%(name)s-%(version)s.gtgz</code>   <code>SOURCELOWER_GTGZ</code> Source .gtgz bundle with lowercase name <code>%(namelower)s-%(version)s.gtgz</code>   <code>SOURCE_ZIP</code> Source .zip bundle <code>%(name)s-%(version)s.zip</code>   <code>SOURCELOWER_ZIP</code> Source .zip bundle with lowercase name <code>%(namelower)s-%(version)s.zip</code>   <code>SOURCE_TAR</code> Source .tar bundle <code>%(name)s-%(version)s.tar</code>   <code>SOURCELOWER_TAR</code> Source .tar bundle with lowercase name <code>%(namelower)s-%(version)s.tar</code>   <code>SOURCE_XZ</code> Source .xz bundle <code>%(name)s-%(version)s.xz</code>   <code>SOURCELOWER_XZ</code> Source .xz bundle with lowercase name <code>%(namelower)s-%(version)s.xz</code>   <code>SOURCE_TAR_Z</code> Source .tar.Z bundle <code>%(name)s-%(version)s.tar.Z</code>   <code>SOURCELOWER_TAR_Z</code> Source .tar.Z bundle with lowercase name <code>%(namelower)s-%(version)s.tar.Z</code>   <code>SOURCE_WHL</code> Generic (non-compiled) Python 2 &amp; Python 3 wheel package <code>%(name)s-%(version)s-py2.py3-none-any.whl</code>   <code>SOURCELOWER_WHL</code> Generic (non-compiled) Python 2 &amp; Python 3 wheel package with lowercase name <code>%(namelower)s-%(version)s-py2.py3-none-any.whl</code>   <code>SOURCE_PY2_WHL</code> Generic (non-compiled) Python 2 wheel package <code>%(name)s-%(version)s-py2-none-any.whl</code>   <code>SOURCELOWER_PY2_WHL</code> Generic (non-compiled) Python 2 wheel package with lowercase name <code>%(namelower)s-%(version)s-py2-none-any.whl</code>   <code>SOURCE_PY3_WHL</code> Generic (non-compiled) Python 3 wheel package <code>%(name)s-%(version)s-py3-none-any.whl</code>   <code>SOURCELOWER_PY3_WHL</code> Generic (non-compiled) Python 3 wheel package with lowercase name <code>%(namelower)s-%(version)s-py3-none-any.whl</code>    <p>(see also <code>eb --avail-easyconfig-templates</code> )</p>"},{"location":"version-specific/eb-a-wrf/","title":"Available easyconfig parameters for WRF easyblock","text":"<p>Warning</p> <p>This page will soon replace https://docs.easybuild.io/en/latest/eb_a_e_EB_WRF.html.</p> <p> It still needs to be ported from reStructuredText (.rst) to MarkDown (.md), and you can help with that! </p> <ul> <li>source: <code>docs/eb_a_e_EB_WRF.rst</code> in <code>easybuilders/easybuild</code> repo</li> <li>target: <code>docs/version-specific/eb-a-wrf.md</code> in <code>easybuilders/easybuild-docs</code> repo</li> </ul> <p>See https://github.com/easybuilders/easybuild-docs for more information.</p>"},{"location":"version-specific/eb-help/","title":"EasyBuild configuration options","text":"<p>(corresponds with output of <code>eb --help</code> )</p>"},{"location":"version-specific/eb-help/#usage","title":"Usage","text":"<p><code>eb [options] easyconfig [...]</code></p>"},{"location":"version-specific/eb-help/#description","title":"Description","text":"<p>Builds software based on easyconfig (or parse a directory). Provide one or more easyconfigs or directories, use -H or --help more information.</p>"},{"location":"version-specific/eb-help/#help-options","title":"Help options","text":"Option flag Option description     <code>--version</code> show program's version number and exit   <code>-h, --shorthelp</code> show short help message and exit   <code>-H OUTPUT_FORMAT, --help=OUTPUT_FORMAT</code> show full help message and exit   <code>--confighelp</code> show help as annotated configfile"},{"location":"version-specific/eb-help/#debug-and-logging-options-configfile-section-main","title":"Debug and logging options (configfile section MAIN)","text":"Option flag Option description     <code>-d, --debug</code> Enable debug log mode (default: False)   <code>--info</code> Enable info log mode (default: False)   <code>--quiet</code> Enable quiet/warning log mode (default: False)"},{"location":"version-specific/eb-help/#configfile-options","title":"Configfile options","text":"Option flag Option description     <code>--configfiles=CONFIGFILES</code> Parse (additional) configfiles (type comma-separated list; default: )   <code>--ignoreconfigfiles=IGNORECONFIGFILES</code> Ignore configfiles (type comma-separated list)"},{"location":"version-specific/eb-help/#basic-options","title":"Basic options","text":"Option flag Option description     <code>--dry-run</code> Print build overview incl. dependencies (full paths) (default: False)   <code>-D, --dry-run-short</code> Print build overview incl. dependencies (short paths) (default: False)   <code>-x, --extended-dry-run</code> Print build environment and (expected) build procedure that will be performed (default: False)   <code>--extended-dry-run-ignore-errors</code> Ignore errors that occur during dry run (default: True; disable with --disable-extended-dry-run-ignore-errors)   <code>-f, --force</code> Force to rebuild software even if it's already installed (i.e. if it can be found as module), and skipping check for OS dependencies (default: False)   <code>--ignore-locks</code> Ignore locks that prevent two identical installations running in parallel (default: False)   <code>--job</code> Submit the build as a job (default: False)   <code>--locks-dir=LOCKS-DIR</code> Directory to store lock files (should be on a shared filesystem); None implies .locks subdirectory of software installation directory   <code>-l, --logtostdout</code> Redirect main log to stdout (default: False)   <code>-M, --missing-modules</code> Print list of missing modules for dependencies of specified easyconfigs (default: False)   <code>-b BLOCKS, --only-blocks=BLOCKS</code> Only build listed blocks (type comma-separated list)   <code>--rebuild</code> Rebuild software, even if module already exists (don't skip OS dependencies checks) (default: False)   <code>-r PATH[:PATH], --robot=PATH[:PATH]</code> Enable dependency resolution, using easyconfigs in specified paths (type pathsep-separated list; default: )   <code>--robot-paths=PATH[:PATH]</code> Additional paths to consider by robot for easyconfigs (--robot paths get priority) (type pathsep-separated list; default: /home/example/work/easybuild-easyconfigs/easybuild/easyconfigs)   <code>--search-paths=PATH[:PATH]</code> Additional locations to consider in --search (next to --robot and --robot-paths paths) (type pathsep-separated list; default: )   <code>-k, --skip</code> Skip existing software (useful for installing additional packages) (default: False)   <code>-s STOP, --stop=STOP</code> Stop the installation after certain step (type choice; default: source) (choices: fetch, ready, source, patch, prepare, configure, build, test, install, extensions, postiter, postproc, sanitycheck, cleanup, module, permissions, package, testcases)   <code>--strict=STRICT</code> Set strictness level (type choice; default: warn) (choices: ignore, warn, error)"},{"location":"version-specific/eb-help/#configuration-options","title":"Configuration options","text":"Option flag Option description     <code>--avail-module-naming-schemes</code> Show all supported module naming schemes (default: False)   <code>--avail-modules-tools</code> Show all supported module tools (default: False)   <code>--avail-repositories</code> Show all repository types (incl. non-usable) (default: False)   <code>--buildpath=BUILDPATH</code> Temporary build path (default: /home/example/.local/easybuild/build)   <code>--containerpath=CONTAINERPATH</code> Location where container recipe &amp; image will be stored (default: /home/example/.local/easybuild/containers)   <code>--envvars-user-modules=ENVVARS-USER-MODULES</code> List of environment variables that hold the base paths for which user-specific modules will be installed relative to (type comma-separated list; default: HOME)   <code>--external-modules-metadata=EXTERNAL-MODULES-METADATA</code> List of (glob patterns for) paths to files specifying metadata for external modules (INI format) (type comma-separated list)   <code>--hooks=HOOKS</code> Location of Python module with hook implementations (type str)   <code>--ignore-dirs=IGNORE-DIRS</code> Directory names to ignore when searching for files/dirs (type comma-separated list; default: .git,.svn)   <code>--include-easyblocks=INCLUDE-EASYBLOCKS</code> Location(s) of extra or customized easyblocks (type comma-separated list; default: )   <code>--include-module-naming-schemes=INCLUDE-MODULE-NAMING-SCHEMES</code> Location(s) of extra or customized module naming schemes (type comma-separated list; default: )   <code>--include-toolchains=INCLUDE-TOOLCHAINS</code> Location(s) of extra or customized toolchains or toolchain components (type comma-separated list; default: )   <code>--installpath=INSTALLPATH</code> Install path for software and modules (default: /home/example/.local/easybuild)   <code>--installpath-modules=INSTALLPATH-MODULES</code> Install path for modules (if None, combine --installpath and --subdir-modules)   <code>--installpath-software=INSTALLPATH-SOFTWARE</code> Install path for software (if None, combine --installpath and --subdir-software)   <code>--job-backend=JOB-BACKEND</code> Backend to use for submitting jobs (type choice; default: GC3Pie) (choices: GC3Pie, PbsPython, Slurm)   <code>--logfile-format=DIR,FORMAT</code> Directory name and format of the log file (type comma-separated tuple; default: easybuild,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log)   <code>--module-depends-on</code> Use depends_on (Lmod 7.6.1+) for dependencies in all generated modules (implies recursive unloading of modules). (default: False)   <code>--module-extensions</code> Include 'extensions' statement in generated module file (Lua syntax only) (default: False)   <code>--module-naming-scheme=MODULE-NAMING-SCHEME</code> Module naming scheme to use (default: EasyBuildMNS)   <code>--module-syntax=MODULE-SYNTAX</code> Syntax to be used for module files (type choice; default: Lua) (choices: Lua, Tcl)   <code>--moduleclasses=MODULECLASSES</code> Extend supported module classes (For more info on the default classes, use --show-default-moduleclasses) (type comma-separated list; default: base,ai,astro,bio,cae,chem,compiler,data,debugger,devel,geo,ide,lang,lib,math,mpi,numlib,perf,quantum,phys,system,toolchain,tools,vis)   <code>--modules-footer=PATH</code> Path to file containing footer to be added to all generated module files   <code>--modules-header=PATH</code> Path to file containing header to be added to all generated module files   <code>--modules-tool=MODULES-TOOL</code> Modules tool to use (type choice; default: Lmod) (choices: EnvironmentModules, EnvironmentModulesC, EnvironmentModulesTcl, Lmod)   <code>--package-naming-scheme=PACKAGE-NAMING-SCHEME</code> Packaging naming scheme choice (type choice; default: EasyBuildPNS) (choices: EasyBuildPNS)   <code>--packagepath=PACKAGEPATH</code> The destination path for the packages built by package-tool (default: /home/example/.local/easybuild/packages)   <code>--prefix=PREFIX</code> Change prefix for buildpath, installpath, sourcepath and repositorypath (used prefix for defaults /home/example/.local/easybuild)   <code>--recursive-module-unload</code> Enable generating of modules that unload recursively. (default: False)   <code>--repository=REPOSITORY</code> Repository type, using repositorypath (type choice; default: FileRepository) (choices: FileRepository, GitRepository)   <code>--repositorypath=REPOSITORYPATH</code> Repository path, used by repository (is passed as list of arguments to create the repository instance). For more info, use --avail-repositories. (type comma-separated list; default: /home/example/.local/easybuild/ebfiles_repo)   <code>--sourcepath=SOURCEPATH</code> Path(s) to where sources should be downloaded (string, colon-separated) (default: /home/example/.local/easybuild/sources)   <code>--subdir-modules=SUBDIR-MODULES</code> Installpath subdir for modules (default: modules)   <code>--subdir-software=SUBDIR-SOFTWARE</code> Installpath subdir for software (default: software)   <code>--subdir-user-modules=SUBDIR-USER-MODULES</code> Base path of user-specific modules relative to --envvars-user-modules   <code>--suffix-modules-path=SUFFIX-MODULES-PATH</code> Suffix for module files install path (default: all)   <code>--testoutput=TESTOUTPUT</code> Path to where a job should place the output (to be set within jobscript)   <code>--tmp-logdir=TMP-LOGDIR</code> Log directory where temporary log files are stored   <code>--tmpdir=TMPDIR</code> Directory to use for temporary storage"},{"location":"version-specific/eb-help/#container-options","title":"Container options","text":"Option flag Option description     <code>--container-build-image</code> Build container image (requires sudo privileges!) (default: False)   <code>--container-config=CONFIG</code> Configuration for container image (type )   <code>--container-image-format=IMAGE-FORMAT</code> Container image format (type choice) (choices: ext3, sandbox, sif, squashfs)   <code>--container-image-name=IMAGE-NAME</code> Custom name for container image (defaults to name of easyconfig)   <code>--container-template-recipe=TEMPLATE-RECIPE</code> Template recipe for container image (type )   <code>--container-tmpdir=TMPDIR</code> Temporary directory where container image is built   <code>--container-type=TYPE</code> Type of container recipe/image to create (type choice; default: singularity) (choices: docker, singularity)"},{"location":"version-specific/eb-help/#options-for-easyconfigs","title":"Options for Easyconfigs","text":"Option flag Option description     <code>--create-index=CREATE-INDEX</code> Create index for files in specified directory   <code>--fix-deprecated-easyconfigs</code> Fix use of deprecated functionality in specified easyconfig files. (default: False)   <code>--ignore-index</code> Ignore index when searching for files (default: False)   <code>--index-max-age=INDEX-MAX-AGE</code> Maximum age for index before it is considered stale (in seconds) (type ; default: 604800)   <code>--inject-checksums=INJECT-CHECKSUMS</code> Inject checksums of specified type for sources/patches into easyconfig file(s) (type choice; default: sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)   <code>--inject-checksums-to-json=INJECT-CHECKSUMS-TO-JSON</code> Inject checksums of specified type for sources/patches into checksums.json (type choice; default: sha256) (choices: adler32, crc32, md5, sha1, sha256, sha512, size)   <code>--local-var-naming-check=LOCAL-VAR-NAMING-CHECK</code> Mode to use when checking whether local variables follow the recommended naming scheme ('log': only log warnings (no printed messages); 'warn': print warnings; 'error': fail with an error) (type choice; default: warn) (choices: error, log, warn)"},{"location":"version-specific/eb-help/#github-integration-options","title":"GitHub integration options","text":"Option flag Option description     <code>--add-pr-labels=PR#</code> Try to add labels to PR based on files changed (type )   <code>--check-contrib</code> Runs checks to see whether the given easyconfigs are ready to be contributed back (default: False)   <code>--check-github</code> Check status of GitHub integration, and report back (default: False)   <code>--check-style</code> Run a style check on the given easyconfigs (default: False)   <code>--cleanup-easyconfigs</code> Clean up easyconfig files for pull request (default: True; disable with --disable-cleanup-easyconfigs)   <code>--close-pr=PR#</code> Close pull request (type )   <code>--close-pr-msg=CLOSE-PR-MSG</code> Custom close message for pull request closed with --close-pr;  (type )   <code>--close-pr-reasons=CLOSE-PR-REASONS</code> Close reason for pull request closed with --close-pr; supported values: archived, inactive, obsolete, retest (type )   <code>--dump-test-report=DUMP-TEST-REPORT</code> Dump test report to specified path (default: test_report.md)   <code>--from-pr=PR#</code> Obtain easyconfigs from specified PR (type comma-separated list; default: )   <code>--git-working-dirs-path=GIT-WORKING-DIRS-PATH</code> Path to Git working directories for EasyBuild repositories (type )   <code>--github-org=GITHUB-ORG</code> GitHub organization (type )   <code>--github-user=GITHUB-USER</code> GitHub username (type )   <code>--include-easyblocks-from-pr=PR#</code> Include easyblocks from specified PR (type comma-separated list; default: )   <code>--install-github-token</code> Install GitHub token (requires --github-user) (default: False)   <code>--list-prs=STATE,ORDER,DIRECTION</code> List pull requests (type ; default: open,created,desc)   <code>--merge-pr=PR#</code> Merge pull request (type )   <code>--new-branch-github</code> Create new branch in GitHub in preparation for a PR (default: False)   <code>--new-pr</code> Open a new pull request (default: False)   <code>--new-pr-from-branch=NEW-PR-FROM-BRANCH</code> Open a new pull request from branch in GitHub (type )   <code>--pr-branch-name=PR-BRANCH-NAME</code> Branch name to use for new PRs; 'new_pr' if unspecified (type )   <code>--pr-commit-msg=PR-COMMIT-MSG</code> Commit message for new/updated pull request created with --new-pr (type )   <code>--pr-descr=PR-DESCR</code> Description for new pull request created with --new-pr (type )   <code>--pr-target-account=PR-TARGET-ACCOUNT</code> Target account for new PRs (type ; default: easybuilders)   <code>--pr-target-branch=PR-TARGET-BRANCH</code> Target branch for new PRs (type ; default: develop)   <code>--pr-target-repo=PR-TARGET-REPO</code> Target repository for new/updating PRs (default: auto-detect based on provided files) (type )   <code>--pr-title=PR-TITLE</code> Title for new pull request created with --new-pr (type )   <code>--preview-pr</code> Preview a new pull request (default: False)   <code>--review-pr=PR#</code> Review specified pull request (type )   <code>--review-pr-filter=REVIEW-PR-FILTER</code> Regex used to filter out easyconfigs to diff against in --review-pr   <code>--review-pr-max=REVIEW-PR-MAX</code> Maximum number of easyconfigs to diff against in --review-pr (type )   <code>--sync-branch-with-develop=SYNC-BRANCH-WITH-DEVELOP</code> Sync branch with current 'develop' branch (type )   <code>--sync-pr-with-develop=PR#</code> Sync pull request with current 'develop' branch (type )   <code>--test-report-env-filter=TEST-REPORT-ENV-FILTER</code> Regex used to filter out variables in environment dump of test report   <code>--update-branch-github=UPDATE-BRANCH-GITHUB</code> Update specified branch in GitHub (type )   <code>--update-pr=PR#</code> Update an existing pull request (type )   <code>-u, --upload-test-report</code> Upload full test report as a gist on GitHub (default: False)"},{"location":"version-specific/eb-help/#informative-options","title":"Informative options","text":"Option flag Option description     <code>--avail-cfgfile-constants</code> Show all constants that can be used in configuration files (default: False)   <code>--avail-easyconfig-constants</code> Show all constants that can be used in easyconfigs (default: False)   <code>--avail-easyconfig-licenses</code> Show all license constants that can be used in easyconfigs (default: False)   <code>-a, --avail-easyconfig-params</code> Show all easyconfig parameters (include easyblock-specific ones by using -e) (default: False)   <code>--avail-easyconfig-templates</code> Show all template names and template constants that can be used in easyconfigs. (default: False)   <code>--avail-hooks</code> Show list of known hooks (default: False)   <code>--avail-toolchain-opts=AVAIL-TOOLCHAIN-OPTS</code> Show options for toolchain (type str)   <code>--check-conflicts</code> Check for version conflicts in dependency graphs (default: False)   <code>--check-eb-deps</code> Check presence and version of (required and optional) EasyBuild dependencies (default: False)   <code>--dep-graph=depgraph.&lt;ext&gt;</code> Create dependency graph   <code>--dump-env-script</code> Dump source script to set up build environment based on toolchain/dependencies (default: False)   <code>--easystack=EASYSTACK</code> Path to easystack file in YAML format, specifying details of a software stack   <code>--last-log</code> Print location to EasyBuild log file of last (failed) session (default: False)   <code>--list-easyblocks=LIST-EASYBLOCKS</code> Show list of available easyblocks (type choice; default: simple) (choices: simple, detailed)   <code>--list-installed-software=LIST-INSTALLED-SOFTWARE</code> Show list of installed software (type choice; default: simple) (choices: simple, detailed)   <code>--list-software=LIST-SOFTWARE</code> Show list of supported software (type choice; default: simple) (choices: simple, detailed)   <code>--list-toolchains</code> Show list of known toolchains (default: False)   <code>--search=REGEX</code> Search for easyconfig files in the robot search path, print full paths   <code>--search-filename=REGEX</code> Search for easyconfig files in the robot search path, print only filenames   <code>-S REGEX, --search-short=REGEX</code> Search for easyconfig files in the robot search path, print short paths   <code>--show-config</code> Show current EasyBuild configuration (only non-default + selected settings) (default: False)   <code>--show-default-configfiles</code> Show list of default config files (default: False)   <code>--show-default-moduleclasses</code> Show default module classes with description (default: False)   <code>--show-ec</code> Show contents of specified easyconfig(s) (default: False)   <code>--show-full-config</code> Show current EasyBuild configuration (all settings) (default: False)   <code>--show-system-info</code> Show system information relevant to EasyBuild (default: False)   <code>--terse</code> Terse output (machine-readable) (default: False)"},{"location":"version-specific/eb-help/#options-for-job-backend","title":"Options for job backend","text":"Option flag Option description     <code>--job-backend-config=BACKEND-CONFIG</code> Configuration file for job backend   <code>--job-cores=CORES</code> Number of cores to request per job (type int)   <code>--job-deps-type=DEPS-TYPE</code> Type of dependency to set between jobs (default depends on job backend) (type choice) (choices: abort_on_error, always_run)   <code>--job-eb-cmd=EB-CMD</code> EasyBuild command to use in jobs (type str; default: eb)   <code>--job-max-jobs=MAX-JOBS</code> Maximum number of concurrent jobs (queued and running, 0 = unlimited) (type int; default: 0)   <code>--job-max-walltime=MAX-WALLTIME</code> Maximum walltime for jobs (in hours) (type int; default: 24)   <code>--job-output-dir=OUTPUT-DIR</code> Output directory for jobs (default: current directory) (default: /Volumes/work/easybuild-docs/docs/version-specific)   <code>--job-polling-interval=POLLING-INTERVAL</code> Interval between polls for status of jobs (in seconds) (type ; default: 30.0)   <code>--job-target-resource=TARGET-RESOURCE</code> Target resource for jobs"},{"location":"version-specific/eb-help/#override-options","title":"Override options","text":"Option flag Option description     <code>--accept-eula=ACCEPT-EULA</code> Accept EULA for specified software [DEPRECATED, use --accept-eula-for instead!] (type comma-separated list; default: )   <code>--accept-eula-for=ACCEPT-EULA-FOR</code> Accept EULA for specified software (type comma-separated list; default: )   <code>--add-dummy-to-minimal-toolchains</code> Include dummy toolchain in minimal toolchain searches [DEPRECATED, use --add-system-to-minimal-toolchains instead!) (default: False)   <code>--add-system-to-minimal-toolchains</code> Include system toolchain in minimal toolchain searches (default: False)   <code>--allow-loaded-modules=ALLOW-LOADED-MODULES</code> List of software names for which to allow loaded modules in initial environment (type comma-separated list; default: EasyBuild)   <code>--allow-modules-tool-mismatch</code> Allow mismatch of modules tool and definition of 'module' function (default: False)   <code>--allow-use-as-root-and-accept-consequences</code> Allow using of EasyBuild as root (NOT RECOMMENDED!) (default: False)   <code>--backup-modules</code> Back up an existing module file, if any. Only works when using --module-only   <code>--backup-patched-files</code> Create a backup (*.orig) file when applying a patch (default: False)   <code>--banned-linked-shared-libs=BANNED-LINKED-SHARED-LIBS</code> Comma-separated list of shared libraries (names, file names, or paths) which are not allowed to be linked in any installed binary/library (type comma-separated list)   <code>--check-ebroot-env-vars=CHECK-EBROOT-ENV-VARS</code> Action to take when defined $EBROOT* environment variables are found for which there is no matching loaded module; supported values: error, ignore, unset, warn (default: warn)   <code>--checksum-priority=CHECKSUM-PRIORITY</code> When checksums are found in both the EasyConfig and the checksums.json fileDefine which one to use.  (type choice; default: easyconfig) (choices: json, easyconfig)   <code>--cleanup-builddir</code> Cleanup build dir after successful installation. (default: True; disable with --disable-cleanup-builddir)   <code>--cleanup-tmpdir</code> Cleanup tmp dir after successful run. (default: True; disable with --disable-cleanup-tmpdir)   <code>--color=WHEN</code> Colorize output (type choice; default: auto) (choices: auto, always, never)   <code>--consider-archived-easyconfigs</code> Also consider archived easyconfigs (default: False)   <code>-C, --containerize</code> Generate container recipe/image (default: False)   <code>--copy-ec</code> Copy specified easyconfig(s) to specified location (default: False)   <code>--cuda-cache-dir=PATH</code> Path to CUDA cache dir to use if enabled. Defaults to a path inside the build dir. (type )   <code>--cuda-cache-maxsize=CUDA-CACHE-MAXSIZE</code> Maximum size of the CUDA cache (in MiB) used for JIT compilation of PTX code. Leave value empty to let EasyBuild choose a value or '0' to disable the cache (type )   <code>--cuda-compute-capabilities=CUDA-COMPUTE-CAPABILITIES</code> List of CUDA compute capabilities to use when building GPU software; values should be specified as digits separated by a dot, for example: 3.5,5.0,7.2 (type comma-separated list)   <code>--debug-lmod</code> Run Lmod modules tool commands in debug module (default: False)   <code>--default-opt-level=DEFAULT-OPT-LEVEL</code> Specify default optimisation level (type choice; default: defaultopt) (choices: noopt, lowopt, defaultopt, opt)   <code>--deprecated=DEPRECATED</code> Run pretending to be (future) version, to test removal of deprecated code.   <code>--detect-loaded-modules=DETECT-LOADED-MODULES</code> Detect loaded EasyBuild-generated modules, act accordingly; supported values: error, ignore, purge, unload, warn (default: warn)   <code>--devel</code> Enable including of development log messages (default: False)   <code>--download-timeout=DOWNLOAD-TIMEOUT</code> Timeout for initiating downloads (in seconds) (type )   <code>--dump-autopep8</code> Reformat easyconfigs using autopep8 when dumping them (default: False)   <code>-e CLASS, --easyblock=CLASS</code> easyblock to use for processing the spec file or dumping the options   <code>--enforce-checksums</code> Enforce availability of checksums for all sources/patches, so they can be verified (default: False)   <code>--env-for-shebang=ENV-FOR-SHEBANG</code> Define the env command to use when fixing shebangs (default: /usr/bin/env)   <code>--experimental</code> Allow experimental code (with behaviour that can be changed/removed at any given time). (default: False)   <code>--extra-modules=EXTRA-MODULES</code> List of extra modules to load after setting up the build environment (type comma-separated list)   <code>--fetch</code> Allow downloading sources ignoring OS and modules tool dependencies, implies --stop=fetch, --ignore-osdeps and ignore modules tool (default: False)   <code>--filter-deps=FILTER-DEPS</code> List of dependencies that you do not want to install with EasyBuild, because equivalent OS packages are installed. (e.g. --filter-deps=zlib,ncurses) (type comma-separated list)   <code>--filter-ecs=FILTER-ECS</code> List of easyconfigs (given as glob patterns) to ignore when given on command line or auto-selected when building with --from-pr. (e.g. --filter-ecs=intel) (type comma-separated list)   <code>--filter-env-vars=FILTER-ENV-VARS</code> List of names of environment variables that should not be defined/updated by module files generated by EasyBuild (type comma-separated list)   <code>--filter-rpath-sanity-libs=FILTER-RPATH-SANITY-LIBS</code> List of libraries that should be ignored by the RPATH sanity check. I.e. if these libraries are not RPATH-ed, that will be accepted by the RPATH sanity check. Note that you'll need to provide the exact library name, as it is returned by 'ldd', including any version  (type comma-separated list; default: libcuda.so,libcuda.so.1,libnvidia-ml.so,libnvidia-ml.so.1)   <code>--fixed-installdir-naming-scheme</code> Use fixed naming scheme for installation directories (default: True; disable with --disable-fixed-installdir-naming-scheme)   <code>--force-download=FORCE-DOWNLOAD</code> Force re-downloading of sources and/or patches, even if they are available already in source path (type choice; default: sources) (choices: all, patches, sources)   <code>--generate-devel-module</code> Generate a develop module file, implies --force if disabled (default: True; disable with --disable-generate-devel-module)   <code>--group=GROUP</code> Group to be used for software installations (only verified, not set)   <code>--group-writable-installdir</code> Enable group write permissions on installation directory after installation (default: False)   <code>--hidden</code> Install 'hidden' module file(s) by prefixing their version with '.' (default: False)   <code>--hide-deps=HIDE-DEPS</code> Comma separated list of dependencies that you want automatically hidden, (e.g. --hide-deps=zlib,ncurses) (type comma-separated list)   <code>--hide-toolchains=HIDE-TOOLCHAINS</code> Comma separated list of toolchains that you want automatically hidden, (e.g. --hide-toolchains=GCCcore) (type comma-separated list)   <code>--http-header-fields-urlpat=[URLPAT::][HEADER:]FILE|FIELD</code> Set extra HTTP header FIELDs when downloading files from URL PATterns. To not log sensitive values, specify a file containing newline separated FIELDs. e.g. \"^https://www.example.com::/path/to/headers.txt\" or \"client[A-z0-9]*.example.com': ['Authorization: Basic token']\".   <code>--ignore-checksums</code> Ignore failing checksum verification (default: False)   <code>--ignore-osdeps</code> Ignore any listed OS dependencies (default: False)   <code>--ignore-test-failure</code> Ignore a failing test step (default: False)   <code>--insecure-download</code> Don't check the server certificate against the available certificate authorities. (default: False)   <code>--install-latest-eb-release</code> Install latest known version of easybuild (default: False)   <code>--lib-lib64-symlink</code> Automatically create symlinks for lib/ pointing to lib64/ if the former is missing (default: True; disable with --disable-lib-lib64-symlink)   <code>--lib64-fallback-sanity-check</code> Fallback in sanity check to lib64/ equivalent for missing libraries (default: True; disable with --disable-lib64-fallback-sanity-check)   <code>--lib64-lib-symlink</code> Automatically create symlinks for lib64/ pointing to lib/ if the former is missing (default: True; disable with --disable-lib64-lib-symlink)   <code>--max-fail-ratio-adjust-permissions=MAX-FAIL-RATIO-ADJUST-PERMISSIONS</code> Maximum ratio for failures to allow when adjusting permissions (type float; default: 0.5)   <code>--minimal-build-env=MINIMAL-BUILD-ENV</code> Minimal build environment to define when using system toolchain, specified as a comma-separated list that defines a mapping between name of environment variable and its value separated by a colon (':') (default: CC:gcc,CXX:g++)   <code>--minimal-toolchains</code> Use minimal toolchain when resolving dependencies (default: False)   <code>--module-only</code> Only generate module file(s); skip all steps except for module, prepare, ready, postiter, sanitycheck (default: False)   <code>--modules-tool-version-check</code> Check version of modules tool being used (default: True; disable with --disable-modules-tool-version-check)   <code>--mpi-cmd-template=MPI-CMD-TEMPLATE</code> Template for MPI commands (template keys: %(nr_ranks)s, %(cmd)s)   <code>--mpi-tests</code> Run MPI tests (when relevant) (default: True; disable with --disable-mpi-tests)   <code>--optarch=OPTARCH</code> Set architecture optimization, overriding native architecture optimizations   <code>--output-format=OUTPUT-FORMAT</code> Set output format (type choice; default: txt) (choices: md, rst, txt)   <code>--output-style=OUTPUT-STYLE</code> Control output style; auto implies using Rich if available to produce rich output, with fallback to basic colored output (type choice; default: auto) (choices: auto, basic, no_color, rich)   <code>--parallel=PARALLEL</code> Specify (maximum) level of parallellism used during build procedure (type int)   <code>--parallel-extensions-install</code> Install list of extensions in parallel (if supported) (default: False)   <code>--pre-create-installdir</code> Create installation directory before submitting build jobs (default: True; disable with --disable-pre-create-installdir)   <code>-p, --pretend</code> Does the build/installation in a test directory located in $HOME/easybuildinstall (default: False)   <code>--read-only-installdir</code> Set read-only permissions on installation directory after installation (default: False)   <code>--remove-ghost-install-dirs</code> Remove ghost installation directories when --force or --rebuild is used, rather than just warning about them (default: False)   <code>--required-linked-shared-libs=REQUIRED-LINKED-SHARED-LIBS</code> Comma-separated list of shared libraries (names, file names, or paths) which must be linked in all installed binaries/libraries (type comma-separated list)   <code>--rpath</code> Enable use of RPATH for linking with libraries (default: False)   <code>--rpath-filter=RPATH-FILTER</code> List of regex patterns to use for filtering out RPATH paths (type comma-separated list)   <code>--rpath-override-dirs=RPATH-OVERRIDE-DIRS</code> Path(s) to be prepended when linking with RPATH (string, colon-separated)   <code>--sanity-check-only</code> Only run sanity check (module is expected to be installed already (default: False)   <code>--set-default-module</code> Set the generated module as default (default: False)   <code>--set-gid-bit</code> Set group ID bit on newly created directories (default: False)   <code>--show-progress-bar</code> Show progress bar in terminal output (default: True; disable with --disable-show-progress-bar)   <code>--silence-deprecation-warnings=SILENCE-DEPRECATION-WARNINGS</code> Silence specified deprecation warnings (type comma-separated list)   <code>--skip-extensions</code> Skip installation of extensions (default: False)   <code>-t, --skip-test-cases</code> Skip running test cases (default: False)   <code>--skip-test-step</code> Skip running the test step (e.g. unit tests) (default: False)   <code>--sticky-bit</code> Set sticky bit on newly created directories (default: False)   <code>--sysroot=SYSROOT</code> Location root directory of system, prefix for standard paths like /usr/lib and /usr/include   <code>-T, --trace</code> Provide more information in output to stdout on progress (default: False)   <code>--umask=UMASK</code> umask to use (e.g. '022'); non-user write permissions on install directories are removed   <code>--unit-testing-mode</code> Run in unit test mode (default: False)   <code>--update-modules-tool-cache</code> Update modules tool cache file(s) after generating module file (default: False)   <code>--use-ccache=PATH</code> Enable use of ccache to speed up compilation, with specified cache dir (type ; default: False)   <code>--use-existing-modules</code> Use existing modules when resolving dependencies with minimal toolchains (default: False)   <code>--use-f90cache=PATH</code> Enable use of f90cache to speed up compilation, with specified cache dir (type ; default: False)   <code>--verify-easyconfig-filenames</code> Verify whether filename of specified easyconfigs matches with contents (default: False)   <code>--wait-on-lock=WAIT-ON-LOCK</code> Wait for lock to be released; 0 implies no waiting (exit with an error if the lock already exists), non-zero value specified waiting interval [DEPRECATED: use --wait-on-lock-interval and --wait-on-lock-limit instead] (type )   <code>--wait-on-lock-interval=WAIT-ON-LOCK-INTERVAL</code> Wait interval (in seconds) to use when waiting for existing lock to be removed (type ; default: 60)   <code>--wait-on-lock-limit=WAIT-ON-LOCK-LIMIT</code> Maximum amount of time (in seconds) to wait until lock is released (0 means no waiting at all, exit with error; -1 means no waiting limit, keep waiting) (type ; default: 0)   <code>--zip-logs=ZIP-LOGS</code> Zip logs that are copied to install directory, using specified command (default: gzip)"},{"location":"version-specific/eb-help/#package-options","title":"Package options","text":"Option flag Option description     <code>--package</code> Enabling packaging (default: False)   <code>--package-release=PACKAGE-RELEASE</code> Package release iteration number (default: 1)   <code>--package-tool=PACKAGE-TOOL</code> Packaging tool to use (default: fpm)   <code>--package-tool-options=PACKAGE-TOOL-OPTIONS</code> Extra options for packaging tool (default: '')   <code>--package-type=PACKAGE-TYPE</code> Type of package to generate (default: rpm)"},{"location":"version-specific/eb-help/#regression-test-options","title":"Regression test options","text":"Option flag Option description     <code>--aggregate-regtest=DIR</code> Collect all the xmls inside the given directory and generate a single file   <code>--regtest</code> Enable regression test mode (default: False)   <code>--regtest-output-dir=DIR</code> Set output directory for test-run   <code>--sequential</code> Specify this option if you want to prevent parallel build (default: False)"},{"location":"version-specific/eb-help/#software-search-and-build-options","title":"Software search and build options","text":"Option flag Option description     <code>--amend=VAR=VALUE[,VALUE]</code> Specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch)   <code>--map-toolchains</code> Enable mapping of (sub)toolchains when --try-toolchain(-version) is used (default: True; disable with --disable-map-toolchains)   <code>--software=NAME,VERSION</code> Search and build software with given name and version (type comma-separated list)   <code>--software-name=NAME</code> Search and build software with given name   <code>--software-version=VERSION</code> Search and build software with given version   <code>--toolchain=NAME,VERSION</code> Search and build with given toolchain (name and version) (type comma-separated list)   <code>--toolchain-name=NAME</code> Search and build with given toolchain name   <code>--toolchain-version=VERSION</code> Search and build with given toolchain version   <code>--try-amend=VAR=VALUE[,VALUE]</code> Try to specify additional search and build parameters (can be used multiple times); for example: versionprefix=foo or patches=one.patch,two.patch) (USE WITH CARE!)   <code>--try-ignore-versionsuffixes</code> Ignore versionsuffix differences when --try-update-deps is used (default: False)   <code>--try-software=NAME,VERSION</code> Try to search and build software with given name and version (USE WITH CARE!) (type comma-separated list)   <code>--try-software-name=NAME</code> Try to search and build software with given name (USE WITH CARE!)   <code>--try-software-version=VERSION</code> Try to search and build software with given version (USE WITH CARE!)   <code>--try-toolchain=NAME,VERSION</code> Try to search and build with given toolchain (name and version) (USE WITH CARE!) (type comma-separated list)   <code>--try-toolchain-name=NAME</code> Try to search and build with given toolchain name (USE WITH CARE!)   <code>--try-toolchain-version=VERSION</code> Try to search and build with given toolchain version (USE WITH CARE!)   <code>--try-update-deps</code> Try to update versions of the dependencies of an easyconfig based on what is available in the robot path (default: False)"},{"location":"version-specific/eb-help/#unittest-options","title":"Unittest options","text":"Option flag Option description     <code>--unittest-file=FILE</code> Log to this file in unittest mode    <p>(see also <code>eb --help</code> )</p>"},{"location":"version-specific/eb-list-easyblocks/","title":"Output of <code>eb --list-easyblocks</code>","text":"<p>Warning</p> <p>This page will soon replace https://docs.easybuild.io/en/latest/eb_list_easyblocks.html.</p> <p> It still needs to be ported from reStructuredText (.rst) to MarkDown (.md), and you can help with that! </p> <ul> <li>source: <code>docs/eb_list_easyblocks.rst</code> in <code>easybuilders/easybuild</code> repo</li> <li>target: <code>docs/version-specific/eb-list-easyblocks.md</code> in <code>easybuilders/easybuild-docs</code> repo</li> </ul> <p>See https://github.com/easybuilders/easybuild-docs for more information.</p>"},{"location":"version-specific/eb-list-toolchains/","title":"List of known toolchains","text":"Name Compiler(s) MPI Linear algebra FFT     cgmpich Clang, GCC MPICH (none) (none)   cgmpolf Clang, GCC MPICH OpenBLAS, ScaLAPACK FFTW   cgmvapich2 Clang, GCC MVAPICH2 (none) (none)   cgmvolf Clang, GCC MVAPICH2 OpenBLAS, ScaLAPACK FFTW   cgompi Clang, GCC OpenMPI (none) (none)   cgoolf Clang, GCC OpenMPI OpenBLAS, ScaLAPACK FFTW   ClangGCC Clang, GCC (none) (none) (none)   CrayCCE PrgEnv-cray cray-mpich cray-libsci (none)   CrayGNU PrgEnv-gnu cray-mpich cray-libsci (none)   CrayIntel PrgEnv-intel cray-mpich cray-libsci (none)   CrayPGI PrgEnv-pgi cray-mpich cray-libsci (none)   FCC lang (none) (none) (none)   ffmpi FCC (none) (none) (none)   foss GCC OpenMPI OpenBLAS, ScaLAPACK FFTW   fosscuda GCC, CUDA OpenMPI OpenBLAS, ScaLAPACK FFTW   Fujitsu FCC (none) (none) FFTW   GCC GCC (none) (none) (none)   GCCcore GCCcore (none) (none) (none)   gcccuda GCC, CUDA (none) (none) (none)   gfbf GCC (none) FlexiBLAS FFTW   gimkl GCC impi imkl imkl   gimpi GCC impi (none) (none)   gimpic GCC, CUDA impi (none) (none)   giolf GCC impi OpenBLAS, ScaLAPACK FFTW   giolfc GCC, CUDA impi OpenBLAS, ScaLAPACK FFTW   gmacml GCC MVAPICH2 ACML, ScaLAPACK FFTW   gmkl GCC (none) imkl imkl   gmklc GCC, CUDA (none) imkl imkl   gmpich GCC MPICH (none) (none)   gmpich2 GCC MPICH2 (none) (none)   gmpit GCC MPItrampoline (none) (none)   gmpolf GCC MPICH OpenBLAS, ScaLAPACK FFTW   gmvapich2 GCC MVAPICH2 (none) (none)   gmvolf GCC MVAPICH2 OpenBLAS, ScaLAPACK FFTW   GNU GCC (none) (none) (none)   goalf GCC OpenMPI ATLAS, ScaLAPACK FFTW   gobff GCC OpenMPI BLIS, libFLAME, ScaLAPACK FFTW   goblf GCC OpenMPI BLIS, LAPACK, ScaLAPACK FFTW   gofbf GCC OpenMPI FlexiBLAS, ScaLAPACK FFTW   golf GCC (none) OpenBLAS FFTW   golfc GCC, CUDA (none) OpenBLAS FFTW   gomkl GCC OpenMPI imkl imkl   gomklc GCC, CUDA OpenMPI imkl imkl   gompi GCC OpenMPI (none) (none)   gompic GCC, CUDA OpenMPI (none) (none)   goolf GCC OpenMPI OpenBLAS, ScaLAPACK FFTW   goolfc GCC, CUDA OpenMPI OpenBLAS, ScaLAPACK FFTW   gpsmpi GCC psmpi (none) (none)   gpsolf GCC psmpi OpenBLAS, ScaLAPACK FFTW   gqacml GCC QLogicMPI ACML, ScaLAPACK FFTW   gsmpi GCC SpectrumMPI (none) (none)   gsolf GCC SpectrumMPI OpenBLAS, ScaLAPACK FFTW   iccifort icc, ifort (none) (none) (none)   iccifortcuda icc, ifort, CUDA (none) (none) (none)   ictce icc, ifort impi imkl imkl   iibff icc, ifort impi BLIS, libFLAME, ScaLAPACK FFTW   iimkl icc, ifort (none) imkl imkl   iimklc icc, ifort (none) imkl imkl   iimpi icc, ifort impi (none) (none)   iimpic icc, ifort, CUDA impi (none) (none)   iiqmpi icc, ifort QLogicMPI (none) (none)   impich icc, ifort MPICH (none) (none)   impmkl icc, ifort MPICH imkl imkl   intel icc, ifort impi imkl imkl   intel-compilers intel-compilers (none) (none) (none)   intel-para icc, ifort psmpi imkl imkl   intelcuda icc, ifort, CUDA impi imkl imkl   iomkl icc, ifort OpenMPI imkl imkl   iomklc icc, ifort, CUDA OpenMPI imkl imkl   iompi icc, ifort OpenMPI (none) (none)   iompic icc, ifort, CUDA OpenMPI (none) (none)   ipsmpi icc, ifort psmpi (none) (none)   iqacml icc, ifort QLogicMPI ACML, ScaLAPACK FFTW   ismkl icc, ifort MPICH2 imkl imkl   NVHPC NVHPC (none) (none) (none)   nvompi NVHPC OpenMPI (none) (none)   nvompic NVHPC OpenMPI (none) (none)   nvpsmpi NVHPC psmpi (none) (none)   nvpsmpic NVHPC psmpi (none) (none)   PGI PGI (none) (none) (none)   pmkl PGI (none) imkl imkl   pomkl PGI OpenMPI imkl imkl   pompi PGI OpenMPI (none) (none)   system (none) (none) (none) (none)   xlcxlf xlc, xlf (none) (none) (none)   xlmpich xlc, xlf MPICH (none) (none)   xlmpich2 xlc, xlf MPICH2 (none) (none)   xlmvapich2 xlc, xlf MVAPICH2 (none) (none)   xlompi xlc, xlf OpenMPI (none) (none)    <p>(see also <code>eb --list-toolchains</code> )</p>"},{"location":"version-specific/generic-easyblocks/","title":"Generic easyblocks","text":""},{"location":"version-specific/generic-easyblocks/#generic_easyblocks","title":"Overview of generic easyblocks","text":"<p>BinariesTarball - Binary - BuildEnv - Bundle - CMakeMake - CMakeMakeCp - CMakeNinja - CMakePythonPackage - CmdCp - Conda - ConfigureMake - ConfigureMakePythonPackage - CrayToolchain - FortranPythonPackage - GoPackage - IntelBase - JAR - JuliaBundle - JuliaPackage - MakeCp - MesonNinja - ModuleRC - OCamlPackage - OctavePackage - PackedBinary - PerlModule - PythonBundle - PythonPackage - RPackage - Rpm - RubyGem - SCons - SystemCompiler - SystemMPI - Tarball - Toolchain - VSCPythonPackage - VersionIndependentPythonPackage - Waf</p>"},{"location":"version-specific/generic-easyblocks/#binariestarball","title":"<code>BinariesTarball</code>","text":"<p>(derives from <code>Tarball</code>)</p> <p>Support for installing a tarball of binaries</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-binariestarball-easyblock","title":"Extra easyconfig parameters specific to <code>BinariesTarball</code> easyblock","text":"easyconfig parameter description default value     <code>install_type</code> Defaults to extract tarball into clean directory. Options: 'merge' merges tarball to existing directory, 'subdir' extracts tarball into its own sub-directory <code>None</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>preinstall_cmd</code> Command to execute before installation <code>None</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-binariestarball-easyblock","title":"Customised steps in <code>BinariesTarball</code> easyblock","text":"<ul> <li><code>install_step</code> - Install by copying unzipped binaries to 'bin' subdir of installation dir, and fixing permissions.</li> </ul>"},{"location":"version-specific/generic-easyblocks/#binary","title":"<code>Binary</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Support for installing software that comes in binary form. Just copy the sources to the install dir, or use the specified install command.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-binary-easyblock","title":"Extra easyconfig parameters specific to <code>Binary</code> easyblock","text":"easyconfig parameter description default value     <code>extract_sources</code> Whether or not to extract sources <code>False</code>   <code>install_cmd</code> Install command to be used. <code>None</code>   <code>prepend_to_path</code> Prepend the given directories (relative to install-dir) to the environment variable PATH in the module file. Default is the install-dir itself. <code>['']</code>   <code>staged_install</code> Perform staged installation via subdirectory of build directory <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-binary-easyblock","title":"Customised steps in <code>Binary</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No compilation, this is binary software</p> </li> <li> <p><code>configure_step</code> - No configuration, this is binary software</p> </li> <li> <p><code>install_step</code> - Copy all files in build directory to the install directory</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#example-easyconfig-for-binary-easyblock","title":"Example easyconfig for <code>Binary</code> easyblock","text":"<pre><code>easyblock = 'Binary'\n\nname = 'Platanus'\nversion = '1.2.1'\nversionsuffix = '-linux-x86_64'\n\nhomepage = 'http://platanus.bio.titech.ac.jp/'\ndescription = \"\"\"PLATform for Assembling NUcleotide Sequences\"\"\"\n\ntoolchain = SYSTEM\n\nsource_urls = ['http://platanus.bio.titech.ac.jp/Platanus_release/20130901010201']\nsources = ['platanus']\nchecksums = ['02cf92847ec704d010a54df293b9c60a']\n\nsanity_check_paths = {\n    'files': ['platanus'],\n    'dirs': [],\n}\n\nmoduleclass = 'bio'\n</code></pre>"},{"location":"version-specific/generic-easyblocks/#buildenv","title":"<code>BuildEnv</code>","text":"<p>(derives from <code>Bundle</code>)</p> <p>Build environment of toolchain: only generate module file</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-buildenv-easyblock","title":"Extra easyconfig parameters specific to <code>BuildEnv</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>"},{"location":"version-specific/generic-easyblocks/#bundle","title":"<code>Bundle</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Bundle of modules: only generate module files, nothing to build/install</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-bundle-easyblock","title":"Extra easyconfig parameters specific to <code>Bundle</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-bundle-easyblock","title":"Customised steps in <code>Bundle</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Do nothing.</p> </li> <li> <p><code>configure_step</code> - Collect altroot/altversion info.</p> </li> <li> <p><code>install_step</code> - Install components, if specified.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#example-easyconfig-for-bundle-easyblock","title":"Example easyconfig for <code>Bundle</code> easyblock","text":"<pre><code>easyblock = 'Bundle'\n\nname = 'Autotools'\nversion = '20150119' # date of the most recent change\n\nhomepage = 'http://autotools.io'\ndescription = \"\"\"This bundle collect the standard GNU build tools: Autoconf, Automake and libtool\"\"\"\n\ntoolchain = {'name': 'GCC', 'version': '4.9.2'}\n\ndependencies = [\n    ('Autoconf', '2.69'), # 20120424\n    ('Automake', '1.15'), # 20150105\n    ('libtool', '2.4.5'), # 20150119\n]\n\nmoduleclass = 'devel'\n</code></pre>"},{"location":"version-specific/generic-easyblocks/#cmakemake","title":"<code>CMakeMake</code>","text":"<p>(derives from <code>ConfigureMake</code>)</p> <p>Support for configuring build with CMake instead of traditional configure script</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-cmakemake-easyblock","title":"Extra easyconfig parameters specific to <code>CMakeMake</code> easyblock","text":"easyconfig parameter description default value     <code>abs_path_compilers</code> Specify compilers via absolute file path (not via command names) <code>False</code>   <code>allow_system_boost</code> Always allow CMake to pick up on Boost installed in OS (even if Boost is included as a dependency) <code>False</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_shared_libs</code> Build shared library (instead of static library)None can be used to add no flag (usually results in static library) <code>None</code>   <code>build_type</code> Build type for CMake, e.g. Release.Defaults to 'Release' or 'Debug' depending on toolchainopts[debug] <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"cmake\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>generator</code> Build file generator to use. None to use CMakes default <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>install_target_subdir</code> Subdirectory to use as installation target <code>None</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>separate_build_dir</code> Perform build in a separate directory <code>True</code>   <code>srcdir</code> Source directory location to provide to cmake command <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-cmakemake-easyblock","title":"Customised steps in <code>CMakeMake</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Configure build using cmake</p> </li> <li> <p><code>install_step</code> - Configure build using cmake</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#example-easyconfig-for-cmakemake-easyblock","title":"Example easyconfig for <code>CMakeMake</code> easyblock","text":"<pre><code>easyblock = 'CMakeMake'\n\nname = 'ANTs'\nversion = '2.1.0rc3'\n\nhomepage = 'http://stnava.github.io/ANTs/'\ndescription = \"\"\"ANTs extracts information from complex datasets that include imaging. ANTs is useful for managing,\n interpreting and visualizing multidimensional data.\"\"\"\n\ntoolchain = {'name': 'goolf', 'version': '1.5.14'}\ntoolchainopts = {'pic': True}\n\nsource_urls = ['https://github.com/stnava/ANTs/archive/']\nsources = ['v%(version)s.tar.gz']\n\nbuilddependencies = [('CMake', '3.0.2')]\n\nskipsteps = ['install']\nbuildopts = ' &amp;&amp; mkdir -p %(installdir)s &amp;&amp; cp -r * %(installdir)s/'\n\nparallel = 1\n\nseparate_build_dir = True\n\nsanity_check_paths = {\n    'files': ['bin/ANTS'],\n    'dirs': ['lib'],\n}\n\nmoduleclass = 'data'\n</code></pre>"},{"location":"version-specific/generic-easyblocks/#cmakemakecp","title":"<code>CMakeMakeCp</code>","text":"<p>(derives from <code>CMakeMake</code>, <code>MakeCp</code>)</p> <p>Software configured with CMake but without 'make install' step</p> <p>We use the default CMakeMake implementation, and use install_step from MakeCp.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-cmakemakecp-easyblock","title":"Extra easyconfig parameters specific to <code>CMakeMakeCp</code> easyblock","text":"easyconfig parameter description default value     <code>abs_path_compilers</code> Specify compilers via absolute file path (not via command names) <code>False</code>   <code>allow_system_boost</code> Always allow CMake to pick up on Boost installed in OS (even if Boost is included as a dependency) <code>False</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_shared_libs</code> Build shared library (instead of static library)None can be used to add no flag (usually results in static library) <code>None</code>   <code>build_type</code> Build type for CMake, e.g. Release.Defaults to 'Release' or 'Debug' depending on toolchainopts[debug] <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"cmake\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>files_to_copy</code> List of files or dirs to copy <code>None</code>   <code>generator</code> Build file generator to use. None to use CMakes default <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>install_target_subdir</code> Subdirectory to use as installation target <code>None</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>separate_build_dir</code> Perform build in a separate directory <code>True</code>   <code>srcdir</code> Source directory location to provide to cmake command <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>with_configure</code> Run configure script before building <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-cmakemakecp-easyblock","title":"Customised steps in <code>CMakeMakeCp</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Configure build using CMake</p> </li> <li> <p><code>install_step</code> - Install by copying specified files and directories.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#cmakeninja","title":"<code>CMakeNinja</code>","text":"<p>(derives from <code>CMakeMake</code>, <code>MesonNinja</code>)</p> <p>Support for configuring with CMake, building and installing with MesonNinja.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-cmakeninja-easyblock","title":"Extra easyconfig parameters specific to <code>CMakeNinja</code> easyblock","text":"easyconfig parameter description default value     <code>abs_path_compilers</code> Specify compilers via absolute file path (not via command names) <code>False</code>   <code>allow_system_boost</code> Always allow CMake to pick up on Boost installed in OS (even if Boost is included as a dependency) <code>False</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_shared_libs</code> Build shared library (instead of static library)None can be used to add no flag (usually results in static library) <code>None</code>   <code>build_type</code> Build type for CMake, e.g. Release.Defaults to 'Release' or 'Debug' depending on toolchainopts[debug] <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"cmake\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>generator</code> Build file generator to use. None to use CMakes default <code>\"Ninja\"</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>install_target_subdir</code> Subdirectory to use as installation target <code>None</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>separate_build_dir</code> Perform build in a separate directory <code>True</code>   <code>srcdir</code> Source directory location to provide to cmake command <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-cmakeninja-easyblock","title":"Customised steps in <code>CMakeNinja</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build using MesonNinja.</p> </li> <li> <p><code>configure_step</code> - Configure using CMake.</p> </li> <li> <p><code>install_step</code> - Install using MesonNinja.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#cmakepythonpackage","title":"<code>CMakePythonPackage</code>","text":"<p>(derives from <code>CMakeMake</code>, <code>PythonPackage</code>)</p> <p>Build a Python package and module with cmake.</p> <p>Some packages use cmake to first build and install C Python packages and then put the Python package in lib/pythonX.Y/site-packages.</p> <p>We use the default CMake implementation, and use make_module_extra from PythonPackage to generate a module file which sets the PYTHONPATH.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-cmakepythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>CMakePythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>abs_path_compilers</code> Specify compilers via absolute file path (not via command names) <code>False</code>   <code>allow_system_boost</code> Always allow CMake to pick up on Boost installed in OS (even if Boost is included as a dependency) <code>False</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_shared_libs</code> Build shared library (instead of static library)None can be used to add no flag (usually results in static library) <code>None</code>   <code>build_type</code> Build type for CMake, e.g. Release.Defaults to 'Release' or 'Debug' depending on toolchainopts[debug] <code>None</code>   <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"cmake\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>generator</code> Build file generator to use. None to use CMakes default <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>install_target_subdir</code> Subdirectory to use as installation target <code>None</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>None</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>separate_build_dir</code> Perform build in a separate directory <code>True</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>srcdir</code> Source directory location to provide to cmake command <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-cmakepythonpackage-easyblock","title":"Customised steps in <code>CMakePythonPackage</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Main configuration using cmake</p> </li> <li> <p><code>install_step</code> - Main configuration using cmake</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#cmdcp","title":"<code>CmdCp</code>","text":"<p>(derives from <code>MakeCp</code>)</p> <p>Software with no configure, no make, and no make install step. Just run the specified command for all sources, and copy specified files to the install dir</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-cmdcp-easyblock","title":"Extra easyconfig parameters specific to <code>CmdCp</code> easyblock","text":"easyconfig parameter description default value     <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>cmds_map</code> List of regex/template command (with 'source'/'target' fields) tuples <code>[('.*', '$CC $CFLAGS %(source)s -o %(target)s')]</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>files_to_copy</code> List of files or dirs to copy <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>with_configure</code> Run configure script before building <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-cmdcp-easyblock","title":"Customised steps in <code>CmdCp</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build by running the command with the inputfiles</p> </li> <li> <p><code>configure_step</code> - Build by running the command with the inputfiles</p> </li> <li> <p><code>install_step</code> - Build by running the command with the inputfiles</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#conda","title":"<code>Conda</code>","text":"<p>(derives from <code>Binary</code>)</p> <p>Support for installing software using 'conda'.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-conda-easyblock","title":"Extra easyconfig parameters specific to <code>Conda</code> easyblock","text":"easyconfig parameter description default value     <code>channels</code> List of conda channels to pass to 'conda install' <code>None</code>   <code>environment_file</code> Conda environment.yml file to use with 'conda env create' <code>None</code>   <code>extract_sources</code> Whether or not to extract sources <code>False</code>   <code>install_cmd</code> Install command to be used. <code>None</code>   <code>prepend_to_path</code> Prepend the given directories (relative to install-dir) to the environment variable PATH in the module file. Default is the install-dir itself. <code>['']</code>   <code>remote_environment</code> Remote conda environment to use with 'conda env create' <code>None</code>   <code>requirements</code> Requirements specification to pass to 'conda install' <code>None</code>   <code>staged_install</code> Perform staged installation via subdirectory of build directory <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-conda-easyblock","title":"Customised steps in <code>Conda</code> easyblock","text":"<ul> <li><code>install_step</code> - Install software using 'conda env create' or 'conda create' &amp; 'conda install'.</li> </ul>"},{"location":"version-specific/generic-easyblocks/#configuremake","title":"<code>ConfigureMake</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Support for building and installing applications with configure/make/make install</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-configuremake-easyblock","title":"Extra easyconfig parameters specific to <code>ConfigureMake</code> easyblock","text":"easyconfig parameter description default value     <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>"},{"location":"version-specific/generic-easyblocks/#commonly-used-easyconfig-parameters-with-configuremake-easyblock","title":"Commonly used easyconfig parameters with <code>ConfigureMake</code> easyblock","text":"easyconfig parameter description     configopts Extra options passed to configure (default already has --prefix)   buildopts Extra options passed to make step (default already has -j X)   installopts Extra options for installation"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-configuremake-easyblock","title":"Customised steps in <code>ConfigureMake</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Start the actual build         - typical: make -j X</p> </li> <li> <p><code>configure_step</code> - Configure step         - typically ./configure --prefix=/install/path style</p> </li> <li> <p><code>install_step</code> - Create the installation in correct location         - typical: make install</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#example-easyconfig-for-configuremake-easyblock","title":"Example easyconfig for <code>ConfigureMake</code> easyblock","text":"<pre><code>easyblock = 'ConfigureMake'\n\nname = 'zsync'\nversion = '0.6.2'\n\nhomepage = 'http://zsync.moria.org.uk/'\ndescription = \"\"\"zsync-0.6.2: Optimising file distribution program, a 1-to-many rsync\"\"\"\n\ntoolchain = {'name': 'ictce', 'version': '5.3.0'}\n\nsources = [SOURCE_TAR_BZ2]\nsource_urls = ['http://zsync.moria.org.uk/download/']\n\nsanity_check_paths = {\n    'files': ['bin/zsync'],\n    'dirs': []\n}\n\nmoduleclass = 'tools'\n</code></pre>"},{"location":"version-specific/generic-easyblocks/#configuremakepythonpackage","title":"<code>ConfigureMakePythonPackage</code>","text":"<p>(derives from <code>ConfigureMake</code>, <code>PythonPackage</code>)</p> <p>Build a Python package and module with 'python configure/make/make install'.</p> <p>Implemented by using: - a custom implementation of configure_step - using the build_step and install_step from ConfigureMake - using the sanity_check_step and make_module_extra from PythonPackage</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-configuremakepythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>ConfigureMakePythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-configuremakepythonpackage-easyblock","title":"Customised steps in <code>ConfigureMakePythonPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build Python package with 'make'.</p> </li> <li> <p><code>configure_step</code> - Configure build using 'python configure'.</p> </li> <li> <p><code>install_step</code> - Install with 'make install'.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#example-easyconfig-for-configuremakepythonpackage-easyblock","title":"Example easyconfig for <code>ConfigureMakePythonPackage</code> easyblock","text":"<pre><code>easyblock = 'ConfigureMakePythonPackage'\n\nname = 'PyQt'\nversion = '4.11.3'\nversionsuffix = '-Python-%(pyver)s'\n\nhomepage = 'http://www.riverbankcomputing.co.uk/software/pyqt'\ndescription = \"\"\"PyQt is a set of Python v2 and v3 bindings for Digia's Qt application framework.\"\"\"\n\ntoolchain = {'name': 'goolf', 'version': '1.5.14'}\n\nsources = ['%(name)s-x11-gpl-%(version)s.tar.gz']\nsource_urls = ['http://sourceforge.net/projects/pyqt/files/PyQt4/PyQt-%(version)s']\n\ndependencies = [\n    ('Python', '2.7.9'),\n    ('SIP', '4.16.4', versionsuffix),\n    ('Qt', '4.8.6'),\n]\n\nconfigopts = \"configure-ng.py --confirm-license\"\nconfigopts += \" --destdir=%%(installdir)s/lib/python%(pyshortver)s/site-packages \"\nconfigopts += \" --no-sip-files\"\n\noptions = {'modulename': 'PyQt4'}\n\nmodextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}\n\nmoduleclass = 'vis'\n</code></pre>"},{"location":"version-specific/generic-easyblocks/#craytoolchain","title":"<code>CrayToolchain</code>","text":"<p>(derives from <code>Bundle</code>)</p> <p>Compiler toolchain: generate module file only, nothing to build/install</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-craytoolchain-easyblock","title":"Extra easyconfig parameters specific to <code>CrayToolchain</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>"},{"location":"version-specific/generic-easyblocks/#fortranpythonpackage","title":"<code>FortranPythonPackage</code>","text":"<p>(derives from <code>PythonPackage</code>)</p> <p>Extends PythonPackage to add a Fortran compiler to the make call</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-fortranpythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>FortranPythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-fortranpythonpackage-easyblock","title":"Customised steps in <code>FortranPythonPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Customize the build step by adding compiler-specific flags to the build command.</p> </li> <li> <p><code>configure_step</code> - Customize the build step by adding compiler-specific flags to the build command.</p> </li> <li> <p><code>install_step</code> - Customize the build step by adding compiler-specific flags to the build command.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#gopackage","title":"<code>GoPackage</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Builds and installs a Go package, and provides a dedicated module file.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-gopackage-easyblock","title":"Extra easyconfig parameters specific to <code>GoPackage</code> easyblock","text":"easyconfig parameter description default value     <code>forced_deps</code> Force specific version of Go package, when building non-native module <code>None</code>   <code>modulename</code> Module name of the Go package, when building non-native module <code>None</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-gopackage-easyblock","title":"Customised steps in <code>GoPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - If Go package is not native go module, lets try to make the module.</p> </li> <li> <p><code>configure_step</code> - Configure Go package build/install.</p> </li> <li> <p><code>install_step</code> - Install Go package to a custom path</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#intelbase","title":"<code>IntelBase</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Base class for Intel software - no configure/make : binary release - add license_file variable</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-intelbase-easyblock","title":"Extra easyconfig parameters specific to <code>IntelBase</code> easyblock","text":"easyconfig parameter description default value     <code>components</code> List of components to install <code>None</code>   <code>license_activation</code> License activation type <code>\"license_server\"</code>   <code>m32</code> Enable 32-bit toolchain <code>False</code>   <code>requires_runtime_license</code> Boolean indicating whether or not a runtime license is required <code>True</code>   <code>serial_number</code> Serial number for the product <code>None</code>   <code>usetmppath</code> Use temporary path for installation <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-intelbase-easyblock","title":"Customised steps in <code>IntelBase</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Binary installation files, so no building.</p> </li> <li> <p><code>configure_step</code> - Configure: handle license file and clean home dir.</p> </li> <li> <p><code>install_step</code> - Install Intel software</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#jar","title":"<code>JAR</code>","text":"<p>(derives from <code>Binary</code>)</p> <p>Support for installing JAR files.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-jar-easyblock","title":"Extra easyconfig parameters specific to <code>JAR</code> easyblock","text":"easyconfig parameter description default value     <code>extract_sources</code> Whether or not to extract sources <code>False</code>   <code>install_cmd</code> Install command to be used. <code>None</code>   <code>prepend_to_path</code> Prepend the given directories (relative to install-dir) to the environment variable PATH in the module file. Default is the install-dir itself. <code>['']</code>   <code>staged_install</code> Perform staged installation via subdirectory of build directory <code>False</code>"},{"location":"version-specific/generic-easyblocks/#juliabundle","title":"<code>JuliaBundle</code>","text":"<p>(derives from <code>Bundle</code>)</p> <p>Bundle of JuliaPackages: install Julia packages as extensions in a bundle Defines custom sanity checks and module environment</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-juliabundle-easyblock","title":"Extra easyconfig parameters specific to <code>JuliaBundle</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>download_pkg_deps</code> Let Julia download and bundle all needed dependencies for this installation <code>False</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>"},{"location":"version-specific/generic-easyblocks/#juliapackage","title":"<code>JuliaPackage</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Builds and installs Julia Packages.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-juliapackage-easyblock","title":"Extra easyconfig parameters specific to <code>JuliaPackage</code> easyblock","text":"easyconfig parameter description default value     <code>download_pkg_deps</code> Let Julia download and bundle all needed dependencies for this installation <code>False</code>   <code>options</code> Dictionary with extension options. <code>{}</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-juliapackage-easyblock","title":"Customised steps in <code>JuliaPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No separate build procedure for JuliaPackage.</p> </li> <li> <p><code>configure_step</code> - No separate configuration for JuliaPackage.</p> </li> <li> <p><code>install_step</code> - Install Julia package with Pkg</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#makecp","title":"<code>MakeCp</code>","text":"<p>(derives from <code>ConfigureMake</code>)</p> <p>Software with no configure and no make install step.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-makecp-easyblock","title":"Extra easyconfig parameters specific to <code>MakeCp</code> easyblock","text":"easyconfig parameter description default value     <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>files_to_copy</code> List of files or dirs to copy <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>with_configure</code> Run configure script before building <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-makecp-easyblock","title":"Customised steps in <code>MakeCp</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Configure build if required</p> </li> <li> <p><code>install_step</code> - Install by copying specified files and directories.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#mesonninja","title":"<code>MesonNinja</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Support for building and installing software with 'meson' and 'ninja'.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-mesonninja-easyblock","title":"Extra easyconfig parameters specific to <code>MesonNinja</code> easyblock","text":"easyconfig parameter description default value     <code>separate_build_dir</code> Perform build in a separate directory <code>True</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-mesonninja-easyblock","title":"Customised steps in <code>MesonNinja</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build with Ninja.</p> </li> <li> <p><code>configure_step</code> - Configure with Meson.</p> </li> <li> <p><code>install_step</code> - Install with 'ninja install'.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#modulerc","title":"<code>ModuleRC</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Generic easyblock to create a software-specific .modulerc file</p>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-modulerc-easyblock","title":"Customised steps in <code>ModuleRC</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Do nothing.</p> </li> <li> <p><code>configure_step</code> - Do nothing.</p> </li> <li> <p><code>install_step</code> - Do nothing.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#ocamlpackage","title":"<code>OCamlPackage</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Builds and installs OCaml packages using OPAM package manager.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-ocamlpackage-easyblock","title":"Extra easyconfig parameters specific to <code>OCamlPackage</code> easyblock","text":"easyconfig parameter description default value     <code>options</code> Dictionary with extension options. <code>{}</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-ocamlpackage-easyblock","title":"Customised steps in <code>OCamlPackage</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Raise error when configure step is run: installing OCaml packages stand-alone is not supported (yet)</p> </li> <li> <p><code>install_step</code> - Raise error when configure step is run: installing OCaml packages stand-alone is not supported (yet)</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#octavepackage","title":"<code>OctavePackage</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Builds and installs Octave extension toolboxes.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-octavepackage-easyblock","title":"Extra easyconfig parameters specific to <code>OctavePackage</code> easyblock","text":"easyconfig parameter description default value     <code>options</code> Dictionary with extension options. <code>{}</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-octavepackage-easyblock","title":"Customised steps in <code>OctavePackage</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Raise error when configure step is run: installing Octave toolboxes stand-alone is not supported (yet)</p> </li> <li> <p><code>install_step</code> - Raise error when configure step is run: installing Octave toolboxes stand-alone is not supported (yet)</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#packedbinary","title":"<code>PackedBinary</code>","text":"<p>(derives from <code>Binary</code>, <code>EasyBlock</code>)</p> <p>Support for installing packed binary software. Just unpack the sources in the install dir</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-packedbinary-easyblock","title":"Extra easyconfig parameters specific to <code>PackedBinary</code> easyblock","text":"easyconfig parameter description default value     <code>extract_sources</code> Whether or not to extract sources <code>False</code>   <code>install_cmd</code> Install command to be used. <code>None</code>   <code>prepend_to_path</code> Prepend the given directories (relative to install-dir) to the environment variable PATH in the module file. Default is the install-dir itself. <code>['']</code>   <code>staged_install</code> Perform staged installation via subdirectory of build directory <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-packedbinary-easyblock","title":"Customised steps in <code>PackedBinary</code> easyblock","text":"<ul> <li><code>install_step</code> - Copy all unpacked source directories to install directory, one-by-one.</li> </ul>"},{"location":"version-specific/generic-easyblocks/#perlmodule","title":"<code>PerlModule</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>, <code>ConfigureMake</code>)</p> <p>Builds and installs a Perl module, and can provide a dedicated module file.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-perlmodule-easyblock","title":"Extra easyconfig parameters specific to <code>PerlModule</code> easyblock","text":"easyconfig parameter description default value     <code>options</code> Dictionary with extension options. <code>{}</code>   <code>runtest</code> Run unit tests. <code>\"test\"</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-perlmodule-easyblock","title":"Customised steps in <code>PerlModule</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No separate build procedure for Perl modules.</p> </li> <li> <p><code>configure_step</code> - No separate configuration for Perl modules.</p> </li> <li> <p><code>install_step</code> - Run install procedure for Perl modules.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#pythonbundle","title":"<code>PythonBundle</code>","text":"<p>(derives from <code>Bundle</code>)</p> <p>Bundle of PythonPackages: install Python packages as extensions in a bundle Defines custom sanity checks and module environment</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-pythonbundle-easyblock","title":"Extra easyconfig parameters specific to <code>PythonBundle</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#pythonpackage","title":"<code>PythonPackage</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Builds and installs a Python package, and provides a dedicated module file.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-pythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>PythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-pythonpackage-easyblock","title":"Customised steps in <code>PythonPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build Python package using setup.py</p> </li> <li> <p><code>configure_step</code> - Configure Python package build/install.</p> </li> <li> <p><code>install_step</code> - Install Python package to a custom path using setup.py</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#rpackage","title":"<code>RPackage</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Install an R package as a separate module, or as an extension.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-rpackage-easyblock","title":"Extra easyconfig parameters specific to <code>RPackage</code> easyblock","text":"easyconfig parameter description default value     <code>exts_subdir</code> Subdirectory where R extensions should be installed info <code>\"\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>unpack_sources</code> Unpack sources before installation <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-rpackage-easyblock","title":"Customised steps in <code>RPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No separate build step for R packages.</p> </li> <li> <p><code>configure_step</code> - No configuration for installing R packages.</p> </li> <li> <p><code>install_step</code> - Install procedure for R packages.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#rpm","title":"<code>Rpm</code>","text":"<p>(derives from <code>Binary</code>)</p> <p>Support for installing RPM files. - sources is a list of rpms - installation is with --nodeps (so the sources list has to be complete)</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-rpm-easyblock","title":"Extra easyconfig parameters specific to <code>Rpm</code> easyblock","text":"easyconfig parameter description default value     <code>extract_sources</code> Whether or not to extract sources <code>False</code>   <code>force</code> Use force <code>False</code>   <code>install_cmd</code> Install command to be used. <code>None</code>   <code>makesymlinks</code> Create symlinks for listed paths <code>[]</code>   <code>postinstall</code> Enable post install <code>False</code>   <code>preinstall</code> Enable pre install <code>False</code>   <code>prepend_to_path</code> Prepend the given directories (relative to install-dir) to the environment variable PATH in the module file. Default is the install-dir itself. <code>['']</code>   <code>staged_install</code> Perform staged installation via subdirectory of build directory <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-rpm-easyblock","title":"Customised steps in <code>Rpm</code> easyblock","text":"<ul> <li> <p><code>configure_step</code> - Custom configuration procedure for RPMs: rebuild RPMs for relocation if required.</p> </li> <li> <p><code>install_step</code> - Custom installation procedure for RPMs into a custom prefix.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#rubygem","title":"<code>RubyGem</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Builds and installs Ruby Gems.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-rubygem-easyblock","title":"Extra easyconfig parameters specific to <code>RubyGem</code> easyblock","text":"easyconfig parameter description default value     <code>gem_file</code> Path to gem file in unpacked sources <code>None</code>   <code>options</code> Dictionary with extension options. <code>{}</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-rubygem-easyblock","title":"Customised steps in <code>RubyGem</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No separate build procedure for Ruby Gems.</p> </li> <li> <p><code>configure_step</code> - No separate configuration for Ruby Gems.</p> </li> <li> <p><code>install_step</code> - Install Ruby Gems using gem package manager</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#scons","title":"<code>SCons</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Support for building/installing with SCons.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-scons-easyblock","title":"Extra easyconfig parameters specific to <code>SCons</code> easyblock","text":"easyconfig parameter description default value     <code>prefix_arg</code> Syntax for specifying installation prefix <code>\"PREFIX=\"</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-scons-easyblock","title":"Customised steps in <code>SCons</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build with SCons</p> </li> <li> <p><code>configure_step</code> - No configure step for SCons</p> </li> <li> <p><code>install_step</code> - Install with SCons</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#systemcompiler","title":"<code>SystemCompiler</code>","text":"<p>(derives from <code>Bundle</code>, <code>EB_GCC</code>, <code>EB_ifort</code>)</p> <p>Support for generating a module file for the system compiler with specified name.</p> <p>The compiler is expected to be available in $PATH, required libraries are assumed to be readily available.</p> <p>Specifying 'system' as a version leads to using the derived compiler version in the generated module; if an actual version is specified, it is checked against the derived version of the system compiler that was found.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-systemcompiler-easyblock","title":"Extra easyconfig parameters specific to <code>SystemCompiler</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>clooguseisl</code> Use ISL with CLooG or not <code>False</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>generate_standalone_module</code> Add known path/library extensions and environment variables for the compiler to the final module <code>False</code>   <code>generic</code> Build GCC and support libraries such that it runs on all processors of the target architecture (use False to enforce non-generic regardless of configuration) <code>None</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>languages</code> List of languages to build GCC for (--enable-languages) <code>[]</code>   <code>license_activation</code> License activation type <code>\"license_server\"</code>   <code>m32</code> Enable 32-bit toolchain <code>False</code>   <code>multilib</code> Build multilib gcc (both i386 and x86_64) <code>False</code>   <code>pplwatchdog</code> Enable PPL watchdog <code>False</code>   <code>prefer_lib_subdir</code> Configure GCC to prefer 'lib' subdirs over 'lib64' when linking <code>False</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>profiled</code> Bootstrap GCC with profile-guided optimizations <code>False</code>   <code>requires_runtime_license</code> Boolean indicating whether or not a runtime license is required <code>True</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>   <code>serial_number</code> Serial number for the product <code>None</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>use_gold_linker</code> Configure GCC to use GOLD as default linker (default: enable automatically for GCC &lt; 11.3.0, except on RISC-V) <code>None</code>   <code>usetmppath</code> Use temporary path for installation <code>False</code>   <code>withamdgcn</code> Build GCC with AMD GCN offload support <code>False</code>   <code>withcloog</code> Build GCC with CLooG support <code>False</code>   <code>withisl</code> Build GCC with ISL support <code>False</code>   <code>withlibiberty</code> Enable installing of libiberty <code>False</code>   <code>withlto</code> Enable LTO support <code>True</code>   <code>withnvptx</code> Build GCC with NVPTX offload support <code>False</code>   <code>withppl</code> Build GCC with PPL support <code>False</code>"},{"location":"version-specific/generic-easyblocks/#systemmpi","title":"<code>SystemMPI</code>","text":"<p>(derives from <code>Bundle</code>, <code>ConfigureMake</code>, <code>EB_impi</code>)</p> <p>Support for generating a module file for the system mpi with specified name.</p> <p>The mpi compiler is expected to be available in $PATH, required libraries are assumed to be readily available.</p> <p>Specifying 'system' as a version leads to using the derived mpi version in the generated module; if an actual version is specified, it is checked against the derived version of the system mpi that was found.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-systemmpi-easyblock","title":"Extra easyconfig parameters specific to <code>SystemMPI</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>build_cmd</code> Build command to use <code>\"make\"</code>   <code>build_cmd_targets</code> Target name (string) or list of target names to build <code>\"\"</code>   <code>build_type</code> Value to provide to --build option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>configure_cmd</code> Configure command to use <code>\"./configure\"</code>   <code>configure_cmd_prefix</code> Prefix to be glued before ./configure <code>\"\"</code>   <code>configure_without_installdir</code> Avoid passing an install directory to the configure command (such as via --prefix) <code>False</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>generate_standalone_module</code> Add known path extensions and environment variables for the MPI installation to the final module <code>False</code>   <code>host_type</code> Value to provide to --host option of configure script, e.g., x86_64-pc-linux-gnu (determined by config.guess shipped with EasyBuild if None, False implies to leave it up to the configure script) <code>None</code>   <code>install_cmd</code> Install command to use <code>\"make install\"</code>   <code>libfabric_configopts</code> Configure options for the provided libfabric <code>\"\"</code>   <code>libfabric_rebuild</code> Try to rebuild internal libfabric instead of using provided binary <code>True</code>   <code>license_activation</code> License activation type <code>\"license_server\"</code>   <code>m32</code> Enable 32-bit toolchain <code>False</code>   <code>ofi_internal</code> Use internal shipped libfabric instead of external libfabric <code>True</code>   <code>prefix_opt</code> Prefix command line option for configure script ('--prefix=' if None) <code>None</code>   <code>requires_runtime_license</code> Boolean indicating whether or not a runtime license is required <code>True</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>   <code>serial_number</code> Serial number for the product <code>None</code>   <code>set_mpi_wrapper_aliases_gcc</code> Set compiler for mpigcc/mpigxx via aliases <code>False</code>   <code>set_mpi_wrapper_aliases_intel</code> Set compiler for mpiicc/mpiicpc/mpiifort via aliases <code>False</code>   <code>set_mpi_wrappers_all</code> Set (default) compiler for all MPI wrapper commands <code>False</code>   <code>set_mpi_wrappers_compiler</code> Override default compiler used by MPI wrapper commands <code>False</code>   <code>tar_config_opts</code> Override tar settings as determined by configure. <code>False</code>   <code>test_cmd</code> Test command to use ('runtest' value is appended) <code>\"make\"</code>   <code>usetmppath</code> Use temporary path for installation <code>False</code>"},{"location":"version-specific/generic-easyblocks/#tarball","title":"<code>Tarball</code>","text":"<p>(derives from <code>ExtensionEasyBlock</code>)</p> <p>Precompiled software supplied as a tarball: - will unpack binary and copy it to the install dir</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-tarball-easyblock","title":"Extra easyconfig parameters specific to <code>Tarball</code> easyblock","text":"easyconfig parameter description default value     <code>install_type</code> Defaults to extract tarball into clean directory. Options: 'merge' merges tarball to existing directory, 'subdir' extracts tarball into its own sub-directory <code>None</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>preinstall_cmd</code> Command to execute before installation <code>None</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-tarball-easyblock","title":"Customised steps in <code>Tarball</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Dummy build method: nothing to build</p> </li> <li> <p><code>configure_step</code> - Dummy configure method</p> </li> <li> <p><code>install_step</code> - Install by copying from specified source directory (or 'start_dir' if not specified).</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#toolchain","title":"<code>Toolchain</code>","text":"<p>(derives from <code>Bundle</code>)</p> <p>Compiler toolchain easyblock: nothing to install, just generate module file.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-toolchain-easyblock","title":"Extra easyconfig parameters specific to <code>Toolchain</code> easyblock","text":"easyconfig parameter description default value     <code>altroot</code> Software name of dependency to use to define $EBROOT for this bundle <code>None</code>   <code>altversion</code> Software name of dependency to use to define $EBVERSION for this bundle <code>None</code>   <code>components</code> List of components to install: tuples w/ name, version and easyblock to use <code>()</code>   <code>default_component_specs</code> Default specs to use for every component <code>{}</code>   <code>default_easyblock</code> Default easyblock to use for components <code>None</code>   <code>sanity_check_all_components</code> Enable sanity checks for all components <code>False</code>   <code>sanity_check_components</code> List of components for which to run sanity checks <code>[]</code>   <code>set_env_external_modules</code> Include setenv statements for toolchain components that use an external module, based on available metadata <code>False</code>"},{"location":"version-specific/generic-easyblocks/#vscpythonpackage","title":"<code>VSCPythonPackage</code>","text":"<p>(derives from <code>VersionIndependentPythonPackage</code>)</p> <p>Support for install VSC Python packages.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-vscpythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>VSCPythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#versionindependentpythonpackage","title":"<code>VersionIndependentPythonPackage</code>","text":"<p>(derives from <code>PythonPackage</code>)</p> <p>Support for building/installing python packages without requiring a specific python package.</p>"},{"location":"version-specific/generic-easyblocks/#extra-easyconfig-parameters-specific-to-versionindependentpythonpackage-easyblock","title":"Extra easyconfig parameters specific to <code>VersionIndependentPythonPackage</code> easyblock","text":"easyconfig parameter description default value     <code>buildcmd</code> Command for building the package (e.g. for custom builds resulting in a whl file). When using setup.py this will be passed to setup.py and defaults to 'build'. Otherwise it will be used as-is. A value of None then skips the build step. The template %(python)s will be replace by the currently used Python binary. <code>None</code>   <code>check_ldshared</code> Check Python value of $LDSHARED, correct if needed to \"$CC -shared\" <code>None</code>   <code>download_dep_fail</code> Fail if downloaded dependencies are detected <code>None</code>   <code>install_src</code> Source path to pass to the install command (e.g. a whl file).Defaults to '.' for unpacked sources or the first source file specified <code>None</code>   <code>install_target</code> Option to pass to setup.py <code>\"install\"</code>   <code>options</code> Dictionary with extension options. <code>{}</code>   <code>pip_ignore_installed</code> Let pip ignore installed Python packages (i.e. don't remove them) <code>True</code>   <code>pip_no_index</code> Pass --no-index to pip to disable connecting to PyPi entirely which also disables the pip version check. Enabled by default when pip_ignore_installed=True <code>None</code>   <code>req_py_majver</code> Required major Python version (only relevant when using system Python) <code>None</code>   <code>req_py_minver</code> Required minor Python version (only relevant when using system Python) <code>None</code>   <code>runtest</code> Run unit tests. <code>True</code>   <code>sanity_pip_check</code> Run 'python -m pip check' to ensure all required Python packages are installed and check for any package with an invalid (0.0.0) version. <code>False</code>   <code>source_urls</code> List of URLs for source files <code>['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s']</code>   <code>unpack_sources</code> Unpack sources prior to build/install. Defaults to 'True' except for whl files <code>None</code>   <code>unversioned_packages</code> List of packages that don't have a version at all, i.e. show 0.0.0 <code>[]</code>   <code>use_pip</code> Install using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>None</code>   <code>use_pip_editable</code> Install using 'pip install --editable' <code>False</code>   <code>use_pip_extras</code> String with comma-separated list of 'extras' to install via pip <code>None</code>   <code>use_pip_for_deps</code> Install dependencies using '%(python)s -m pip install --prefix=%(prefix)s %(installopts)s %(loc)s' <code>False</code>   <code>use_pip_requirement</code> Install using 'python -m pip install --requirement'. The sources is expected to be the requirements file. <code>False</code>   <code>zipped_egg</code> Install as a zipped eggs <code>False</code>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-versionindependentpythonpackage-easyblock","title":"Customised steps in <code>VersionIndependentPythonPackage</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - No build procedure.</p> </li> <li> <p><code>configure_step</code> - No build procedure.</p> </li> <li> <p><code>install_step</code> - Custom install procedure to skip selection of python package versions.</p> </li> </ul>"},{"location":"version-specific/generic-easyblocks/#waf","title":"<code>Waf</code>","text":"<p>(derives from <code>EasyBlock</code>)</p> <p>Support for building and installing applications with waf</p>"},{"location":"version-specific/generic-easyblocks/#customised-steps-in-waf-easyblock","title":"Customised steps in <code>Waf</code> easyblock","text":"<ul> <li> <p><code>build_step</code> - Build with ./waf build</p> </li> <li> <p><code>configure_step</code> - Configure with ./waf configure --prefix=  <li> <p><code>install_step</code> - Install with ./waf install</p> </li>"},{"location":"version-specific/supported-software/","title":"List of supported software","text":"<p>EasyBuild supports 2901 different software packages (incl. toolchains, bundles):</p> <p>a - b - c - d - e - f - g - h - i - j - k - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z</p>"},{"location":"version-specific/supported-software/#3","title":"3","text":"<p>3to2</p>"},{"location":"version-specific/supported-software/#3to2","title":"3to2","text":"<p>lib3to2 is a set of fixers that are intended to backport code written for Python version 3.x  into Python version 2.x.</p> <p>homepage: https://pypi.python.org/pypi/3to2</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.1.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#4","title":"4","text":"<p>4ti2</p>"},{"location":"version-specific/supported-software/#4ti2","title":"4ti2","text":"<p>A software package for algebraic, geometric and combinatorial problems on linear spaces</p> <p>homepage: https://4ti2.github.io/</p>    version toolchain     <code>1.6.9</code> <code>GCC/8.2.0-2.31.1</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#a","title":"A","text":"<p>ABAQUS - ABINIT - ABRA2 - ABRicate - Abseil - abTEM - ABySS - ack - ACT - ACTC - ada - AdapterRemoval - ADDA - ADF - ADIOS - adjustText - ADMIXTURE - ADOL-C - Advisor - AFNI - AGAT - AGFusion - aiohttp - ALADIN - Albacore - Albumentations - alevin-fry - ALFA - Alfred - alleleCount - Allinea - ALLPATHS-LG - almosthere - Alpha - AlphaFold - ALPS - alsa-lib - AMAPVox - Amara - amask - Amber - AmberMini - AmberTools - AMD-LibM - AMD-RNG - AMD-SecureRNG - AMD-uProf - AMOS - AMPHORA2 - AMPL-MP - amplimap - AMPtk - AmrPlusPlus - AMS - Anaconda2 - Anaconda3 - aNCI - andi - ANGEL - angsd - ANIcalculator - Annif - annovar - ANSYS - ANSYS_CFD - ant - antiSMASH - ANTLR - ANTs - anvio - any2fasta - AOCC - AOMP - APBS - apex - APR - APR-util - AptaSUITE - ARAGORN - Arb - Arcade-Learning-Environment - arcasHLA - ARCH - Archive-Zip - ArchR - archspec - ARGoS - argtable - aria2 - Arlequin - Armadillo - arosics - ARPACK++ - arpack-ng - ArrayFire - Arriba - Arrow - arrow-R - ART - artic-ncov2019 - ARTS - ArviZ - ARWEN - ASAP - ASAP3 - ASE - ASHS - Aspera-CLI - Aspera-Connect - assimp - Assimulo - ASTRID - astropy - at-spi2-atk - at-spi2-core - ATK - ATLAS - atomate - AtomPAW - atools - atropos - ATSAS - attr - attrdict - attrdict3 - augur - AUGUSTUS - Austin - AUTO-07p - Autoconf - Autoconf-archive - AutoDock - AutoDock-GPU - AutoDock-Vina - AutoGeneS - AutoGrid - Automake - AutoMap - autopep8 - Autotools - Avogadro2 - awscli</p>"},{"location":"version-specific/supported-software/#abaqus","title":"ABAQUS","text":"<p>Finite Element Analysis software for modeling, visualization and best-in-class implicit and explicit  dynamics FEA.</p> <p>homepage: http://www.simulia.com/products/abaqus_fea.html</p>    version versionsuffix toolchain     <code>6.12.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>6.13.5</code> <code>-linux-x86_64</code> <code>system</code>   <code>6.14.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>2017</code> <code>-hotfix-1721</code> <code>system</code>   <code>2018</code> <code>-hotfix-1806</code> <code>system</code>   <code>2020</code>  <code>system</code>   <code>2021</code> <code>-hotfix-2132</code> <code>system</code>   <code>2022</code>  <code>system</code>   <code>2022</code> <code>-hotfix-2214</code> <code>system</code>   <code>2022</code> <code>-hotfix-2223</code> <code>system</code>"},{"location":"version-specific/supported-software/#abinit","title":"ABINIT","text":"<p>ABINIT is a package whose main program allows one to find the total energy, charge density and electronic structure of systems made of electrons and nuclei (molecules and periodic solids) within Density Functional Theory (DFT), using pseudopotentials and a planewave or wavelet basis. </p> <p>homepage: https://www.abinit.org/</p>    version versionsuffix toolchain     <code>7.0.3</code> <code>-x86_64_linux_gnu4.5</code> <code>system</code>   <code>7.0.5</code> <code>-x86_64_linux_gnu4.5</code> <code>system</code>   <code>7.2.1</code> <code>-x86_64_linux_gnu4.5</code> <code>system</code>   <code>7.10.5</code>  <code>intel/2016.02-GCC-4.9</code>   <code>7.10.5</code> <code>-libxc</code> <code>intel/2016.02-GCC-4.9</code>   <code>8.0.8</code>  <code>intel/2016a</code>   <code>8.0.8b</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>8.2.2</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>8.4.4</code>  <code>intel/2017b</code>   <code>8.6.3</code>  <code>intel/2018a</code>   <code>8.10.2</code>  <code>intel/2018b</code>   <code>8.10.3</code>  <code>intel/2018b</code>   <code>9.2.1</code>  <code>intel/2020a</code>   <code>9.4.1</code>  <code>foss/2020b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>   <code>9.4.2</code>  <code>foss/2021a</code>, <code>intel/2021a</code>   <code>9.6.2</code>  <code>intel/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#abra2","title":"ABRA2","text":"<p>Assembly Based ReAligner</p> <p>homepage: https://github.com/mozack/abra2</p>    version toolchain     <code>2.22</code> <code>iccifort/2019.5.281</code>   <code>2.23</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#abricate","title":"ABRicate","text":"<p>Mass screening of contigs for antimicrobial and virulence genes</p> <p>homepage: https://github.com/tseemann/abricate</p>    version versionsuffix toolchain     <code>0.9.9</code>  <code>gompi/2019b</code>   <code>0.9.9</code> <code>-Perl-5.28.1</code> <code>gompi/2019a</code>   <code>1.0.0</code>  <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#abseil","title":"Abseil","text":"<p>Abseil is an open-source collection of C++ library code designed to augment the C++ standard library. The Abseil library code is collected from Google's own C++ code base, has been extensively tested and used in production, and is the same code we depend on in our daily coding lives.</p> <p>homepage: https://abseil.io/</p>    version toolchain     <code>20210324.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#abtem","title":"abTEM","text":"<p>abTEM provides a Python API for running simulations of Transmission Electron Microscopy images.</p> <p>homepage: https://github.com/jacobjma/abTEM</p>    version versionsuffix toolchain     <code>1.0.0b24</code> <code>-ASE-3.22.0</code> <code>fosscuda/2020b</code>   <code>1.0.0b26</code> <code>-ASE-3.22.0</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#abyss","title":"ABySS","text":"<p>Assembly By Short Sequences - a de novo, parallel, paired-end sequence assembler</p> <p>homepage: https://www.bcgsc.ca/platform/bioinfo/software/abyss</p>    version toolchain     <code>1.9.0</code> <code>foss/2016a</code>   <code>2.0.2</code> <code>foss/2016b</code>, <code>foss/2018a</code>, <code>gompi/2019a</code>, <code>intel/2016b</code>   <code>2.0.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.5</code> <code>foss/2019b</code>   <code>2.2.5</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ack","title":"ack","text":"<p>ack is a tool like grep, optimized for programmers</p> <p>homepage: https://beyondgrep.com</p>    version toolchain     <code>2.14</code> <code>system</code>   <code>3.4.0</code> <code>GCCcore/10.2.0</code>   <code>3.5.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#act","title":"ACT","text":"<p>ACT is a Java application for displaying pairwise comparisons between two or more DNA sequences.  It can be used to identify and analyse regions of similarity and difference between genomes  and to explore conservation of synteny, in the context of the entire sequences and their annotation.  It can read complete EMBL, GENBANK and GFF entries or sequences in FASTA or raw format. </p> <p>homepage: https://sanger-pathogens.github.io/Artemis/ACT/</p>    version versionsuffix toolchain     <code>18.0.2</code> <code>-Java-11</code> <code>system</code>   <code>18.0.3</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#actc","title":"ACTC","text":"<p>ACTC converts independent triangles into triangle strips or fans.</p> <p>homepage: https://sourceforge.net/projects/actc</p>    version toolchain     <code>1.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#ada","title":"ada","text":"<p>Performs discrete, real, and gentle boost under both exponential and logistic loss on a given data set.</p> <p>homepage: https://cran.r-project.org/web/packages/ada/index.html</p>    version versionsuffix toolchain     <code>2.0-5</code> <code>-R-3.4.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#adapterremoval","title":"AdapterRemoval","text":"<p>AdapterRemoval searches for and removes remnant adapter sequences  from High-Throughput Sequencing (HTS) data and (optionally) trims low quality bases  from the 3' end of reads following adapter removal.</p> <p>homepage: https://github.com/MikkelSchubert/adapterremoval</p>    version toolchain     <code>2.2.0</code> <code>foss/2016b</code>   <code>2.2.2</code> <code>foss/2018b</code>   <code>2.3.1</code> <code>foss/2018b</code>   <code>2.3.2</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>2.3.3</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#adda","title":"ADDA","text":"<p>ADDA is an open-source parallel implementation of the discrete dipole approximation, capable to simulate light scattering by particles of arbitrary shape and composition in a wide range of particle sizes.</p> <p>homepage: https://github.com/adda-team/adda/wiki</p>    version toolchain     <code>1.3b4</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#adf","title":"ADF","text":"<p>ADF is an accurate, parallelized, powerful computational chemistry program to understand and  predict chemical structure and reactivity with density functional theory (DFT).</p> <p>homepage: https://www.scm.com/ADF/</p>    version versionsuffix toolchain     <code>2009.01a.pc64_linux.intelmpi</code>  <code>system</code>   <code>2014.02</code>  <code>system</code>   <code>2014.11.r48287</code>  <code>intel/2016a</code>   <code>2016.101</code>  <code>system</code>   <code>2019.303</code> <code>-intelmpi</code> <code>system</code>"},{"location":"version-specific/supported-software/#adios","title":"ADIOS","text":"<p>The Adaptable IO System (ADIOS) provides a simple, flexible way for scientists to describe the data in their code that may need to be written, read, or processed outside of the running simulation.</p> <p>homepage: https://www.olcf.ornl.gov/center-projects/adios/</p>    version versionsuffix toolchain     <code>1.13.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.13.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>20210804</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#adjusttext","title":"adjustText","text":"<p>A small library for automatically adjustment of text position in matplotlib plots to minimize overlaps.</p> <p>homepage: https://github.com/Phlya/adjustText</p>    version versionsuffix toolchain     <code>0.7.3</code>  <code>foss/2021b</code>   <code>0.7.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.7.3</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#admixture","title":"ADMIXTURE","text":"<p>ADMIXTURE is a software tool for maximum likelihood estimation of individual ancestries from  multilocus SNP genotype datasets. It uses the same statistical model as STRUCTURE but calculates estimates much  more rapidly using a fast numerical optimization algorithm.</p> <p>homepage: https://dalexander.github.io/admixture/</p>    version toolchain     <code>1.3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#adol-c","title":"ADOL-C","text":"<p>The package ADOL-C (Automatic Differentiation by OverLoading in C++) facilitates the evaluation of first and higher derivatives of vector functions that are defined by computer programs written in C or C++. The resulting derivative evaluation routines may be called from C/C++, Fortran, or any other language that can be linked with C.  </p> <p>homepage: https://projects.coin-or.org/ADOL-C</p>    version toolchain     <code>2.7.0</code> <code>gompi/2019a</code>   <code>2.7.2</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#advisor","title":"Advisor","text":"<p>Vectorization Optimization and Thread Prototyping  - Vectorize &amp; thread code or performance \u201cdies\u201d  - Easy workflow + data + tips = faster code faster  - Prioritize, Prototype &amp; Predict performance gain  </p> <p>homepage: https://software.intel.com/intel-advisor-xe</p>    version toolchain     <code>2016_update2</code> <code>system</code>   <code>2017_update1</code> <code>system</code>   <code>2018_update1</code> <code>system</code>   <code>2018_update3</code> <code>system</code>   <code>2019_update2</code> <code>system</code>   <code>2019_update3</code> <code>system</code>   <code>2019_update5</code> <code>system</code>   <code>2021.2.0</code> <code>system</code>   <code>2021.4.0</code> <code>system</code>   <code>2022.1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#afni","title":"AFNI","text":"<p>AFNI is a set of C programs for processing, analyzing, and displaying functional MRI (FMRI) data -  a technique for mapping human brain activity.</p> <p>homepage: http://afni.nimh.nih.gov/</p>    version versionsuffix toolchain     <code>18.1.09</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>18.3.00</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>19.0.01</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>20160329</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#agat","title":"AGAT","text":"<p>AGAT: Another GTF/GFF Analysis Toolkit. Suite of tools to handle gene annotations  in any GTF/GFF format.</p> <p>homepage: https://agat.readthedocs.io/en/latest/</p>    version toolchain     <code>0.9.2</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#agfusion","title":"AGFusion","text":"<p>AGFusion is a python package for annotating gene fusions  from the human or mouse genomes.</p> <p>homepage: https://github.com/murphycj/AGFusion</p>    version versionsuffix toolchain     <code>1.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#aiohttp","title":"aiohttp","text":"<p>Asynchronous HTTP client/server framework for asyncio and Python.</p> <p>homepage: https://github.com/aio-libs/aiohttp</p>    version versionsuffix toolchain     <code>3.5.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.8.1</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.8.3</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#aladin","title":"ALADIN","text":"<p>ALADIN was entirely built on the notion of compatibility with its mother system, IFS/ARPEG.  The latter, a joint development between the European Centre for Medium-Range Weather Forecasts (ECMWF) and  Meteo-France, was only meant to consider global Numerical Weather Prediction applications; hence the idea,  for ALADIN, to complement the IFS/ARPEGE project with a limited area model (LAM) version, while keeping the  differences between the two softwares as small as possible.</p> <p>homepage: http://www.cnrm.meteo.fr/aladin/</p>    version toolchain     <code>36t1_op2bf1</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#albacore","title":"Albacore","text":"<p>Albacore is a software project that provides an entry point to the Oxford Nanopore basecalling  algorithms.</p> <p>homepage: https://community.nanoporetech.com/protocols/albacore-offline-basecalli/v/abec_2003_v1_revz_29nov2016</p>    version versionsuffix toolchain     <code>2.0.2</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#albumentations","title":"Albumentations","text":"<p>Albumentations is a Python library for fast and flexible image augmentations</p> <p>homepage: https://albumentations.ai</p>    version versionsuffix toolchain     <code>1.1.0</code>  <code>foss/2021b</code>   <code>1.1.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.3.0</code>  <code>foss/2022a</code>   <code>1.3.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#alevin-fry","title":"alevin-fry","text":"<p>alevin-fry is an efficient and flexible tool for processing single-cell sequencing data,  currently focused on single-cell transcriptomics and feature barcoding.</p> <p>homepage: https://github.com/COMBINE-lab/alevin-fry</p>    version toolchain     <code>0.4.3</code> <code>GCCcore/11.2.0</code>   <code>0.6.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#alfa","title":"ALFA","text":"<p>ALFA provides a global overview of features distribution composing NGS dataset(s). Given a set of  aligned reads (BAM files) and an annotation file (GTF format), the tool produces plots of the raw and normalized  distributions of those reads among genomic categories (stop codon, 5'-UTR, CDS, intergenic, etc.) and biotypes  (protein coding genes, miRNA, tRNA, etc.). Whatever the sequencing technique, whatever the organism.</p> <p>homepage: https://github.com/biocompibens/ALFA</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#alfred","title":"Alfred","text":"<p>Alfred is an efficient and versatile command-line application  that computes multi-sample quality control metrics in a read-group aware manner.  Alfred supports read counting, feature annotation and haplotype-resolved consensus  computation using multiple sequence alignments.</p> <p>homepage: https://www.gear-genomics.com/alfred/</p>    version toolchain     <code>0.2.6</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#allelecount","title":"alleleCount","text":"<p>The alleleCount package primarily exists to prevent code duplication between some other projects, specifically AscatNGS and Battenberg. As of v4 the perl  code wraps the C implementation of allele counting code for BAM/CRAM processing. </p> <p>homepage: http://cancerit.github.io/alleleCount/</p>    version toolchain     <code>4.0.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#allinea","title":"Allinea","text":"<p>The Allinea environment is an essential toolkit for developers and computational scientists looking to get results faster.</p> <p>homepage: http://www.allinea.com</p>    version toolchain     <code>4.1-32834-Redhat-5.7-x86_64</code> <code>system</code>   <code>4.1-32834-Redhat-6.0-x86_64</code> <code>system</code>   <code>6.1.1-Ubuntu-14.04-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#allpaths-lg","title":"ALLPATHS-LG","text":"<p>ALLPATHS-LG, the new short read genome assembler.</p> <p>homepage: http://www.broadinstitute.org/software/allpaths-lg/blog/</p>    version toolchain     <code>52488</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#almosthere","title":"almosthere","text":"<p>Progress indicator C library. ATHR is a simple yet powerful progress indicator library that works on Windows,  Linux, and macOS. It is non-blocking as the progress update is done via a  dedicated, lightweight thread, as to not impair the performance of the calling program.</p> <p>homepage: https://github.com/horta/almosthere</p>    version toolchain     <code>1.0.1</code> <code>GCCcore/7.3.0</code>   <code>1.0.10</code> <code>GCCcore/9.3.0</code>   <code>2.0.2</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#alpha","title":"Alpha","text":"<p>Alpha is a tool designed for detailed comparative study of bacteriophage genomes.</p> <p>homepage: https://www.lirmm.fr/~swenson/alpha/alpha.htm</p>    version versionsuffix toolchain     <code>20200430</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#alphafold","title":"AlphaFold","text":"<p>AlphaFold can predict protein structures with atomic accuracy even where no similar structure is known</p> <p>homepage: https://deepmind.com/research/case-studies/alphafold</p>    version versionsuffix toolchain     <code>2.0.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.0.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.1.1</code>  <code>fosscuda/2020b</code>   <code>2.1.2</code>  <code>foss/2021a</code>   <code>2.1.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.1.2</code> <code>-TensorFlow-2.5.0</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.2.2</code>  <code>foss/2021a</code>   <code>2.2.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#alps","title":"ALPS","text":"<p>The ALPS project (Algorithms and Libraries for Physics Simulations) is an open source effort  aiming at providing high-end simulation codes for strongly correlated quantum mechanical systems as well as   C++ libraries for simplifying the development of such code. </p> <p>homepage: http://alps.comp-phys.org/</p>    version versionsuffix toolchain     <code>2.2.b4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.3.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.3.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#alsa-lib","title":"alsa-lib","text":"<p>The Advanced Linux Sound Architecture (ALSA) provides audio and MIDI functionality  to the Linux operating system.</p> <p>homepage: https://www.alsa-project.org</p>    version toolchain     <code>1.2.4</code> <code>GCCcore/9.3.0</code>   <code>1.2.8</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#amapvox","title":"AMAPVox","text":"<p>LiDAR data voxelisation software</p> <p>homepage: https://amap-dev.cirad.fr/projects/amapvox</p>    version versionsuffix toolchain     <code>1.9.4</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#amara","title":"Amara","text":"<p>Library for XML processing in Python, designed to balance the native idioms of Python  with the native character of XML.</p> <p>homepage: https://pypi.org/project/Amara</p>    version versionsuffix toolchain     <code>1.2.0.2</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#amask","title":"amask","text":"<p>amask is a set of tools to to determine the affinity of MPI processes and OpenMP threads  in a parallel environment.</p> <p>homepage: https://github.com/TACC/amask</p>    version toolchain     <code>20171106</code> <code>foss/2018a</code>   <code>20190404</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#amber","title":"Amber","text":"<p>Amber (originally Assisted Model Building with Energy Refinement) is software for performing  molecular dynamics and structure prediction.</p> <p>homepage: https://ambermd.org/amber.html</p>    version versionsuffix toolchain     <code>14</code> <code>-AmberTools-15-patchlevel-13-13</code> <code>intel/2016a</code>   <code>16</code> <code>-AmberTools-16-patchlevel-5-14</code> <code>iomkl/2016.07</code>   <code>16</code> <code>-AmberTools-16-patchlevel-5-14-CUDA</code> <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>16</code> <code>-AmberTools-16-patchlevel-5-14-serial</code> <code>iomkl/2016.07</code>   <code>16</code> <code>-AmberTools-17-patchlevel-10-15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>16</code> <code>-AmberTools-17-patchlevel-10-15-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>16</code> <code>-AmberTools-17-patchlevel-8-12</code> <code>intel/2017b</code>   <code>18</code> <code>-AmberTools-18-patchlevel-10-8</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2017b</code>   <code>18</code> <code>-AmberTools-19-patchlevel-12-17-Python-2.7.16</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>20.11</code> <code>-AmberTools-20.15-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>20.11</code> <code>-AmberTools-21.3</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>22.0</code> <code>-AmberTools-22.3</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ambermini","title":"AmberMini","text":"<p>A stripped-down set of just antechamber, sqm, and tleap.</p> <p>homepage: https://github.com/choderalab/ambermini</p>    version toolchain     <code>16.16.0</code> <code>intel/2017b</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#ambertools","title":"AmberTools","text":"<p>AmberTools consists of several independently developed packages that work well by themselves,  and with Amber itself. The suite can also be used to carry out complete molecular dynamics simulations,  with either explicit water or generalized Born solvent models.</p> <p>homepage: https://ambermd.org/</p>    version versionsuffix toolchain     <code>17</code>  <code>intel/2017b</code>, <code>intel/2018a</code>   <code>17</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>20</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>21</code>  <code>foss/2021a</code>, <code>intel/2021b</code>   <code>21.12</code>  <code>foss/2021b</code>   <code>22.3</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#amd-libm","title":"AMD-LibM","text":"<p>AMD LibM is a software library containing a collection of basic math functions optimized for x86-64 processor based machines.</p> <p>homepage: https://developer.amd.com/amd-cpu-libraries/amd-math-library-libm/</p>    version toolchain     <code>3.2.2</code> <code>GCC/7.3.0-2.30</code>   <code>3.6.0-4</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#amd-rng","title":"AMD-RNG","text":"<p>AMD Random Number Generator Library is a pseudorandom number generator library.</p> <p>homepage: https://developer.amd.com/amd-cpu-libraries/rng-library/</p>    version toolchain     <code>1.0</code> <code>GCC/7.3.0-2.30</code>   <code>2.2-4</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#amd-securerng","title":"AMD-SecureRNG","text":"<p>The AMD Secure Random Number Generator (RNG) is a library that provides APIs to access the cryptographically secure random numbers generated by AMD\u2019s hardware-based random number generator implementation.</p> <p>homepage: https://developer.amd.com/amd-cpu-libraries/rng-library/</p>    version toolchain     <code>1.0</code> <code>GCC/7.3.0-2.30</code>   <code>2.2-4</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#amd-uprof","title":"AMD-uProf","text":"<p>AMD uProf is a performance analysis tool for applications running on Windows, Linux &amp; FreeBSD  operating systems. It allows developers to better understand the runtime performance of their application and  to identify ways to improve its performance.</p> <p>homepage: https://developer.amd.com/amd-uprof/</p>    version toolchain     <code>3.4.502</code> <code>system</code>   <code>3.5.671</code> <code>system</code>"},{"location":"version-specific/supported-software/#amos","title":"AMOS","text":"<p>The AMOS consortium is committed to the development of open-source whole genome assembly software</p> <p>homepage: http://amos.sourceforge.net</p>    version toolchain     <code>3.1.0</code> <code>foss/2018b</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#amphora2","title":"AMPHORA2","text":"<p>An Automated Phylogenomic Inference Pipeline for Bacterial and Archaeal Sequences.</p> <p>homepage: https://github.com/wu-lab-uva/AMPHORA2</p>    version versionsuffix toolchain     <code>20190730</code> <code>-Java-13-pthreads-avx2</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#ampl-mp","title":"AMPL-MP","text":"<p>An open-source library for mathematical programming. </p> <p>homepage: https://github.com/ampl/mp</p>    version toolchain     <code>3.1.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#amplimap","title":"amplimap","text":"<p>amplimap is a command-line tool to automate the processing and analysis of data from targeted  next-generation sequencing (NGS) experiments with PCR-based amplicons or capture-based enrichment systems.</p> <p>homepage: https://amplimap.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>0.4.16</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#amptk","title":"AMPtk","text":"<p>AMPtk is a series of scripts to process NGS amplicon data using USEARCH and VSEARCH, it can also be used to process any NGS amplicon data and includes databases setup for analysis of fungal ITS, fungal LSU, bacterial 16S, and insect COI amplicons.</p> <p>homepage: https://amptk.readthedocs.io</p>    version toolchain     <code>1.5.4</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#amrplusplus","title":"AmrPlusPlus","text":"<p>AmrPlusPlus v2.0 can process the raw data from the sequencer, identify the fragments of DNA, and count them. It also provides a count of the polymorphisms that occur in each DNA fragment with respect to the reference database. </p> <p>homepage: https://megares.meglab.org/amrplusplus/latest/html/v2</p>    version toolchain     <code>2.0-20200114</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#ams","title":"AMS","text":"<p>The Amsterdam Modeling Suite (AMS) provides a comprehensive set of modules for computational chemistry and materials science, from quantum mechanics to fluid thermodynamics. </p> <p>homepage: https://www.scm.com/amsterdam-modeling-suite/</p>    version versionsuffix toolchain     <code>2020.102</code> <code>-intelmpi</code> <code>iimpi/2020b</code>   <code>2022.102</code> <code>-intelmpi</code> <code>iimpi/2021b</code>"},{"location":"version-specific/supported-software/#anaconda2","title":"Anaconda2","text":"<p>Built to complement the rich, open source Python community, the Anaconda platform provides an enterprise-ready data analytics platform  that empowers companies to adopt a modern open data science analytics architecture. </p> <p>homepage: https://www.anaconda.com</p>    version toolchain     <code>4.0.0</code> <code>system</code>   <code>4.2.0</code> <code>system</code>   <code>4.4.0</code> <code>system</code>   <code>5.0.1</code> <code>system</code>   <code>5.1.0</code> <code>system</code>   <code>5.3.0</code> <code>system</code>   <code>2018.12</code> <code>system</code>   <code>2019.03</code> <code>system</code>   <code>2019.07</code> <code>system</code>   <code>2019.10</code> <code>system</code>"},{"location":"version-specific/supported-software/#anaconda3","title":"Anaconda3","text":"<p>Built to complement the rich, open source Python community, the Anaconda platform provides an enterprise-ready data analytics platform  that empowers companies to adopt a modern open data science analytics architecture. </p> <p>homepage: https://www.anaconda.com</p>    version toolchain     <code>4.0.0</code> <code>system</code>   <code>4.2.0</code> <code>system</code>   <code>4.4.0</code> <code>system</code>   <code>5.0.1</code> <code>system</code>   <code>5.1.0</code> <code>system</code>   <code>5.3.0</code> <code>system</code>   <code>2018.12</code> <code>system</code>   <code>2019.03</code> <code>system</code>   <code>2019.07</code> <code>system</code>   <code>2019.10</code> <code>system</code>   <code>2020.02</code> <code>system</code>   <code>2020.07</code> <code>system</code>   <code>2020.11</code> <code>system</code>   <code>2021.05</code> <code>system</code>   <code>2021.11</code> <code>system</code>   <code>2022.05</code> <code>system</code>"},{"location":"version-specific/supported-software/#anci","title":"aNCI","text":"<p>Non-covalent interaction (NCI) for MD trajectories</p> <p>homepage: https://www.lct.jussieu.fr/pagesperso/contrera/nci-MD.html</p>    version toolchain     <code>2.0</code> <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#andi","title":"andi","text":"<p>This is the andi program for estimating the evolutionary distance between closely related genomes. These distances can be used to rapidly infer phylogenies for big sets of genomes. Because andi does not compute full alignments, it is so efficient that it scales even up to thousands of bacterial genomes.</p> <p>homepage: https://github.com/evolbioinf/andi/</p>    version toolchain     <code>0.13</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#angel","title":"ANGEL","text":"<p>ANGEL: Robust Open Reading Frame prediction</p> <p>homepage: https://github.com/PacificBiosciences/ANGEL</p>    version versionsuffix toolchain     <code>3.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#angsd","title":"angsd","text":"<p>Program for analysing NGS data.</p> <p>homepage: http://www.popgen.dk/angsd</p>    version toolchain     <code>0.910</code> <code>foss/2016a</code>   <code>0.921</code> <code>foss/2018a</code>   <code>0.925</code> <code>foss/2018b</code>   <code>0.933</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>0.935</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#anicalculator","title":"ANIcalculator","text":"<p>This tool will calculate the bidirectional average nucleotide identity (gANI) and  Alignment Fraction (AF) between two genomes. Required input is the full path to the fna file  (nucleotide sequence of genes in fasta format) of each query genome. Either the rRNA and tRNA genes  can be excluded, or provided in a list with the -ignoreList option. This is necessary as the presence of tRNA and/or rRNA genes in the fna will artificially inflate the ANI.</p> <p>homepage: https://ani.jgi.doe.gov/html/home.php</p>    version toolchain     <code>1.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#annif","title":"Annif","text":"<p>Annif is a multi-algorithm automated subject indexing tool for libraries, archives and museums.</p> <p>homepage: https://github.com/NatLibFi/Annif</p>    version versionsuffix toolchain     <code>0.40.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#annovar","title":"annovar","text":"<p>ANNOVAR is an efficient software tool to utilize update-to-date information  to functionally annotate genetic variants detected from diverse genomes (including human  genome hg18, hg19, hg38, as well as mouse, worm, fly, yeast and many others).</p> <p>homepage: http://annovar.openbioinformatics.org/en/latest/</p>    version versionsuffix toolchain     <code>2016Feb01</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>   <code>20191024</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>   <code>20200607</code> <code>-Perl-5.34.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#ansys","title":"ANSYS","text":"<p>ANSYS simulation software enables organizations to confidently predict      how their products will operate in the real world. We believe that every product is      a promise of something greater. </p> <p>homepage: https://www.ansys.com</p>    version toolchain     <code>15.0</code> <code>system</code>   <code>2022R2</code> <code>system</code>"},{"location":"version-specific/supported-software/#ansys_cfd","title":"ANSYS_CFD","text":"<p>ANSYS computational fluid dynamics (CFD) simulation software allows you to predict, with confidence,  the impact of fluid flows on your product throughout design and manufacturing as well as during end use.  ANSYS renowned CFD analysis tools include the widely used and well-validated ANSYS Fluent and ANSYS CFX.</p> <p>homepage: http://www.ansys.com/Products/Simulation+Technology/Fluid+Dynamics</p>    version toolchain     <code>16.2</code> <code>system</code>   <code>17.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#ant","title":"ant","text":"<p>Apache Ant is a Java library and command-line tool whose mission is to drive processes described in  build files as targets and extension points dependent upon each other. The main known usage of Ant is the build of  Java applications.</p> <p>homepage: http://ant.apache.org/</p>    version versionsuffix toolchain     <code>1.8.4</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>1.8.4</code> <code>-Java-1.7.0_21</code> <code>system</code>   <code>1.9.0</code> <code>-Java-1.7.0_15</code> <code>system</code>   <code>1.9.0</code> <code>-Java-1.7.0_21</code> <code>system</code>   <code>1.9.3</code> <code>-Java-1.7.0_60</code> <code>system</code>   <code>1.9.3</code> <code>-Java-1.7.0_79</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.7.0_75</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.7.0_79</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.8.0_72</code> <code>system</code>   <code>1.9.6</code> <code>-Java-1.8.0_77</code> <code>system</code>   <code>1.9.7</code> <code>-Java-1.8.0_92</code> <code>system</code>   <code>1.10.0</code> <code>-Java-1.8.0_112</code> <code>system</code>   <code>1.10.1</code> <code>-Java-1.8</code> <code>system</code>   <code>1.10.1</code> <code>-Java-1.8.0_121</code> <code>system</code>   <code>1.10.1</code> <code>-Java-1.8.0_144</code> <code>system</code>   <code>1.10.1</code> <code>-Java-1.8.0_152</code> <code>system</code>   <code>1.10.1</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>1.10.5</code> <code>-Java-1.8</code> <code>system</code>   <code>1.10.6</code> <code>-Java-1.8</code> <code>system</code>   <code>1.10.7</code> <code>-Java-11</code> <code>system</code>   <code>1.10.8</code> <code>-Java-11</code> <code>system</code>   <code>1.10.9</code> <code>-Java-11</code> <code>system</code>   <code>1.10.11</code> <code>-Java-11</code> <code>system</code>   <code>1.10.11</code> <code>-Java-13</code> <code>system</code>   <code>1.10.12</code> <code>-Java-11</code> <code>system</code>   <code>1.10.12</code> <code>-Java-17</code> <code>system</code>"},{"location":"version-specific/supported-software/#antismash","title":"antiSMASH","text":"<p>antiSMASH allows the rapid genome-wide identification, annotation and analysis of secondary  metabolite biosynthesis gene clusters in bacterial and fungal genomes.</p> <p>homepage: https://github.com/antismash/antismash</p>    version versionsuffix toolchain     <code>5.1.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>5.2.0</code>  <code>foss/2020b</code>   <code>6.0.1</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#antlr","title":"ANTLR","text":"<p>ANTLR, ANother Tool for Language Recognition, (formerly PCCTS)  is a language tool that provides a framework for constructing recognizers,  compilers, and translators from grammatical descriptions containing  Java, C#, C++, or Python actions.</p> <p>homepage: http://www.antlr2.org/</p>    version versionsuffix toolchain     <code>2.7.7</code>  <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2017b</code>, <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2017b</code>   <code>2.7.7</code> <code>-Java-11</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.7.7</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.7.7</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.7.7</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>2.7.7</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#ants","title":"ANTs","text":"<p>ANTs extracts information from complex datasets that include imaging. ANTs is useful for managing,  interpreting and visualizing multidimensional data.</p> <p>homepage: https://stnava.github.io/ANTs/</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.3.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.3.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.3.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.3.5</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#anvio","title":"anvio","text":"<p>An analysis and visualization platform for 'omics data.</p> <p>homepage: https://merenlab.org/software/anvio/</p>    version versionsuffix toolchain     <code>6.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#any2fasta","title":"any2fasta","text":"<p>Convert various sequence formats to FASTA</p> <p>homepage: https://github.com/tseemann/any2fasta</p>    version versionsuffix toolchain     <code>0.4.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.4.2</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#aocc","title":"AOCC","text":"<p>AMD Optimized C/C++ &amp; Fortran compilers (AOCC) based on LLVM 13.0</p> <p>homepage: https://developer.amd.com/amd-aocc/</p>    version toolchain     <code>2.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.0.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.2.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>4.0.0</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#aomp","title":"AOMP","text":"<p>AMD fork of LLVM, setup for OpenMP offloading to Accelerators</p> <p>homepage: https://github.com/ROCm-Developer-Tools/aomp</p>    version toolchain     <code>13.0-2</code> <code>GCCcore/10.2.0</code>, <code>gcccuda/2020a</code>"},{"location":"version-specific/supported-software/#apbs","title":"APBS","text":"<p>APBS is a software package for modeling biomolecular solvation   through solution of the Poisson-Boltzmann equation (PBE), one of the most popular   continuum models for describing electrostatic interactions between molecular solutes   in salty, aqueous media. </p> <p>homepage: http://www.poissonboltzmann.org/apbs</p>    version versionsuffix toolchain     <code>1.4</code> <code>-linux-static-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#apex","title":"apex","text":"<p>A PyTorch Extension: Tools for easy mixed precision and distributed training in Pytorch</p> <p>homepage: https://github.com/nvidia/apex</p>    version versionsuffix toolchain     <code>20200325</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>20210420</code>  <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#apr","title":"APR","text":"<p>Apache Portable Runtime (APR) libraries.</p> <p>homepage: https://apr.apache.org/</p>    version toolchain     <code>1.6.3</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>iomkl/2018a</code>   <code>1.7.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#apr-util","title":"APR-util","text":"<p>Apache Portable Runtime (APR) util libraries.</p> <p>homepage: http://apr.apache.org/</p>    version toolchain     <code>1.6.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>, <code>iomkl/2018a</code>"},{"location":"version-specific/supported-software/#aptasuite","title":"AptaSUITE","text":"<p>A full-featured bioinformatics software collection for the  comprehensive analysis of aptamers in HT-SELEX experiments </p> <p>homepage: https://drivenbyentropy.github.io/</p>    version versionsuffix toolchain     <code>0.9.4</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#aragorn","title":"ARAGORN","text":"<p>a program to detect tRNA genes and tmRNA genes in nucleotide sequences</p> <p>homepage: http://www.ansikte.se/ARAGORN/</p>    version toolchain     <code>1.2.38</code> <code>foss/2016b</code>, <code>iccifort/2019.5.281</code>   <code>1.2.41</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#arb","title":"Arb","text":"<p>Arb is a C library for arbitrary-precision interval arithmetic.  It has full support for both real and complex numbers. The library is thread-safe,  portable, and extensively tested.</p> <p>homepage: https://arblib.org/</p>    version toolchain     <code>2.16.0</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>   <code>2.17.0</code> <code>GCC/8.3.0</code>   <code>2.19.0</code> <code>GCC/10.3.0</code>   <code>2.22.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#arcade-learning-environment","title":"Arcade-Learning-Environment","text":"<p>The Arcade Learning Environment (ALE) is a simple framework that allows researchers and hobbyists to develop AI agents for Atari 2600 games. It is built on top of the Atari 2600 emulator Stella and separates the details of emulation from agent design. This video depicts over 50 games currently supported in the ALE.</p> <p>homepage: https://github.com/mgbellemare/Arcade-Learning-Environment</p>    version toolchain     <code>0.7.3</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#arcashla","title":"arcasHLA","text":"<p>arcasHLA performs high resolution genotyping for HLA class I and class II genes from RNA sequencing, supporting both paired and single-end samples.</p> <p>homepage: https://github.com/RabadanLab/arcasHLA</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#arch","title":"ARCH","text":"<p>Autoregressive Conditional Heteroskedasticity (ARCH) and other tools for financial econometrics,  written in Python (with Cython and/or Numba used to improve performance).</p> <p>homepage: https://pypi.org/project/arch</p>    version versionsuffix toolchain     <code>4.5.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#archive-zip","title":"Archive-Zip","text":"<p>Provide an interface to ZIP archive files.</p> <p>homepage: https://metacpan.org/pod/Archive::Zip</p>    version toolchain     <code>1.68</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#archr","title":"ArchR","text":"<p>ArchR is a full-featured R package for processing and analyzing single-cell ATAC-seq data.</p> <p>homepage: https://www.archrproject.com</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#archspec","title":"archspec","text":"<p>A library for detecting, labeling, and reasoning about microarchitectures</p> <p>homepage: https://github.com/archspec/archspec</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.1.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>0.1.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>0.1.3</code>  <code>GCCcore/11.2.0</code>   <code>0.1.4</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#argos","title":"ARGoS","text":"<p>A parallel, multi-engine simulator for heterogeneous swarm robotics</p> <p>homepage: http://www.argos-sim.info</p>    version versionsuffix toolchain     <code>3.0.0-beta53</code> <code>-Lua-5.2.4</code> <code>foss/2018b</code>   <code>3.0.0-beta59</code>  <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#argtable","title":"argtable","text":"<p>Argtable is an ANSI C library for parsing GNU style  command line options with a minimum of fuss. </p> <p>homepage: http://argtable.sourceforge.net/</p>    version toolchain     <code>2.13</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#aria2","title":"aria2","text":"<p>aria2 is a lightweight multi-protocol &amp; multi-source command-line download utility.</p> <p>homepage: https://aria2.github.io</p>    version toolchain     <code>1.35.0</code> <code>GCCcore/10.3.0</code>   <code>1.36.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#arlequin","title":"Arlequin","text":"<p>Arlequin: An Integrated Software for Population Genetics Data Analysis</p> <p>homepage: http://cmpg.unibe.ch/software/arlequin35/Arlequin35.html</p>    version toolchain     <code>3.5.2.2</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#armadillo","title":"Armadillo","text":"<p>Armadillo is an open-source C++ linear algebra library (matrix maths) aiming towards  a good balance between speed and ease of use. Integer, floating point and complex numbers are supported,  as well as a subset of trigonometric and statistics functions.</p> <p>homepage: https://arma.sourceforge.net/</p>    version versionsuffix toolchain     <code>7.600.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>7.800.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>7.950.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>8.300.1</code>  <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.400.0</code>  <code>foss/2018a</code>   <code>9.600.5</code>  <code>foss/2018b</code>   <code>9.700.2</code>  <code>foss/2019a</code>   <code>9.880.1</code>  <code>foss/2020a</code>   <code>9.900.1</code>  <code>foss/2019b</code>, <code>foss/2020a</code>   <code>10.5.3</code>  <code>foss/2020b</code>   <code>10.7.5</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#arosics","title":"arosics","text":"<p>AROSICS is a python package to perform automatic subpixel co-registration of two satellite image datasets based on an image matching approach working in the frequency domain, combined with a multistage workflow for effective detection of false-positives.</p> <p>homepage: https://github.com/GFZ/arosics</p>    version toolchain     <code>1.7.6</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#arpack","title":"ARPACK++","text":"<p>Arpackpp is a C++ interface to the ARPACK Fortran package,  which implements the implicit restarted Arnoldi method for  iteratively solving large-scale sparse eigenvalue problems.</p> <p>homepage: https://github.com/m-reuter/arpackpp</p>    version toolchain     <code>2018.03.26</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#arpack-ng","title":"arpack-ng","text":"<p>ARPACK is a collection of Fortran77 subroutines designed to solve large scale eigenvalue problems.</p> <p>homepage: https://github.com/opencollab/arpack-ng</p>    version toolchain     <code>3.3.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.4.0</code> <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>3.5.0</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>3.6.2</code> <code>intel/2018a</code>   <code>3.7.0</code> <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>   <code>3.8.0</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#arrayfire","title":"ArrayFire","text":"<p>ArrayFire is a general-purpose library that simplifies the process of  developing software that targets parallel and massively-parallel architectures  including CPUs, GPUs, and other hardware acceleration devices. </p> <p>homepage: https://arrayfire.com/</p>    version versionsuffix toolchain     <code>3.6.4</code>  <code>foss/2018b</code>   <code>3.6.4</code> <code>-CUDA-9.2.88</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#arriba","title":"Arriba","text":"<p>Arriba is a command-line tool for the detection of gene fusions from RNA-Seq data.  It was developed for the use in a clinical research setting. Therefore, short runtimes and high  sensitivity were important design criteria.</p> <p>homepage: https://github.com/suhrig/arriba</p>    version toolchain     <code>1.1.0</code> <code>foss/2018b</code>   <code>2.1.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>2.2.1</code> <code>GCC/11.2.0</code>   <code>2.3.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#arrow","title":"Arrow","text":"<p>Apache Arrow (incl. PyArrow Python bindings), a cross-language development platform  for in-memory data.</p> <p>homepage: https://arrow.apache.org</p>    version versionsuffix toolchain     <code>0.7.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.12.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.12.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.16.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>0.17.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>0.17.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>6.0.0</code>  <code>foss/2021a</code>, <code>foss/2021b</code>   <code>6.0.1</code>  <code>foss/2021a</code>   <code>8.0.0</code>  <code>foss/2022.05</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#arrow-r","title":"arrow-R","text":"<p>R interface to the Apache Arrow C++ library</p> <p>homepage: https://cran.r-project.org/web/packages/arrow</p>    version versionsuffix toolchain     <code>0.17.1</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>6.0.0.2</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>6.0.0.2</code> <code>-R-4.1.2</code> <code>foss/2021b</code>   <code>6.0.0.2</code> <code>-R-4.2.0</code> <code>foss/2021b</code>   <code>8.0.0</code> <code>-R-4.2.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#art","title":"ART","text":"<p>ART is a set of simulation tools to generate synthetic next-generation sequencing reads</p> <p>homepage: http://www.niehs.nih.gov/research/resources/software/biostatistics/art/</p>    version toolchain     <code>2016.06.05</code> <code>GCCcore/6.4.0</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#artic-ncov2019","title":"artic-ncov2019","text":"<p>Initial implementation of an ARTIC bioinformatics platform  for nanopore sequencing of nCoV2019 novel coronavirus.</p> <p>homepage: https://github.com/artic-network/artic-ncov2019</p>    version versionsuffix toolchain     <code>2020.04.13</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2021.06.24</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#arts","title":"ARTS","text":"<p>ARTS is a radiative transfer model for the millimeter and sub-millimeter  spectral range. There are a number of models mostly developed explicitly  for the different sensors.</p> <p>homepage: http://www.radiativetransfer.org/</p>    version toolchain     <code>2.2.64</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#arviz","title":"ArviZ","text":"<p>Exploratory analysis of Bayesian models with Python</p> <p>homepage: https://github.com/arviz-devs/arviz</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>0.11.1</code>  <code>intel/2020b</code>   <code>0.11.4</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>0.12.1</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#arwen","title":"ARWEN","text":"<p>ARWEN, tRNA detection in metazoan mitochondrial sequences</p> <p>homepage: http://mbio-serv2.mbioekol.lu.se/ARWEN</p>    version toolchain     <code>1.2.3</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#asap","title":"ASAP","text":"<p>ASAP focuses on fast and fluid image viewing with an easy-to-use interface  for making annotations. It consists of two main components: an IO library for reading and writing  multi-resolution images and a viewer component for visualizing such images.</p> <p>homepage: https://computationalpathologygroup.github.io/ASAP/</p>    version versionsuffix toolchain     <code>2.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#asap3","title":"ASAP3","text":"<p>ASAP is a calculator for doing large-scale classical molecular dynamics within the Campos Atomic Simulation Environment (ASE).</p> <p>homepage: https://wiki.fysik.dtu.dk/asap/</p>    version versionsuffix toolchain     <code>3.10.7</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>3.10.7</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>3.10.8</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>3.10.8</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>3.10.8</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>3.10.10</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.11.10</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.12.2</code> <code>-ASE-3.21.1</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>3.12.7</code> <code>-ASE-3.21.1</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#ase","title":"ASE","text":"<p>ASE is a python package providing an open source Atomic Simulation Environment  in the Python scripting language.</p> <p>homepage: https://wiki.fysik.dtu.dk/ase/</p>    version versionsuffix toolchain     <code>3.9.1.4567</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.10.0</code> <code>-Python-2.7.11</code> <code>intel/2016.02-GCC-4.9</code>   <code>3.11.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.13.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>3.13.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.15.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>3.15.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>3.15.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>3.15.0</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>3.15.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>3.16.2</code> <code>-Python-3.6.4</code> <code>iomkl/2018.02</code>, <code>iomkl/2018a</code>   <code>3.16.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.17.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.17.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.18.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.18.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.19.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.19.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>3.19.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>3.20.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>3.20.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.20.1</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>3.21.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>3.21.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.22.0</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intel/2021a</code>   <code>3.22.1</code>  <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#ashs","title":"ASHS","text":"<p>Automatic Segmentation of Hippocampal Subfields (ASHS) </p> <p>homepage: https://sites.google.com/site/hipposubfields/home</p>    version toolchain     <code>rev103_20140612</code> <code>system</code>"},{"location":"version-specific/supported-software/#aspera-cli","title":"Aspera-CLI","text":"<p>IBM Aspera Command-Line Interface (the Aspera CLI) is a collection of Aspera tools for performing high-speed, secure data transfers from the command line. The Aspera CLI is for users and organizations who want to automate their transfer workflows.</p> <p>homepage: https://asperasoft.com</p>    version versionsuffix toolchain     <code>3.7.2</code> <code>.354.010c3b8</code> <code>system</code>   <code>3.9.0</code> <code>.1326.6985b21</code> <code>system</code>   <code>3.9.6</code> <code>.1467.159c5b1</code> <code>system</code>"},{"location":"version-specific/supported-software/#aspera-connect","title":"Aspera-Connect","text":"<p>Connect is an install-on-demand Web browser plug-in that facilitates high-speed uploads and  downloads with an Aspera transfer server.</p> <p>homepage: http://downloads.asperasoft.com/connect2/</p>    version toolchain     <code>3.6.1</code> <code>system</code>   <code>3.9.6</code> <code>system</code>"},{"location":"version-specific/supported-software/#assimp","title":"assimp","text":"<p>Open Asset Import Library (assimp) is a library to import and export various  3d-model-formats including scene-post-processing to generate missing render data. </p> <p>homepage: https://github.com/assimp/assimp</p>    version toolchain     <code>5.0.1</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#assimulo","title":"Assimulo","text":"<p>Assimulo is a simulation package for solving ordinary differential equations.</p> <p>homepage: https://jmodelica.org/assimulo/</p>    version versionsuffix toolchain     <code>2.9</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#astrid","title":"ASTRID","text":"<p>ASTRID-2 is a method for estimating species trees from gene trees.</p> <p>homepage: https://github.com/pranjalv123/ASTRID</p>    version toolchain     <code>2.2.1</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#astropy","title":"astropy","text":"<p>The Astropy Project is a community effort to develop a common  core package for Astronomy in Python and foster an ecosystem of interoperable  astronomy packages.  The Astropy community is committed to supporting diversity and inclusion.</p> <p>homepage: https://www.astropy.org/</p>    version versionsuffix toolchain     <code>2.0.12</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.0.14</code>  <code>foss/2019a</code>   <code>4.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>4.0.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>4.2.1</code>  <code>intelcuda/2020b</code>   <code>4.3.1</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021a</code>   <code>5.0.4</code>  <code>foss/2021a</code>   <code>5.1.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#at-spi2-atk","title":"at-spi2-atk","text":"<p>AT-SPI 2 toolkit bridge</p> <p>homepage: https://wiki.gnome.org/Accessibility</p>    version toolchain     <code>2.26.3</code> <code>fosscuda/2018b</code>   <code>2.32.0</code> <code>GCCcore/8.2.0</code>   <code>2.34.1</code> <code>GCCcore/8.3.0</code>   <code>2.34.2</code> <code>GCCcore/9.3.0</code>   <code>2.38.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#at-spi2-core","title":"at-spi2-core","text":"<p>Assistive Technology Service Provider Interface. </p> <p>homepage: https://wiki.gnome.org/Accessibility</p>    version toolchain     <code>2.26.3</code> <code>fosscuda/2018b</code>   <code>2.32.0</code> <code>GCCcore/8.2.0</code>   <code>2.34.0</code> <code>GCCcore/8.3.0</code>   <code>2.36.0</code> <code>GCCcore/9.3.0</code>   <code>2.38.0</code> <code>GCCcore/10.2.0</code>   <code>2.40.2</code> <code>GCCcore/10.3.0</code>   <code>2.40.3</code> <code>GCCcore/11.2.0</code>   <code>2.44.1</code> <code>GCCcore/11.3.0</code>   <code>2.46.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#atk","title":"ATK","text":"<p>ATK provides the set of accessibility interfaces that are implemented by other  toolkits and applications. Using the ATK interfaces, accessibility tools have  full access to view and control running applications. </p> <p>homepage: https://developer.gnome.org/atk/</p>    version toolchain     <code>2.18.0</code> <code>intel/2016a</code>   <code>2.20.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.22.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.26.0</code> <code>intel/2017a</code>   <code>2.26.1</code> <code>foss/2018b</code>, <code>intel/2017b</code>   <code>2.27.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.28.1</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018a</code>   <code>2.32.0</code> <code>GCCcore/8.2.0</code>   <code>2.34.1</code> <code>GCCcore/8.3.0</code>   <code>2.36.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.38.0</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#atlas","title":"ATLAS","text":"<p>ATLAS (Automatically Tuned Linear Algebra Software) is the application of  the AEOS (Automated Empirical Optimization of Software) paradigm, with the present emphasis   on the Basic Linear Algebra Subprograms (BLAS), a widely used, performance-critical, linear   algebra kernel library.</p> <p>homepage: http://math-atlas.sourceforge.net</p>    version versionsuffix toolchain     <code>3.10.2</code> <code>-LAPACK-3.6.1</code> <code>GCC/5.4.0-2.26</code>"},{"location":"version-specific/supported-software/#atomate","title":"atomate","text":"<p>atomate has implementations of FireWorks workflows for Materials Science.</p> <p>homepage: https://pythonhosted.org/atomate/</p>    version versionsuffix toolchain     <code>0.4.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#atompaw","title":"AtomPAW","text":"<p>AtomPAW is a Projector-Augmented Wave Dataset Generator that  can be used both as a standalone program and a library.</p> <p>homepage: http://users.wfu.edu/natalie/papers/pwpaw/man.html</p>    version toolchain     <code>4.1.0.5</code> <code>intel/2018b</code>   <code>4.1.0.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#atools","title":"atools","text":"<p>Tools to make using job arrays a lot more convenient.</p> <p>homepage: https://github.com/gjbex/atools</p>    version versionsuffix toolchain     <code>1.4.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.4.6</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>   <code>1.4.8</code> <code>-Python-2.7.18</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.5.1</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#atropos","title":"atropos","text":"<p>Atropos is tool for specific, sensitive, and speedy trimming of NGS reads. </p> <p>homepage: https://atropos.readthedocs.io</p>    version versionsuffix toolchain     <code>1.1.21</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#atsas","title":"ATSAS","text":"<p>ATSAS is a program suite for small-angle scattering data analysis from biological macromolecules.</p> <p>homepage: http://www.embl-hamburg.de/ExternalInfo/Research/Sax/software.html</p>    version versionsuffix toolchain     <code>2.5.1-1</code> <code>.el6.x86_64</code> <code>system</code>   <code>2.5.1-1</code> <code>.sl5.x86_64</code> <code>system</code>   <code>2.7.1-1</code> <code>.el7.x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#attr","title":"attr","text":"<p>Commands for Manipulating Filesystem Extended Attributes</p> <p>homepage: https://savannah.nongnu.org/projects/attr</p>    version toolchain     <code>2.4.47</code> <code>GCCcore/8.2.0</code>   <code>2.4.48</code> <code>GCCcore/9.3.0</code>   <code>2.5.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#attrdict","title":"attrdict","text":"<p>AttrDict is a Python library that provides mapping objects that allow their elements  to be accessed both as keys and as attributes.</p> <p>homepage: https://github.com/bcj/AttrDict</p>    version versionsuffix toolchain     <code>2.0.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#attrdict3","title":"attrdict3","text":"<p>AttrDict is a Python library that provides mapping objects that allow their elements  to be accessed both as keys and as attributes.</p> <p>homepage: https://github.com/pirofti/AttrDict3</p>    version toolchain     <code>2.0.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#augur","title":"augur","text":"<p>Pipeline components for real-time phylodynamic analysis</p> <p>homepage: https://github.com/nextstrain/augur</p>    version versionsuffix toolchain     <code>7.0.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#augustus","title":"AUGUSTUS","text":"<p>AUGUSTUS is a program that predicts genes in eukaryotic genomic sequences</p> <p>homepage: https://bioinf.uni-greifswald.de/augustus/</p>    version versionsuffix toolchain     <code>3.2.3</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.3</code>  <code>foss/2018a</code>   <code>3.3.2</code>  <code>intel/2019a</code>   <code>3.3.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.3.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.3.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>3.3.3</code>  <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.4.0</code>  <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#austin","title":"Austin","text":"<p>Austin is a Python frame stack sampler for CPython written in pure C.</p> <p>homepage: https://github.com/P403n1x87/austin</p>    version toolchain     <code>3.2.0</code> <code>GCCcore/11.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#auto-07p","title":"AUTO-07p","text":"<p>AUTO is a publicly available software for continuation and bifurcation problems in ordinary differential equations originally written in 1980 and widely used in the dynamical systems community.</p> <p>homepage: https://github.com/auto-07p</p>    version toolchain     <code>0.9.3</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#autoconf","title":"Autoconf","text":"<p>Autoconf is an extensible package of M4 macros that produce shell scripts  to automatically configure software source code packages. These scripts can adapt the  packages to many kinds of UNIX-like systems without manual user intervention. Autoconf  creates a configuration script for a package from a template file that lists the  operating system features that the package can use, in the form of M4 macro calls.</p> <p>homepage: https://www.gnu.org/software/autoconf/</p>    version toolchain     <code>2.68</code> <code>foss/2016b</code>   <code>2.69</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>GNU/5.1.0-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>2.71</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#autoconf-archive","title":"Autoconf-archive","text":"<p>The GNU Autoconf Archive is a collection of more than 500 macros for GNU Autoconf that have been contributed as free software by friendly supporters of the cause from all over the Internet. Every single one of those macros can be re-used without imposing any restrictions whatsoever on the licensing of the generated configure script. In particular, it is possible to use all those macros in configure scripts that are meant for non-free software. This policy is unusual for a Free Software Foundation project. The FSF firmly believes that software ought to be free, and software licenses like the GPL are specifically designed to ensure that derivative work based on free software must be free as well. In case of Autoconf, however, an exception has been made, because Autoconf is at such a pivotal position in the software development tool chain that the benefits from having this tool available as widely as possible outweigh the disadvantage that some authors may choose to use it, too, for proprietary software. </p> <p>homepage: https://www.gnu.org/software/autoconf-archive</p>    version toolchain     <code>2019.01.06</code> <code>GCC/8.2.0-2.31.1</code>   <code>2021.02.19</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#autodock","title":"AutoDock","text":"<p>AutoDock is a suite of automated docking tools. It is designed to  predict how small molecules, such as substrates or drug candidates, bind to  a receptor of known 3D structure.</p> <p>homepage: http://autodock.scripps.edu/</p>    version toolchain     <code>4.2.5.1</code> <code>GCC/5.2.0</code>   <code>4.2.6</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#autodock-gpu","title":"AutoDock-GPU","text":"<p>OpenCL and Cuda accelerated version of AutoDock. It leverages its embarrasingly parallelizable LGA by processing ligand-receptor poses in parallel over multiple compute units. AutoDock is a suite of automated docking tools. It is designed to predict how small molecules, such as substrates or drug candidates, bind to a receptor of known 3D structure.</p> <p>homepage: https://github.com/ccsb-scripps/AutoDock-GPU</p>    version versionsuffix toolchain     <code>1.5.3</code> <code>-CUDA-11.3.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#autodock-vina","title":"AutoDock-Vina","text":"<p>AutoDock Vina is an open-source program for doing molecular docking.</p> <p>homepage: https://vina.scripps.edu/</p>    version versionsuffix toolchain     <code>1.1.2</code> <code>-linux_x86</code> <code>system</code>   <code>1.2.3</code>  <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#autogenes","title":"AutoGeneS","text":"<p>AutoGeneS automatically extracts informative genes and reveals the cellular heterogeneity of bulk RNA samples.</p> <p>homepage: https://github.com/theislab/AutoGeneS</p>    version toolchain     <code>1.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#autogrid","title":"AutoGrid","text":"<p>AutoDock is a suite of automated docking tools. It is designed to   predict how small molecules, such as substrates or drug candidates, bind to   a receptor of known 3D structure.</p> <p>homepage: http://autodock.scripps.edu/</p>    version toolchain     <code>4.2.5.1</code> <code>GCC/5.2.0</code>"},{"location":"version-specific/supported-software/#automake","title":"Automake","text":"<p>Automake: GNU Standards-compliant Makefile generator</p> <p>homepage: https://www.gnu.org/software/automake/automake.html</p>    version toolchain     <code>1.11.3</code> <code>foss/2016b</code>   <code>1.14</code> <code>GCC/4.8.2</code>, <code>intel/2016a</code>   <code>1.14.1</code> <code>GCC/4.8.2</code>   <code>1.15</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>GNU/5.1.0-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>1.15.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>   <code>1.16.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.16.2</code> <code>GCCcore/10.2.0</code>   <code>1.16.3</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>   <code>1.16.4</code> <code>GCCcore/11.2.0</code>   <code>1.16.5</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#automap","title":"AutoMap","text":"<p>Tool to find regions of homozygosity (ROHs) from sequencing data.</p> <p>homepage: https://github.com/mquinodo/AutoMap</p>    version versionsuffix toolchain     <code>1.0</code> <code>-20200324</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#autopep8","title":"autopep8","text":"<p>A tool that automatically formats Python code to conform to the PEP 8 style guide.</p> <p>homepage: https://github.com/hhatto/autopep8</p>    version versionsuffix toolchain     <code>1.4.4</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#autotools","title":"Autotools","text":"<p>This bundle collect the standard GNU build tools: Autoconf, Automake  and libtool </p> <p>homepage: https://autotools.io</p>    version toolchain     <code>20150119</code> <code>GCC/4.9.2</code>   <code>20150215</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>GNU/5.1.0-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>20170619</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>   <code>20180311</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>20200321</code> <code>GCCcore/10.2.0</code>   <code>20210128</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>   <code>20210726</code> <code>GCCcore/11.2.0</code>   <code>20220317</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#avogadro2","title":"Avogadro2","text":"<p>Avogadro is an advanced molecule editor and visualizer designed for cross-platform      use in computational chemistry, molecular modeling, bioinformatics, materials science,      and related areas. </p> <p>homepage: https://two.avogadro.cc/index.html</p>    version versionsuffix toolchain     <code>1.97.0</code> <code>-linux-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#awscli","title":"awscli","text":"<p>Universal Command Line Environment for AWS</p> <p>homepage: https://pypi.python.org/pypi/awscli</p>    version versionsuffix toolchain     <code>1.11.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.11.56</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.16.290</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.17.7</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.18.89</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>2.0.55</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#b","title":"B","text":"<p>BabelStream - babl - Bader - BAGEL - BAli-Phy - bam-readcount - Bambi - bamFilters - BAMM - BamM - BAMSurgeon - bamtofastq - BamTools - BamUtil - Bandage - barrnap - basemap - Bash - bashplotlib - bat - BatMeth2 - BayesAss - BayeScan - BayeScEnv - BayesTraits - Bazel - bbcp - bbFTP - BBMap - bc - BCALM - bcbio-gff - BCEL - BCFtools - bcgTree - bcl-convert - bcl2fastq2 - bcolz - BDBag - Beagle - beagle-lib - Beast - BeautifulSoup - BEDOPS - BEDTools - BEEF - behave - BerkeleyGW - BFAST - BFC - bgen - bgen-reader - bibtexparser - BiG-SCAPE - BigDFT - BinSanity - binutils - Bio-DB-HTS - Bio-EUtilities - Bio-SamTools - Bio-SearchIO-hmmer - bioawk - biobambam2 - biogeme - biom-format - biomart-perl - BioPerl - BioPP - Biopython - BioServices - BirdNET - biscuit - Bismark - Bison - bitarray - BLACS - BLASR - blasr_libcpp - BLAST - BLAST+ - BLAT - Blender - BLIS - Blitz++ - BlobTools - Blosc - Blosc2 - BLT - bmtagger - bnpy - BOINC - bokeh - BoltzTraP - Bonito - Bonmin - Bonnie++ - Boost - Boost.MPI - Boost.Python - boost_histogram - boto3 - Bottleneck - Bowtie - Bowtie2 - Bpipe - bpp - bpytop - Bracken - BRAKER - BreakDancer - breseq - Brotli - Brotli-python - Brunsli - bsddb3 - BSMAPz - Bsoft - BSseeker2 - BuDDy - BUFRLIB - buildenv - buildingspy - Bullet - BUSCO - BUStools - BWA - bwa-meth - bwakit - bwidget - BWISE - bx-python - BXH_XCEDE_TOOLS - byacc - byobu - bzip2</p>"},{"location":"version-specific/supported-software/#babelstream","title":"BabelStream","text":"<p>STREAM, for lots of devices written in many programming models</p> <p>homepage: https://uob-hpc.github.io/BabelStream</p>    version versionsuffix toolchain     <code>3.4</code> <code>-omp</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#babl","title":"babl","text":"<p>babl is pixel encoding and color space conversion engine in C</p> <p>homepage: https://www.gegl.org/babl</p>    version toolchain     <code>0.1.86</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#bader","title":"Bader","text":"<p>A fast algorithm for doing Bader's analysis on a charge density grid.</p> <p>homepage: http://theory.cm.utexas.edu/henkelman/code/bader/</p>    version toolchain     <code>1.02</code> <code>intel/2018a</code>   <code>1.03</code> <code>intel/2018b</code>   <code>1.04</code> <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#bagel","title":"BAGEL","text":"<p>BAGEL (Brilliantly Advanced General Electronic-structure Library) is a parallel electronic-structure program.</p> <p>homepage: http://www.nubakery.org</p>    version toolchain     <code>1.1.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#bali-phy","title":"BAli-Phy","text":"<p>BAli-Phy estimates multiple sequence alignments and evolutionary trees from DNA, amino acid,  or codon sequences.</p> <p>homepage: http://www.bali-phy.org/</p>    version toolchain     <code>3.6.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#bam-readcount","title":"bam-readcount","text":"<p>Count DNA sequence reads in BAM files</p> <p>homepage: https://github.com/genome/bam-readcount</p>    version toolchain     <code>0.8.0</code> <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#bambi","title":"Bambi","text":"<p>Bambi is a high-level Bayesian model-building interface written in Python. It works with the probabilistic programming frameworks PyMC3 and is designed to make it extremely easy to fit Bayesian mixed-effects models common in biology, social sciences and other disciplines.</p> <p>homepage: https://bambinos.github.io/bambi</p>    version toolchain     <code>0.7.1</code> <code>foss/2021b</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#bamfilters","title":"bamFilters","text":"<p>A utility tool to filter alignments from bam files,  using identity percent, low complexity and read coverage.</p> <p>homepage: https://github.com/institut-de-genomique/bamFilters</p>    version toolchain     <code>2022-06-30</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#bamm","title":"BAMM","text":"<p>BAMM is oriented entirely towards detecting and quantifying heterogeneity in evolutionary rates.  It uses reversible jump Markov chain Monte Carlo to automatically explore a vast universe of candidate models of  lineage diversification and trait evolution. </p> <p>homepage: http://bamm-project.org/</p>    version toolchain     <code>2.5.0</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#bamm_1","title":"BamM","text":"<p>BamM is a c library, wrapped in python, that parses BAM files </p> <p>homepage: http://ecogenomics.github.io/BamM/</p>    version versionsuffix toolchain     <code>1.7.3</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.7.3</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#bamsurgeon","title":"BAMSurgeon","text":"<p>Tools for adding mutations to existing .bam files, used for testing mutation callers</p> <p>homepage: https://github.com/adamewing/bamsurgeon</p>    version versionsuffix toolchain     <code>1.2</code> <code>-Python-2.7.16</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#bamtofastq","title":"bamtofastq","text":"<p>Convert 10x BAM files to the original FASTQs compatible with 10x pipelines.</p> <p>homepage: https://github.com/10XGenomics/bamtofastq</p>    version toolchain     <code>1.4.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#bamtools","title":"BamTools","text":"<p>BamTools provides both a programmer's API and an end-user's toolkit for handling BAM files.</p> <p>homepage: https://github.com/pezmaster31/bamtools</p>    version toolchain     <code>2.4.0</code> <code>foss/2016b</code>   <code>2.4.1</code> <code>intel/2017a</code>   <code>2.5.0</code> <code>foss/2016b</code>, <code>intel/2017b</code>   <code>2.5.1</code> <code>GCC/10.2.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>, <code>iccifort/2020.4.304</code>, <code>intel/2017b</code>, <code>intel/2018b</code>   <code>2.5.2</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#bamutil","title":"BamUtil","text":"<p>BamUtil is a repository that contains several programs   that perform operations on SAM/BAM files. All of these programs   are built into a single executable, bam.</p> <p>homepage: http://genome.sph.umich.edu/wiki/BamUtil</p>    version toolchain     <code>1.0.13</code> <code>intel/2016b</code>   <code>1.0.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#bandage","title":"Bandage","text":"<p>Bandage is a program for visualising de novo assembly graphs</p> <p>homepage: http://rrwick.github.io/Bandage</p>    version versionsuffix toolchain     <code>0.8.1</code> <code>_Centos</code> <code>system</code>   <code>0.8.1</code> <code>_Ubuntu</code> <code>system</code>   <code>0.9.0</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#barrnap","title":"barrnap","text":"<p>Barrnap (BAsic Rapid Ribosomal RNA Predictor) predicts the location of ribosomal RNA genes in genomes.</p> <p>homepage: https://github.com/tseemann/barrnap</p>    version toolchain     <code>0.9</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>gompi/2020b</code>, <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#basemap","title":"basemap","text":"<p>The matplotlib basemap toolkit is a library for plotting  2D data on maps in Python</p> <p>homepage: https://matplotlib.org/basemap/</p>    version versionsuffix toolchain     <code>1.0.7</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.0.7</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.0.7</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.2.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.2.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.3.6</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#bash","title":"Bash","text":"<p>Bash is an sh-compatible command language interpreter that executes commands    read from the standard input or from a file.  Bash also incorporates useful features from the    Korn and C shells (ksh and csh).</p> <p>homepage: http://www.gnu.org/software/bash</p>    version toolchain     <code>4.3</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#bashplotlib","title":"bashplotlib","text":"<p>bashplotlib is a python package and command line tool for making basic plots in the terminal.  It's a quick way to visualize data when you don't have a GUI.</p> <p>homepage: https://github.com/glamp/bashplotlib</p>    version toolchain     <code>0.6.5</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#bat","title":"bat","text":"<p>The BAT Python package supports the processing and analysis of Bro data with Pandas, scikit-learn, and Spark</p> <p>homepage: https://pypi.python.org/pypi/bat</p>    version versionsuffix toolchain     <code>0.3.3</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#batmeth2","title":"BatMeth2","text":"<p>An Integrated Package for Bisulfite DNA Methylation Data Analysis with Indel-sensitive Mapping.</p> <p>homepage: https://github.com/GuoliangLi-HZAU/BatMeth2</p>    version toolchain     <code>2.1</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#bayesass","title":"BayesAss","text":"<p>BayesAss: Bayesian Inference of Recent Migration Using Multilocus Genotypes</p> <p>homepage: http://www.rannala.org/?page_id=245</p>    version toolchain     <code>3.0.4</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#bayescan","title":"BayeScan","text":"<p>BayeScan aims at identifying candidate loci under natural selection from genetic data,  using differences in allele frequencies between populations.</p> <p>homepage: http://cmpg.unibe.ch/software/BayeScan/</p>    version toolchain     <code>2.1</code> <code>foss/2016a</code>, <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#bayescenv","title":"BayeScEnv","text":"<p>BayeScEnv is a Fst-based, genome-scan method that uses environmental variables to detect local adaptation.</p> <p>homepage: https://github.com/devillemereuil/bayescenv</p>    version toolchain     <code>1.1</code> <code>GCC/8.3.0</code>, <code>foss/2016a</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#bayestraits","title":"BayesTraits","text":"<p>BayesTraits is a computer package for performing analyses of trait   evolution among groups of species for which a phylogeny or sample of phylogenies is   available. This new package incoporates our earlier and separate programes Multistate,   Discrete and Continuous. BayesTraits can be applied to the analysis of traits that adopt   a finite number of discrete states, or to the analysis of continuously varying traits.   Hypotheses can be tested about models of evolution, about ancestral states and about   correlations among pairs of traits. </p> <p>homepage: http://www.evolution.reading.ac.uk/BayesTraitsV1.html</p>    version versionsuffix toolchain     <code>1.0-linux32</code>  <code>system</code>   <code>2.0</code> <code>-Beta-Linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#bazel","title":"Bazel","text":"<p>Bazel is a build tool that builds code quickly and reliably. It is used to build the majority of Google's software.</p> <p>homepage: https://bazel.io/</p>    version versionsuffix toolchain     <code>0.4.4</code>  <code>system</code>   <code>0.7.0</code>  <code>GCCcore/6.4.0</code>   <code>0.10.0</code>  <code>GCCcore/6.4.0</code>   <code>0.11.0</code>  <code>GCCcore/6.4.0</code>   <code>0.11.1</code>  <code>GCCcore/6.4.0</code>   <code>0.12.0</code>  <code>GCCcore/6.4.0</code>   <code>0.16.0</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>0.18.0</code>  <code>GCCcore/7.3.0</code>   <code>0.20.0</code>  <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>0.25.2</code>  <code>GCCcore/8.2.0</code>   <code>0.26.1</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.29.1</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.29.1</code> <code>-Java-1.8</code> <code>GCCcore/9.3.0</code>   <code>1.1.0</code>  <code>GCCcore/8.3.0</code>   <code>2.0.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.4.1</code>  <code>GCCcore/8.3.0</code>   <code>3.6.0</code>  <code>GCCcore/9.3.0</code>   <code>3.7.1</code>  <code>GCCcore/8.3.0</code>   <code>3.7.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>   <code>4.2.2</code>  <code>GCCcore/11.2.0</code>   <code>5.1.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#bbcp","title":"bbcp","text":"<p>BBCP is an alternative to Gridftp when transferring large amounts of data,  capable of breaking up your transfer into multiple simultaneous transferring streams,  thereby transferring data much faster than single-streaming utilities such as SCP and SFTP.  See details at http://pcbunn.cithep.caltech.edu/bbcp/using_bbcp.htm  or http://www.nics.tennessee.edu/computing-resources/data-transfer/bbcp</p> <p>homepage: http://www.slac.stanford.edu/~abh/bbcp/</p>    version versionsuffix toolchain     <code>12.01.30.00.0</code> <code>-amd64_linux26</code> <code>system</code>"},{"location":"version-specific/supported-software/#bbftp","title":"bbFTP","text":"<p>bbFTP is a file transfer software. It implements its own transfer protocol,   which is optimized for large files (larger than 2GB) and secure as it does not read the   password in a file and encrypts the connection information. bbFTP main features are:   * Encoded username and password at connection * SSH and Certificate authentication modules   * Multi-stream transfer * Big windows as defined in RFC1323 * On-the-fly data compression   * Automatic retry * Customizable time-outs * Transfer simulation   * AFS authentication integration * RFIO interface</p> <p>homepage: https://software.in2p3.fr/bbftp/</p>    version toolchain     <code>3.2.1</code> <code>GCCcore/9.3.0</code>, <code>intel/2016a</code>, <code>system</code>"},{"location":"version-specific/supported-software/#bbmap","title":"BBMap","text":"<p>BBMap short read aligner, and other bioinformatic tools.</p> <p>homepage: https://sourceforge.net/projects/bbmap/</p>    version versionsuffix toolchain     <code>36.62</code> <code>-Java-1.8.0_112</code> <code>intel/2016b</code>   <code>37.93</code>  <code>foss/2018a</code>, <code>intel/2018a</code>   <code>38.26</code>  <code>foss/2018b</code>   <code>38.50b</code>  <code>GCC/8.2.0-2.31.1</code>   <code>38.76</code>  <code>GCC/8.2.0-2.31.1</code>   <code>38.79</code>  <code>GCC/8.3.0</code>   <code>38.87</code>  <code>iccifort/2020.1.217</code>   <code>38.90</code>  <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>38.96</code>  <code>GCC/10.3.0</code>   <code>38.98</code>  <code>GCC/11.2.0</code>   <code>39.01</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#bc","title":"bc","text":"<p>bc is an arbitrary precision numeric processing language.</p> <p>homepage: https://www.gnu.org/software/bc/</p>    version toolchain     <code>1.06.95</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#bcalm","title":"BCALM","text":"<p>de Bruijn graph compaction in low memory</p> <p>homepage: https://github.com/GATB/bcalm</p>    version toolchain     <code>2.2.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#bcbio-gff","title":"bcbio-gff","text":"<p>Read and write Generic Feature Format (GFF) with Biopython integration. </p> <p>homepage: https://github.com/chapmanb/bcbb/tree/master/gff</p>    version versionsuffix toolchain     <code>0.6.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.6.7</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#bcel","title":"BCEL","text":"<p>The Byte Code Engineering Library (Apache Commons BCEL\u2122) is intended to give  users a convenient way to analyze, create, and manipulate (binary) Java class  files (those ending with .class). </p> <p>homepage: https://commons.apache.org/proper/commons-bcel/</p>    version versionsuffix toolchain     <code>5.2</code> <code>-Java-1.8</code> <code>system</code>   <code>6.5.0</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#bcftools","title":"BCFtools","text":"<p>Samtools is a suite of programs for interacting with high-throughput sequencing data.  BCFtools - Reading/writing BCF2/VCF/gVCF files and calling/filtering/summarising SNP and short indel sequence  variants</p> <p>homepage: http://www.htslib.org/</p>    version toolchain     <code>1.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3.1</code> <code>foss/2016b</code>   <code>1.6</code> <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.8</code> <code>GCC/6.4.0-2.28</code>   <code>1.9</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>   <code>1.10.2</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.5.281</code>   <code>1.11</code> <code>GCC/10.2.0</code>   <code>1.12</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/9.3.0</code>   <code>1.14</code> <code>GCC/11.2.0</code>   <code>1.15.1</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#bcgtree","title":"bcgTree","text":"<p>Automatized phylogenetic tree building from bacterial core genomes.</p> <p>homepage: https://github.com/molbiodiv/bcgTree</p>    version versionsuffix toolchain     <code>1.0.10</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>1.1.0</code> <code>-Perl-5.28.0</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#bcl-convert","title":"bcl-convert","text":"<p>The Illumina BCL Convert v4.0 is a standalone local software app that converts the  Binary Base Call (BCL) files produced by Illumina sequencing systems to FASTQ files.</p> <p>homepage: https://support.illumina.com/sequencing/sequencing_software/bcl-convert.html</p>    version versionsuffix toolchain     <code>4.0.3-2</code> <code>el7.x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#bcl2fastq2","title":"bcl2fastq2","text":"<p>bcl2fastq Conversion Software both demultiplexes data and converts BCL files generated by  Illumina sequencing systems to standard FASTQ file formats for downstream analysis.</p> <p>homepage: https://support.illumina.com/sequencing/sequencing_software/bcl2fastq-conversion-software.html</p>    version versionsuffix toolchain     <code>2.19.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.20.0</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018b</code>, <code>intel/2019a</code>   <code>2.20.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.20.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#bcolz","title":"bcolz","text":"<p>bcolz provides columnar, chunked data containers that can be compressed either in-memory and on-disk.  Column storage allows for efficiently querying tables, as well as for cheap column addition and removal.  It is based on NumPy, and uses it as the standard data container to communicate with bcolz objects,  but it also comes with support for import/export facilities to/from HDF5/PyTables tables and pandas dataframes.</p> <p>homepage: https://bcolz.blosc.org/en/latest/</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>1.2.1</code>  <code>foss/2020b</code>   <code>1.2.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#bdbag","title":"BDBag","text":"<p>The bdbag utilities are a collection of software programs for working with BagIt packages that conform to the Bagit and Bagit/RO profiles.</p> <p>homepage: https://github.com/fair-research/bdbag</p>    version versionsuffix toolchain     <code>1.4.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.4.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.6.3</code>  <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#beagle","title":"Beagle","text":"<p>Beagle is a software package for phasing genotypes and for imputing  ungenotyped markers.</p> <p>homepage: https://faculty.washington.edu/browning/beagle/beagle.html</p>    version versionsuffix toolchain     <code>5.4.22Jul22.46e</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#beagle-lib","title":"beagle-lib","text":"<p>beagle-lib is a high-performance library that can perform the core calculations at the heart of most  Bayesian and Maximum Likelihood phylogenetics packages.</p> <p>homepage: https://github.com/beagle-dev/beagle-lib</p>    version versionsuffix toolchain     <code>2.1.2</code>  <code>foss/2016a</code>, <code>foss/2017a</code>   <code>3.0.1</code>  <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.0.2</code>  <code>foss/2018b</code>   <code>3.0.2</code> <code>-CUDA-9.2.88</code> <code>foss/2018b</code>   <code>3.1.2</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/9.3.0</code>, <code>gcccuda/2019b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#beast","title":"Beast","text":"<p>BEAST is a cross-platform program for Bayesian MCMC analysis of molecular   sequences. It is entirely orientated towards rooted, time-measured phylogenies inferred using   strict or relaxed molecular clock models. It can be used as a method of reconstructing phylogenies   but is also a framework for testing evolutionary hypotheses without conditioning on a single   tree topology. BEAST uses MCMC to average over tree space, so that each tree is weighted   proportional to its posterior probability. </p> <p>homepage: http://beast2.org</p>    version toolchain     <code>1.8.4</code> <code>system</code>   <code>1.10.1</code> <code>intel/2018a</code>   <code>1.10.4</code> <code>GCC/10.2.0</code>, <code>GCC/8.2.0-2.31.1</code>   <code>2.4.0</code> <code>foss/2016a</code>   <code>2.4.7</code> <code>foss/2017a</code>   <code>2.5.0</code> <code>foss/2018a</code>   <code>2.5.1</code> <code>foss/2018b</code>   <code>2.5.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>2.6.3</code> <code>gcccuda/2019b</code>   <code>2.6.4</code> <code>GCC/10.2.0</code>   <code>2.6.7</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#beautifulsoup","title":"BeautifulSoup","text":"<p>Beautiful Soup is a Python library designed for quick turnaround projects like screen-scraping.</p> <p>homepage: https://www.crummy.com/software/BeautifulSoup</p>    version versionsuffix toolchain     <code>4.6.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>4.6.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.7.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>4.8.0</code>  <code>GCCcore/8.2.0</code>   <code>4.9.1</code>  <code>GCCcore/8.3.0</code>   <code>4.9.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>4.9.3</code>  <code>GCCcore/10.2.0</code>   <code>4.10.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#bedops","title":"BEDOPS","text":"<p>BEDOPS is an open-source command-line toolkit that performs highly efficient and  scalable Boolean and other set operations, statistical calculations, archiving, conversion and  other management of genomic data of arbitrary scale. Tasks can be easily split by chromosome for  distributing whole-genome analyses across a computational cluster.</p> <p>homepage: http://bedops.readthedocs.io/en/latest/index.html</p>    version toolchain     <code>2.4.1</code> <code>GCC/4.8.4</code>   <code>2.4.2</code> <code>GCC/4.8.2</code>   <code>2.4.20</code> <code>system</code>   <code>2.4.26</code> <code>system</code>   <code>2.4.30</code> <code>foss/2016b</code>   <code>2.4.32</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.4.35</code> <code>foss/2018b</code>   <code>2.4.41</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#bedtools","title":"BEDTools","text":"<p>BEDTools: a powerful toolset for genome arithmetic. The BEDTools utilities allow one to address common genomics tasks such as finding feature overlaps and computing coverage. The utilities are largely based on four widely-used file formats: BED, GFF/GTF, VCF, and SAM/BAM.</p> <p>homepage: https://bedtools.readthedocs.io/</p>    version toolchain     <code>2.25.0</code> <code>foss/2016a</code>   <code>2.26.0</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.27.1</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>2.28.0</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.29.2</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>   <code>2.30.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>, <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#beef","title":"BEEF","text":"<p>BEEF is a library-based implementation of the Bayesian Error Estimation Functional, suitable for linking against by Fortran- or C-based DFT codes. A description of BEEF can be found at http://dx.doi.org/10.1103/PhysRevB.85.235149.</p> <p>homepage: https://confluence.slac.stanford.edu/display/SUNCAT/BEEF+Functional+Software</p>    version toolchain     <code>0.1.1</code> <code>iccifort/2019.5.281</code>, <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#behave","title":"behave","text":"<p>behave: Behavior-driven development (or BDD) is an agile software development technique that encourages collaboration between developers, QA and non-technical or business participants in a software project.</p> <p>homepage: http://pythonhosted.org/behave</p>    version versionsuffix toolchain     <code>1.2.5</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.2.6</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#berkeleygw","title":"BerkeleyGW","text":"<p>The BerkeleyGW Package is a set of computer codes that calculates the quasiparticle  properties and the optical responses of a large variety of materials from bulk periodic crystals to  nanostructures such as slabs, wires and molecules.</p> <p>homepage: https://www.berkeleygw.org</p>    version versionsuffix toolchain     <code>1.0.6</code>  <code>intel/2016.02-GCC-4.9</code>   <code>1.1-beta2</code>  <code>intel/2016.02-GCC-4.9</code>   <code>1.2.0</code>  <code>intel/2017a</code>, <code>intel/2018a</code>   <code>2.0.0</code>  <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.0.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#bfast","title":"BFAST","text":"<p>BFAST facilitates the fast and accurate mapping of short reads to reference sequences.  Some advantages of BFAST include:  1) Speed: enables billions of short reads to be mapped quickly.   2) Accuracy: A priori probabilities for mapping reads with defined set of variants.   3) An easy way to measurably tune accuracy at the expense of speed.</p> <p>homepage: http://bfast.sourceforge.net/</p>    version toolchain     <code>0.7.0a</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#bfc","title":"BFC","text":"<p>BFC is a standalone high-performance tool for correcting sequencing errors from Illumina sequencing data. It is specifically designed for high-coverage whole-genome human data, though also performs well for small genomes.</p> <p>homepage: https://github.com/lh3/bfc</p>    version toolchain     <code>1</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#bgen","title":"bgen","text":"<p>A BGEN file format reader. It fully supports the BGEN format specifications 1.2 and 1.3.</p> <p>homepage: https://github.com/limix/bgen</p>    version toolchain     <code>3.0.2</code> <code>GCCcore/7.3.0</code>   <code>3.0.3</code> <code>GCCcore/9.3.0</code>   <code>4.1.3</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#bgen-reader","title":"bgen-reader","text":"<p>A bgen file format reader. This python package is a wrapper around the bgen library, a low-memory footprint reader that efficiently reads bgen files. It fully supports the bgen format specifications: 1.2 and 1.3; as well as their optional compressed formats.</p> <p>homepage: https://github.com/limix/bgen-reader-py</p>    version versionsuffix toolchain     <code>3.0.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#bibtexparser","title":"bibtexparser","text":"<p>Bibtex parser in Python 2.7 and 3.x</p> <p>homepage: https://github.com/sciunto-org/python-bibtexparser</p>    version toolchain     <code>1.1.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#big-scape","title":"BiG-SCAPE","text":"<p>BiG-SCAPE and CORASON provide a set of tools to explore the diversity of biosynthetic gene clusters  (BGCs) across large numbers of genomes, by constructing BGC sequence similarity networks, grouping BGCs into gene  cluster families, and exploring gene cluster diversity linked to enzyme phylogenies.</p> <p>homepage: https://bigscape-corason.secondarymetabolites.org/index.html</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#bigdft","title":"BigDFT","text":"<p>BigDFT: electronic structure calculation based on Daubechies wavelets. bigdft-suite is a set of different packages to run bigdft.</p> <p>homepage: https://gitlab.com/l_sim/bigdft-suite</p>    version toolchain     <code>1.9.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#binsanity","title":"BinSanity","text":"<p>BinSanity contains a suite a scripts designed to cluster contigs generated from metagenomic assembly into putative genomes.</p> <p>homepage: https://github.com/edgraham/BinSanity/wiki</p>    version versionsuffix toolchain     <code>0.3.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#binutils","title":"binutils","text":"<p>binutils: GNU binary utilities</p> <p>homepage: https://directory.fsf.org/project/binutils/</p>    version toolchain     <code>2.25</code> <code>GCC/4.9.2</code>, <code>GCC/4.9.2-binutils-2.25</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-binutils-2.25</code>, <code>GCC/5.1.0-binutils-2.25</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/4.9.4</code>, <code>system</code>   <code>2.25.1</code> <code>system</code>   <code>2.26</code> <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/5.5.0</code>, <code>GCCcore/6.3.0</code>, <code>system</code>   <code>2.27</code> <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>system</code>   <code>2.28</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.1.0</code>, <code>system</code>   <code>2.29</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/system</code>, <code>system</code>   <code>2.30</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.1.0</code>, <code>system</code>   <code>2.31.1</code> <code>GCCcore/7.4.0</code>, <code>GCCcore/8.2.0</code>, <code>system</code>   <code>2.32</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>, <code>system</code>   <code>2.34</code> <code>GCCcore/10.1.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>2.35</code> <code>GCCcore/10.2.0</code>, <code>system</code>   <code>2.36.1</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/8.4.0</code>, <code>GCCcore/9.4.0</code>, <code>system</code>   <code>2.37</code> <code>GCCcore/11.2.0</code>, <code>system</code>   <code>2.38</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/9.5.0</code>, <code>system</code>   <code>2.39</code> <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#bio-db-hts","title":"Bio-DB-HTS","text":"<p>Read files using HTSlib including BAM/CRAM, Tabix and BCF database files</p> <p>homepage: https://metacpan.org/release/Bio-DB-HTS</p>    version versionsuffix toolchain     <code>2.11</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.11</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>2.11</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>3.01</code>  <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>   <code>3.01</code> <code>-Perl-5.28.1</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#bio-eutilities","title":"Bio-EUtilities","text":"<p>BioPerl low-level API for retrieving and storing data from NCBI eUtils</p> <p>homepage: https://github.com/bioperl/bio-eutilities</p>    version toolchain     <code>1.76</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#bio-samtools","title":"Bio-SamTools","text":"<p>This is a Perl interface to the SAMtools sequence alignment interface.</p> <p>homepage: http://search.cpan.org/~lds/Bio-SamTools/</p>    version versionsuffix toolchain     <code>1.43</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#bio-searchio-hmmer","title":"Bio-SearchIO-hmmer","text":"<p>Code to parse output from hmmsearch, hmmscan, phmmer and nhmmer, compatible with both version 2 and version 3 of the HMMER package from http://hmmer.org.</p> <p>homepage: https://metacpan.org/pod/Bio::SearchIO::hmmer3</p>    version toolchain     <code>1.7.3</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#bioawk","title":"bioawk","text":"<p>Bioawk is an extension to Brian Kernighan's awk,  adding the support of several common biological data formats,  including optionally gzip'ed BED, GFF, SAM, VCF, FASTA/Q and TAB-delimited formats with column names. </p> <p>homepage: https://github.com/lh3/bioawk</p>    version toolchain     <code>1.0</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#biobambam2","title":"biobambam2","text":"<p>Tools for processing BAM files</p> <p>homepage: https://github.com/gt1/biobambam2</p>    version toolchain     <code>2.0.87</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#biogeme","title":"biogeme","text":"<p>Biogeme is a open source Python package designed for the maximum likelihood estimation of parametric models in general, with a special emphasis on discrete choice models.</p> <p>homepage: https://pypi.python.org/pypi/biogeme</p>    version toolchain     <code>3.1.2</code> <code>foss/2021a</code>   <code>3.2.6</code> <code>foss/2022a</code>   <code>3.2.8</code> <code>foss/2021a</code>   <code>3.2.10</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#biom-format","title":"biom-format","text":"<p>The BIOM file format (canonically pronounced biome) is designed to be  a general-use format for representing biological sample by observation  contingency tables. BIOM is a recognized standard for the Earth Microbiome  Project and is a Genomics Standards Consortium supported project. </p> <p>homepage: https://biom-format.org</p>    version versionsuffix toolchain     <code>2.1.10</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.1.12</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#biomart-perl","title":"biomart-perl","text":"<p>The BioMart Perl API allows you to go a step further with BioMart   and integrate BioMart Perl Code into custom Perl scripts.</p> <p>homepage: https://useast.ensembl.org/info/data/biomart/biomart_perl_api.html</p>    version versionsuffix toolchain     <code>0.7_e6db561</code> <code>-Perl-5.26.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#bioperl","title":"BioPerl","text":"<p>Bioperl is the product of a community effort to produce Perl code which is useful in biology.  Examples include Sequence objects, Alignment objects and database searching objects.</p> <p>homepage: https://bioperl.org/</p>    version versionsuffix toolchain     <code>1.6.924</code> <code>-Perl-5.20.3</code> <code>intel/2016a</code>   <code>1.6.924</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>   <code>1.7.0</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>1.7.1</code> <code>-Perl-5.24.0</code> <code>intel/2016b</code>   <code>1.7.1</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>   <code>1.7.2</code>  <code>GCCcore/8.3.0</code>   <code>1.7.2</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.7.2</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>1.7.2</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.7.2</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>   <code>1.7.7</code>  <code>GCCcore/9.3.0</code>   <code>1.7.8</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#biopp","title":"BioPP","text":"<p>Bio++ is a set of C++ libraries for Bioinformatics, including sequence analysis, phylogenetics, molecular evolution and population genetics. Bio++ is Object Oriented and is designed to be both easy to use and computer efficient. Bio++ intends to help programmers to write computer expensive programs, by providing them a set of re-usable tools. </p> <p>homepage: https://github.com/BioPP/bpp-core</p>    version toolchain     <code>2.4.1</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#biopython","title":"Biopython","text":"<p>Biopython is a set of freely available tools for biological  computation written in Python by an international team of developers. It is  a distributed collaborative effort to develop Python libraries and  applications which address the needs of current and future work in  bioinformatics. </p> <p>homepage: https://www.biopython.org</p>    version versionsuffix toolchain     <code>1.65</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.68</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.68</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.70</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>1.70</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.70</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.70</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.71</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.71</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.72</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.72</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.73</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>   <code>1.73</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.74</code>  <code>foss/2019a</code>   <code>1.75</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>1.75</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>1.76</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>1.78</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>1.78</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.79</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#bioservices","title":"BioServices","text":"<p>Bioservices is a Python package that provides access to many Bioinformatices Web Services (e.g.,  UniProt) and a framework to easily implement Web Services wrappers (based on WSDL/SOAP or REST protocols).</p> <p>homepage: https://bioservices.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.7.9</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#birdnet","title":"BirdNET","text":"<p>BirdNET is a research platform that aims at recognizing birds by sound at scale. We support various hardware and operating systems such as Arduino microcontrollers, the Raspberry Pi,  smartphones, web browsers, workstation PCs, and even cloud services. BirdNET is a citizen science  platform as well as an analysis software for extremely large collections of audio. BirdNET aims to provide innovative tools for conservationists, biologists, and birders alike.</p> <p>homepage: https://birdnet.cornell.edu/</p>    version versionsuffix toolchain     <code>20201214</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#biscuit","title":"biscuit","text":"<p>Utilities to help analyze bisulfite-treated sequence data  </p> <p>homepage: https://github.com/zwdzwd/biscuit</p>    version toolchain     <code>0.1.4</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#bismark","title":"Bismark","text":"<p>A tool to map bisulfite converted sequence reads and determine cytosine methylation states</p> <p>homepage: https://www.bioinformatics.babraham.ac.uk/projects/bismark/</p>    version toolchain     <code>0.19.0</code> <code>intel/2017b</code>   <code>0.20.1</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.23.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#bison","title":"Bison","text":"<p>Bison is a general-purpose parser generator that converts an annotated  context-free grammar into a deterministic LR or generalized LR (GLR) parser  employing LALR(1) parser tables. </p> <p>homepage: https://www.gnu.org/software/bison</p>    version toolchain     <code>2.7</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.4</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>system</code>   <code>3.0.2</code> <code>GCC/4.8.2</code>   <code>3.0.3</code> <code>GCC/4.9.2</code>   <code>3.0.4</code> <code>GCC/4.9.2</code>, <code>GCC/4.9.2-binutils-2.25</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/4.9.3-binutils-2.25</code>, <code>GCC/5.1.0-binutils-2.25</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/4.9.4</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/5.5.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.1.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.1.0</code>, <code>GCCcore/system</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>3.0.5</code> <code>GCCcore/5.5.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.1.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/system</code>, <code>system</code>   <code>3.2.2</code> <code>GCCcore/7.4.0</code>   <code>3.3.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/8.4.0</code>, <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>, <code>system</code>   <code>3.5.2</code> <code>system</code>   <code>3.5.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>3.6.1</code> <code>GCCcore/10.1.0</code>   <code>3.7.1</code> <code>GCCcore/10.2.0</code>, <code>system</code>   <code>3.7.6</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.4.0</code>, <code>system</code>   <code>3.8.2</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/9.5.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#bitarray","title":"bitarray","text":"<p>bitarray provides an object type which efficiently represents an array of booleans</p> <p>homepage: https://github.com/ilanschnell/bitarray</p>    version versionsuffix toolchain     <code>0.8.3</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>0.8.3</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.2.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.5.3</code> <code>-Python-2.7.16</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#blacs","title":"BLACS","text":"<p>The BLACS (Basic Linear Algebra Communication Subprograms) project is  an ongoing investigation whose purpose is to create a linear algebra oriented message passing interface  that may be implemented efficiently and uniformly across a large range of distributed memory platforms.</p> <p>homepage: http://www.netlib.org/blacs/</p>    version toolchain     <code>1.1</code> <code>gmvapich2/2016a</code>"},{"location":"version-specific/supported-software/#blasr","title":"BLASR","text":"<p>The PacBio\u00ae long read aligner</p> <p>homepage: https://github.com/PacificBiosciences/blasr</p>    version toolchain     <code>2.2</code> <code>intel/2016b</code>   <code>5.3.3</code> <code>gompi/2019a</code>   <code>20170330</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#blasr_libcpp","title":"blasr_libcpp","text":"<p>Blasr_libcpp is a library used by blasr and other executables such as samtoh5, loadPulses for  analyzing PacBio sequences</p> <p>homepage: https://github.com/PacificBiosciences/blasr_libcpp</p>    version toolchain     <code>20170426</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#blast","title":"BLAST","text":"<p>Basic Local Alignment Search Tool, or BLAST, is an algorithm for comparing primary biological  sequence information, such as the amino-acid sequences of different proteins or the nucleotides of DNA sequences.</p> <p>homepage: http://blast.ncbi.nlm.nih.gov/</p>    version versionsuffix toolchain     <code>2.2.26</code> <code>-Linux_x86_64</code> <code>system</code>   <code>2.8.1</code> <code>-Linux_x86_64</code> <code>system</code>   <code>2.10.0</code> <code>-Linux_x86_64</code> <code>system</code>   <code>2.10.1</code> <code>-Linux_x86_64</code> <code>system</code>   <code>2.11.0</code> <code>-Linux_x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#blast_1","title":"BLAST+","text":"<p>Basic Local Alignment Search Tool, or BLAST, is an algorithm  for comparing primary biological sequence information, such as the amino-acid  sequences of different proteins or the nucleotides of DNA sequences.</p> <p>homepage: https://blast.ncbi.nlm.nih.gov/</p>    version versionsuffix toolchain     <code>2.2.31</code>  <code>system</code>   <code>2.3.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.6.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.6.0</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.6.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.7.1</code>  <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>2.7.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.8.1</code>  <code>foss/2018b</code>   <code>2.9.0</code>  <code>gompi/2019a</code>, <code>gompi/2019b</code>, <code>gompi/2021b</code>, <code>iimpi/2019a</code>, <code>iimpi/2019b</code>   <code>2.10.1</code>  <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>2.11.0</code>  <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>   <code>2.12.0</code>  <code>gompi/2021b</code>   <code>2.13.0</code>  <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#blat","title":"BLAT","text":"<p>BLAT on DNA is designed to quickly find sequences of 95% and greater similarity  of length 25 bases or more.</p> <p>homepage: http://genome.ucsc.edu/FAQ/FAQblat.html</p>    version toolchain     <code>3.5</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#blender","title":"Blender","text":"<p>Blender is the free and open source 3D creation suite. It supports  the entirety of the 3D pipeline-modeling, rigging, animation, simulation, rendering,  compositing and motion tracking, even video editing and game creation.</p> <p>homepage: https://www.blender.org/</p>    version versionsuffix toolchain     <code>2.77a</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>2.79</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.79b</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.79b</code> <code>-Python-3.6.6-CUDA-9.2.88</code> <code>foss/2018b</code>   <code>2.81</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.0.0</code> <code>-linux-x64</code> <code>system</code>   <code>3.1.2</code> <code>-linux-x64</code> <code>system</code>   <code>3.2.2</code> <code>-linux-x64</code> <code>system</code>   <code>3.3.1</code> <code>-linux-x86_64-CUDA-11.7.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#blis","title":"BLIS","text":"<p>AMD's fork of BLIS. BLIS is a portable software framework for instantiating high-performance BLAS-like dense linear algebra libraries.</p> <p>homepage: https://developer.amd.com/amd-cpu-libraries/blas-library/</p>    version versionsuffix toolchain     <code>0.3.2</code>  <code>GCC/7.3.0-2.30</code>   <code>0.6.0</code>  <code>GCC/8.3.0-2.32</code>   <code>0.8.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>0.8.1</code>  <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCCcore/10.3.0</code>   <code>0.9.0</code>  <code>GCC/11.3.0</code>, <code>GCC/12.2.0</code>, <code>intel-compilers/2022.1.0</code>   <code>1.2</code> <code>-amd</code> <code>GCC/7.3.0-2.30</code>   <code>2.2</code> <code>-amd</code> <code>GCCcore/9.3.0</code>   <code>3.0</code> <code>-amd</code> <code>GCCcore/10.3.0</code>   <code>3.0.1</code> <code>-amd</code> <code>GCC/11.2.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.1</code> <code>-amd</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#blitz","title":"Blitz++","text":"<p>Blitz++ is a (LGPLv3+) licensed meta-template library for array manipulation  in C++ with a speed comparable to Fortran implementations, while preserving an  object-oriented interface </p> <p>homepage: https://github.com/blitzpp/blitz</p>    version toolchain     <code>0.10</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>   <code>1.0.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#blobtools","title":"BlobTools","text":"<p>A modular command-line solution for visualisation,  quality control and taxonomic partitioning of genome datasets. </p> <p>homepage: https://blobtools.readme.io/docs</p>    version versionsuffix toolchain     <code>20180528</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#blosc","title":"Blosc","text":"<p>Blosc, an extremely fast, multi-threaded, meta-compressor library</p> <p>homepage: https://www.blosc.org/</p>    version toolchain     <code>1.11.1</code> <code>intel/2016b</code>   <code>1.12.1</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.14.2</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>   <code>1.14.4</code> <code>GCCcore/7.3.0</code>   <code>1.17.0</code> <code>GCCcore/8.2.0</code>   <code>1.17.1</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.21.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.21.1</code> <code>GCCcore/11.2.0</code>   <code>1.21.3</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#blosc2","title":"Blosc2","text":"<p>Blosc, an extremely fast, multi-threaded, meta-compressor library</p> <p>homepage: https://www.blosc.org/</p>    version toolchain     <code>2.0.3</code> <code>GCCcore/10.2.0</code>   <code>2.0.4</code> <code>GCCcore/10.3.0</code>   <code>2.4.3</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#blt","title":"BLT","text":"<p>BLT is an extension to the Tk toolkit, adding new widgets,  geometry managers, and miscellaneous commands.</p> <p>homepage: http://blt.sourceforge.net/</p>    version toolchain     <code>20181223</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#bmtagger","title":"bmtagger","text":"<p>Best Match Tagger for removing human reads from metagenomics datasets</p> <p>homepage: ftp://ftp.ncbi.nlm.nih.gov/pub/agarwala/bmtagger/</p>    version toolchain     <code>3.101</code> <code>foss/2018b</code>, <code>gompi/2019a</code>, <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#bnpy","title":"bnpy","text":"<p>Bayesian nonparametric machine learning for python provides  code for training popular clustering models on large datasets. The focus is  on Bayesian nonparametric models based on the Dirichlet process, but it also  provides parametric counterparts.</p> <p>homepage: https://github.com/bnpy/bnpy</p>    version versionsuffix toolchain     <code>0.1.6</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#boinc","title":"BOINC","text":"<p>BOINC is a program that lets you donate your idle computer time to science projects  like SETI@home, Climateprediction.net, Rosetta@home, World Community Grid, and many others.</p> <p>homepage: https://boinc.berkeley.edu</p>    version versionsuffix toolchain     <code>7.2.42</code> <code>-client</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#bokeh","title":"bokeh","text":"<p>Statistical and novel interactive HTML plots for Python</p> <p>homepage: https://github.com/bokeh/bokeh</p>    version versionsuffix toolchain     <code>0.12.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.12.3</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.12.15</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.0.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.3.4</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.4.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>2.0.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>2.2.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>2.4.1</code>  <code>foss/2021a</code>   <code>2.4.2</code>  <code>foss/2021b</code>   <code>2.4.3</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#boltztrap","title":"BoltzTraP","text":"<p>Boltzmann Transport Properties (BoltzTraP) is a program for calculating the semi-classic transport  coefficients.</p> <p>homepage: http://www.icams.de/content/departments/cmat/boltztrap/</p>    version toolchain     <code>1.2.5</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#bonito","title":"Bonito","text":"<p>Convolution Basecaller for Oxford Nanopore Reads</p> <p>homepage: https://github.com/nanoporetech/bonito</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.1.4</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.2.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.2.2</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.3.2</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.3.5</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.3.8</code>  <code>fosscuda/2020b</code>   <code>0.4.0</code>  <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#bonmin","title":"Bonmin","text":"<p>Ipopt (Interior Point OPTimizer, pronounced eye-pea-Opt) is a software package for  large-scale nonlinear optimization.</p> <p>homepage: https://coin-or.github.io/Ipopt</p>    version toolchain     <code>1.8.7</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#bonnie","title":"Bonnie++","text":"<p>Enhanced performance Test of Filesystem I/O</p> <p>homepage: https://www.coker.com.au/bonnie++</p>    version toolchain     <code>1.97</code> <code>foss/2016a</code>   <code>2.00a</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#boost","title":"Boost","text":"<p>Boost provides free peer-reviewed portable C++ source libraries.</p> <p>homepage: https://www.boost.org/</p>    version versionsuffix toolchain     <code>1.54.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.55.0</code>  <code>system</code>   <code>1.55.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.57.0</code> <code>-Python-2.7.10</code> <code>gimkl/2.11.5</code>   <code>1.58.0</code>  <code>intel/2017a</code>   <code>1.58.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.58.0</code> <code>-serial</code> <code>GCC/4.9.2</code>   <code>1.59.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.60.0</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.60.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.60.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>1.61.0</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.61.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.61.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.61.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>1.62.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.63.0</code>  <code>foss/2017a</code>   <code>1.63.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.63.0</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.63.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>1.63.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>1.64.0</code>  <code>gompi/2019a</code>, <code>gompic/2019a</code>, <code>intel/2017a</code>   <code>1.64.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.65.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.65.1</code>  <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.65.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.65.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.65.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.66.0</code>  <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>, <code>intel/2018a</code>   <code>1.66.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.66.0</code> <code>-Python-3.6.3</code> <code>intel/2018.01</code>   <code>1.66.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.66.0</code> <code>-no_mpi</code> <code>GCCcore/6.4.0</code>   <code>1.67.0</code>  <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>1.67.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>1.68.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.68.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.69.0</code>  <code>intel/2019.01</code>   <code>1.70.0</code>  <code>gompi/2019a</code>, <code>gompic/2019a</code>, <code>iimpi/2019a</code>, <code>iimpic/2019a</code>   <code>1.71.0</code>  <code>gompi/2019b</code>, <code>gompic/2019b</code>, <code>iimpi/2019b</code>, <code>iimpic/2019b</code>   <code>1.72.0</code>  <code>gompi/2020a</code>, <code>gompic/2020a</code>, <code>iimpi/2020a</code>   <code>1.72.0</code> <code>-no_mpi</code> <code>GCCcore/9.3.0</code>   <code>1.74.0</code>  <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>1.75.0</code>  <code>GCC/11.2.0</code>   <code>1.76.0</code>  <code>GCC/10.3.0</code>, <code>intel-compilers/2021.2.0</code>   <code>1.77.0</code>  <code>GCC/11.2.0</code>, <code>intel-compilers/2021.4.0</code>   <code>1.79.0</code>  <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#boostmpi","title":"Boost.MPI","text":"<p>Boost provides free peer-reviewed portable C++ source libraries.</p> <p>homepage: https://www.boost.org/</p>    version toolchain     <code>1.77.0</code> <code>gompi/2021b</code>   <code>1.79.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#boostpython","title":"Boost.Python","text":"<p>Boost.Python is a C++ library which enables seamless interoperability between C++  and the Python programming language.</p> <p>homepage: https://boostorg.github.io/python</p>    version versionsuffix toolchain     <code>1.64.0</code>  <code>gompi/2019a</code>, <code>gompic/2019a</code>   <code>1.65.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.66.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.66.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.67.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>1.67.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.70.0</code>  <code>gompi/2019a</code>, <code>gompic/2019a</code>, <code>iimpi/2019a</code>, <code>iimpic/2019a</code>   <code>1.71.0</code>  <code>gompi/2019b</code>, <code>gompic/2019b</code>, <code>iimpi/2019b</code>, <code>iimpic/2019b</code>   <code>1.72.0</code>  <code>gompi/2020a</code>, <code>gompic/2020a</code>, <code>iimpi/2020a</code>   <code>1.74.0</code>  <code>GCC/10.2.0</code>   <code>1.76.0</code>  <code>GCC/10.3.0</code>   <code>1.77.0</code>  <code>GCC/11.2.0</code>   <code>1.79.0</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#boost_histogram","title":"boost_histogram","text":"<p>Boost-histogram is a Python package providing Python bindings for Boost.Histogram.</p> <p>homepage: https://boost-histogram.readthedocs.io</p>    version toolchain     <code>1.2.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#boto3","title":"boto3","text":"<p>Boto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for Python, which allows Python developers to write software that makes use of services like Amazon S3 and Amazon EC2.</p> <p>homepage: https://github.com/boto/boto3</p>    version toolchain     <code>1.20.13</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.26.37</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#bottleneck","title":"Bottleneck","text":"<p>Fast NumPy array functions written in C</p> <p>homepage: https://kwgoodman.github.io/bottleneck-doc</p>    version versionsuffix toolchain     <code>1.2.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.3.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#bowtie","title":"Bowtie","text":"<p>Bowtie is an ultrafast, memory-efficient short read aligner.  It aligns short DNA sequences (reads) to the human genome.</p> <p>homepage: http://bowtie-bio.sourceforge.net/index.shtml</p>    version toolchain     <code>1.1.2</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>1.2.1.1</code> <code>foss/2016b</code>, <code>intel/2017b</code>   <code>1.2.2</code> <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.2.3</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>   <code>1.3.0</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>1.3.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#bowtie2","title":"Bowtie2","text":"<p>Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads  to long reference sequences. It is particularly good at aligning reads of about 50 up to 100s or 1,000s  of characters, and particularly good at aligning to relatively long (e.g. mammalian) genomes.  Bowtie 2 indexes the genome with an FM Index to keep its memory footprint small: for the human genome,  its memory footprint is typically around 3.2 GB. Bowtie 2 supports gapped, local, and paired-end alignment modes.</p> <p>homepage: https://bowtie-bio.sourceforge.net/bowtie2/index.shtml</p>    version toolchain     <code>2.2.8</code> <code>foss/2016a</code>   <code>2.2.9</code> <code>foss/2016a</code>, <code>intel/2016b</code>   <code>2.3.2</code> <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.3.3.1</code> <code>intel/2017b</code>   <code>2.3.4</code> <code>intel/2017b</code>   <code>2.3.4.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.3.4.2</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.3.4.3</code> <code>foss/2017b</code>   <code>2.3.5.1</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>   <code>2.4.1</code> <code>GCC/9.3.0</code>   <code>2.4.2</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>2.4.4</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>2.4.5</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#bpipe","title":"Bpipe","text":"<p>Bpipe - a tool for running and managing bioinformatics pipelines</p> <p>homepage: http://docs.bpipe.org/</p>    version toolchain     <code>0.9.9.2</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#bpp","title":"bpp","text":"<p>The aim of this project is to implement a versatile high-performance version of the BPP software. </p> <p>homepage: https://github.com/bpp/bpp</p>    version toolchain     <code>4.3.8</code> <code>GCC/8.3.0</code>   <code>4.4.0</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#bpytop","title":"bpytop","text":"<p>Resource monitor that shows usage and stats for processor, memory, disks, network and processes.</p> <p>homepage: https://github.com/aristocratos/bpytop/</p>    version toolchain     <code>1.0.60</code> <code>GCCcore/10.2.0</code>   <code>1.0.67</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#bracken","title":"Bracken","text":"<p>Bracken (Bayesian Reestimation of Abundance with KrakEN)  is a highly accurate statistical method that computes the abundance of  species in DNA sequences from a metagenomics sample. Braken uses the  taxonomy labels assigned by Kraken, a highly accurate metagenomics  classification algorithm, to estimate the number of reads originating  from each species present in a sample. Kraken classifies reads to the  best matching location in the taxonomic tree, but does not estimate  abundances of species. We use the Kraken database itself to derive  probabilities that describe how much sequence from each genome is  identical to other genomes in the database, and combine this information  with the assignments for a particular sample to estimate abundance at  the species level, the genus level, or above. Combined with the Kraken  classifier, Bracken produces accurate species- and genus-level abundance  estimates even when a sample contains two or more near-identical species.  NOTE: Bracken is compatible with both Kraken 1 and Kraken 2. However, the  default kmer length is different depending on the version of Kraken used.  If you use Kraken 1 defaults, specify 31 as the kmer length. If you use  Kraken 2 defaults, specify 35 as the kmer length.</p> <p>homepage: https://ccb.jhu.edu/software/bracken/</p>    version toolchain     <code>2.6.0</code> <code>GCCcore/9.3.0</code>   <code>2.6.2</code> <code>GCCcore/11.2.0</code>   <code>2.7</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#braker","title":"BRAKER","text":"<p>BRAKER is a pipeline for fully automated prediction of protein coding genes with GeneMark-ES/ET  and AUGUSTUS in novel eukaryotic genomes.</p> <p>homepage: https://github.com/Gaius-Augustus/BRAKER</p>    version versionsuffix toolchain     <code>2.1.2</code>  <code>intel/2019a</code>   <code>2.1.5</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>2.1.6</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#breakdancer","title":"BreakDancer","text":"<p>BreakDancer is a Perl/C++ package that provides genome-wide detection of structural variants from  next generation paired-end sequencing reads</p> <p>homepage: http://gmt.genome.wustl.edu/packages/breakdancer</p>    version toolchain     <code>1.4.5</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#breseq","title":"breseq","text":"<p>breseq is a computational pipeline for the analysis of short-read re-sequencing data</p> <p>homepage: https://barricklab.org/breseq</p>    version versionsuffix toolchain     <code>0.35.0</code> <code>-R-3.6.0</code> <code>intel/2019a</code>   <code>0.35.4</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>0.36.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#brotli","title":"Brotli","text":"<p>Brotli is a generic-purpose lossless compression algorithm that compresses data using a combination  of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling, with a compression ratio  comparable to the best currently available general-purpose compression methods. It is similar in speed with deflate  but offers more dense compression. The specification of the Brotli Compressed Data Format is defined in RFC 7932.</p> <p>homepage: https://github.com/google/brotli</p>    version toolchain     <code>1.0.9</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#brotli-python","title":"Brotli-python","text":"<p>Brotli is a generic-purpose lossless compression algorithm that compresses data using a combination  of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling, with a compression ratio  comparable to the best currently available general-purpose compression methods. It is similar in speed with deflate  but offers more dense compression. The specification of the Brotli Compressed Data Format is defined in RFC 7932.</p> <p>homepage: https://github.com/google/brotli</p>    version toolchain     <code>1.0.9</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#brunsli","title":"Brunsli","text":"<p>Brunsli is a lossless JPEG repacking library.</p> <p>homepage: https://github.com/google/brunsli/</p>    version toolchain     <code>0.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#bsddb3","title":"bsddb3","text":"<p>bsddb3 is a nearly complete Python binding of the Oracle/Sleepycat C API for the Database Environment, Database, Cursor, Log Cursor, Sequence and Transaction objects.</p> <p>homepage: https://pypi.org/project/bsddb3/</p>    version versionsuffix toolchain     <code>6.2.6</code>  <code>GCCcore/8.2.0</code>   <code>6.2.6</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>6.2.9</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#bsmapz","title":"BSMAPz","text":"<p>Updated and optimized fork of BSMAP. BSMAPz is a short reads mapping program for bisulfite sequencing in DNA methylation study.</p> <p>homepage: https://github.com/zyndagj/BSMAPz</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#bsoft","title":"Bsoft","text":"<p>Bsoft is a collection of programs and a platform for development of software  for image and molecular processing in structural biology. Problems in  structural biology are approached with a highly modular design, allowing fast  development of new algorithms without the burden of issues such as file I/O.  It provides an easily accessible interface, a resource that can be and has  been used in other packages. </p> <p>homepage: https://lsbr.niams.nih.gov/bsoft/</p>    version toolchain     <code>2.0.2</code> <code>foss/2017b</code>   <code>2.0.7</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#bsseeker2","title":"BSseeker2","text":"<p>BS-Seeker2 is a seamless and versatile pipeline for accurately and fast mapping the bisulfite-treated reads.</p> <p>homepage: http://pellegrini-legacy.mcdb.ucla.edu/bs_seeker2</p>    version versionsuffix toolchain     <code>2.1.8</code> <code>-Python-2.7.16</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#buddy","title":"BuDDy","text":"<p>A Binary Decision Diagram library, with many highly efficient vectorized BDD operations, dynamic  variable reordering, automated garbage collection, a C++ interface with automatic reference counting, and much  more.</p> <p>homepage: http://buddy.sourceforge.net/</p>    version toolchain     <code>2.4</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#bufrlib","title":"BUFRLIB","text":"<p>NCEP BUFRLIB software to encode or decode BUFR messages. It is not intended to be a primer on the BUFR code form itself.</p> <p>homepage: https://www.emc.ncep.noaa.gov/index.php?branch=BUFRLIB</p>    version toolchain     <code>11.3.0.2</code> <code>iccifort/2020.1.217</code>"},{"location":"version-specific/supported-software/#buildenv","title":"buildenv","text":"<p>This module sets a group of environment variables for compilers, linkers, maths libraries, etc., that  you can use to easily transition between toolchains when building your software. To query the variables being set  please use: module show  <p>homepage:     version versionsuffix toolchain     <code>default</code>  <code>FCC/4.5.0</code>, <code>Fujitsu/21.05</code>, <code>foss/2017b</code>, <code>foss/2018b</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>fosscuda/2019b</code>, <code>fosscuda/2020a</code>, <code>fosscuda/2020b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>, <code>intelcuda/2019b</code>, <code>intelcuda/2020a</code>, <code>intelcuda/2020b</code>   <code>default</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>default</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>   <code>default</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#buildingspy","title":"buildingspy","text":"<p>Python modules for automating Modelica simulations and for running unit test for the Buildings library</p> <p>homepage: https://simulationresearch.lbl.gov/modelica/buildingspy</p>    version toolchain     <code>4.0.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#bullet","title":"Bullet","text":"<p>Bullet professional 3D Game Multiphysics Library provides state  of the art collision detection, soft body and rigid body dynamics.</p> <p>homepage: http://bulletphysics.org/</p>    version toolchain     <code>2.83.7</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#busco","title":"BUSCO","text":"<p>BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs</p> <p>homepage: https://busco.ezlab.org/</p>    version versionsuffix toolchain     <code>1.22</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.0.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.0.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>4.0.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>4.0.6</code>  <code>foss/2020b</code>   <code>5.0.0</code>  <code>foss/2020b</code>   <code>5.1.2</code>  <code>foss/2020b</code>   <code>5.4.2</code>  <code>foss/2021a</code>   <code>5.4.3</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#bustools","title":"BUStools","text":"<p>bustools is a program for manipulating BUS files for single cell RNA-Seq datasets.  It can be used to error correct barcodes, collapse  UMIs, produce gene count or transcript compatibility  count matrices, and is useful for many other tasks. See the kallisto | bustools  website for examples  and instructions on how to use bustools as part of a single-cell RNA-seq workflow.</p> <p>homepage: https://github.com/BUStools/bustools</p>    version toolchain     <code>0.40.0</code> <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#bwa","title":"BWA","text":"<p>Burrows-Wheeler Aligner (BWA) is an efficient program that aligns  relatively short nucleotide sequences against a long reference sequence such as the human genome.</p> <p>homepage: http://bio-bwa.sourceforge.net/</p>    version toolchain     <code>0.7.12</code> <code>foss/2016b</code>   <code>0.7.13</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.7.15</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>0.7.16a</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>0.7.17</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>, <code>iccifort/2020.4.304</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#bwa-meth","title":"bwa-meth","text":"<p>Fast and accurante alignment of BS-Seq reads.</p> <p>homepage: https://github.com/brentp/bwa-meth</p>    version toolchain     <code>0.2.2</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#bwakit","title":"bwakit","text":"<p>Bwakit is a self-consistent installation-free package of scripts and precompiled binaries, providing an end-to-end solution to read mapping.</p> <p>homepage: https://github.com/lh3/bwa/tree/master/bwakit</p>    version versionsuffix toolchain     <code>0.7.15</code> <code>_x64-linux</code> <code>system</code>"},{"location":"version-specific/supported-software/#bwidget","title":"bwidget","text":"<p>The BWidget Toolkit is a high-level Widget Set for Tcl/Tk built using native Tcl/Tk 8.x namespaces.</p> <p>homepage: https://core.tcl-lang.org/bwidget/home</p>    version toolchain     <code>1.9.13</code> <code>GCCcore/8.2.0</code>   <code>1.9.14</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.9.15</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#bwise","title":"BWISE","text":"<p>de Bruijn Workflow using Integral information of Short pair End reads</p> <p>homepage: https://github.com/Malfoy/BWISE</p>    version versionsuffix toolchain     <code>20180820</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#bx-python","title":"bx-python","text":"<p>The bx-python project is a Python library and associated set of scripts to allow for rapid  implementation of genome scale analyses.</p> <p>homepage: https://github.com/bxlab/bx-python</p>    version versionsuffix toolchain     <code>0.7.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>0.7.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.8.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>0.8.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.8.4</code>  <code>foss/2019a</code>   <code>0.8.8</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.8.9</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.8.11</code>  <code>foss/2021a</code>   <code>0.8.13</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#bxh_xcede_tools","title":"BXH_XCEDE_TOOLS","text":"<p>A collection of data processing and image analysis  tools for data in BXH or XCEDE format. This includes data format  encapsulation/conversion, event-related analysis, QA tools, and more.  These tools form the basis of the fBIRN QA procedures and are also  distributed as part of the fBIRN Data Upload Scripts.</p> <p>homepage: http://www.nitrc.org/projects/bxh_xcede_tools/</p>    version toolchain     <code>1.11.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#byacc","title":"byacc","text":"<p>Berkeley Yacc (byacc) is generally conceded to be the best yacc variant  available.  In contrast to bison, it is written to avoid dependencies  upon a particular compiler. </p> <p>homepage: http://invisible-island.net/byacc/byacc.html</p>    version toolchain     <code>20160324</code> <code>intel/2016a</code>   <code>20160606</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>20170709</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#byobu","title":"byobu","text":"<p>Byobu is an elegant enhancement of the otherwise functional, plain, practical GNU Screen. Byobu includes an enhanced profile, configuration utilities, and system status notifications for the GNU screen window manager as well as the Tmux terminal multiplexer</p> <p>homepage: https://byobu.org</p>    version toolchain     <code>5.133</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#bzip2","title":"bzip2","text":"<p>bzip2 is a freely available, patent free, high-quality data compressor. It  typically compresses files to within 10% to 15% of the best available  techniques (the PPM family of statistical compressors), whilst being around  twice as fast at compression and six times faster at decompression. </p> <p>homepage: https://sourceware.org/bzip2</p>    version toolchain     <code>1.0.6</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>1.0.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#c","title":"C","text":"<p>c-ares - C3D - cadaver - CaDiCaL - CAFE5 - Caffe - cairo - cairomm - Calcam - Calendrical - Calib - CAMPARI - Cantera - canu - Canvas - CAP3 - CapnProto - captum - Cargo - Carma - carputils - Cartopy - CaSpER - CASTEP - CastXML - CAT-BAT - Catch2 - category_encoders - CatMAP - causallift - causalml - CaVEMan - CAVIAR - Cbc - CBLAS - ccache - CCfits - CCL - cclib - cctools - CD-HIT - CDAT - cdbfasta - CDBtools - cddlib - cDNA_Cupcake - CDO - cdo-bindings - cdsapi - cell2location - CellMix - CellRanger - CellRanger-ARC - CellRanger-ATAC - CellRank - CellTypist - Centrifuge - Cereal - CESM-deps - CFDEMcoupling - CFITSIO - cftime - CGAL - cget - Cgl - CGmapTools - CGNS - CharLS - CHARMM - charmm - CHASE - Check - check - CheckM - Cheetah - Chemaxon-Marvin - CheMPS2 - CHERAB - chewBBACA - chi2comb - Chimera - ChimPipe - Chromaprint - cicero - CIF2Cell - CIRCexplorer - CIRCexplorer2 - Circos - CIRI - CIRI-long - cisTEM - CITE-seq-Count - Clang - Clang-AOMP - Clang-Python-bindings - CLAPACK - CLEASE - CLHEP - CliMetLab - CLISP - ClonalFrameML - CLooG - CloudCompare - Clp - Clustal-Omega - ClustalW2 - Cluster-Buster - ClusterShell - CMake - CMAverse - CmdStanR - cmocean - CMSeq - CNT-ILP - CNVkit - CNVnator - Co-phylog - COBRApy - CoCoALib - CodAn - code-server - CODEX2 - Cogent - Coin - CoinUtils - colossalai - Commet - CompareM - Compress-Raw-Zlib - COMSOL - Con3F - CONCOCT - configparser - configurable-http-proxy - CONN - ConnectomeWorkbench - Control-FREEC - CoordgenLibs - Coot - core-counter - Coreutils - corner - coverage - cowsay - CP2K - CPB - CPLEX - CPPE - CppUnit - cppy - cpu_features - cram - cramtools - CrayCCE - CrayGNU - CrayIntel - CrayPGI - crb-blast - CREST - CRF++ - CRISPR-DAV - CRISPResso2 - cromwell - CrossMap - CrossTalkZ - CRPropa - Crumble - cryoCARE - cryoDRGN - CryptoMiniSat - CrystFEL - CSB - CSBDeep - CSBLAST - cscope - csvkit - ctags - ctffind - CTPL - Cube - CubeGUI - CubeLib - CubeWriter - CUDA - CUDA-Samples - CUDAcompat - CUDAcore - cuDNN - Cufflinks - CUnit - CuPy - cURL - custodian - cutadapt - cuTENSOR - CVS - CVXOPT - CVXPY - CWIPI - cwltool - cxxopts - cysignals - Cython - cytoolz - Cytoscape - cytosim - cyvcf2</p>"},{"location":"version-specific/supported-software/#c-ares","title":"c-ares","text":"<p>c-ares is a C library for asynchronous DNS requests (including name resolves)</p> <p>homepage: https://c-ares.org/</p>    version toolchain     <code>1.17.2</code> <code>GCCcore/10.3.0</code>   <code>1.18.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#c3d","title":"C3D","text":"<p>Convert3D Medical Image Processing Tool</p> <p>homepage: https://sourceforge.net/projects/c3d/</p>    version toolchain     <code>1.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cadaver","title":"cadaver","text":"<p>cadaver is a command-line WebDAV client for Unix.</p> <p>homepage: http://www.webdav.org/cadaver/</p>    version toolchain     <code>0.23.3</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#cadical","title":"CaDiCaL","text":"<p>CaDiCaL is a simplified satisfiability solver. The original goal of the development of CaDiCaL was to obtain a CDCL solver, which is easy to understand and change, while at the same time not being much slower than other state-of-the-art CDCL solvers.</p> <p>homepage: https://github.com/arminbiere/cadical</p>    version toolchain     <code>1.3.0</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#cafe5","title":"CAFE5","text":"<p>Software for Computational Analysis of gene Family Evolution  The purpose of CAFE is to analyze changes in gene family size in a way that accounts for phylogenetic history and provides a statistical foundation for evolutionary inferences. The program uses a birth and death process to model gene gain and loss across a user-specified phylogenetic tree. The distribution of family sizes generated under this model can provide a basis for assessing the significance of the observed family size differences among taxa.</p> <p>homepage: https://github.com/hahnlab/CAFE5</p>    version toolchain     <code>5.0.0</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#caffe","title":"Caffe","text":"<p>Caffe is a deep learning framework made with expression, speed,  and modularity in mind. It is developed by the Berkeley Vision  and Learning Center (BVLC) and community contributors. </p> <p>homepage: https://github.com/BVLC/caffe</p>    version versionsuffix toolchain     <code>1.0</code> <code>-CUDA-9.1.85-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>rc3</code> <code>-CUDA-7.5.18-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#cairo","title":"cairo","text":"<p>Cairo is a 2D graphics library with support for multiple output devices.  Currently supported output targets include the X Window System (via both Xlib and XCB), Quartz, Win32, image buffers,  PostScript, PDF, and SVG file output. Experimental backends include OpenGL, BeOS, OS/2, and DirectFB</p> <p>homepage: https://cairographics.org</p>    version versionsuffix toolchain     <code>1.14.6</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.14.6</code> <code>-GLib-2.48.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.14.8</code>  <code>intel/2017a</code>   <code>1.14.10</code>  <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>intel/2017b</code>   <code>1.14.12</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.16.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.17.4</code>  <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#cairomm","title":"cairomm","text":"<p>The Cairomm package provides a C++ interface to Cairo.</p> <p>homepage: http://cairographics.org</p>    version toolchain     <code>1.12.2</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#calcam","title":"Calcam","text":"<p>Calcam is a Python package providing tools for spatial calibration  of cameras, i.e. determining the mapping between pixel coordinates in an image and  real-world 3D sight lines &amp; coordinates.</p> <p>homepage: https://euratom-software.github.io/calcam</p>    version versionsuffix toolchain     <code>2.1.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.1.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#calendrical","title":"Calendrical","text":"<p>Calendrical module is for calendrical calculations.</p> <p>homepage: https://www.funaba.org/code#calendrical</p>    version versionsuffix toolchain     <code>2.0.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>2.0.2a</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>2.0.2a</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#calib","title":"Calib","text":"<p>Calib clusters paired-end reads using their barcodes and sequences. Calib is suitable for amplicon sequencing where a molecule is tagged, then PCR amplified with high depth, also known as Unique Molecule Identifier (UMI) sequencing.</p> <p>homepage: https://github.com/vpc-ccg/calib</p>    version toolchain     <code>0.3.4</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#campari","title":"CAMPARI","text":"<p>CAMPARI is a joint package for performing and analyzing molecular simulations, in particular of systems of biological relevance. It focuses on a wide availability of algorithms for (advanced) sampling and is capable of combining Monte Carlo and molecular dynamics in seamless fashion.</p> <p>homepage: http://campari.sourceforge.net/V4/index.html</p>    version toolchain     <code>4.0</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#cantera","title":"Cantera","text":"<p>Chemical kinetics, thermodynamics, and transport tool suite</p> <p>homepage: https://github.com/Cantera/cantera</p>    version versionsuffix toolchain     <code>2.2.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.3.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.3.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.4.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#canu","title":"canu","text":"<p>Canu is a fork of the Celera Assembler designed for high-noise single-molecule sequencing</p> <p>homepage: https://canu.readthedocs.io</p>    version versionsuffix toolchain     <code>1.4</code>  <code>foss/2016b</code>   <code>1.7</code>  <code>intel/2018a</code>   <code>1.8</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.8</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>1.8</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>   <code>1.9</code> <code>-Java-11</code> <code>GCCcore/8.3.0</code>   <code>2.1.1</code>  <code>GCCcore/10.2.0</code>   <code>2.1.1</code> <code>-Java-11</code> <code>GCCcore/9.3.0</code>   <code>2.2</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.2</code> <code>-Java-11</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#canvas","title":"Canvas","text":"<p>Copy number variant (CNV) calling from DNA sequencing data</p> <p>homepage: https://github.com/Illumina/canvas</p>    version toolchain     <code>1.39.0.1598</code> <code>system</code>"},{"location":"version-specific/supported-software/#cap3","title":"CAP3","text":"<p>CAP3 assembly program </p> <p>homepage: http://seq.cs.iastate.edu/</p>    version toolchain     <code>20071221-intel-x86</code> <code>system</code>   <code>20071221-intel-x86_64</code> <code>system</code>   <code>20071221-opteron</code> <code>system</code>"},{"location":"version-specific/supported-software/#capnproto","title":"CapnProto","text":"<p>Cap\u2019n Proto is an insanely fast data interchange format and capability-based RPC system.</p> <p>homepage: https://capnproto.org</p>    version toolchain     <code>0.6.1</code> <code>GCCcore/6.4.0</code>   <code>0.7.0</code> <code>GCCcore/7.3.0</code>   <code>0.8.0</code> <code>GCCcore/9.3.0</code>   <code>0.9.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>0.10.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#captum","title":"captum","text":"<p>Captum is a model interpretability and understanding library for PyTorch. Captum means comprehension in Latin and contains general purpose implementations of integrated gradients, saliency maps, smoothgrad, vargrad and others for PyTorch models. It has quick integration for models built with domain-specific libraries such as torchvision, torchtext, and others.</p> <p>homepage: https://captum.ai/</p>    version versionsuffix toolchain     <code>0.5.0</code>  <code>foss/2022a</code>   <code>0.5.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#cargo","title":"Cargo","text":"<p>The Rust package manager</p> <p>homepage: https://crates.io/</p>    version toolchain     <code>0.13.0</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#carma","title":"Carma","text":"<p>Carma - A molecular dynamics analysis program</p> <p>homepage: http://utopia.duth.gr/~glykos/Carma.html</p>    version toolchain     <code>2.01</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#carputils","title":"carputils","text":"<p>carputils is a Python framework for generating and running openCARP examples.</p> <p>homepage: https://git.opencarp.org/openCARP/carputils</p>    version versionsuffix toolchain     <code>20200915</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>20210513</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#cartopy","title":"Cartopy","text":"<p>Cartopy is a Python package designed to make drawing maps for data analysis and visualisation easy.</p> <p>homepage: https://scitools.org.uk/cartopy/docs/latest/</p>    version versionsuffix toolchain     <code>0.18.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.18.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.19.0.post1</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>0.20.0</code>  <code>foss/2021a</code>   <code>0.20.3</code>  <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#casper","title":"CaSpER","text":"<p>CaSpER is a signal processing approach for identification, visualization, and integrative analysis  of focal and large-scale CNV events in multiscale resolution using either bulk or single-cell RNA sequencing data. </p> <p>homepage: https://github.com/akdess/CaSpER</p>    version toolchain     <code>2.0</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#castep","title":"CASTEP","text":"<p>CASTEP is an electronic structure materials modelling code based on density functional theory (DFT),  with functionality including geometry optimization molecular dynamics, phonons, NMR chemical shifts and much more.</p> <p>homepage: http://www.castep.org</p>    version toolchain     <code>21.1.1</code> <code>CrayCCE/19.06</code>, <code>CrayGNU/19.06</code>, <code>foss/2019b</code>, <code>intel/2019b</code>, <code>iomkl/2019b</code>"},{"location":"version-specific/supported-software/#castxml","title":"CastXML","text":"<p>CastXML is a C-family abstract syntax tree XML output tool.</p> <p>homepage: https://github.com/CastXML/CastXML</p>    version toolchain     <code>0.4.3</code> <code>GCCcore/8.3.0</code>   <code>20160617</code> <code>foss/2016a</code>   <code>20180806</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#cat-bat","title":"CAT-BAT","text":"<p>Tool for taxonomic classification of contigs and metagenome-assembled genomes (MAGs).</p> <p>homepage: https://github.com/dutilh/CAT</p>    version toolchain     <code>5.2.3</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#catch2","title":"Catch2","text":"<p>A modern, C++-native, header-only,   test framework for unit-tests, TDD and BDD   - using C++11, C++14, C++17 and later     (or C++03 on the Catch1.x branch) </p> <p>homepage: https://github.com/catchorg/Catch2</p>    version toolchain     <code>2.9.1</code> <code>system</code>   <code>2.11.0</code> <code>system</code>   <code>2.13.4</code> <code>system</code>"},{"location":"version-specific/supported-software/#category_encoders","title":"category_encoders","text":"<p>A set of scikit-learn-style transformers for encoding categorical variables into numeric by means of different techniques.</p> <p>homepage: https://github.com/scikit-learn-contrib/category_encoders</p>    version toolchain     <code>2.4.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#catmap","title":"CatMAP","text":"<p>Catalyst Micro-kinetic Analysis Package for automated creation of micro-kinetic models used  in catalyst screening.</p> <p>homepage: https://catmap.readthedocs.io/</p>    version versionsuffix toolchain     <code>20170927</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#causallift","title":"causallift","text":"<p>CausalLift: Python package for Uplift Modeling in real-world business; applicable for both A/B testing and observational data </p> <p>homepage: https://github.com/Minyus/causallift</p>    version versionsuffix toolchain     <code>1.0.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#causalml","title":"causalml","text":"<p>Causal ML: A Python Package for Uplift Modeling and Causal Inference with ML </p> <p>homepage: https://github.com/uber/causalml</p>    version versionsuffix toolchain     <code>0.3.0-20180610</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.8.0-20200909</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#caveman","title":"CaVEMan","text":"<p>SNV expectation maximisation based mutation calling algorithm   aimed at detecting somatic mutations in paired (tumour/normal) cancer samples.  Supports both bam and cram format via htslib</p> <p>homepage: http://cancerit.github.io/CaVEMan/</p>    version toolchain     <code>1.13.2</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#caviar","title":"CAVIAR","text":"<p>CAusal Variants Identication in Associated Regions. A statistical framework  that quantifies the probability of each variant to be causal while allowing an arbitrary  number of causal variants.</p> <p>homepage: https://github.com/fhormoz/caviar</p>    version toolchain     <code>2.2-20190419</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#cbc","title":"Cbc","text":"<p>Cbc (Coin-or branch and cut) is an open-source mixed integer linear programming solver written in C++. It can be used as a callable library or using a stand-alone executable.</p> <p>homepage: https://github.com/coin-or/Cbc</p>    version toolchain     <code>2.10.3</code> <code>foss/2018b</code>   <code>2.10.5</code> <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cblas","title":"CBLAS","text":"<p>C interface to the BLAS</p> <p>homepage: https://www.netlib.org/blas/</p>    version toolchain     <code>20110120</code> <code>foss/2016b</code>, <code>intel/2019b</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#ccache","title":"ccache","text":"<p>Ccache (or \u201cccache\u201d) is a compiler cache. It speeds up recompilation by caching previous compilations and detecting when the same compilation is being done again</p> <p>homepage: https://ccache.dev/</p>    version versionsuffix toolchain     <code>3.2.5</code>  <code>system</code>   <code>3.3.1</code>  <code>system</code>   <code>3.3.3</code>  <code>system</code>   <code>3.3.4</code> <code>-f90</code> <code>system</code>   <code>3.7.11</code>  <code>system</code>   <code>4.2.1</code>  <code>system</code>   <code>4.6.1</code>  <code>GCCcore/11.2.0</code>   <code>4.6.3</code>  <code>system</code>"},{"location":"version-specific/supported-software/#ccfits","title":"CCfits","text":"<p>CCfits is an object oriented interface to the cfitsio library. It is designed to make the capabilities of cfitsio available to programmers working in C++.</p> <p>homepage: https://heasarc.gsfc.nasa.gov/fitsio/CCfits/</p>    version toolchain     <code>2.5</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#ccl","title":"CCL","text":"<p>Clozure CL (often called CCL for short) is a free Common Lisp  implementation with a long history. Some distinguishing features of the implementation  include fast compilation speed, native threads, a precise, generational, compacting  garbage collector, and a convenient foreign-function interface.</p> <p>homepage: https://ccl.clozure.com/</p>    version toolchain     <code>1.11.5</code> <code>system</code>   <code>1.12</code> <code>GCCcore/9.3.0</code>   <code>1.12.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#cclib","title":"cclib","text":"<p>cclib is a Python library that provides parsers for computational chemistry log files.  It also provides a platform to implement algorithms in a package-independent manner. </p> <p>homepage: https://cclib.github.io/</p>    version versionsuffix toolchain     <code>1.5</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>1.6.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.7.2</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#cctools","title":"cctools","text":"<p>The Cooperating Computing Tools (CCTools) help you to design and deploy  scalable applications that run on hundreds or thousands of machines at once. </p> <p>homepage: https://ccl.cse.nd.edu/</p>    version toolchain     <code>7.0.22</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#cd-hit","title":"CD-HIT","text":"<p>CD-HIT is a very widely used program for clustering and  comparing protein or nucleotide sequences.</p> <p>homepage: https://github.com/weizhongli/cdhit</p>    version versionsuffix toolchain     <code>4.6.4</code> <code>-2015-0603</code> <code>GNU/4.9.3-2.25</code>   <code>4.6.6</code>  <code>foss/2016b</code>   <code>4.6.8</code>  <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>4.8.1</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018b</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#cdat","title":"CDAT","text":"<p>CDAT is a powerful and complete front-end to a rich set of  visual-data exploration and analysis capabilities well suited for data analysis problems.</p> <p>homepage: https://github.com/CDAT/cdat</p>    version versionsuffix toolchain     <code>8.2.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#cdbfasta","title":"cdbfasta","text":"<p>Fasta file indexing and retrival tool</p> <p>homepage: https://sourceforge.net/projects/cdbfasta</p>    version toolchain     <code>0.99</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#cdbtools","title":"CDBtools","text":"<p>CDB (Constant DataBase) indexing and retrieval tools for FASTA files</p> <p>homepage: http://compbio.dfci.harvard.edu/tgi</p>    version toolchain     <code>0.99</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#cddlib","title":"cddlib","text":"<p>An efficient implementation of the Double Description Method</p> <p>homepage: https://github.com/cddlib/cddlib</p>    version toolchain     <code>0.94i</code> <code>GCCcore/8.2.0</code>   <code>0.94j</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#cdna_cupcake","title":"cDNA_Cupcake","text":"<p>cDNA_Cupcake is a miscellaneous collection of Python and R scripts used for analyzing sequencing data.</p> <p>homepage: https://github.com/Magdoll/cDNA_Cupcake</p>    version versionsuffix toolchain     <code>5.8</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>24.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>26.0.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cdo","title":"CDO","text":"<p>CDO is a collection of command line Operators to manipulate and analyse Climate and NWP model Data.</p> <p>homepage: https://code.zmaw.de/projects/cdo</p>    version toolchain     <code>1.7.2</code> <code>intel/2016b</code>   <code>1.8.1</code> <code>intel/2017a</code>   <code>1.9.1</code> <code>intel/2017b</code>   <code>1.9.2</code> <code>intel/2017b</code>   <code>1.9.5</code> <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>1.9.8</code> <code>intel/2019b</code>   <code>1.9.10</code> <code>gompi/2019b</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>iimpi/2021b</code>   <code>2.0.5</code> <code>gompi/2021b</code>   <code>2.0.6</code> <code>gompi/2022a</code>   <code>2.1.1</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#cdo-bindings","title":"cdo-bindings","text":"<p>Python interface to CDO.</p> <p>homepage: https://github.com/Try2Code/cdo-bindings</p>    version toolchain     <code>1.5.7</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#cdsapi","title":"cdsapi","text":"<p>Climate Data Store API</p> <p>homepage: https://pypi.org/project/cdsapi</p>    version versionsuffix toolchain     <code>0.1.4</code>  <code>foss/2019a</code>   <code>0.1.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.3.0</code>  <code>GCCcore/9.3.0</code>   <code>0.5.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#cell2location","title":"cell2location","text":"<p>Comprehensive mapping of tissue cell architecture via integrated  single cell and spatial transcriptomics (cell2location model)</p> <p>homepage: https://github.com/BayraktarLab/cell2location/</p>    version toolchain     <code>0.05-alpha</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#cellmix","title":"CellMix","text":"<p>A Comprehensive Toolbox for Gene Expression Deconvolution</p> <p>homepage: http://web.cbio.uct.ac.za/~renaud/CRAN/web/CellMix</p>    version versionsuffix toolchain     <code>1.6.2</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#cellranger","title":"CellRanger","text":"<p>Cell Ranger is a set of analysis pipelines that process Chromium  single-cell RNA-seq output to align reads, generate gene-cell matrices and perform  clustering and gene expression analysis.</p> <p>homepage: https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/what-is-cell-ranger</p>    version toolchain     <code>3.0.0</code> <code>system</code>   <code>3.0.2</code> <code>system</code>   <code>3.1.0</code> <code>system</code>   <code>4.0.0</code> <code>system</code>   <code>5.0.0</code> <code>system</code>   <code>5.0.1</code> <code>system</code>   <code>6.0.0</code> <code>system</code>   <code>6.0.1</code> <code>system</code>   <code>6.0.2</code> <code>system</code>   <code>6.1.2</code> <code>system</code>   <code>7.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cellranger-arc","title":"CellRanger-ARC","text":"<p>Cell Ranger ARC is a set of analysis pipelines that process  Chromium Single Cell Multiome ATAC + Gene Expression sequencing data to generate a  variety of analyses pertaining to gene expression, chromatin accessibility and  their linkage. Furthermore, since the ATAC and gene expression measurements are on  the very same cell, we are able to perform analyses that link chromatin  accessibility and gene expression.</p> <p>homepage: https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/what-is-cell-ranger-arc</p>    version toolchain     <code>1.0.1</code> <code>system</code>   <code>2.0.0</code> <code>system</code>   <code>2.0.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#cellranger-atac","title":"CellRanger-ATAC","text":"<p>Cell Ranger ATAC is a set of analysis pipelines that process  Chromium Single Cell ATAC data.</p> <p>homepage: https://support.10xgenomics.com/single-cell-atac/software/pipelines/latest/what-is-cell-ranger-atac</p>    version toolchain     <code>1.2.0</code> <code>system</code>   <code>2.0.0</code> <code>system</code>   <code>2.1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cellrank","title":"CellRank","text":"<p>CellRank is a toolkit to uncover cellular dynamics based on  Markov state modeling of single-cell data.  It contains two main modules: kernels compute cell-cell transition probabilities and estimators generate hypothesis based on these. </p> <p>homepage: https://cellrank.readthedocs.io/en/stable/</p>    version toolchain     <code>1.4.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#celltypist","title":"CellTypist","text":"<p>A tool for semi-automatic cell type annotation</p> <p>homepage: https://www.celltypist.org/</p>    version toolchain     <code>1.0.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#centrifuge","title":"Centrifuge","text":"<p>Classifier for metagenomic sequences</p> <p>homepage: https://ccb.jhu.edu/software/centrifuge</p>    version toolchain     <code>1.0.3</code> <code>foss/2018b</code>   <code>1.0.4</code> <code>gompi/2020b</code>, <code>gompi/2021a</code>   <code>1.0.4-beta</code> <code>foss/2018b</code>, <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#cereal","title":"Cereal","text":"<p>cereal is a header-only C++11 serialization library. cereal takes arbitrary data types and reversibly  turns them into different representations, such as compact binary encodings, XML, or JSON. cereal was designed to be fast, light-weight, and easy to extend - it has no external dependencies and can be easily bundled with other code or  used standalone.</p> <p>homepage: https://uscilab.github.io/cereal/</p>    version toolchain     <code>1.3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cesm-deps","title":"CESM-deps","text":"<p>CESM is a fully-coupled, community, global climate model that provides state-of-the-art  computer simulations of the Earth's past, present, and future climate states.</p> <p>homepage: https://www.cesm.ucar.edu/models/cesm2/</p>    version toolchain     <code>2</code> <code>foss/2018b</code>, <code>foss/2021b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>"},{"location":"version-specific/supported-software/#cfdemcoupling","title":"CFDEMcoupling","text":"<p>CFDEMcoupling is an open source CFD-DEM engine. It provides the possibility to couple  the DEM engine LIGGGHTS to a CFD framework.</p> <p>homepage: https://www.cfdem.com/cfdemrcoupling-open-source-cfd-dem-framework</p>    version toolchain     <code>3.8.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#cfitsio","title":"CFITSIO","text":"<p>CFITSIO is a library of C and Fortran subroutines for reading and writing data files in FITS (Flexible Image Transport System) data format.</p> <p>homepage: https://heasarc.gsfc.nasa.gov/fitsio/</p>    version toolchain     <code>3.38</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.41</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>intel/2016b</code>   <code>3.42</code> <code>GCCcore/6.4.0</code>, <code>intel/2017b</code>   <code>3.45</code> <code>GCCcore/7.3.0</code>, <code>intel/2018b</code>   <code>3.47</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.48</code> <code>GCCcore/9.3.0</code>   <code>3.49</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#cftime","title":"cftime","text":"<p>Time-handling functionality from netcdf4-python</p> <p>homepage: https://github.com/Unidata/cftime</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.0.0b1</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>1.0.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.0.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#cgal","title":"CGAL","text":"<p>The goal of the CGAL Open Source Project is to provide easy access to efficient  and reliable geometric algorithms in the form of a C++ library.</p> <p>homepage: https://www.cgal.org/</p>    version versionsuffix toolchain     <code>4.8</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.8.1</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.8.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.9</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.9</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.11</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.11</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.11</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.11.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>4.11.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.11.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>4.11.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.14</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>4.14.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>4.14.3</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompi/2022a</code>, <code>iimpi/2021a</code>   <code>4.14.3</code> <code>-Python-3.8.2</code> <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>5.2</code>  <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#cget","title":"cget","text":"<p>Cmake package retrieval. This can be used to download and install cmake packages</p> <p>homepage: https://cget.readthedocs.io/en/latest/index.html</p>    version versionsuffix toolchain     <code>0.1.6</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#cgl","title":"Cgl","text":"<p>The COIN-OR Cut Generation Library (Cgl) is a collection of cut generators that can be used with other COIN-OR packages that make use of cuts, such as, among others, the linear solver Clp or the mixed integer linear programming solvers Cbc or BCP. Cgl uses the abstract class OsiSolverInterface (see Osi) to use or communicate with a solver. It does not directly call a solver.</p> <p>homepage: https://github.com/coin-or/Cgl</p>    version toolchain     <code>0.60.2</code> <code>foss/2018b</code>   <code>0.60.3</code> <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cgmaptools","title":"CGmapTools","text":"<p>Command-line Toolset for Bisulfite Sequencing Data Analysis</p> <p>homepage: https://cgmaptools.github.io/</p>    version toolchain     <code>0.1.2</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#cgns","title":"CGNS","text":"<p>The CGNS system is designed to facilitate the exchange of data between sites and applications,  and to help stabilize the archiving of aerodynamic data.</p> <p>homepage: https://cgns.github.io/</p>    version toolchain     <code>3.3.1</code> <code>foss/2016b</code>   <code>4.1.0</code> <code>intelcuda/2019b</code>"},{"location":"version-specific/supported-software/#charls","title":"CharLS","text":"<p>CharLS is a C++ implementation of the JPEG-LS standard for lossless and near-lossless image compression and decompression. JPEG-LS is a low-complexity image compression standard that matches JPEG 2000 compression ratios.</p> <p>homepage: https://github.com/team-charls/charls</p>    version toolchain     <code>2.0.0</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.1.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.2.0</code> <code>GCCcore/10.2.0</code>   <code>2.3.4</code> <code>GCCcore/10.3.0</code>   <code>2.4.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#charmm","title":"CHARMM","text":"<p>CHARMM (Chemistry at HARvard Macromolecular Mechanics) is a versatile and widely used molecular simulation program with broad application to many-particle systems.</p> <p>homepage: http://www.charmm.org</p>    version toolchain     <code>37b2</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#charmm_1","title":"charmm","text":"<p>CHARMM (Chemistry at HARvard Macromolecular Mechanics) is a versatile and widely used molecular simulation program with broad application to many-particle systems. charmm provides all the functionality of CHARMM except its performance enhancements.</p> <p>homepage: http://www.charmm.org</p>    version toolchain     <code>43b2</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#chase","title":"CHASE","text":"<p>Case-control HAplotype Sharing analyses.   Haplotype sharing analyses for genome-wide association studies.</p> <p>homepage: http://people.duke.edu/~asallen/Software.html</p>    version toolchain     <code>20130626</code> <code>system</code>"},{"location":"version-specific/supported-software/#check","title":"Check","text":"<p>Check is a unit testing framework for C. It features a simple interface for defining unit tests, putting little in the way of the developer. Tests are run in a separate address space, so both assertion failures and code errors that cause segmentation faults or other signals can be caught. Test results are reportable in the following: Subunit, TAP, XML, and a generic logging format.</p> <p>homepage: https://libcheck.github.io/check/</p>    version toolchain     <code>0.15.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#check_1","title":"check","text":"<p>Check is a unit testing framework for C.  It features a simple interface for defining unit tests,  putting little in the way of the developer. Tests are run  in a separate address space, so both assertion failures  and code errors that cause segmentation faults or other  signals can be caught. Test results are reportable in  the following: Subunit, TAP, XML, and a generic logging format.</p> <p>homepage: https://libcheck.github.io/check/</p>    version toolchain     <code>0.12.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#checkm","title":"CheckM","text":"<p>CheckM provides a set of tools for assessing the quality of genomes recovered from isolates,  single cells, or metagenomes.</p> <p>homepage: https://github.com/Ecogenomics/CheckM</p>    version versionsuffix toolchain     <code>1.0.13</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.0.13</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.0.13</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.0.18</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.0.18</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>1.1.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.1.3</code>  <code>foss/2021a</code>, <code>foss/2021b</code>   <code>1.1.3</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#cheetah","title":"Cheetah","text":"<p>Cheetah is an open source template engine and code generation tool.</p> <p>homepage: https://cheetahtemplate.org</p>    version versionsuffix toolchain     <code>2.4.4</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#chemaxon-marvin","title":"Chemaxon-Marvin","text":"<p>Marvin suite is a chemically intelligent desktop toolkit built to help you draw, edit, publish, render, import and export your chemical structures and as well as allowing you to convert between various chemical and graphical file formats. It is free for individual, academic and non-commercial use.</p> <p>homepage: https://chemaxon.com/products/marvin</p>    version toolchain     <code>21.14</code> <code>system</code>"},{"location":"version-specific/supported-software/#chemps2","title":"CheMPS2","text":"<p>CheMPS2 is a scientific library which contains a spin-adapted implementation of the density matrix renormalization group (DMRG) for ab initio quantum chemistry.</p> <p>homepage: https://github.com/SebWouters/CheMPS2</p>    version toolchain     <code>1.6</code> <code>intel/2016a</code>   <code>1.7-rc2</code> <code>intel/2016a</code>   <code>1.7.1</code> <code>intel/2016a</code>   <code>1.7.2</code> <code>intel/2016a</code>   <code>1.8</code> <code>intel/2016b</code>   <code>1.8.8</code> <code>intel/2018b</code>   <code>1.8.9</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2018b</code>, <code>intel/2019a</code>, <code>intel/2019b</code>   <code>1.8.11</code> <code>foss/2021b</code>   <code>1.8.12</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#cherab","title":"CHERAB","text":"<p>CHERAB is a python library for forward modelling diagnostics  based on spectroscopic plasma emission.</p> <p>homepage: https://cherab.github.io/documentation/index.html</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.3.0</code>  <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#chewbbaca","title":"chewBBACA","text":"<p>chewBBACA stands for \"BSR-Based Allele Calling Algorithm\". chewBBACA is a comprehensive pipeline including a set of functions for the creation and validation of whole genome and core genome MultiLocus Sequence Typing (wg/cgMLST) schemas, providing an allele calling algorithm based on Blast Score Ratio that can be run in multiprocessor settings and a set of functions to visualize and validate allele variation in the loci.</p> <p>homepage: https://github.com/B-UMMI/chewBBACA</p>    version versionsuffix toolchain     <code>2.5.5</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#chi2comb","title":"chi2comb","text":"<p>Cumulative density function of linear combinations of independent chi-square random variables and a standard Normal distribution. As of now, this is basically a repackaging of the davies function implemented in the CompQuadForm library for R.</p> <p>homepage: https://github.com/limix/chi2comb</p>    version toolchain     <code>0.0.3</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#chimera","title":"Chimera","text":"<p>UCSF Chimera is a highly extensible program for interactive visualization   and analysis of molecular structures and related data, including density maps, supramolecular   assemblies, sequence alignments, docking results, trajectories, and conformational ensembles. </p> <p>homepage: https://www.cgl.ucsf.edu/chimera/</p>    version versionsuffix toolchain     <code>1.10</code> <code>-linux_x86_64</code> <code>system</code>   <code>1.16</code> <code>-linux_x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#chimpipe","title":"ChimPipe","text":"<p>ChimPipe is a computational method for the detection of novel transcription-induced  chimeric transcripts and fusion genes from Illumina Paired-End RNA-seq data. It combines junction  spanning and paired-end read information to accurately detect chimeric splice junctions at base-pair  resolution.</p> <p>homepage: https://chimpipe.readthedocs.org/</p>    version versionsuffix toolchain     <code>0.9.5</code>  <code>foss/2018b</code>   <code>0.9.5</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#chromaprint","title":"Chromaprint","text":"<p>Chromaprint is the core component of the AcoustID project. It's a client-side library  that implements a custom algorithm for extracting fingerprints from any audio source.</p> <p>homepage: https://acoustid.org/chromaprint</p>    version toolchain     <code>1.4.3</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#cicero","title":"cicero","text":"<p>Cicero is an R package that provides tools for analyzing single-cell chromatin accessibility  experiments.</p> <p>homepage: https://cole-trapnell-lab.github.io/cicero-release</p>    version versionsuffix toolchain     <code>1.3.4.11</code> <code>-R-4.0.3-Monocle3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#cif2cell","title":"CIF2Cell","text":"<p>CIF2Cell is a tool to generate the geometrical setup for various electronic structure codes from a CIF (Crystallographic Information Framework) file. The program currently supports output for a number of popular electronic structure programs, including ABINIT, ASE, CASTEP, CP2K, CPMD, CRYSTAL09, Elk, EMTO, Exciting, Fleur, FHI-aims, Hutsepot, MOPAC, Quantum Espresso, RSPt, Siesta, SPR-KKR, VASP. Also exports some related formats like .coo, .cfg and .xyz-files.</p> <p>homepage: https://sourceforge.net/projects/cif2cell</p>    version versionsuffix toolchain     <code>1.2.10</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#circexplorer","title":"CIRCexplorer","text":"<p>CIRCexplorer2 is a comprehensive and integrative circular RNA analysis toolset.</p> <p>homepage: https://circexplorer2.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.1.10</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#circexplorer2","title":"CIRCexplorer2","text":"<p>CIRCexplorer2 is a comprehensive and integrative circular RNA analysis toolset.</p> <p>homepage: http://circexplorer2.readthedocs.io/</p>    version versionsuffix toolchain     <code>2.3.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.3.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.3.8</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#circos","title":"Circos","text":"<p>Circos is a software package for visualizing data and information.  It visualizes data in a circular layout - this makes Circos ideal for exploring  relationships between objects or positions.</p> <p>homepage: http://www.circos.ca/</p>    version versionsuffix toolchain     <code>0.69-5</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>0.69-6</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>0.69-6</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>   <code>0.69-9</code>  <code>GCCcore/11.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#ciri","title":"CIRI","text":"<p>CircRNA Identifier. A de novo circular RNA identification tool</p> <p>homepage: https://sourceforge.net/projects/ciri/</p>    version versionsuffix toolchain     <code>2.0.6</code> <code>-Perl-5.26.0</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#ciri-long","title":"CIRI-long","text":"<p>Circular RNA Identification for Long-Reads Nanopore Sequencing Data</p> <p>homepage: https://github.com/bioinfo-biols/CIRI-long/</p>    version toolchain     <code>1.0.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#cistem","title":"cisTEM","text":"<p>cisTEM is user-friendly software to process cryo-EM images of macromolecular complexes  and obtain high-resolution 3D reconstructions from them. </p> <p>homepage: https://cistem.org/</p>    version toolchain     <code>1.0.0-beta</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#cite-seq-count","title":"CITE-seq-Count","text":"<p>A python package that allows to count antibody TAGS from a CITE-seq and/or cell hashing experiment.</p> <p>homepage: https://github.com/Hoohm/CITE-seq-Count</p>    version versionsuffix toolchain     <code>1.4.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.4.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#clang","title":"Clang","text":"<p>C, C++, Objective-C compiler, based on LLVM.  Does not  include C++ standard library -- use libstdc++ from GCC.</p> <p>homepage: https://clang.llvm.org/</p>    version versionsuffix toolchain     <code>3.3</code>  <code>GCC/4.8.1</code>   <code>3.4</code>  <code>GCC/4.8.2</code>   <code>3.4.1</code>  <code>GCC/4.8.2</code>   <code>3.4.2</code>  <code>GCC/4.8.2</code>   <code>3.6.0</code>  <code>GCC/4.9.2</code>   <code>3.6.1</code>  <code>GCC/4.9.2</code>   <code>3.7.0</code>  <code>GNU/4.9.3-2.25</code>   <code>3.7.1</code>  <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>   <code>3.8.0</code>  <code>GCC/4.9.3-2.25</code>   <code>3.8.1</code>  <code>GCC/5.4.0-2.26</code>, <code>foss/2016b</code>   <code>5.0.0</code>  <code>GCC/6.4.0-2.28</code>   <code>5.0.1</code>  <code>GCC/6.4.0-2.28</code>   <code>6.0.1</code>  <code>GCC/6.4.0-2.28</code>, <code>GCC/7.3.0-2.30</code>   <code>7.0.0</code>  <code>GCC/6.4.0-2.28</code>   <code>7.0.1</code>  <code>GCC/7.3.0-2.30</code>   <code>8.0.0</code>  <code>GCCcore/8.2.0</code>   <code>8.0.0</code> <code>-CUDA-10.1.105</code> <code>GCCcore/8.2.0</code>   <code>8.0.1</code> <code>-CUDA-10.1.105</code> <code>GCC/8.2.0-2.31.1</code>   <code>8.0.1</code> <code>-CUDA-10.1.243</code> <code>GCC/8.3.0</code>   <code>9.0.1</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>9.0.1</code> <code>-CUDA-10.1.243</code> <code>GCC/8.3.0</code>   <code>10.0.0</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>10.0.1</code>  <code>GCCcore/9.3.0</code>   <code>11.0.0</code>  <code>GCCcore/9.3.0</code>   <code>11.0.1</code>  <code>GCCcore/10.2.0</code>, <code>gcccuda/2020b</code>   <code>12.0.1</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>12.0.1</code> <code>-CUDA-11.3.1</code> <code>GCCcore/10.3.0</code>   <code>13.0.1</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>13.0.1</code> <code>-CUDA-11.4.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#clang-aomp","title":"Clang-AOMP","text":"<p>AOMP is an open source Clang/LLVM based compiler with added support for the OpenMP\u00ae API on Radeon\u2122 GPUs.</p> <p>homepage: https://github.com/RadeonOpenCompute/llvm-project</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#clang-python-bindings","title":"Clang-Python-bindings","text":"<p>Python bindings for libclang</p> <p>homepage: https://clang.llvm.org</p>    version versionsuffix toolchain     <code>8.0.0</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>10.0.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>13.0.1</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#clapack","title":"CLAPACK","text":"<p>C version of LAPACK</p> <p>homepage: http://www.netlib.org/clapack</p>    version toolchain     <code>3.2.1</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#clease","title":"CLEASE","text":"<p>CLuster Expansion in Atomic Simulation Environment (CLEASE) is a package that automates the cumbersome setup and construction procedure of cluster expansion (CE). It provides a comprehensive list of tools for specifying parameters for CE, generating training structures, fitting effective cluster interaction (ECI) values and running Monte Carlo simulations.</p> <p>homepage: https://gitlab.com/computationalmaterials/clease</p>    version toolchain     <code>0.10.6</code> <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#clhep","title":"CLHEP","text":"<p>The CLHEP project is intended to be a set of HEP-specific foundation and  utility classes such as random generators, physics vectors, geometry and linear algebra.  CLHEP is structured in a set of packages independent of any external package.</p> <p>homepage: https://proj-clhep.web.cern.ch/proj-clhep/</p>    version toolchain     <code>2.1.1.0</code> <code>intel/2016a</code>   <code>2.1.3.1</code> <code>intel/2016a</code>   <code>2.2.0.8</code> <code>intel/2016a</code>   <code>2.3.1.1</code> <code>intel/2016a</code>   <code>2.3.4.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.4.0.0</code> <code>intel/2017b</code>   <code>2.4.1.0</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018b</code>   <code>2.4.1.3</code> <code>foss/2019b</code>, <code>foss/2020a</code>   <code>2.4.4.0</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>   <code>2.4.5.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#climetlab","title":"CliMetLab","text":"<p>CliMetLab is a Python package aiming at simplifying access to climate and meteorological datasets, allowing users to focus on science instead of technical issues such as data access and data formats. It is mostly intended to be used in Jupyter notebooks, and be interoperable with all popular data analytic packages, such as Numpy, Pandas, Xarray, SciPy, Matplotlib, etc. as well as machine learning frameworks, such as Tensorflow, Keras or PyTorch.</p> <p>homepage: https://climetlab.readthedocs.io/</p>    version toolchain     <code>0.12.6</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#clisp","title":"CLISP","text":"<p>Common Lisp is a high-level, general-purpose, object-oriented, dynamic,  functional programming language. </p> <p>homepage: https://clisp.sourceforge.io/</p>    version toolchain     <code>2.49</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#clonalframeml","title":"ClonalFrameML","text":"<p>Efficient Inference of Recombination in Whole Bacterial Genomes</p> <p>homepage: https://github.com/xavierdidelot/ClonalFrameML</p>    version toolchain     <code>1.11</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#cloog","title":"CLooG","text":"<p>CLooG is a free software and library to generate code for scanning Z-polyhedra. That is, it finds a  code (e.g. in C, FORTRAN...) that reaches each integral point of one or more parameterized polyhedra. CLooG has been  originally written to solve the code generation problem for optimizing compilers based on the polytope model.  Nevertheless it is used now in various area e.g. to build control automata for high-level synthesis or to find the  best polynomial approximation of a function. CLooG may help in any situation where scanning polyhedra matters. While  the user has full control on generated code quality, CLooG is designed to avoid control overhead and to produce a  very effective code.</p> <p>homepage: http://www.bastoul.net/cloog/index.php</p>    version toolchain     <code>0.18.1</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#cloudcompare","title":"CloudCompare","text":"<p>3D point cloud and mesh processing software</p> <p>homepage: https://www.cloudcompare.org/</p>    version toolchain     <code>2.12.4</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#clp","title":"Clp","text":"<p>Clp (Coin-or linear programming) is an open-source linear programming solver. It is primarily meant to be used as a callable library, but a basic, stand-alone executable version is also available.</p> <p>homepage: https://github.com/coin-or/Clp</p>    version toolchain     <code>1.17.3</code> <code>foss/2018b</code>   <code>1.17.6</code> <code>foss/2020b</code>, <code>foss/2021a</code>   <code>1.17.7</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#clustal-omega","title":"Clustal-Omega","text":"<p>Clustal Omega is a multiple sequence alignment  program for proteins. It produces biologically meaningful multiple  sequence alignments of divergent sequences. Evolutionary relationships  can be seen via viewing Cladograms or Phylograms </p> <p>homepage: http://www.clustal.org/omega/</p>    version toolchain     <code>1.2.0</code> <code>foss/2016b</code>   <code>1.2.4</code> <code>GCC/10.3.0</code>, <code>GCC/8.3.0</code>, <code>foss/2018b</code>, <code>intel-compilers/2021.2.0</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#clustalw2","title":"ClustalW2","text":"<p>ClustalW2 is a general purpose multiple sequence alignment program for DNA or proteins.</p> <p>homepage: https://www.ebi.ac.uk/Tools/msa/clustalw2/</p>    version toolchain     <code>2.1</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>foss/2021a</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2017b</code>, <code>intel/2018b</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#cluster-buster","title":"Cluster-Buster","text":"<p>Cluster-Buster: Finding dense clusters of motifs in DNA sequences</p> <p>homepage: https://github.com/weng-lab/cluster-buster/</p>    version toolchain     <code>20160106</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#clustershell","title":"ClusterShell","text":"<p>ClusterShell is an event-driven open source Python library, designed to run local or distant commands  in parallel on server farms or on large Linux clusters.</p> <p>homepage: https://cea-hpc.github.io/clustershell/</p>    version toolchain     <code>1.7.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#cmake","title":"CMake","text":"<p>CMake, the cross-platform, open-source build system.  CMake is a family of tools designed to build, test and package software.</p> <p>homepage: https://www.cmake.org</p>    version toolchain     <code>2.8.11</code> <code>GCC/4.8.1</code>   <code>2.8.12</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>   <code>3.0.0</code> <code>GCC/4.8.3</code>   <code>3.1.0</code> <code>GCC/4.9.2</code>   <code>3.1.3</code> <code>GCC/4.9.2</code>, <code>system</code>   <code>3.2.1</code> <code>GCC/4.9.2</code>, <code>GNU/4.9.3-2.25</code>   <code>3.3.1</code> <code>system</code>   <code>3.3.2</code> <code>GNU/4.9.3-2.25</code>, <code>gimkl/2.11.5</code>   <code>3.4.1</code> <code>GCC/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>foss/2016a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>3.4.3</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>3.5.1</code> <code>intel/2016a</code>   <code>3.5.2</code> <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>system</code>   <code>3.6.1</code> <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>system</code>   <code>3.6.2</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.7.1</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.2.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.7.2</code> <code>GCCcore/6.3.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.8.0</code> <code>GCCcore/6.3.0</code>   <code>3.8.1</code> <code>GCCcore/6.3.0</code>   <code>3.8.2</code> <code>GCCcore/6.3.0</code>   <code>3.9.1</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>system</code>   <code>3.9.4</code> <code>GCCcore/6.4.0</code>   <code>3.9.5</code> <code>GCCcore/6.4.0</code>   <code>3.9.6</code> <code>system</code>   <code>3.10.0</code> <code>GCCcore/6.4.0</code>   <code>3.10.1</code> <code>GCCcore/6.4.0</code>   <code>3.10.2</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>   <code>3.10.3</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>   <code>3.11.1</code> <code>GCCcore/6.4.0</code>   <code>3.11.4</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>3.12.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>system</code>   <code>3.13.3</code> <code>GCCcore/8.2.0</code>   <code>3.15.1</code> <code>system</code>   <code>3.15.3</code> <code>GCCcore/8.3.0</code>   <code>3.16.4</code> <code>GCCcore/9.3.0</code>   <code>3.18.4</code> <code>GCCcore/10.2.0</code>, <code>system</code>   <code>3.20.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.21.1</code> <code>GCCcore/11.2.0</code>   <code>3.22.1</code> <code>GCCcore/11.2.0</code>   <code>3.23.1</code> <code>GCCcore/11.3.0</code>   <code>3.24.3</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#cmaverse","title":"CMAverse","text":"<p>The R package CMAverse provides a suite of functions for reproducible causal mediation analysis including cmdag for DAG visualization, cmest for statistical modeling and cmsens for sensitivity analysis.</p> <p>homepage: https://bs1125.github.io/CMAverse/</p>    version toolchain     <code>20220112</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#cmdstanr","title":"CmdStanR","text":"<p>CmdStanR is a lightweight interface to Stan for R users</p> <p>homepage: https://mc-stan.org/cmdstanr</p>    version versionsuffix toolchain     <code>0.5.0</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#cmocean","title":"cmocean","text":"<p>This package contains colormaps for commonly-used  oceanographic variables. Most of the colormaps started from  matplotlib colormaps, but have now been adjusted using the viscm  tool to be perceptually uniform.</p> <p>homepage: https://github.com/matplotlib/cmocean</p>    version toolchain     <code>2.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#cmseq","title":"CMSeq","text":"<p>CMSeq is a set of commands to provide an interface to .bam files for coverage and sequence consensus.</p> <p>homepage: https://github.com/SegataLab/cmseq/</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#cnt-ilp","title":"CNT-ILP","text":"<p>Integer Linear Program for the Copy-Number Tree Problem </p> <p>homepage: https://compbio.cs.brown.edu/projects/cnt-ilp/</p>    version toolchain     <code>20171031</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#cnvkit","title":"CNVkit","text":"<p>A command-line toolkit and Python library for detecting copy  number variants and alterations genome-wide from high-throughput sequencing.</p> <p>homepage: https://github.com/etal/cnvkit</p>    version versionsuffix toolchain     <code>0.9.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.9.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.9.6</code> <code>-Python-3.7.2-R-3.6.0</code> <code>foss/2019a</code>   <code>0.9.8</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#cnvnator","title":"CNVnator","text":"<p>a tool for CNV discovery and genotyping from depth-of-coverage by mapped reads </p> <p>homepage: https://github.com/abyzovlab/CNVnator</p>    version toolchain     <code>0.3.3</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#co-phylog","title":"Co-phylog","text":"<p>Co-phylog: an assembly-free phylogenomic approach for closely related organisms H Yi, L Jin Nucleic acids research 41 (7), e75-e75</p> <p>homepage: https://github.com/yhg926/co-phylog</p>    version toolchain     <code>20201012</code> <code>GCC/7.3.0-2.30</code>"},{"location":"version-specific/supported-software/#cobrapy","title":"COBRApy","text":"<p>COBRApy is a package for constraint-based modeling of metabolic networks.</p> <p>homepage: https://opencobra.github.io/cobrapy/</p>    version toolchain     <code>0.26.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cocoalib","title":"CoCoALib","text":"<p>CoCoALib is a free GPL3 C++ library for doing Computations in Commutative Algebra.</p> <p>homepage: http://cocoa.dima.unige.it/cocoalib </p>    version toolchain     <code>0.99601</code> <code>GCC/8.2.0-2.31.1</code>   <code>0.99700</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#codan","title":"CodAn","text":"<p>CodAn (Coding sequence Annotator) is a computational tool designed to characterize the CDS and UTR regions on transcripts from any Eukaryote species.</p> <p>homepage: https://github.com/pedronachtigall/CodAn</p>    version toolchain     <code>1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#code-server","title":"code-server","text":"<p>Run VS Code on any machine anywhere and access it in the browser.</p> <p>homepage: https://github.com/cdr/code-server</p>    version toolchain     <code>3.7.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#codex2","title":"CODEX2","text":"<p>Full-spectrum copy number variation detection by high-throughput DNA sequencing</p> <p>homepage: https://github.com/yuchaojiang/CODEX2</p>    version versionsuffix toolchain     <code>20180227</code> <code>-R-3.4.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#cogent","title":"Cogent","text":"<p>Cogent is a tool for reconstructing the coding genome using high-quality full-length transcriptome sequences. It is designed to be used on Iso-Seq data and in cases where there is no reference genome or the ref genome is highly incomplete. </p> <p>homepage: https://github.com/Magdoll/Cogent</p>    version toolchain     <code>8.0.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#coin","title":"Coin","text":"<p>Coin is an OpenGL-based, 3D graphics library that has its roots in the Open Inventor 2.1 API, which Coin still is compatible with.</p> <p>homepage: https://coin3d.github.io</p>    version toolchain     <code>4.0.0</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#coinutils","title":"CoinUtils","text":"<p>CoinUtils (Coin-OR Utilities) is an open-source collection of classes and functions that are generally useful to more than one COIN-OR project.</p> <p>homepage: https://github.com/coin-or/CoinUtils</p>    version toolchain     <code>2.11.3</code> <code>GCCcore/7.3.0</code>, <code>foss/2018b</code>   <code>2.11.4</code> <code>GCC/10.3.0</code>, <code>GCCcore/10.2.0</code>   <code>2.11.6</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#colossalai","title":"colossalai","text":"<p>Colossal-AI: A Unified Deep Learning System for Big Model Era</p> <p>homepage: https://colossalai.org/</p>    version versionsuffix toolchain     <code>0.1.8</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#commet","title":"Commet","text":"<p>COMMET (\"COmpare Multiple METagenomes\") provides a global similarity overview between all datasets of  a large metagenomic project. </p> <p>homepage: https://colibread.inria.fr/software/commet/</p>    version versionsuffix toolchain     <code>20150415</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#comparem","title":"CompareM","text":"<p>A toolbox for comparative genomics.</p> <p>homepage: https://github.com/dparks1134/CompareM</p>    version versionsuffix toolchain     <code>0.0.23</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.1.2</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#compress-raw-zlib","title":"Compress-Raw-Zlib","text":"<p>Low-Level Interface to zlib or zlib-ng compression library</p> <p>homepage: https://metacpan.org/pod/Compress::Raw::Zlib</p>    version toolchain     <code>2.202</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#comsol","title":"COMSOL","text":"<p>COMSOL Multiphysics is a general-purpose software platform, based on advanced numerical methods, for modeling and simulating physics-based problems.  </p> <p>homepage: https://www.comsol.com</p>    version toolchain     <code>5.4.0.225</code> <code>system</code>"},{"location":"version-specific/supported-software/#con3f","title":"Con3F","text":"<p>Con3F is a Python package to read, manipulate and convert force field files</p> <p>homepage: https://github.ugent.be/CMM/con3f</p>    version versionsuffix toolchain     <code>1.0-20190329</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#concoct","title":"CONCOCT","text":"<p>Clustering cONtigs with COverage and ComposiTion (CONCOCT) is a program for unsupervised binning of metagenomic contigs by using nucleotide composition, coverage data in multiple samples and linkage data from paired end reads.</p> <p>homepage: https://concoct.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>   <code>1.0.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.0.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>1.1.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.1.0</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#configparser","title":"configparser","text":"<p>configparser is a Python library that brings the updated configparser from Python 3.5 to Python 2.6-3.5</p> <p>homepage: https://docs.python.org/3/library/configparser.html</p>    version versionsuffix toolchain     <code>3.5.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.5.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.5.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>3.5.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#configurable-http-proxy","title":"configurable-http-proxy","text":"<p>HTTP proxy for node.js including a REST API for updating the routing table.  Developed as a part of the Jupyter Hub multi-user server.</p> <p>homepage: https://github.com/jupyterhub/configurable-http-proxy</p>    version versionsuffix toolchain     <code>1.3.0</code> <code>-nodejs-4.4.7</code> <code>foss/2016a</code>   <code>3.1.1</code> <code>-nodejs-8.9.4</code> <code>foss/2017a</code>   <code>4.2.1</code>  <code>GCCcore/10.2.0</code>   <code>4.4.0</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#conn","title":"CONN","text":"<p>CONN is an open-source Matlab/SPM-based cross-platform software  for the computation, display, and analysis of functional connectivity Magnetic  Resonance Imaging (fcMRI). CONN is used to analyze resting state data (rsfMRI)  as well as task-related designs. </p> <p>homepage: https://web.conn-toolbox.org/home</p>    version versionsuffix toolchain     <code>21a</code> <code>-MATLAB-2021a</code> <code>system</code>"},{"location":"version-specific/supported-software/#connectomeworkbench","title":"ConnectomeWorkbench","text":"<p>Connectome Workbench is an open source, freely available visualization  and discovery tool used to map neuroimaging data, especially data generated by the  Human Connectome Project.</p> <p>homepage: https://www.humanconnectome.org/software/connectome-workbench</p>    version versionsuffix toolchain     <code>1.2.2</code>  <code>system</code>   <code>1.3.2</code>  <code>GCCcore/8.2.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.4.2</code> <code>-rh_linux64</code> <code>system</code>   <code>1.5.0</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#control-freec","title":"Control-FREEC","text":"<p>Copy number and genotype annotation from whole  genome and whole exome sequencing data.</p> <p>homepage: https://github.com/BoevaLab/FREEC</p>    version toolchain     <code>11.5</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>   <code>11.6</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#coordgenlibs","title":"CoordgenLibs","text":"<p>Schrodinger-developed 2D Coordinate Generation</p> <p>homepage: https://github.com/schrodinger/coordgenlibs</p>    version toolchain     <code>1.3.2</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>3.0.1</code> <code>gompi/2019b</code>, <code>gompi/2021a</code>, <code>gompi/2022a</code>, <code>iimpi/2020a</code>"},{"location":"version-specific/supported-software/#coot","title":"Coot","text":"<p>Coot is for macromolecular model building, model completion  and validation, particularly suitable for protein modelling using X-ray data.</p> <p>homepage: http://www2.mrc-lmb.cam.ac.uk/Personal/pemsley/coot</p>    version versionsuffix toolchain     <code>0.8.1</code> <code>-binary-Linux-x86_64-rhel-6-python-gtk2</code> <code>system</code>"},{"location":"version-specific/supported-software/#core-counter","title":"core-counter","text":"<p>Tool to check available cores and OMP threads</p> <p>homepage: https://github.com/gjbex/core-counter</p>    version toolchain     <code>1.1.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#coreutils","title":"Coreutils","text":"<p>The GNU Core Utilities are the basic file, shell and text manipulation utilities of the GNU operating system. These are the core utilities which are expected to exist on every operating system. </p> <p>homepage: https://www.gnu.org/software/coreutils/</p>    version toolchain     <code>8.23</code> <code>GCC/4.9.2</code>   <code>8.27</code> <code>GCCcore/5.4.0</code>   <code>8.29</code> <code>GCCcore/6.4.0</code>   <code>8.32</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>9.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#corner","title":"corner","text":"<p>Make some beautiful corner plots.</p> <p>homepage: https://corner.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>2.0.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>2.0.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#coverage","title":"coverage","text":"<p>Coverage.py is a tool for measuring code coverage of Python programs.  It monitors your program, noting which parts of the code have been executed,  then analyzes the source to identify code that could have been executed but was not. </p> <p>homepage: https://coverage.readthedocs.io</p>    version versionsuffix toolchain     <code>4.5.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>5.5</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#cowsay","title":"cowsay","text":"<p>Configurable talking characters in ASCII art</p> <p>homepage: https://github.com/tnalpgge/rank-amateur-cowsay</p>    version toolchain     <code>3.04</code> <code>system</code>"},{"location":"version-specific/supported-software/#cp2k","title":"CP2K","text":"<p>CP2K is a freely available (GPL) program, written in Fortran 95, to perform atomistic and molecular  simulations of solid state, liquid, molecular and biological systems. It provides a general framework for different  methods such as e.g. density functional theory (DFT) using a mixed Gaussian and plane waves approach (GPW), and  classical pair and many-body potentials. </p> <p>homepage: https://www.cp2k.org/</p>    version versionsuffix toolchain     <code>3.0</code>  <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.0</code> <code>-psmp</code> <code>intel/2016b</code>   <code>4.1</code>  <code>intel/2016b</code>   <code>4.1</code> <code>-psmp</code> <code>foss/2016b</code>   <code>5.1</code>  <code>foss/2018a</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2020a</code>   <code>6.1</code>  <code>foss/2019a</code>, <code>intel/2018a</code>, <code>intel/2020a</code>   <code>7.1</code>  <code>foss/2020a</code>, <code>foss/2020b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>   <code>7.1</code> <code>-psmp</code> <code>foss/2020b</code>   <code>8.1</code>  <code>foss/2020b</code>   <code>8.2</code>  <code>foss/2021a</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#cpb","title":"CPB","text":"<p>CPB is a novel two-step Pearson correlation based biclustering approach to mine genes that are co-regulated with   a given reference gene in order to discover genes that function in a common biological process.   In the first step, the algorithm identifies subsets of genes with high correlation, reducing false negatives   with a nonparametric filtering scheme.   In the second step, biclusters from multiple datasets are used to extract and rank gene correlation information.</p> <p>homepage: http://tda.gatech.edu/software/cpb/index.html</p>    version versionsuffix toolchain     <code>11-4-2011</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#cplex","title":"CPLEX","text":"<p>IBM ILOG CPLEX Optimizer's mathematical programming technology enables  analytical decision support for improving efficiency,  reducing costs, and increasing profitability.</p> <p>homepage: https://www.ibm.com/analytics/cplex-optimizer</p>    version versionsuffix toolchain     <code>12.9</code>  <code>GCCcore/8.2.0</code>   <code>12.10</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#cppe","title":"CPPE","text":"<p>CPPE is an open-source, light-weight C++ and Python library for Polarizable Embedding (PE)1,2 calculations. It provides an easy-to-use API to implement PE for ground-state self-consistent field (SCF) calculations and post-SCF methods. A convenient Python interface is also available.</p> <p>homepage: https://github.com/maxscheurer/cppe</p>    version toolchain     <code>0.3.1</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#cppunit","title":"CppUnit","text":"<p>CppUnit is the C++ port of the famous JUnit framework for unit testing. </p> <p>homepage: https://freedesktop.org/wiki/Software/cppunit/</p>    version toolchain     <code>1.12.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>   <code>1.15.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#cppy","title":"cppy","text":"<p>A small C++ header library which makes it easier to write Python extension modules. The primary feature is a PyObject smart pointer which automatically handles reference counting and provides convenience methods for performing common object operations.</p> <p>homepage: https://github.com/nucleic/cppy</p>    version toolchain     <code>1.1.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.2.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#cpu_features","title":"cpu_features","text":"<p>A cross-platform C library to retrieve CPU features (such as available instructions) at runtime.</p> <p>homepage: https://github.com/google/cpu_features</p>    version toolchain     <code>0.6.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#cram","title":"cram","text":"<p>Cram is a functional testing framework for command line applications.</p> <p>homepage: https://bitheap.org/cram</p>    version toolchain     <code>0.7</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#cramtools","title":"cramtools","text":"<p>CRAMTools is a set of Java tools and APIs for efficient compression of sequence  read data. Although this is intended as a stable version the code is released as early access. Parts of the CRAMTools are experimental and may not be supported in the future.</p> <p>homepage: https://github.com/enasequence/cramtools/</p>    version versionsuffix toolchain     <code>2.0</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>3.0</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#craycce","title":"CrayCCE","text":"<p>Toolchain using Cray compiler wrapper, using PrgEnv-cray (PE release: June 2019). </p> <p>homepage: https://pubs.cray.com/discover</p>    version toolchain     <code>19.06</code> <code>system</code>"},{"location":"version-specific/supported-software/#craygnu","title":"CrayGNU","text":"<p>Toolchain using Cray compiler wrapper, using PrgEnv-gnu module (PE release: June 2019). </p> <p>homepage: https://pubs.cray.com/discover</p>    version toolchain     <code>19.06</code> <code>system</code>"},{"location":"version-specific/supported-software/#crayintel","title":"CrayIntel","text":"<p>Toolchain using Cray compiler wrapper, using PrgEnv-intel (PE release: June 2019). </p> <p>homepage: https://pubs.cray.com/discover</p>    version toolchain     <code>19.06</code> <code>system</code>"},{"location":"version-specific/supported-software/#craypgi","title":"CrayPGI","text":"<p>Toolchain using Cray compiler wrapper, PrgEnv-pgi compiler (PE release: June 2019). </p> <p>homepage: https://pubs.cray.com/discover</p>    version toolchain     <code>19.06</code> <code>system</code>"},{"location":"version-specific/supported-software/#crb-blast","title":"crb-blast","text":"<p>Conditional Reciprocal Best BLAST - high confidence ortholog assignment.  CRB-BLAST is a novel method for finding orthologs between one set of sequences and another.  This is particularly useful in genome and transcriptome annotation.</p> <p>homepage: https://github.com/cboursnell/crb-blast</p>    version versionsuffix toolchain     <code>0.6.9</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>intel/2017a</code>   <code>0.6.9</code> <code>-Ruby-2.6.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#crest","title":"CREST","text":"<p>CREST is an utility/driver program for the xtb program. Originally it was designed  as conformer sampling program, hence the abbreviation Conformer\u2013Rotamer Ensemble Sampling Tool,  but now offers also some utility functions for calculations with the GFNn\u2013xTB methods. Generally  the program functions as an IO based OMP scheduler (i.e., calculations are performed by the xtb  program) and tool for the creation and analysation of structure ensembles. </p> <p>homepage: https://xtb-docs.readthedocs.io/en/latest/crest.html</p>    version toolchain     <code>2.11</code> <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#crf","title":"CRF++","text":"<p>CRF++ is a simple, customizable, and open source implementation of  Conditional Random Fields (CRFs) for segmenting/labeling sequential data. CRF++ is  designed for generic purpose and will be applied to a variety of NLP tasks, such as  Named Entity Recognition, Information Extraction and Text Chunking. </p> <p>homepage: https://taku910.github.io/crfpp/</p>    version toolchain     <code>0.58</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#crispr-dav","title":"CRISPR-DAV","text":"<p>CRISPR-DAV is a pipeline to analyze amplicon-based NGS data of CRISPR clones in a high throughput manner.</p> <p>homepage: https://github.com/pinetree1/crispr-dav/</p>    version toolchain     <code>2.3.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#crispresso2","title":"CRISPResso2","text":"<p>CRISPResso2 is a software pipeline designed to enable rapid and intuitive interpretation of genome editing experiments.</p> <p>homepage: https://github.com/pinellolab/CRISPResso2/</p>    version versionsuffix toolchain     <code>2.0.44</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>2.1.2</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>2.2.1</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#cromwell","title":"cromwell","text":"<p>Cromwell is a Workflow Management System geared towards scientific workflows.</p> <p>homepage: http://cromwell.readthedocs.io/</p>    version versionsuffix toolchain     <code>56</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#crossmap","title":"CrossMap","text":"<p>CrossMap is a program for genome coordinates conversion  between different assemblies (such as hg18 (NCBI36) &lt;=&gt; hg19 (GRCh37)).  It supports commonly used file formats including BAM, CRAM, SAM, Wiggle,  BigWig, BED, GFF, GTF and VCF.</p> <p>homepage: http://crossmap.sourceforge.net</p>    version versionsuffix toolchain     <code>0.3.9</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#crosstalkz","title":"CrossTalkZ","text":"<p>CrossTalkZ is a statistical method and software to assess the significance of crosstalk enrichment  between pairs of gene or protein groups in large biological networks. </p> <p>homepage: http://sonnhammer.sbc.su.se/download/software/CrossTalkZ/</p>    version toolchain     <code>1.4</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#crpropa","title":"CRPropa","text":"<p>CRPropa is a publicly available code to study the propagation of ultra high energy nuclei up to iron  on their voyage through an extra galactic environment.</p> <p>homepage: https://crpropa.desy.de</p>    version versionsuffix toolchain     <code>3.1.5</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>3.1.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#crumble","title":"Crumble","text":"<p>Exploration of controlled loss of quality values for compressing CRAM files</p> <p>homepage: https://github.com/jkbonfield/crumble</p>    version toolchain     <code>0.8.3</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#cryocare","title":"cryoCARE","text":"<p>This package is a memory efficient implementation of cryoCARE.  This setup trains a denoising U-Net for tomographic reconstruction according to   the Noise2Noise training paradigm. Therefore the user has to provide two        tomograms of the same sample. The simplest way to achieve this is with direct-   detector movie-frames.  You can use Warp to generate two reconstructed tomograms based on the even/odd    frames. Alternatively, the movie-frames can be split in two halves (e.g. with    MotionCor2 -SplitSum 1 or with IMOD alignframes -debug 10000) from which two     identical, up to random noise, tomograms can be reconstructed.  These two (even and odd) tomograms can be used as input to this cryoCARE         implementation.</p> <p>homepage: https://github.com/juglab/cryoCARE_pip</p>    version versionsuffix toolchain     <code>0.2.1</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cryodrgn","title":"cryoDRGN","text":"<p>cryoDRGN: Deep Reconstructing Generative Networks for cryo-EM heterogeneous  reconstruction.  CryoDRGN is a neural network based algorithm for heterogeneous cryo-EM reconstruction. In  particular, the method models a continuous distribution over 3D structures by using a neural  network based representation for the volume. </p> <p>homepage: https://cb.csail.mit.edu/cb/cryodrgn/</p>    version versionsuffix toolchain     <code>0.3.2</code>  <code>fosscuda/2020b</code>   <code>0.3.5</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.0.0-beta</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cryptominisat","title":"CryptoMiniSat","text":"<p>CryptoMiniSat is an advanced SAT solver</p> <p>homepage: https://github.com/msoos/cryptominisat</p>    version versionsuffix toolchain     <code>5.0.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#crystfel","title":"CrystFEL","text":"<p>CrystFEL is a suite of programs for processing diffraction data acquired \"serially\" in a \"snapshot\" manner, such as when using the technique of Serial Femtosecond Crystallography (SFX) with a free-electron laser source.</p> <p>homepage: http://www.desy.de/~twhite/crystfel/</p>    version toolchain     <code>0.8.0</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#csb","title":"CSB","text":"<p>Computational Structural Biology Toolbox CSB is a python library and application framework, which can be used to solve    problems in the field of structural bioinformatics. If you are a                 bioinformatician, software engineer or a researcher working in this field,       chances are you may find something useful here. Our package consists of a few    major components: 1. Core class library - object-oriented, granular, with an emphasis on design    and clean interfaces. 2. Application framework - console applications (\"protocols\"), which consume     objects from the core library in order to build something executable (and        hopefully useful). 3. Test framework - ensures that the library actually works. </p> <p>homepage: https://github.com/csb-toolbox</p>    version toolchain     <code>1.2.5</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#csbdeep","title":"CSBDeep","text":"<p>CSBDeep is a toolbox for Content-aware Image Restoration (CARE).</p> <p>homepage: https://csbdeep.bioimagecomputing.com/</p>    version versionsuffix toolchain     <code>0.4.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#csblast","title":"CSBLAST","text":"<p>Context-specific extension of BLAST that significantly improves sensitivity and alignment quality.</p> <p>homepage: https://github.com/soedinglab/csblast/</p>    version toolchain     <code>2.2.3</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#cscope","title":"cscope","text":"<p>Cscope is a developer's tool for browsing source code.</p> <p>homepage: http://cscope.sourceforge.net/</p>    version toolchain     <code>15.9</code> <code>system</code>"},{"location":"version-specific/supported-software/#csvkit","title":"csvkit","text":"<p>csvkit is a suite of command-line tools for converting to and working with CSV,  the king of tabular file formats.</p> <p>homepage: https://github.com/wireservice/csvkit</p>    version versionsuffix toolchain     <code>1.0.4</code>  <code>GCCcore/8.2.0</code>   <code>1.0.5</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#ctags","title":"ctags","text":"<p>Ctags generates an index (or tag) file of language objects found in source files that allows these  items to be quickly and easily located by a text editor or other utility.</p> <p>homepage: http://ctags.sourceforge.net/</p>    version toolchain     <code>5.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#ctffind","title":"ctffind","text":"<p>Program for finding CTFs of electron micrographs.</p> <p>homepage: https://grigoriefflab.umassmed.edu/ctffind4</p>    version versionsuffix toolchain     <code>4.1.13</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>fosscuda/2019b</code>   <code>4.1.14</code>  <code>foss/2019b</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>fosscuda/2019b</code>, <code>fosscuda/2020b</code>   <code>4.1.14</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ctpl","title":"CTPL","text":"<p>Modern and efficient C++ Thread Pool Library</p> <p>homepage: https://github.com/vit-vit/CTPL.git</p>    version toolchain     <code>0.0.2</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#cube","title":"Cube","text":"<p>Cube, which is used as performance report explorer for Scalasca and  Score-P, is a generic tool for displaying a multi-dimensional performance space  consisting of the dimensions (i) performance metric, (ii) call path, and (iii) system  resource. Each dimension can be represented as a tree, where non-leaf nodes of the tree  can be collapsed or expanded to achieve the desired level of granularity.</p> <p>homepage: http://www.scalasca.org/software/cube-4.x/download.html</p>    version toolchain     <code>4.3.4</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#cubegui","title":"CubeGUI","text":"<p>Cube, which is used as performance report explorer for Scalasca and Score-P,  is a generic tool for displaying a multi-dimensional performance space  consisting of the dimensions (i) performance metric, (ii) call path, and  (iii) system resource. Each dimension can be represented as a tree, where  non-leaf nodes of the tree can be collapsed or expanded to achieve the  desired level of granularity.   This module provides the Cube graphical report explorer. </p> <p>homepage: https://www.scalasca.org/software/cube-4.x/download.html</p>    version toolchain     <code>4.4.4</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>   <code>4.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#cubelib","title":"CubeLib","text":"<p>Cube, which is used as performance report explorer for Scalasca and Score-P,  is a generic tool for displaying a multi-dimensional performance space  consisting of the dimensions (i) performance metric, (ii) call path, and  (iii) system resource. Each dimension can be represented as a tree, where  non-leaf nodes of the tree can be collapsed or expanded to achieve the  desired level of granularity.   This module provides the Cube general purpose C++ library component and  command-line tools. </p> <p>homepage: https://www.scalasca.org/software/cube-4.x/download.html</p>    version toolchain     <code>4.4.4</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#cubewriter","title":"CubeWriter","text":"<p>Cube, which is used as performance report explorer for Scalasca and Score-P,  is a generic tool for displaying a multi-dimensional performance space  consisting of the dimensions (i) performance metric, (ii) call path, and  (iii) system resource. Each dimension can be represented as a tree, where  non-leaf nodes of the tree can be collapsed or expanded to achieve the  desired level of granularity.   This module provides the Cube high-performance C writer library component. </p> <p>homepage: https://www.scalasca.org/software/cube-4.x/download.html</p>    version toolchain     <code>4.4.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#cuda","title":"CUDA","text":"<p>CUDA (formerly Compute Unified Device Architecture) is a parallel  computing platform and programming model created by NVIDIA and implemented by the  graphics processing units (GPUs) that they produce. CUDA gives developers access  to the virtual instruction set and memory of the parallel computational elements in CUDA GPUs.</p> <p>homepage: https://developer.nvidia.com/cuda-toolkit</p>    version toolchain     <code>5.5.22</code> <code>GCC/4.8.2</code>, <code>system</code>   <code>6.0.37</code> <code>system</code>   <code>6.5.14</code> <code>system</code>   <code>7.0.28</code> <code>system</code>   <code>7.5.18</code> <code>GCC/4.9.4-2.25</code>, <code>iccifort/2016.3.210-GCC-4.9.3-2.25</code>, <code>system</code>   <code>8.0.44</code> <code>GCC/5.4.0-2.26</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>system</code>   <code>8.0.61</code> <code>system</code>   <code>8.0.61_375.26</code> <code>GCC/5.4.0-2.26</code>   <code>9.0.176</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>system</code>   <code>9.1.85</code> <code>GCC/6.4.0-2.28</code>, <code>system</code>   <code>9.2.88</code> <code>GCC/6.4.0-2.28</code>, <code>GCC/7.3.0-2.30</code>, <code>system</code>   <code>9.2.148.1</code> <code>system</code>   <code>10.0.130</code> <code>system</code>   <code>10.1.105</code> <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>system</code>   <code>10.1.168</code> <code>system</code>   <code>10.1.243</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>, <code>system</code>   <code>10.2.89</code> <code>GCC/8.3.0</code>   <code>11.0.2</code> <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>   <code>11.1.1</code> <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>11.3.1</code> <code>system</code>   <code>11.4.1</code> <code>system</code>   <code>11.4.2</code> <code>system</code>   <code>11.5.0</code> <code>system</code>   <code>11.5.1</code> <code>system</code>   <code>11.6.0</code> <code>system</code>   <code>11.7.0</code> <code>system</code>   <code>11.8.0</code> <code>system</code>   <code>12.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cuda-samples","title":"CUDA-Samples","text":"<p>Samples for CUDA Developers which demonstrates features in CUDA Toolkit</p> <p>homepage: https://github.com/NVIDIA/cuda-samples</p>    version versionsuffix toolchain     <code>11.3</code> <code>-CUDA-11.3.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#cudacompat","title":"CUDAcompat","text":"<p>Using the CUDA Forward Compatibility package,  system administrators can run applications built using a newer toolkit  even when an older driver that does not satisfy the minimum required driver version  is installed on the system.  This forward compatibility allows the CUDA deployments in data centers and enterprises  to benefit from the faster release cadence and the latest features and performance of CUDA Toolkit. </p> <p>homepage: https://docs.nvidia.com/deploy/cuda-compatibility/index.html</p>    version versionsuffix toolchain     <code>11</code>  <code>system</code>   <code>11.6</code>  <code>system</code>   <code>11.6</code> <code>-510.85.02</code> <code>system</code>   <code>11.7</code>  <code>system</code>   <code>11.7</code> <code>-515.65.01</code> <code>system</code>"},{"location":"version-specific/supported-software/#cudacore","title":"CUDAcore","text":"<p>CUDA (formerly Compute Unified Device Architecture) is a parallel  computing platform and programming model created by NVIDIA and implemented by the  graphics processing units (GPUs) that they produce. CUDA gives developers access  to the virtual instruction set and memory of the parallel computational elements in CUDA GPUs.</p> <p>homepage: https://developer.nvidia.com/cuda-toolkit</p>    version toolchain     <code>11.0.2</code> <code>system</code>   <code>11.1.1</code> <code>system</code>   <code>11.2.1</code> <code>system</code>   <code>11.2.2</code> <code>system</code>   <code>11.3.0</code> <code>system</code>   <code>11.4.0</code> <code>system</code>   <code>11.5.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#cudnn","title":"cuDNN","text":"<p>The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks.</p> <p>homepage: https://developer.nvidia.com/cudnn</p>    version versionsuffix toolchain     <code>4.0</code>  <code>system</code>   <code>5.0</code> <code>-CUDA-7.5.18</code> <code>system</code>   <code>5.0-rc</code>  <code>system</code>   <code>5.1</code> <code>-CUDA-8.0.44</code> <code>system</code>   <code>6.0</code> <code>-CUDA-8.0.61</code> <code>system</code>   <code>6.0.21</code> <code>-CUDA-7.5.18</code> <code>system</code>   <code>6.0.21</code> <code>-CUDA-8.0.44</code> <code>system</code>   <code>7.0.2</code> <code>-CUDA-9.0.176</code> <code>system</code>   <code>7.0.5</code> <code>-CUDA-8.0.44</code> <code>system</code>   <code>7.0.5</code> <code>-CUDA-9.0.176</code> <code>system</code>   <code>7.0.5</code> <code>-CUDA-9.1.85</code> <code>system</code>   <code>7.0.5.15</code>  <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>intelcuda/2017b</code>   <code>7.1.4.18</code>  <code>fosscuda/2018b</code>   <code>7.4.2.24</code>  <code>gcccuda/2019a</code>   <code>7.4.2.24</code> <code>-CUDA-10.0.130</code> <code>system</code>   <code>7.5.0.56</code> <code>-CUDA-10.0.130</code> <code>system</code>   <code>7.6.2.24</code> <code>-CUDA-10.1.243</code> <code>system</code>   <code>7.6.4.38</code>  <code>gcccuda/2019a</code>, <code>gcccuda/2019b</code>   <code>7.6.4.38</code> <code>-CUDA-10.0.130</code> <code>system</code>   <code>8.0.4.30</code> <code>-CUDA-11.0.2</code> <code>system</code>   <code>8.0.4.30</code> <code>-CUDA-11.1.1</code> <code>system</code>   <code>8.0.5.39</code> <code>-CUDA-11.1.1</code> <code>system</code>   <code>8.1.0.77</code> <code>-CUDA-11.2.1</code> <code>system</code>   <code>8.1.1.33</code> <code>-CUDA-11.2.1</code> <code>system</code>   <code>8.2.1.32</code> <code>-CUDA-11.3.1</code> <code>system</code>   <code>8.2.2.26</code> <code>-CUDA-11.4.0</code> <code>system</code>   <code>8.2.2.26</code> <code>-CUDA-11.4.1</code> <code>system</code>   <code>8.4.0.27</code> <code>-CUDA-11.6.0</code> <code>system</code>   <code>8.4.1.50</code> <code>-CUDA-11.6.0</code> <code>system</code>   <code>8.4.1.50</code> <code>-CUDA-11.7.0</code> <code>system</code>   <code>8.6.0.163</code> <code>-CUDA-11.8.0</code> <code>system</code>   <code>8.7.0.84</code> <code>-CUDA-11.8.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cufflinks","title":"Cufflinks","text":"<p>Transcript assembly, differential expression, and differential regulation for RNA-Seq</p> <p>homepage: http://cole-trapnell-lab.github.io/cufflinks/</p>    version toolchain     <code>2.2.1</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>20190706</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>, <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#cunit","title":"CUnit","text":"<p>Automated testing framework for C.</p> <p>homepage: https://sourceforge.net/projects/cunit/</p>    version toolchain     <code>2.1-3</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#cupy","title":"CuPy","text":"<p>CuPy is an open-source array library accelerated with NVIDIA CUDA.</p> <p>homepage: https://cupy.dev</p>    version versionsuffix toolchain     <code>8.2.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>8.5.0</code>  <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#curl","title":"cURL","text":"<p>libcurl is a free and easy-to-use client-side URL transfer library,  supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP,  LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, Telnet and TFTP.  libcurl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP  form based upload, proxies, cookies, user+password authentication (Basic,  Digest, NTLM, Negotiate, Kerberos), file transfer resume, http proxy tunneling  and more. </p> <p>homepage: https://curl.haxx.se</p>    version toolchain     <code>7.33.0</code> <code>GCC/4.8.2</code>   <code>7.34.0</code> <code>GCC/4.8.2</code>   <code>7.40.0</code> <code>GCC/4.9.2</code>   <code>7.46.0</code> <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>7.47.0</code> <code>foss/2016a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>   <code>7.49.1</code> <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>7.52.1</code> <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>7.53.1</code> <code>GCCcore/6.3.0</code>   <code>7.54.0</code> <code>GCCcore/6.3.0</code>   <code>7.55.1</code> <code>GCCcore/6.4.0</code>   <code>7.56.0</code> <code>GCCcore/6.4.0</code>   <code>7.56.1</code> <code>GCCcore/6.4.0</code>   <code>7.58.0</code> <code>GCCcore/6.4.0</code>   <code>7.59.0</code> <code>GCCcore/6.4.0</code>   <code>7.60.0</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>7.63.0</code> <code>GCCcore/8.2.0</code>   <code>7.66.0</code> <code>GCCcore/8.3.0</code>   <code>7.69.1</code> <code>GCCcore/9.3.0</code>   <code>7.72.0</code> <code>GCCcore/10.2.0</code>   <code>7.76.0</code> <code>GCCcore/10.3.0</code>   <code>7.78.0</code> <code>GCCcore/11.2.0</code>   <code>7.83.0</code> <code>GCCcore/11.3.0</code>   <code>7.84.0</code> <code>GCCcore/12.1.0</code>   <code>7.86.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#custodian","title":"custodian","text":"<p>A simple JIT job management framework in Python.</p> <p>homepage: https://pypi.python.org/pypi/custodian</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#cutadapt","title":"cutadapt","text":"<p>Cutadapt finds and removes adapter sequences, primers, poly-A tails and  other types of unwanted sequence from your high-throughput sequencing reads.</p> <p>homepage: https://opensource.scilifelab.se/projects/cutadapt/</p>    version versionsuffix toolchain     <code>1.9.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.9.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.14</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.15</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>1.16</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.16</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.16</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.18</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>1.18</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.18</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>   <code>1.18</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.7</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.8</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.10</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.10</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>3.4</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.5</code>  <code>GCCcore/11.2.0</code>   <code>4.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#cutensor","title":"cuTENSOR","text":"<p>The cuTENSOR Library is a GPU-accelerated tensor linear algebra library providing tensor contraction,  reduction and elementwise operations.</p> <p>homepage: https://developer.nvidia.com/cutensor</p>    version versionsuffix toolchain     <code>1.2.2.5</code>  <code>gcccuda/2019b</code>   <code>1.2.2.5</code> <code>-CUDA-11.1.1</code> <code>system</code>   <code>1.6.0.3</code> <code>-CUDA-11.3.1</code> <code>system</code>   <code>1.6.1.5</code> <code>-CUDA-11.7.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cvs","title":"CVS","text":"<p>CVS is a version control system, an important component of  Source Configuration Management (SCM).</p> <p>homepage: https://savannah.nongnu.org/projects/cvs</p>    version toolchain     <code>1.11.23</code> <code>GCC/4.8.2</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#cvxopt","title":"CVXOPT","text":"<p>CVXOPT is a free software package for convex optimization based on the Python programming language.  Its main purpose is to make the development of software for convex optimization applications straightforward by  building on Python's extensive standard library and on the strengths of Python as a high-level programming language. </p> <p>homepage: https://cvxopt.org</p>    version versionsuffix toolchain     <code>1.1.9</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.2.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.2.3</code>  <code>foss/2019a</code>   <code>1.2.3</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.2.4</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.2.6</code>  <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cvxpy","title":"CVXPY","text":"<p>CVXPY is a Python-embedded modeling language for convex optimization problems.  It allows you to express your problem in a natural way that follows the math,  rather than in the restrictive standard form required by solvers. </p> <p>homepage: https://www.cvxpy.org/</p>    version versionsuffix toolchain     <code>1.0.24</code>  <code>foss/2019a</code>   <code>1.0.28</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#cwipi","title":"CWIPI","text":"<p>CWIPI (Coupling With Interpolation Parallel Interface) library helps in chaining and coupling codes. Provides exchanges of interpolated fields through a non-compliant geometric interface and allows control of the coupling algorithm using control parameters. CWIPI takes advantage of the distribution of the definition of the coupling algorithm in the different codes. </p> <p>homepage: https://w3.onera.fr/cwipi/</p>    version toolchain     <code>0.12.0</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#cwltool","title":"cwltool","text":"<p>Common workflow language (CWL) reference implementation.</p> <p>homepage: https://github.com/common-workflow-language/cwltool</p>    version toolchain     <code>3.1.20221018083734</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#cxxopts","title":"cxxopts","text":"<p>cxxopts is a lightweight C++ command line option parser</p> <p>homepage: https://github.com/jarro2783/cxxopts</p>    version toolchain     <code>3.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#cysignals","title":"cysignals","text":"<p>The cysignals package provides mechanisms to handle  interrupts (and other signals and errors) in Cython code.</p> <p>homepage: https://pypi.org/project/cysignals/</p>    version versionsuffix toolchain     <code>1.10.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.10.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#cython","title":"Cython","text":"<p>Cython is an optimising static compiler for both the Python programming language and the extended Cython programming language (based on Pyrex). </p> <p>homepage: https://cython.org/</p>    version versionsuffix toolchain     <code>0.23.4</code> <code>-Python-2.7.10</code> <code>gimkl/2.11.5</code>   <code>0.24.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.25.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>0.25.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.27.3</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>0.29.10</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.29.10</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.29.22</code>  <code>GCCcore/10.2.0</code>   <code>3.0a5</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#cytoolz","title":"cytoolz","text":"<p>Cython implementation of the toolz package, which provides high performance utility functions  for iterables, functions, and dictionaries.</p> <p>homepage: https://github.com/pytoolz/cytoolz</p>    version versionsuffix toolchain     <code>0.10.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.10.1</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#cytoscape","title":"Cytoscape","text":"<p>Cytoscape is an open source software platform for visualizing  complex networks and integrating these with any type of attribute data.  A lot of Apps are available for various kinds of problem domains,  including bioinformatics, social network analysis, and semantic web.</p> <p>homepage: https://cytoscape.org/</p>    version versionsuffix toolchain     <code>3.9.1</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#cytosim","title":"cytosim","text":"<p>Cytosim is a cytoskeleton simulation engine written in  C++ working on Mac OS, GNU/Linux and Windows (with Cygwin).</p> <p>homepage: https://github.com/nedelec/cytosim</p>    version versionsuffix toolchain     <code>20190117</code> <code>-mkl</code> <code>gomkl/2019a</code>"},{"location":"version-specific/supported-software/#cyvcf2","title":"cyvcf2","text":"<p>cython + htslib == fast VCF and BCF processing</p> <p>homepage: https://github.com/brentp/cyvcf2</p>    version versionsuffix toolchain     <code>0.10.10</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.11.5</code>  <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#d","title":"D","text":"<p>dadi - dagitty - Dakota - Dalton - damageproto - dammit - DANPOS2 - DAS_Tool - dask - datamash - davix - DB - DB_File - DBD-mysql - DBG2OLC - DBus - dbus-glib - dcm2niix - DCMTK - dd - deal.II - deap - decona - deconf - DeconICA - deepdiff - DeepLabCut - deepmedic - DeepMod2 - DeepSurv - deepTools - Delly - DeMixT - DendroPy - destiny - Detectron2 - detonate - Devito - DFA - DFT-D3 - DFT-D4 - DFTB+ - dftd3-lib - DGL - DIAL - DIAMOND - Dice - dicom2nifti - DicomBrowser - Diffutils - dijitso - dill - DIRAC - distributed - DistributedStream - DL_POLY_4 - DL_POLY_Classic - dlb - dlib - dm-reverb - dm-tree - DMCfun - DMTCP - DOLFIN - Doris - DosageConvertor - dotNET-Core-Runtime - dotNET-SDK - double-conversion - DoubletFinder - Doxygen - DRAGMAP - Drake - dRep - DROP - dropEst - DSA - dSFMT - DSRC - Dsuite - dtcmp - dtcwt - DualSPHysics - DUBStepR - dune-core - dune-fem - dxpy - DyMat</p>"},{"location":"version-specific/supported-software/#dadi","title":"dadi","text":"<p>\u2202a\u2202i implements methods for demographic history and selection inference from genetic data,  based on diffusion approximations to the allele frequency spectrum.</p> <p>homepage: https://bitbucket.org/gutenkunstlab/dadi</p>    version versionsuffix toolchain     <code>1.7.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#dagitty","title":"dagitty","text":"<p>A port of the web-based software 'DAGitty', available at http://dagitty.net, for  analyzing structural causal models (also known as directed acyclic graphs or DAGs). This package  computes covariate adjustment sets for estimating causal effects, enumerates instrumental variables,  derives testable implications (d-separation and vanishing tetrads), generates equivalent models, and  includes a simple facility for data simulation.</p> <p>homepage: https://cran.r-project.org/web/packages/dagitty/</p>    version versionsuffix toolchain     <code>0.2-2</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#dakota","title":"Dakota","text":"<p>The Dakota project delivers both state-of-the-art research and robust, usable  software for optimization and UQ. Broadly, the Dakota software's advanced  parametric analyses enable design exploration, model calibration, risk  analysis, and quantification of margins and uncertainty with computational  models. </p> <p>homepage: https://dakota.sandia.gov/</p>    version toolchain     <code>6.16.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#dalton","title":"Dalton","text":"<p>The Dalton code is a powerful tool for a wide range of molecular properties  at different levels of theory.  Any published work arising from use of one of the Dalton2016 programs  must acknowledge that by a proper reference,  https://www.daltonprogram.org/www/citation.html.</p> <p>homepage: https://daltonprogram.org/</p>    version versionsuffix toolchain     <code>2016</code> <code>-i8</code> <code>intel/2017b</code>   <code>2020.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#damageproto","title":"damageproto","text":"<p>X protocol and ancillary headers for xinerama</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#dammit","title":"dammit","text":"<p>dammit is a simple de novo transcriptome annotator. It was born out of  the observations that annotation is mundane and annoying,  all the individual pieces of the process exist already, and the existing  solutions are overly complicated or rely on crappy non-free software.</p> <p>homepage: http://www.camillescott.org/dammit/</p>    version versionsuffix toolchain     <code>0.3.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#danpos2","title":"DANPOS2","text":"<p>A toolkit for Dynamic Analysis of Nucleosome and Protein Occupancy by Sequencing, version 2</p> <p>homepage: https://sites.google.com/site/danposdoc</p>    version versionsuffix toolchain     <code>2.2.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#das_tool","title":"DAS_Tool","text":"<p>DAS Tool is an automated method that integrates the results of a flexible number of binning  algorithms to calculate an optimized, non-redundant set of bins from a single assembly.</p> <p>homepage: https://github.com/cmks/DAS_Tool</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-R-3.5.1-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.1.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>   <code>1.1.3</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#dask","title":"dask","text":"<p>Dask natively scales Python. Dask provides advanced parallelism for analytics, enabling performance  at scale for the tools you love.</p> <p>homepage: https://dask.org/</p>    version versionsuffix toolchain     <code>0.8.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.8.2</code> <code>-Python-3.5.1</code> <code>intel/2016a</code>   <code>0.11.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.11.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.11.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.12.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.12.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.16.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.16.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.17.0</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>0.17.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.17.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.19.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>1.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.1.4</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>2.3.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>2.8.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>2.18.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>2021.2.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>2021.9.1</code>  <code>foss/2021a</code>   <code>2022.1.0</code>  <code>foss/2021b</code>   <code>2022.10.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#datamash","title":"datamash","text":"<p>GNU datamash performs basic numeric, textual and statistical operations on input data files</p> <p>homepage: https://www.gnu.org/software/datamash/</p>    version toolchain     <code>1.3</code> <code>foss/2018a</code>   <code>1.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#davix","title":"davix","text":"<p>The davix project aims to make file management over HTTP-based protocols simple.  The focus is on high-performance remote I/O and data management of large collections of files.  Currently, there is support for the WebDav (link is external), Amazon S3 (link is external),  Microsoft Azure (link is external), and HTTP (link is external) protocols.</p> <p>homepage: https://dmc.web.cern.ch/projects/davix/home</p>    version toolchain     <code>0.6.6</code> <code>intel/2017a</code>   <code>0.7.5</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#db","title":"DB","text":"<p>Berkeley DB enables the development of custom data management solutions,  without the overhead traditionally associated with such custom projects.</p> <p>homepage: http://www.oracle.com/technetwork/products/berkeleydb</p>    version toolchain     <code>4.8.30</code> <code>intel/2016a</code>   <code>6.2.23</code> <code>foss/2016a</code>   <code>6.2.32</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>18.1.25</code> <code>GCCcore/7.3.0</code>   <code>18.1.32</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>18.1.40</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#db_file","title":"DB_File","text":"<p>Perl5 access to Berkeley DB version 1.x.</p> <p>homepage: https://perldoc.perl.org/DB_File.html</p>    version versionsuffix toolchain     <code>1.835</code>  <code>GCCcore/9.3.0</code>   <code>1.835</code> <code>-Perl-5.20.3</code> <code>intel/2016a</code>   <code>1.835</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>   <code>1.855</code>  <code>GCCcore/10.2.0</code>   <code>1.856</code>  <code>GCCcore/10.3.0</code>   <code>1.857</code>  <code>GCCcore/11.2.0</code>   <code>1.858</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#dbd-mysql","title":"DBD-mysql","text":"<p>Perl binding for MySQL</p> <p>homepage: https://metacpan.org/pod/distribution/DBD-mysql/lib/DBD/mysql.pm</p>    version versionsuffix toolchain     <code>4.032</code> <code>-Perl-5.22.2</code> <code>intel/2016a</code>   <code>4.033</code> <code>-Perl-5.24.0</code> <code>intel/2016b</code>   <code>4.042</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>   <code>4.046</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.046</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>4.048</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>4.050</code>  <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>   <code>4.050</code> <code>-Perl-5.28.1</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#dbg2olc","title":"DBG2OLC","text":"<p>DBG2OLC:Efficient Assembly of Large Genomes Using Long Erroneous Reads of the Third Generation   Sequencing Technologies</p> <p>homepage: https://github.com/yechengxi/DBG2OLC</p>    version toolchain     <code>20170208</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>20180221</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#dbus","title":"DBus","text":"<p>D-Bus is a message bus system, a simple way for applications to talk  to one another.  In addition to interprocess communication, D-Bus helps  coordinate process lifecycle; it makes it simple and reliable to code  a \"single instance\" application or daemon, and to launch applications  and daemons on demand when their services are needed. </p> <p>homepage: https://dbus.freedesktop.org/</p>    version toolchain     <code>1.10.8</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.10.12</code> <code>intel/2016b</code>   <code>1.10.20</code> <code>GCCcore/6.4.0</code>   <code>1.11.20</code> <code>intel/2017a</code>   <code>1.13.0</code> <code>intel/2017b</code>   <code>1.13.6</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.13.8</code> <code>GCCcore/8.2.0</code>   <code>1.13.12</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.13.18</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.14.0</code> <code>GCCcore/11.3.0</code>   <code>1.15.2</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#dbus-glib","title":"dbus-glib","text":"<p>D-Bus is a message bus system, a simple way for applications to talk to one another.</p> <p>homepage: https://dbus.freedesktop.org/doc/dbus-glib</p>    version toolchain     <code>0.106</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.108</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>0.110</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>intel/2017b</code>   <code>0.112</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#dcm2niix","title":"dcm2niix","text":"<p>dcm2niix is designed to convert neuroimaging data from the DICOM format to the NIfTI format.</p> <p>homepage: https://github.com/rordenlab/dcm2niix</p>    version toolchain     <code>1.0.20180622</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.0.20190902</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.0.20200331</code> <code>GCCcore/8.3.0</code>   <code>1.0.20201102</code> <code>GCCcore/8.3.0</code>   <code>1.0.20211006</code> <code>GCCcore/10.3.0</code>   <code>1.0.20220720</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#dcmtk","title":"DCMTK","text":"<p>DCMTK is a collection of libraries and applications implementing large parts the DICOM standard. It includes software for examining, constructing and converting DICOM image files, handling offline media, sending and receiving images over a network connection, as well as demonstrative image storage and worklist servers.</p> <p>homepage: https://dicom.offis.de/dcmtk</p>    version toolchain     <code>3.6.3</code> <code>GCCcore/7.3.0</code>   <code>3.6.5</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.6.6</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.6.7</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#dd","title":"dd","text":"<p>dd is a package for working with binary decision diagrams that includes both a pure Python implementation and Cython bindings to C libraries (CUDD, Sylvan, BuDDy). The Python and Cython modules implement the same API, so the same user code runs with both. All the standard operations on BDDs are available, including dynamic variable reordering using sifting, garbage collection, dump/load from files, plotting, and a parser of quantified Boolean expressions. This module includes bindings for: CUDD v3.0.0, Sylvan v1.0.0</p> <p>homepage: https://github.com/tulip-control/dd</p>    version versionsuffix toolchain     <code>0.5.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#dealii","title":"deal.II","text":"<p>deal.II is a C++ program library targeted at the computational solution of  partial differential equations using adaptive finite elements.</p> <p>homepage: https://www.dealii.org</p>    version toolchain     <code>9.1.1</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>9.3.3</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#deap","title":"deap","text":"<p>DEAP is a novel evolutionary computation framework for rapid prototyping and testing of ideas.  It seeks to make algorithms explicit and data structures transparent.</p> <p>homepage: http://deap.readthedocs.org/en/master/</p>    version versionsuffix toolchain     <code>0.9.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#decona","title":"decona","text":"<p>fastq to polished sequenses: pipeline suitable for mixed samples and long (Nanopore) reads</p> <p>homepage: https://github.com/Saskia-Oosterbroek/decona</p>    version versionsuffix toolchain     <code>0.1.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#deconf","title":"deconf","text":"<p>decomposition (deconfounding) of OMICS datasets in heterogeneous tissues</p> <p>homepage: http://web.cbio.uct.ac.za/~renaud/CRAN/</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#deconica","title":"DeconICA","text":"<p>Deconvolution of transcriptome through Immune Component Analysis (DeconICA) is an R package for identifying immune-related signals in transcriptome through deconvolution or unsupervised source separation methods.</p> <p>homepage: https://urszulaczerwinska.github.io/DeconICA</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#deepdiff","title":"deepdiff","text":"<p>DeepDiff: Deep Difference of dictionaries, iterables and almost any other object recursively.</p> <p>homepage: https://zepworks.com/deepdiff/current/</p>    version versionsuffix toolchain     <code>3.3.0</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>3.3.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.0.6</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>5.0.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>5.7.0</code>  <code>GCCcore/11.2.0</code>   <code>5.8.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#deeplabcut","title":"DeepLabCut","text":"<p>Markerless tracking of user-defined features with deep learning</p> <p>homepage: http://www.mousemotorlab.org/deeplabcut</p>    version versionsuffix toolchain     <code>2.2.0.6</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#deepmedic","title":"deepmedic","text":"<p>Efficient Multi-Scale 3D Convolutional Neural Network for Segmentation of 3D Medical Scans.</p> <p>homepage: https://biomedia.doc.ic.ac.uk/software/deepmedic/</p>    version versionsuffix toolchain     <code>0.8.2</code>  <code>foss/2021a</code>   <code>0.8.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#deepmod2","title":"DeepMod2","text":"<p>DeepMod2 is a computational tool for detecting DNA methylation and modifications  from Oxford Nanopore reads. </p> <p>homepage: https://github.com/WGLab/DeepMod2</p>    version toolchain     <code>0.0.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#deepsurv","title":"DeepSurv","text":"<p>DeepSurv is a deep learning approach to survival analysis. </p> <p>homepage: https://github.com/jaredleekatzman/DeepSurv</p>    version versionsuffix toolchain     <code>2.0.0-20180922</code> <code>-Python-3.6.6</code> <code>fosscuda/2018b</code>"},{"location":"version-specific/supported-software/#deeptools","title":"deepTools","text":"<p>deepTools is a suite of python tools particularly developed for the efficient analysis of  high-throughput sequencing data, such as ChIP-seq, RNA-seq or MNase-seq.</p> <p>homepage: https://deeptools.readthedocs.io/</p>    version versionsuffix toolchain     <code>2.5.4</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.3.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.3.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>3.3.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.5.0</code>  <code>foss/2021a</code>   <code>3.5.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#delly","title":"Delly","text":"<p>Delly is an integrated structural variant (SV) prediction method that can discover, genotype and visualize deletions, tandem duplications, inversions and translocations at single-nucleotide resolution in short-read massively parallel sequencing data. It uses paired-ends, split-reads and read-depth to sensitively and accurately delineate genomic rearrangements throughout the genome.</p> <p>homepage: https://github.com/dellytools/delly/</p>    version versionsuffix toolchain     <code>0.7.8</code> <code>-linux_x86_64</code> <code>system</code>   <code>0.8.7</code>  <code>gompi/2020b</code>   <code>1.1.5</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#demixt","title":"DeMixT","text":"<p>Cell type-specific deconvolution of heterogeneous tumor samples with two or three components  using expression data from RNAseq or microarray platforms.</p> <p>homepage: https://bioinformatics.mdanderson.org/main/DeMixT</p>    version versionsuffix toolchain     <code>0.2.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#dendropy","title":"DendroPy","text":"<p>A Python library for phylogenetics and phylogenetic computing:  reading, writing, simulation, processing and manipulation of phylogenetic trees  (phylogenies) and characters.</p> <p>homepage: https://dendropy.org/</p>    version versionsuffix toolchain     <code>4.4.0</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2019a</code>   <code>4.4.0</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>4.5.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>4.5.2</code> <code>-Python-2.7.18</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#destiny","title":"destiny","text":"<p>R packages to create and plot diffusion maps.</p> <p>homepage: https://bioconductor.org/packages/destiny</p>    version versionsuffix toolchain     <code>2.5.6</code> <code>-R-3.4.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#detectron2","title":"Detectron2","text":"<p>Detectron2 is Facebook AI Research's next generation library that provides state-of-the-art detection and segmentation algorithms. It is the successor of Detectron and maskrcnn-benchmark. It supports a number of computer vision research projects and production applications in Facebook.</p> <p>homepage: https://github.com/facebookresearch/detectron2</p>    version versionsuffix toolchain     <code>0.6</code>  <code>foss/2021a</code>   <code>0.6</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#detonate","title":"detonate","text":"<p>DETONATE (DE novo TranscriptOme rNa-seq Assembly with or without the Truth Evaluation)  consists of two component packages, RSEM-EVAL and REF-EVAL. Both packages are mainly intended to be used  to evaluate de novo transcriptome assemblies, although REF-EVAL can be used to compare sets of any kinds  of genomic sequences.</p> <p>homepage: http://deweylab.biostat.wisc.edu/detonate/</p>    version toolchain     <code>1.11</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#devito","title":"Devito","text":"<p>Devito is a domain-specific Language (DSL) and code generation framework for  performing optimised Finite Difference (FD) computation from high-level symbolic problem definitions.  Devito performs automated code generation and Just-In-time (JIT) compilation based on symbolic  equations defined in SymPy to create and execute highly optimised Finite Difference stencil kernels on  multiple computer platforms.</p> <p>homepage: https://www.devitoproject.org</p>    version versionsuffix toolchain     <code>4.6.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#dfa","title":"DFA","text":"<p>Python library for modeling DFAs, Moore Machines, and Transition Systems.</p> <p>homepage: https://github.com/mvcisback/dfa</p>    version versionsuffix toolchain     <code>0.3.4</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>2.1.2</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#dft-d3","title":"DFT-D3","text":"<p>DFT-D3 implements a dispersion correction for density functionals, Hartree-Fock and semi-empirical  quantum chemical methods.</p> <p>homepage: http://www.thch.uni-bonn.de/tc/index.php?section=downloads&amp;subsection=DFT-D3&amp;lang=english</p>    version toolchain     <code>3.2.0</code> <code>GCC/8.3.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#dft-d4","title":"DFT-D4","text":"<p>Generally Applicable Atomic-Charge Dependent London Dispersion Correction.</p> <p>homepage: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dftd4</p>    version versionsuffix toolchain     <code>3.2.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#dftb","title":"DFTB+","text":"<p>DFTB+ is a fast and efficient versatile quantum mechanical simulation package. It is based on the Density Functional Tight Binding (DFTB) method, containing almost all of the useful extensions which have been developed for the DFTB framework so far.  Using DFTB+ you can carry out quantum mechanical simulations like with ab-initio density functional theory based packages, but in an approximate way gaining typically around two order of magnitude in speed.</p> <p>homepage: https://www.dftb-plus.info</p>    version versionsuffix toolchain     <code>1.3.1</code>  <code>intel/2017a</code>   <code>17.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>19.1</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>19.1</code> <code>-Python-2.7.16-mpi</code> <code>foss/2019b</code>   <code>21.1</code>  <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#dftd3-lib","title":"dftd3-lib","text":"<p>This is a repackaged version of the DFTD3 program by S. Grimme and his coworkers. The original program (V3.1 Rev 1) was downloaded at 2016-04-03. It has been converted to free format and encapsulated into modules.</p> <p>homepage: https://github.com/dftbplus/dftd3-lib</p>    version toolchain     <code>0.9</code> <code>GCC/8.3.0</code>, <code>intel-compilers/2021.2.0</code>"},{"location":"version-specific/supported-software/#dgl","title":"DGL","text":"<p>DGL is an easy-to-use, high performance and scalable Python package for deep learning on graphs. DGL is framework agnostic, meaning if a deep graph model is a component of an end-to-end application, the rest of the logics can be implemented in any major frameworks, such as PyTorch, Apache MXNet or TensorFlow.</p> <p>homepage: https://www.dgl.ai</p>    version versionsuffix toolchain     <code>0.6.1</code> <code>-Python-3.7.4-PyTorch-1.8.1</code> <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#dial","title":"DIAL","text":"<p>DIAL (De novo Identification of Alleles) is a collection of programs  to automate the discovery of alleles for a species where we lack a reference sequence.   The SNPs/alleles are specifically selected for a low error rate in genotyping assays.   </p> <p>homepage: http://www.bx.psu.edu/miller_lab/</p>    version toolchain     <code>2011.06.06</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#diamond","title":"DIAMOND","text":"<p>Accelerated BLAST compatible local sequence aligner</p> <p>homepage: https://github.com/bbuchfink/diamond</p>    version toolchain     <code>0.9.22</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>0.9.24</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>0.9.30</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>0.9.36</code> <code>GCC/9.3.0</code>   <code>2.0.4</code> <code>GCC/9.3.0</code>   <code>2.0.6</code> <code>GCC/7.3.0-2.30</code>   <code>2.0.7</code> <code>GCC/10.2.0</code>   <code>2.0.11</code> <code>GCC/10.3.0</code>   <code>2.0.13</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#dice","title":"Dice","text":"<p>Dice contains code for performing SHCI, VMC, GFMC, DMC, FCIQMC, stochastic MRCI and SC-NEVPT2, and AFQMC calculations with a focus on ab initio systems.</p> <p>homepage: https://github.com/sanshar/Dice</p>    version toolchain     <code>20221025</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#dicom2nifti","title":"dicom2nifti","text":"<p>Python library for converting dicom files to nifti</p> <p>homepage: https://github.com/icometrix/dicom2nifti</p>    version versionsuffix toolchain     <code>2.2.12</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.3.0</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#dicombrowser","title":"DicomBrowser","text":"<p>DicomBrowser is an application for inspecting and modifying DICOM metadata in many files at once.</p> <p>homepage: http://nrg.wustl.edu/software/dicom-browser/</p>    version versionsuffix toolchain     <code>1.7.0b5</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#diffutils","title":"Diffutils","text":"<p>Diffutils: GNU diff utilities - find the differences between files</p> <p>homepage: http://www.gnu.org/software/diffutils/diffutils.html</p>    version toolchain     <code>3.3</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#dijitso","title":"dijitso","text":"<p>dijitso is a Python module for distributed just-in-time shared library building.</p> <p>homepage: https://bitbucket.org/fenics-project/dijitso</p>    version versionsuffix toolchain     <code>2019.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#dill","title":"dill","text":"<p>dill extends python's pickle module for serializing and de-serializing python objects to the majority  of the built-in python types. Serialization is the process of converting an object to a byte stream, and the inverse  of which is converting a byte stream back to on python object hierarchy.</p> <p>homepage: https://pypi.org/project/dill/</p>    version toolchain     <code>0.3.0</code> <code>GCCcore/8.2.0</code>   <code>0.3.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.3.4</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#dirac","title":"DIRAC","text":"<p>DIRAC: Program for Atomic and Molecular Direct Iterative Relativistic All-electron Calculations</p> <p>homepage: http://www.diracprogram.org</p>    version versionsuffix toolchain     <code>19.0</code> <code>-Python-2.7.18-int64</code> <code>intel/2020a</code>   <code>19.0</code> <code>-Python-2.7.18-mpi-int64</code> <code>intel/2020a</code>   <code>22.0</code>  <code>foss/2021a</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#distributed","title":"distributed","text":"<p>Dask.distributed is a lightweight library for distributed computing in Python.  It extends both the concurrent.futures and dask APIs to moderate sized clusters.</p> <p>homepage: https://distributed.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.14.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.14.3</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.21.6</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#distributedstream","title":"DistributedStream","text":"<p>A MPI distributed stream benchmark, useful to identifying nodes with poor memory performance and characterising memory bandwidth variation over systems.</p> <p>homepage: https://github.com/adrianjhpc/DistributedStream</p>    version toolchain     <code>1.0</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#dl_poly_4","title":"DL_POLY_4","text":"<p>DL_POLY is a general purpose classical molecular dynamics (MD) simulation software</p> <p>homepage: https://www.scd.stfc.ac.uk/Pages/DL_POLY.aspx</p>    version toolchain     <code>5.0.0</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#dl_poly_classic","title":"DL_POLY_Classic","text":"<p>DL_POLY Classic is a freely available molecular dynamics program developed  from the DL_POLY_2 package. This version does not install the java gui.</p> <p>homepage: http://ccpforge.cse.rl.ac.uk/gf/project/dl_poly_classic/</p>    version versionsuffix toolchain     <code>1.9</code>  <code>intel/2016b</code>   <code>1.9</code> <code>-PLUMED-2.2.3</code> <code>intel/2016b</code>   <code>1.10</code>  <code>foss/2019b</code>, <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#dlb","title":"dlb","text":"<p>DLB is a dynamic library designed to speed up HPC hybrid applications (i.e., two levels of parallelism) by improving the load balance of the outer level of parallelism (e.g., MPI) by dynamically redistributing the computational resources at the inner level of parallelism (e.g., OpenMP). at run time. </p> <p>homepage: https://pm.bsc.es/dlb/</p>    version toolchain     <code>3.2</code> <code>gompi/2022a</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#dlib","title":"dlib","text":"<p>Dlib is a modern C++ toolkit containing machine learning algorithms and tools for creating complex software in C++ to solve real world problems. It is used in both industry and academia in a wide range of domains including robotics, embedded devices, mobile phones, and large high performance computing environments.</p> <p>homepage: https://github.com/davisking/dlib</p>    version versionsuffix toolchain     <code>19.22</code>  <code>foss/2021a</code>   <code>19.22</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#dm-reverb","title":"dm-reverb","text":"<p>Reverb is an efficient and easy-to-use data storage and transport system designed for machine learning research. Reverb is primarily used as an experience replay system for distributed reinforcement learning algorithms but the system also supports multiple data structure representations such as FIFO, LIFO, and priority queues.</p> <p>homepage: https://github.com/deepmind/reverb</p>    version toolchain     <code>0.2.0</code> <code>foss/2020b</code>   <code>0.7.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#dm-tree","title":"dm-tree","text":"<p>dm-tree provides tree, a library for working with nested data structures. In a way, tree generalizes the builtin map function which only supports flat sequences, and allows to apply a function to each \"leaf\" preserving the overall structure.</p> <p>homepage: https://github.com/deepmind/tree</p>    version toolchain     <code>0.1.1</code> <code>GCCcore/8.3.0</code>   <code>0.1.5</code> <code>GCCcore/10.2.0</code>   <code>0.1.6</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#dmcfun","title":"DMCfun","text":"<p>Diffusion Model of Conflict (DMC) in Reaction Time Tasks</p> <p>homepage: https://cran.r-project.org/web/packages/DMCfun</p>    version versionsuffix toolchain     <code>1.3.0</code> <code>-R-3.6.2</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#dmtcp","title":"DMTCP","text":"<p>DMTCP is a tool to transparently checkpoint the state of multiple simultaneous applications, including multi-threaded and distributed applications. It operates directly on the user binary executable, without any Linux kernel modules or other kernel modifications.</p> <p>homepage: http://dmtcp.sourceforge.net/index.html</p>    version toolchain     <code>2.4.5</code> <code>system</code>   <code>2.5.0</code> <code>foss/2016a</code>   <code>2.5.1</code> <code>system</code>   <code>2.5.2</code> <code>GCCcore/8.3.0</code>, <code>foss/2016b</code>, <code>foss/2018b</code>   <code>2.6.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#dolfin","title":"DOLFIN","text":"<p>DOLFIN is the C++/Python interface of FEniCS, providing a consistent PSE   (Problem Solving Environment) for ordinary and partial differential equations.</p> <p>homepage: https://bitbucket.org/fenics-project/dolfin</p>    version versionsuffix toolchain     <code>2018.1.0.post1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2019.1.0.post0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#doris","title":"Doris","text":"<p>Delft object-oriented radar interferometric software</p> <p>homepage: http://doris.tudelft.nl/</p>    version toolchain     <code>4.02</code> <code>intel/2017a</code>   <code>4.04beta4</code> <code>foss/2018a</code>, <code>intel/2017a</code>   <code>4.06beta2</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#dosageconvertor","title":"DosageConvertor","text":"<p>DosageConvertor is a C++ tool to convert dosage files (in VCF format) from Minimac3/4  to other formats such as MaCH or PLINK. Please note that this tool CANNOT handle missing values in  the input files and may NOT work for non-Minimac3/4 VCF files.</p> <p>homepage: http://genome.sph.umich.edu/wiki/DosageConvertor</p>    version toolchain     <code>1.0.4</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#dotnet-core-runtime","title":"dotNET-Core-Runtime","text":"<p>.NET is a free, cross-platform, open source developer platform for building many different types  of applications.</p> <p>homepage: https://www.microsoft.com/net/</p>    version toolchain     <code>2.0.7</code> <code>GCCcore/6.4.0</code>   <code>5.0.17</code> <code>GCCcore/10.3.0</code>   <code>6.0.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#dotnet-sdk","title":"dotNET-SDK","text":"<p>.NET is a free, cross-platform, open source developer platform for building many different types  of applications.</p> <p>homepage: https://www.microsoft.com/net/</p>    version versionsuffix toolchain     <code>3.1.300</code> <code>-linux-x64</code> <code>system</code>   <code>6.0.101</code> <code>-linux-x64</code> <code>system</code>"},{"location":"version-specific/supported-software/#double-conversion","title":"double-conversion","text":"<p>Efficient binary-decimal and decimal-binary conversion routines for IEEE doubles.</p> <p>homepage: https://github.com/google/double-conversion</p>    version toolchain     <code>3.0.3</code> <code>foss/2018a</code>   <code>3.1.4</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.1.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.2.0</code> <code>GCCcore/11.3.0</code>   <code>3.2.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#doubletfinder","title":"DoubletFinder","text":"<p>R package for detecting doublets in single-cell RNA sequencing data</p> <p>homepage: https://github.com/chris-mcginnis-ucsf/DoubletFinder</p>    version versionsuffix toolchain     <code>2.0.3</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#doxygen","title":"Doxygen","text":"<p>Doxygen is a documentation system for C++, C, Java, Objective-C, Python,  IDL (Corba and Microsoft flavors), Fortran, VHDL, PHP, C#, and to some  extent D. </p> <p>homepage: https://www.doxygen.org</p>    version toolchain     <code>1.8.9.1</code> <code>GCC/4.9.2</code>   <code>1.8.10</code> <code>GNU/4.9.3-2.25</code>, <code>intel/2016.02-GCC-4.9</code>   <code>1.8.11</code> <code>GCC/4.9.2</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>1.8.13</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>gimkl/2017a</code>   <code>1.8.14</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>1.8.15</code> <code>GCCcore/8.2.0</code>   <code>1.8.16</code> <code>GCCcore/8.3.0</code>   <code>1.8.17</code> <code>GCCcore/9.3.0</code>   <code>1.8.20</code> <code>GCCcore/10.2.0</code>   <code>1.9.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.9.4</code> <code>GCCcore/11.3.0</code>   <code>1.9.5</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#dragmap","title":"DRAGMAP","text":"<p>Dragmap is the Dragen mapper/aligner Open Source Software.</p> <p>homepage: https://github.com/Illumina/DRAGMAP</p>    version toolchain     <code>1.3.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#drake","title":"Drake","text":"<p>Drake is a simple-to-use, extensible, text-based data workflow tool that organizes command execution around data and its dependencies.</p> <p>homepage: https://github.com/Factual/drake</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#drep","title":"dRep","text":"<p>dRep is a python program which performs rapid pair-wise comparison of genome sets. One of it\u2019s major purposes is for genome de-replication, but it can do a lot more.</p> <p>homepage: https://drep.readthedocs.io/en/latest/</p>    version toolchain     <code>3.0.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#drop","title":"DROP","text":"<p>Pipeline to find aberrant events in RNA-Seq data, useful for diagnosis of rare disorders</p> <p>homepage: https://gagneurlab-drop.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>1.1.0</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>1.1.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#dropest","title":"dropEst","text":"<p>Pipeline for initial analysis of droplet-based single-cell RNA-seq data</p> <p>homepage: https://github.com/hms-dbmi/dropEst</p>    version versionsuffix toolchain     <code>0.7.1</code> <code>-R-3.4.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#dsa","title":"DSA","text":"<p>Digital Sorting Algorithm</p> <p>homepage: https://github.com/zhandong/DSA</p>    version versionsuffix toolchain     <code>1.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#dsfmt","title":"dSFMT","text":"<p>Double precision SIMD-oriented Fast Mersenne Twister.</p> <p>homepage: https://github.com/MersenneTwister-Lab/dSFMT</p>    version toolchain     <code>2.2.5</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#dsrc","title":"DSRC","text":"<p>DNA Sequence Reads Compression is an application designed for compression of data files  containing reads from DNA sequencing in FASTQ format. The amount of such files can be huge, e.g., a few  (or tens) of gigabytes, so a need for a robust data compression tool is clear. Usually universal compression  programs like gzip or bzip2 are used for this purpose, but it is obvious that a specialized tool can work better.</p> <p>homepage: http://sun.aei.polsl.pl/dsrc</p>    version versionsuffix toolchain     <code>2.0rc</code> <code>-linux-64-bit</code> <code>system</code>"},{"location":"version-specific/supported-software/#dsuite","title":"Dsuite","text":"<p>Fast calculation of the ABBA-BABA statistics across many populations/species</p> <p>homepage: https://github.com/millanek/Dsuite</p>    version toolchain     <code>20190713</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>20210718</code> <code>GCC/10.3.0</code>, <code>intel-compilers/2021.2.0</code>"},{"location":"version-specific/supported-software/#dtcmp","title":"dtcmp","text":"<p>The Datatype Comparison (DTCMP) Library provides pre-defined and user-defined comparison operations to compare the values of two items which can be arbitrary MPI datatypes. Using these comparison operations, the library provides various routines for manipulating data, which may be distributed over the processes of an MPI communicator.</p> <p>homepage: https://github.com/LLNL/dtcmp</p>    version toolchain     <code>1.1.0</code> <code>gompi/2019a</code>, <code>gompi/2020a</code>, <code>iimpi/2019a</code>, <code>iimpi/2020a</code>   <code>1.1.2</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#dtcwt","title":"dtcwt","text":"<p>Dual-Tree Complex Wavelet Transform library for Python</p> <p>homepage: https://github.com/rjw57/dtcwt</p>    version versionsuffix toolchain     <code>0.12.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.12.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#dualsphysics","title":"DualSPHysics","text":"<p>DualSPHysics is based on the Smoothed Particle Hydrodynamics model named SPHysics.   The code is developed to study free-surface flow phenomena where Eulerian methods  can be difficult to apply, such as waves or impact of dam-breaks on off-shore  structures. DualSPHysics is a set of C++, CUDA and Java codes designed to deal  with real-life engineering problems.</p> <p>homepage: https://dual.sphysics.org/</p>    version versionsuffix toolchain     <code>5.0.175</code>  <code>GCC/11.2.0</code>   <code>5.0.175</code> <code>-CUDA-%(cudaver)s</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#dubstepr","title":"DUBStepR","text":"<p>DUBStepR (Determining the Underlying Basis using Step-wise Regression) is a feature selection algorithm for cell type identification in single-cell RNA-sequencing data.</p> <p>homepage: https://github.com/prabhakarlab/DUBStepR</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#dune-core","title":"dune-core","text":"<p>The Dune core modules build the stable basis of Dune.  They follow a consistent release cycle and have high requirements regarding stability and backwards compatibility.  These modules build the foundation for higher-level components. </p> <p>homepage: https://www.dune-project.org/groups/core/</p>    version toolchain     <code>2.8.0.post1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#dune-fem","title":"dune-fem","text":"<p>DUNE-FEM is a discretization module based on DUNE containing all the building blocks required to implement efficient solvers for a wide range of (systems of non linear) partial differential equations. DUNE-FEM can also be used through an extensive Python interface which brings all components of DUNE-FEM and the DUNE core modules to Python. </p> <p>homepage: https://www.dune-project.org/modules/dune-fem/</p>    version toolchain     <code>2.8.0.6</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#dxpy","title":"dxpy","text":"<p>DNAnexus Platform API bindings for Python</p> <p>homepage: http://autodoc.dnanexus.com/</p>    version versionsuffix toolchain     <code>0.266.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#dymat","title":"DyMat","text":"<p>Read and process result files from Dymola and OpenModelica with Python.</p> <p>homepage: https://www.j-raedler.de/projects/DyMat</p>    version versionsuffix toolchain     <code>0.7</code> <code>-2020-12-12</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#e","title":"E","text":"<p>E-ANTIC - ea-utils - earthengine-api - EasyBuild - EasyQC - ecBuild - ecCodes - eccodes-python - ED2 - edlib - EggLib - eggnog-mapper - EGTtools - eht-imaging - Eigen - EigenExa - EIGENSOFT - einops - elastix - elbencho - ELFIO - elfutils - Elk - ELPA - ELPH - elprep - ELSI - ELSI-RCI - Emacs - EMAN2 - EMBOSS - Embree - emcee - EMU - enaBrowserTool - enchant - enchant-2 - EnsEMBLCoreAPI - entrypoints - EPD - EPIC - epiScanpy - EricScript - ESL-Bundle - ESM-2 - ESMF - ESMPy - ESMValTool - eSpeak-NG - Essentia - ETE - ETSF_IO - eudev - EvidentialGene - evmix - ExaBayes - ExaML - Excel-Writer-XLSX - ExifTool - exiv2 - Exonerate - expat - expect - expecttest - eXpress - Extrae</p>"},{"location":"version-specific/supported-software/#e-antic","title":"E-ANTIC","text":"<p>E-ANTIC is a C/C++ library to deal with real embedded number fields built on top of ANTIC (https://github.com/wbhart/antic). Its aim is to have as fast as possible exact arithmetic operations and comparisons.</p> <p>homepage: https://github.com/videlec/e-antic</p>    version toolchain     <code>0.1.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>0.1.5</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#ea-utils","title":"ea-utils","text":"<p>Command-line tools for processing biological sequencing data. Barcode demultiplexing, adapter trimming, etc.  Primarily written to support an Illumina based pipeline -  but should work with any FASTQs.</p> <p>homepage: http://expressionanalysis.github.io/ea-utils/</p>    version toolchain     <code>1.04.807</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#earthengine-api","title":"earthengine-api","text":"<p>Python and JavaScript bindings for calling the Earth Engine API</p> <p>homepage: https://github.com/google/earthengine-api</p>    version versionsuffix toolchain     <code>0.1.143</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#easybuild","title":"EasyBuild","text":"<p>EasyBuild is a software build and installation framework  written in Python that allows you to install software in a structured,  repeatable and robust way.</p> <p>homepage: https://easybuilders.github.io/easybuild</p>    version toolchain     <code>1.0.0</code> <code>system</code>   <code>1.0.1</code> <code>system</code>   <code>1.0.2</code> <code>system</code>   <code>1.1.0</code> <code>system</code>   <code>1.2.0</code> <code>system</code>   <code>1.3.0</code> <code>system</code>   <code>1.4.0</code> <code>system</code>   <code>1.5.0</code> <code>system</code>   <code>1.6.0</code> <code>system</code>   <code>1.7.0</code> <code>system</code>   <code>1.8.0</code> <code>system</code>   <code>1.8.1</code> <code>system</code>   <code>1.8.2</code> <code>system</code>   <code>1.9.0</code> <code>system</code>   <code>1.10.0</code> <code>system</code>   <code>1.11.0</code> <code>system</code>   <code>1.11.1</code> <code>system</code>   <code>1.12.0</code> <code>system</code>   <code>1.12.1</code> <code>system</code>   <code>1.13.0</code> <code>system</code>   <code>1.14.0</code> <code>system</code>   <code>1.15.0</code> <code>system</code>   <code>1.15.1</code> <code>system</code>   <code>1.15.2</code> <code>system</code>   <code>1.16.0</code> <code>system</code>   <code>1.16.1</code> <code>system</code>   <code>1.16.2</code> <code>system</code>   <code>2.0.0</code> <code>system</code>   <code>2.1.0</code> <code>system</code>   <code>2.1.1</code> <code>system</code>   <code>2.2.0</code> <code>system</code>   <code>2.3.0</code> <code>system</code>   <code>2.4.0</code> <code>system</code>   <code>2.5.0</code> <code>system</code>   <code>2.6.0</code> <code>system</code>   <code>2.7.0</code> <code>system</code>   <code>2.8.0</code> <code>system</code>   <code>2.8.1</code> <code>system</code>   <code>2.8.2</code> <code>system</code>   <code>2.9.0</code> <code>system</code>   <code>3.0.0</code> <code>system</code>   <code>3.0.1</code> <code>system</code>   <code>3.0.2</code> <code>system</code>   <code>3.1.0</code> <code>system</code>   <code>3.1.1</code> <code>system</code>   <code>3.1.2</code> <code>system</code>   <code>3.2.0</code> <code>system</code>   <code>3.2.1</code> <code>system</code>   <code>3.3.0</code> <code>system</code>   <code>3.3.1</code> <code>system</code>   <code>3.4.0</code> <code>system</code>   <code>3.4.1</code> <code>system</code>   <code>3.5.0</code> <code>system</code>   <code>3.5.1</code> <code>system</code>   <code>3.5.2</code> <code>system</code>   <code>3.5.3</code> <code>system</code>   <code>3.6.0</code> <code>system</code>   <code>3.6.1</code> <code>system</code>   <code>3.6.2</code> <code>system</code>   <code>3.7.0</code> <code>system</code>   <code>3.7.1</code> <code>system</code>   <code>3.8.0</code> <code>system</code>   <code>3.8.1</code> <code>system</code>   <code>3.9.0</code> <code>system</code>   <code>3.9.1</code> <code>system</code>   <code>3.9.2</code> <code>system</code>   <code>3.9.3</code> <code>system</code>   <code>3.9.4</code> <code>system</code>   <code>4.0.0</code> <code>system</code>   <code>4.0.1</code> <code>system</code>   <code>4.1.0</code> <code>system</code>   <code>4.1.1</code> <code>system</code>   <code>4.1.2</code> <code>system</code>   <code>4.2.0</code> <code>system</code>   <code>4.2.1</code> <code>system</code>   <code>4.2.2</code> <code>system</code>   <code>4.3.0</code> <code>system</code>   <code>4.3.1</code> <code>system</code>   <code>4.3.2</code> <code>system</code>   <code>4.3.3</code> <code>system</code>   <code>4.3.4</code> <code>system</code>   <code>4.4.0</code> <code>system</code>   <code>4.4.1</code> <code>system</code>   <code>4.4.2</code> <code>system</code>   <code>4.5.0</code> <code>system</code>   <code>4.5.1</code> <code>system</code>   <code>4.5.2</code> <code>system</code>   <code>4.5.3</code> <code>system</code>   <code>4.5.4</code> <code>system</code>   <code>4.5.5</code> <code>system</code>   <code>4.6.0</code> <code>system</code>   <code>4.6.1</code> <code>system</code>   <code>4.6.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#easyqc","title":"EasyQC","text":"<p>EasyQC is an R-package that provides advanced functionality to  (1) perform file-level QC of single genome-wide association (GWA) data-sets  (2) conduct quality control across several GWA data-sets (meta-level QC)  (3) simplify data-handling of large-scale GWA data-sets.</p> <p>homepage: http://www.uni-regensburg.de/medizin/epidemiologie-praeventivmedizin/genetische-epidemiologie/software/</p>    version versionsuffix toolchain     <code>9.2</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#ecbuild","title":"ecBuild","text":"<p>A CMake-based build system, consisting of a collection of CMake macros and functions that ease the managing of software build systems </p> <p>homepage: https://ecbuild.readthedocs.io/</p>    version toolchain     <code>3.7.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#eccodes","title":"ecCodes","text":"<p>ecCodes is a package developed by ECMWF which provides an application programming interface and  a set of tools for decoding and encoding messages in the following formats: WMO FM-92 GRIB edition 1 and edition 2,  WMO FM-94 BUFR edition 3 and edition 4, WMO GTS abbreviated header (only decoding).</p> <p>homepage: https://software.ecmwf.int/wiki/display/ECC/ecCodes+Home</p>    version versionsuffix toolchain     <code>2.7.3</code>  <code>intel/2018a</code>   <code>2.7.3</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.8.2</code>  <code>intel/2018a</code>   <code>2.9.2</code>  <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>2.12.5</code>  <code>gompi/2019a</code>   <code>2.15.0</code>  <code>gompi/2019b</code>, <code>iimpi/2019b</code>   <code>2.17.0</code>  <code>foss/2018b</code>, <code>gompi/2019b</code>   <code>2.18.0</code>  <code>gompi/2020a</code>   <code>2.20.0</code>  <code>gompi/2020b</code>   <code>2.22.1</code>  <code>gompi/2021a</code>   <code>2.24.2</code>  <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>2.27.0</code>  <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#eccodes-python","title":"eccodes-python","text":"<p>Python 3 interface to decode and encode GRIB and BUFR files via the ECMWF ecCodes library.</p> <p>homepage: https://github.com/ecmwf/eccodes-python</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.1.0</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ed2","title":"ED2","text":"<p>The Ecosystem Demography Biosphere Model (ED2) is an integrated terrestrial biosphere model  incorporating hydrology, land-surface biophysics, vegetation dynamics, and soil carbon and nitrogen biogeochemistry</p> <p>homepage: https://github.com/EDmodel/ED2</p>    version versionsuffix toolchain     <code>20170201</code>  <code>intel/2017a</code>   <code>20170201</code> <code>-serial</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#edlib","title":"edlib","text":"<p>Lightweight, super fast library for sequence alignment using edit (Levenshtein) distance.</p> <p>homepage: https://martinsos.github.io/edlib</p>    version versionsuffix toolchain     <code>1.3.8.post1</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>1.3.8.post1</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>1.3.8.post2</code> <code>-Python-3.8.2</code> <code>iccifort/2020.1.217</code>   <code>1.3.9</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#egglib","title":"EggLib","text":"<p>EggLib is a C++/Python library and program package for evolutionary genetics and genomics.</p> <p>homepage: http://egglib.sourceforge.net/</p>    version toolchain     <code>2.1.10</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#eggnog-mapper","title":"eggnog-mapper","text":"<p>EggNOG-mapper is a tool for fast functional annotation of novel sequences. It uses precomputed orthologous groups and phylogenies from the eggNOG database (http://eggnog5.embl.de) to transfer functional information from fine-grained orthologs only. Common uses of eggNOG-mapper include the annotation of novel genomes, transcriptomes or even metagenomic gene catalogs.</p> <p>homepage: https://github.com/eggnogdb/eggnog-mapper</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.1.4</code>  <code>foss/2020b</code>   <code>2.1.7</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#egttools","title":"EGTtools","text":"<p>EGTtools provides a centralized repository with analytical and numerical methods to study/model game theoretical problems under the Evolutionary Game Theory (EGT) framework.</p> <p>homepage: https://github.com/Socrats/EGTTools</p>    version toolchain     <code>0.1.10.dev2</code> <code>foss/2021b</code>   <code>0.1.11</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#eht-imaging","title":"eht-imaging","text":"<p>Python modules for simulating and manipulating VLBI data and producing images with regularized maximum likelihood methods.</p> <p>homepage: https://github.com/achael/eht-imaging</p>    version toolchain     <code>1.2.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#eigen","title":"Eigen","text":"<p>Eigen is a C++ template library for linear algebra: matrices, vectors, numerical solvers,  and related algorithms.</p> <p>homepage: https://eigen.tuxfamily.org</p>    version toolchain     <code>3.2.3</code> <code>foss/2016a</code>, <code>foss/2016b</code>   <code>3.2.5</code> <code>system</code>   <code>3.2.6</code> <code>system</code>   <code>3.2.7</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.2.8</code> <code>foss/2016a</code>, <code>intel/2016a</code>, <code>system</code>   <code>3.2.9</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.2.10</code> <code>intel/2016b</code>   <code>3.3.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.3</code> <code>GCCcore/6.3.0</code>, <code>intel/2016b</code>   <code>3.3.4</code> <code>system</code>   <code>3.3.5</code> <code>system</code>   <code>3.3.7</code> <code>GCCcore/9.3.0</code>, <code>system</code>   <code>3.3.8</code> <code>GCCcore/10.2.0</code>   <code>3.3.9</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.4.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#eigenexa","title":"EigenExa","text":"<p>EigenExa, a part of KMATHLIB, is a high performance eigen-solver.</p> <p>homepage: https://www.r-ccs.riken.jp/labs/lpnctrt/projects/eigenexa/</p>    version toolchain     <code>2.11</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#eigensoft","title":"EIGENSOFT","text":"<p>The EIGENSOFT package combines functionality from our population genetics methods (Patterson et al.  2006)  and our EIGENSTRAT stratification correction method (Price et al. 2006). The EIGENSTRAT method uses principal  components  analysis to explicitly model ancestry differences between cases and controls along continuous axes of  variation;  the resulting correction is specific to a candidate marker\u2019s variation in frequency across ancestral  populations,  minimizing spurious associations while maximizing power to detect true associations. The EIGENSOFT  package has a built-in plotting script and supports multiple file formats and quantitative phenotypes.</p> <p>homepage: http://www.hsph.harvard.edu/alkes-price/software/</p>    version toolchain     <code>6.0.1</code> <code>foss/2016a</code>   <code>6.1.1</code> <code>foss/2016a</code>   <code>6.1.4</code> <code>foss/2016b</code>   <code>7.2.1</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2021a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#einops","title":"einops","text":"<p>Flexible and powerful tensor operations for readable and reliable code. Supports numpy, pytorch, tensorflow, jax, and others.</p> <p>homepage: https://einops.rocks/</p>    version toolchain     <code>0.3.2</code> <code>GCCcore/10.2.0</code>   <code>0.4.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#elastix","title":"elastix","text":"<p>elastix: a toolbox for rigid and nonrigid registration of images. </p> <p>homepage: http://elastix.isi.uu.nl/</p>    version toolchain     <code>4.9.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#elbencho","title":"elbencho","text":"<p>A distributed storage benchmark for files, objects &amp; blocks with support for GPUs</p> <p>homepage: https://github.com/breuner/elbencho</p>    version toolchain     <code>2.0-3</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#elfio","title":"ELFIO","text":"<p>ELFIO is a header-only C++ library intended  for reading and generating files in the ELF binary format.</p> <p>homepage: http://elfio.sourceforge.net</p>    version toolchain     <code>3.9</code> <code>system</code>"},{"location":"version-specific/supported-software/#elfutils","title":"elfutils","text":"<p>The elfutils project provides libraries and tools for ELF files  and DWARF data. </p> <p>homepage: https://elfutils.org/</p>    version toolchain     <code>0.182</code> <code>GCCcore/9.3.0</code>   <code>0.183</code> <code>GCCcore/10.2.0</code>   <code>0.185</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.187</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#elk","title":"Elk","text":"<p>An all-electron full-potential linearised augmented-plane wave (FP-LAPW) code with many advanced features. Written originally at Karl-Franzens-Universit\u00e4t Graz as a milestone of the EXCITING EU Research and Training Network, the code is designed to be as simple as possible so that new developments in the field of density functional theory (DFT) can be added quickly and reliably. </p> <p>homepage: http://elk.sourceforge.net/</p>    version toolchain     <code>4.0.15</code> <code>intel/2016b</code>   <code>4.3.6</code> <code>intel/2017a</code>   <code>6.3.2</code> <code>intel/2019b</code>   <code>7.0.12</code> <code>foss/2020b</code>   <code>7.2.42</code> <code>foss/2021a</code>   <code>8.5.2</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#elpa","title":"ELPA","text":"<p>Eigenvalue SoLvers for Petaflop-Applications.</p> <p>homepage: https://elpa.rzg.mpg.de</p>    version toolchain     <code>2015.02.002</code> <code>foss/2018a</code>, <code>gimkl/2017a</code>, <code>intel/2018a</code>   <code>2016.05.004</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2016.11.001.pre</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2017.11.001</code> <code>foss/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>2018.05.001</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2018.11.001</code> <code>intel/2019a</code>   <code>2019.11.001</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>, <code>iomkl/2019b</code>   <code>2020.05.001</code> <code>intel/2020a</code>   <code>2020.11.001</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2021.05.001</code> <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>   <code>2021.05.002</code> <code>intel/2020b</code>   <code>2021.11.001</code> <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#elph","title":"ELPH","text":"<p>ELPH is a general-purpose Gibbs sampler for finding motifs in a set   of DNA or protein sequences. The program takes as input a set containing anywhere from   a few dozen to thousands of sequences, and searches through them for the most common motif,   assuming that each sequence contains one copy of the motif. We have used ELPH to find   patterns such as ribosome binding sites (RBSs) and exon splicing enhancers (ESEs). </p> <p>homepage: http://ccb.jhu.edu/software/ELPH/index.shtml</p>    version toolchain     <code>1.0.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#elprep","title":"elprep","text":"<p>elPrep is a high-performance tool for analyzing .sam/.bam files (up to and including variant calling)  in sequencing pipelines.</p> <p>homepage: https://github.com/ExaScience/elprep</p>    version toolchain     <code>5.1.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#elsi","title":"ELSI","text":"<p>ELSI provides and enhances scalable, open-source software library solutions for  electronic structure calculations in  materials science, condensed matter physics, chemistry, and many other fields.  ELSI focuses on methods that solve or circumvent eigenvalue problems in electronic structure theory.  The ELSI infrastructure should also be useful for other challenging eigenvalue problems. </p> <p>homepage: https://wordpress.elsi-interchange.org/</p>    version versionsuffix toolchain     <code>2.5.0</code>  <code>intel/2019b</code>   <code>2.5.0</code> <code>-PEXSI</code> <code>intel/2019b</code>   <code>2.6.4</code> <code>-PEXSI</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2.7.1</code> <code>-PEXSI</code> <code>foss/2021a</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#elsi-rci","title":"ELSI-RCI","text":"<p>ELSI-RCI provides and enhances open-source software packages which iteratively solve or circumvent eigenvalue problems in self-consistent field calculations based on the Kohn-Sham density-functional theory. </p> <p>homepage: https://wordpress.elsi-interchange.org/</p>    version toolchain     <code>0.1.0</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>foss/2020b</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#emacs","title":"Emacs","text":"<p>GNU Emacs is an extensible, customizable text editor--and more.  At its core is an interpreter for Emacs Lisp, a dialect of the Lisp programming  language with extensions to support text editing.</p> <p>homepage: https://www.gnu.org/software/emacs/</p>    version versionsuffix toolchain     <code>24.3</code>  <code>GCC/4.8.3</code>   <code>24.3</code> <code>-bare</code> <code>GCC/4.8.3</code>   <code>24.4</code>  <code>GCC/4.9.2</code>   <code>24.5</code>  <code>GCC/4.9.3-2.25</code>   <code>25.1</code>  <code>foss/2016a</code>   <code>25.3</code>  <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>26.3</code>  <code>GCCcore/8.3.0</code>   <code>27.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>27.2</code>  <code>GCCcore/11.2.0</code>   <code>28.1</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#eman2","title":"EMAN2","text":"<p>EMAN2 is a broadly based greyscale scientific image processing suite with a  primary focus on processing data from transmission electron microscopes. </p> <p>homepage: https://blake.bcm.edu/emanwiki/EMAN2</p>    version versionsuffix toolchain     <code>2.3</code>  <code>system</code>   <code>2.3</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>2.21a</code> <code>-Python-2.7.14-Boost-1.63.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#emboss","title":"EMBOSS","text":"<p>EMBOSS is 'The European Molecular Biology Open Software Suite'.  EMBOSS is a free Open Source software analysis package specially developed for  the needs of the molecular biology (e.g. EMBnet) user community.</p> <p>homepage: http://emboss.sourceforge.net/</p>    version versionsuffix toolchain     <code>6.6.0</code>  <code>GCC/8.2.0-2.31.1</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2017a</code>, <code>intel/2018b</code>   <code>6.6.0</code> <code>-Java-11</code> <code>GCC/8.3.0</code>   <code>6.6.0</code> <code>-Java-13</code> <code>GCC/10.2.0</code>   <code>6.6.0</code> <code>-X11-20170314</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#embree","title":"Embree","text":"<p>Intel\u00ae Embree is a collection of high-performance ray tracing kernels, developed at Intel.  The target users of Intel\u00ae Embree are graphics application engineers who want to improve the performance of  their photo-realistic rendering application by leveraging Embree's performance-optimized ray tracing kernels.  The kernels are optimized for the latest Intel\u00ae processors with support for SSE, AVX, AVX2, and AVX-512 instructions.  Intel\u00ae Embree supports runtime code selection to choose the traversal and build algorithms that best matches  the instruction set of your CPU. We recommend using Intel\u00ae Embree through its API to get the highest benefit  from future improvements. Intel\u00ae Embree is released as Open Source under the Apache 2.0 license.</p> <p>homepage: https://embree.github.io/</p>    version toolchain     <code>3.4.0</code> <code>iccifort/2018.1.163-GCC-6.4.0-2.28</code>   <code>3.13.4</code> <code>system</code>"},{"location":"version-specific/supported-software/#emcee","title":"emcee","text":"<p>Emcee is an extensible, pure-Python implementation of  Goodman &amp; Weare's Affine Invariant Markov chain Monte Carlo (MCMC) Ensemble sampler.  It's designed for Bayesian parameter estimation and it's really sweet! </p> <p>homepage: https://dfm.io/emcee</p>    version versionsuffix toolchain     <code>2.2.1</code>  <code>foss/2019a</code>   <code>2.2.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.2.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#emu","title":"EMU","text":"<p>EMU infers population structure in the presence of missingness and works for both haploid, psuedo-haploid and diploid genotype datasets </p> <p>homepage: http://www.popgen.dk/software/index.php/EMU</p>    version versionsuffix toolchain     <code>0.66</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#enabrowsertool","title":"enaBrowserTool","text":"<p>enaBrowserTools is a set of scripts that interface with the ENA  web services to download data from ENA easily, without any knowledge of scripting required.</p> <p>homepage: https://github.com/enasequence/enaBrowserTools/</p>    version versionsuffix toolchain     <code>1.5.4</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>1.6</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#enchant","title":"enchant","text":"<p>Enchant is a library (and command-line program) that wraps a number of different spelling libraries  and programs with a consistent interface.</p> <p>homepage: https://abiword.github.io/enchant/</p>    version toolchain     <code>1.6.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#enchant-2","title":"enchant-2","text":"<p>Enchant aims to provide a simple but comprehensive abstraction for dealing with different spell checking libraries in a consistent way. A client, such as a text editor or word processor, need not know anything about a specific spell-checker, and since all back-ends are plugins, new spell-checkers can be added without needing any change to the program using Enchant.</p> <p>homepage: https://github.com/AbiWord/enchant</p>    version toolchain     <code>2.3.3</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ensemblcoreapi","title":"EnsEMBLCoreAPI","text":"<p>The Ensembl Core Perl API and SQL schema</p> <p>homepage: https://www.ensembl.org/info/docs/api/index.html</p>    version versionsuffix toolchain     <code>96.0-r20190601</code> <code>-Perl-5.28.1</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#entrypoints","title":"entrypoints","text":"<p>Entry points are a way for Python packages to advertise objects with some common interface.</p> <p>homepage: https://github.com/takluyver/entrypoints</p>    version versionsuffix toolchain     <code>0.2.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.2.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.2.2</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.2.2</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#epd","title":"EPD","text":"<p>The Enthought Python Distribution provides scientists with a comprehensive set of tools to perform  rigorous data analysis and visualization. Python, distinguished by its flexibility, coherence, and ease-of-use,  is rapidly becoming the programming language of choice for researchers worldwide.  EPD extends this capacity with a powerful collection of Python libraries to enable interactive technical computing and  cross-platform rapid application development.</p> <p>homepage: http://www.enthought.com/products/edudownload.php</p>    version toolchain     <code>7.3-2-rh5</code> <code>system</code>"},{"location":"version-specific/supported-software/#epic","title":"EPIC","text":"<p>Package implementing EPIC method to estimate the proportion of immune, stromal, endothelial  and cancer or other cells from bulk gene expression data.</p> <p>homepage: https://gfellerlab.shinyapps.io/EPIC_1-1</p>    version versionsuffix toolchain     <code>1.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#episcanpy","title":"epiScanpy","text":"<p>EpiScanpy is a toolkit to analyse single-cell open chromatin (scATAC-seq) and single-cell DNA methylation (for example scBS-seq) data. EpiScanpy is the epigenomic extension of the very popular scRNA-seq analysis tool Scanpy (Genome Biology, 2018) [Wolf18].</p> <p>homepage: https://github.com/colomemaria/episcanpy</p>    version toolchain     <code>0.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ericscript","title":"EricScript","text":"<p>EricScript is a computational framework for the discovery of gene fusions in paired end RNA-seq data.</p> <p>homepage: https://sites.google.com/site/bioericscript/home</p>    version versionsuffix toolchain     <code>0.5.5</code> <code>-R-3.4.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#esl-bundle","title":"ESL-Bundle","text":"<p>The ESL Bundle is a collection of libraries and utilities broadly used in  electronic structure calculations, put together to make their use easier by  researchers and scientific software developers. ESL stands for Electronic  Structure Library, an initiative which distributes quality software and  promotes open standards for high-performance computing applications in the  field of electronic structure calculations. </p> <p>homepage: https://esl.cecam.org</p>    version toolchain     <code>0.6.1</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#esm-2","title":"ESM-2","text":"<p>ESM-2 outperforms all tested single-sequence protein language models  across a range of structure prediction tasks. ESMFold harnesses the ESM-2 language model to generate  accurate structure predictions end to end directly from the sequence of a protein.</p> <p>homepage: https://github.com/facebookresearch/esm</p>    version versionsuffix toolchain     <code>2.0.0</code>  <code>foss/2021a</code>   <code>2.0.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#esmf","title":"ESMF","text":"<p>The Earth System Modeling Framework (ESMF) is a suite of software tools for developing  high-performance, multi-component Earth science modeling applications.</p> <p>homepage: https://www.earthsystemcog.org/projects/esmf/</p>    version versionsuffix toolchain     <code>6.3.0rp1</code>  <code>intel/2017a</code>   <code>6.3.0rp1</code> <code>-HDF5-1.8.18</code> <code>intel/2017a</code>   <code>7.0.0</code>  <code>foss/2016a</code>   <code>7.0.2</code>  <code>intel/2017b</code>   <code>7.1.0r</code>  <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>8.0.0</code>  <code>foss/2019b</code>, <code>intel/2019b</code>   <code>8.0.1</code>  <code>foss/2020a</code>, <code>foss/2020b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>   <code>8.1.1</code>  <code>foss/2021a</code>, <code>intel/2021a</code>   <code>8.2.0</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>8.3.0</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#esmpy","title":"ESMPy","text":"<p>Earth System Modeling Framework (ESMF) Python Interface</p> <p>homepage: https://earthsystemmodeling.org/esmpy</p>    version versionsuffix toolchain     <code>8.0.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>8.0.1</code>  <code>intel/2020b</code>   <code>8.0.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#esmvaltool","title":"ESMValTool","text":"<p>The Earth System Model eValuation Tool (ESMValTool)  is a community diagnostics and performance metrics tool  for the evaluation of Earth System Models (ESMs) that  allows for routine comparison of single or multiple models,  either against predecessor versions or against observations.</p> <p>homepage: https://www.esmvaltool.org/</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#espeak-ng","title":"eSpeak-NG","text":"<p>The eSpeak NG is a compact open source software text-to-speech synthesizer for Linux, Windows, Android and other operating systems. It supports more than 100 languages and accents. It is based on the eSpeak engine created by Jonathan Duddington. </p> <p>homepage: https://github.com/espeak-ng/espeak-ng</p>    version toolchain     <code>1.50</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#essentia","title":"Essentia","text":"<p>Open-source library and tools for audio and music analysis, description and synthesis</p> <p>homepage: https://essentia.upf.edu</p>    version versionsuffix toolchain     <code>2.1_beta5</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#ete","title":"ETE","text":"<p>A Python framework for the analysis and visualization of trees</p> <p>homepage: http://etetoolkit.org</p>    version versionsuffix toolchain     <code>3.0.0b36</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.1.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.1.2</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>   <code>3.1.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#etsf_io","title":"ETSF_IO","text":"<p>A library of F90 routines to read/write the ETSF file  format has been written. It is called ETSF_IO and available under LGPL. </p> <p>homepage: http://www.etsf.eu/resources/software/libraries_and_tools</p>    version toolchain     <code>1.0.4</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#eudev","title":"eudev","text":"<p>eudev is a fork of systemd-udev with the goal of obtaining better  compatibility with existing software such as OpenRC and Upstart,  older kernels, various toolchains and anything else required by  users and various distributions. </p> <p>homepage: https://wiki.gentoo.org/wiki/Project:Eudev</p>    version toolchain     <code>3.1.5</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>3.2</code> <code>GCCcore/4.9.3</code>   <code>3.2.2</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#evidentialgene","title":"EvidentialGene","text":"<p>EvidentialGene is a genome informatics project for  \"Evidence Directed Gene Construction for Eukaryotes\",  for constructing high quality, accurate gene sets for  animals and plants (any eukaryotes), being developed by  Don Gilbert at Indiana University, gilbertd at indiana edu.</p> <p>homepage: http://arthropods.eugenes.org/EvidentialGene/</p>    version versionsuffix toolchain     <code>2018.01.01</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>   <code>2022.01.14</code>  <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#evmix","title":"evmix","text":"<p>evmix: Extreme Value Mixture Modelling,  Threshold Estimation and Boundary Corrected Kernel Density Estimation</p> <p>homepage: https://cran.r-project.org/web/packages/evmix</p>    version versionsuffix toolchain     <code>2.6</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#exabayes","title":"ExaBayes","text":"<p>ExaBayes is a software package for Bayesian tree inference.  It is particularly suitable for large-scale analyses on computer clusters</p> <p>homepage: https://cme.h-its.org/exelixis/web/software/exabayes/</p>    version toolchain     <code>1.5</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#examl","title":"ExaML","text":"<p>Exascale Maximum Likelihood (ExaML) code for phylogenetic inference using MPI</p> <p>homepage: https://github.com/stamatak/ExaML/</p>    version versionsuffix toolchain     <code>3.0.22</code> <code>-hybrid-avx</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#excel-writer-xlsx","title":"Excel-Writer-XLSX","text":"<p>The Excel::Writer::XLSX module can be used to create an Excel file in the 2007+ XLSX format. Multiple worksheets can be added to a workbook and formatting can be applied to cells. Text, numbers, and formulas can be written to the cells.</p> <p>homepage: https://metacpan.org/pod/Excel::Writer::XLSX</p>    version toolchain     <code>1.09</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#exiftool","title":"ExifTool","text":"<p>Perl module (Image::ExifTool) and program (exiftool)  to read EXIF information from images</p> <p>homepage: https://owl.phy.queensu.ca/~phil/exiftool/</p>    version toolchain     <code>12.00</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#exiv2","title":"exiv2","text":"<p>Exiv2 is a Cross-platform C++ library and a command line utility to manage image metadata.</p> <p>homepage: https://exiv2.org</p>    version toolchain     <code>0.27.4</code> <code>GCCcore/10.3.0</code>   <code>0.27.5</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#exonerate","title":"Exonerate","text":"<p>Exonerate is a generic tool for pairwise sequence comparison.  It allows you to align sequences using a many alignment models, using either   exhaustive dynamic programming, or a variety of heuristics. </p> <p>homepage: https://www.ebi.ac.uk/about/vertebrate-genomics/software/exonerate</p>    version toolchain     <code>2.4.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/6.4.0-2.28</code>, <code>GCC/8.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#expat","title":"expat","text":"<p>Expat is an XML parser library written in C. It is a stream-oriented parser in which an application registers handlers for things the parser might find in the XML document (like start tags).</p> <p>homepage: https://libexpat.github.io</p>    version toolchain     <code>2.1.0</code> <code>GCC/4.9.2</code>, <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.1.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.2.0</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>2.2.4</code> <code>GCCcore/6.4.0</code>   <code>2.2.5</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.2.6</code> <code>GCCcore/8.2.0</code>   <code>2.2.7</code> <code>GCCcore/8.3.0</code>   <code>2.2.9</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.4.1</code> <code>GCCcore/11.2.0</code>   <code>2.4.8</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>   <code>2.4.9</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#expect","title":"expect","text":"<p>Expect is a tool for automating interactive applications    such as telnet, ftp, passwd, fsck, rlogin, tip, etc.    Expect really makes this stuff trivial.    Expect is also useful for testing these same applications.</p> <p>homepage: https://core.tcl.tk/expect/index</p>    version toolchain     <code>5.45.4</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#expecttest","title":"expecttest","text":"<p>This library implements expect tests (also known as \"golden\" tests). Expect tests are a method of  writing tests where instead of hard-coding the expected output of a test, you run the test to get the output, and  the test framework automatically populates the expected output. If the output of the test changes, you can rerun  the test with the environment variable EXPECTTEST_ACCEPT=1 to automatically update the expected output.</p> <p>homepage: https://github.com/ezyang/expecttest</p>    version toolchain     <code>0.1.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#express","title":"eXpress","text":"<p>Streaming quantification for high-throughput sequencing</p> <p>homepage: https://pachterlab.github.io/eXpress</p>    version toolchain     <code>1.5.1</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#extrae","title":"Extrae","text":"<p>Extrae is the core instrumentation package developed by the Performance Tools group at BSC. Extrae is capable of instrumenting applications based on MPI, OpenMP, pthreads, CUDA1, OpenCL1, and StarSs1 using different instrumentation approaches. The information gathered by Extrae typically includes timestamped events of runtime calls, performance counters and source code references. Besides, Extrae provides its own API to allow the user to manually instrument his or her application.</p> <p>homepage: https://www.bsc.es/computer-sciences/performance-tools</p>    version toolchain     <code>3.4.1</code> <code>foss/2017a</code>   <code>3.7.1</code> <code>intel/2019a</code>   <code>3.8.0</code> <code>gompi/2020b</code>   <code>3.8.3</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#f","title":"F","text":"<p>f90cache - f90wrap - Faber - FabIO - faceswap - FALCON - FANN - fast5 - FASTA - fastahack - FastaIndex - FastANI - Fastaq - FastFold - FastME - fastp - fastparquet - fastPHASE - fastq-pair - fastq-tools - FastQ_Screen - FastQC - fastqsplitter - FastQTL - fastqz - FastRFS - fastStructure - FastTree - FastViromeExplorer - FASTX-Toolkit - fatslim - fbm - FBPIC - FCC - FCM - fdict - FDS - fdstools - FDTD_Solutions - feh - FEniCS - fermi-lite - Ferret - festival - fetchMG - FFC - FFLAS-FFPACK - FFmpeg - ffmpi - ffnet - fftlib - FFTW - FFTW.MPI - fgbio - FGSL - FHI-aims - FIAT - FIGARO - FigureGen - Fiji - file - filevercmp - Filtlong - find_circ - findhap - findutils - fineRADstructure - fineSTRUCTURE - fio - Fiona - Firefox - FIRESTARTER - FireWorks - FIt-SNE - FIX - fixesproto - FLAC - FLAIR - flair-NLP - FLANN - FLASH - Flask - flatbuffers - flatbuffers-python - FLEUR - flex - Flexbar - FlexiBLAS - FlexiDot - Flink - FLINT - flook - FLTK - FLUENT - Flye - FMILibrary - FMM3D - FMPy - FMRIprep - FMS - fmt - FoBiS - FoldX - fontconfig - fontsproto - FORD - foss - fosscuda - FoX - FOX-Toolkit - FPM - fpocket - fqtrim - fqzcomp - FragGeneScan - FRANz - FreeBarcodes - freebayes - FreeFEM - FreeFem++ - freeglut - FreeImage - FreeSASA - FreeSurfer - FreeTDS - freetype - freetype-py - FreeXL - freud-analysis - FriBidi - FRUIT - FRUIT_processor - FSL - FSLeyes - fsom - FSON - FTGL - Fujitsu - fullrmc - fumi_tools - FUNWAVE-TVD - FUSE - FuSeq - FusionCatcher - futhark - futile - future - fxtract</p>"},{"location":"version-specific/supported-software/#f90cache","title":"f90cache","text":"<p>f90cache is a compiler cache. It acts as a caching pre-processor to Fortran compilers,  using the -E compiler switch and a hash to detect when a compilation can be satisfied from cache.  This often results in a great speedup in common compilations.</p> <p>homepage: http://people.irisa.fr/Edouard.Canot/f90cache/</p>    version toolchain     <code>0.96</code> <code>system</code>"},{"location":"version-specific/supported-software/#f90wrap","title":"f90wrap","text":"<p>f90wrap is a tool to automatically generate Python extension modules which interface to Fortran code that makes use of derived types. It builds on the capabilities of the popular f2py utility by generating a simpler Fortran 90 interface to the original Fortran code which is then suitable for wrapping with f2py, together with a higher-level Pythonic wrapper that makes the existance of an additional layer transparent to the final user.</p> <p>homepage: https://github.com/jameskermode/f90wrap</p>    version toolchain     <code>0.2.8</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#faber","title":"Faber","text":"<p>Faber started as a clone of Boost.Build, to experiment with a  new Python frontend. Meanwhile it has evolved into a new build system, which  retains most of the features found in Boost.Build, but with (hopefully !) much  simplified logic, in addition of course to using Python as scripting language,  rather than Jam. The original bjam engine is still in use as scheduler, though  at this point that is mostly an implementation detail.</p> <p>homepage: https://stefanseefeld.github.io/faber</p>    version toolchain     <code>0.3</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#fabio","title":"FabIO","text":"<p>FabIO is an I/O library for images produced by 2D X-ray detectors and written in Python.  FabIO support images detectors from a dozen of companies (including Mar, Dectris, ADSC, Hamamatsu, Oxford, ...),  for a total of 20 different file formats (like CBF, EDF, TIFF, ...) and offers an unified interface to their headers  (as a python dictionary) and datasets (as a numpy ndarray of integers or floats).</p> <p>homepage: http://www.silx.org</p>    version versionsuffix toolchain     <code>0.10.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.11.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#faceswap","title":"faceswap","text":"<p>Faceswap is a tool that utilizes deep learning to recognize and swap faces in pictures and videos.</p> <p>homepage: https://github.com/deepfakes/faceswap</p>    version versionsuffix toolchain     <code>20180212</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#falcon","title":"FALCON","text":"<p>Falcon: a set of tools for fast aligning long reads for consensus and assembly</p> <p>homepage: https://github.com/PacificBiosciences/FALCON</p>    version versionsuffix toolchain     <code>1.8.8</code>  <code>intel/2017b</code>   <code>1.8.8</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#fann","title":"FANN","text":"<p>Fast Artificial Neural Network Library is a free open source neural network library,  which implements multilayer artificial neural networks in C with support for both fully connected  and sparsely connected networks.</p> <p>homepage: http://leenissen.dk</p>    version toolchain     <code>2.2.0</code> <code>GCCcore/6.4.0</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fast5","title":"fast5","text":"<p>A lightweight C++ library for accessing Oxford Nanopore  Technologies sequencing data.</p> <p>homepage: http://simpsonlab.github.io/2017/02/27/packing_fast5/</p>    version toolchain     <code>0.6.5</code> <code>system</code>"},{"location":"version-specific/supported-software/#fasta","title":"FASTA","text":"<p>The FASTA programs find regions of local or global (new) similarity between  protein or DNA sequences, either by searching Protein or DNA databases, or by identifying  local duplications within a sequence.</p> <p>homepage: http://fasta.bioch.virginia.edu</p>    version toolchain     <code>36.3.5e</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#fastahack","title":"fastahack","text":"<p>Utilities for indexing and sequence extraction from FASTA files.</p> <p>homepage: https://github.com/ekg/fastahack</p>    version toolchain     <code>1.0.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#fastaindex","title":"FastaIndex","text":"<p>FastA index (.fai) handler compatible with samtools faidx</p> <p>homepage: https://github.com/lpryszcz/FastaIndex</p>    version versionsuffix toolchain     <code>0.11rc7</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#fastani","title":"FastANI","text":"<p>FastANI is developed for fast alignment-free computation of  whole-genome Average Nucleotide Identity (ANI). ANI is defined as mean  nucleotide identity of orthologous gene pairs shared between two microbial  genomes. FastANI supports pairwise comparison of both complete and draft  genome assemblies.</p> <p>homepage: https://github.com/ParBLiSS/FastANI</p>    version toolchain     <code>1.1</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.2</code> <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>1.3</code> <code>iccifort/2019.5.281</code>   <code>1.31</code> <code>iccifort/2020.1.217</code>   <code>1.33</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#fastaq","title":"Fastaq","text":"<p>Python3 scripts to manipulate FASTA and FASTQ files.</p> <p>homepage: https://github.com/sanger-pathogens/Fastaq</p>    version toolchain     <code>3.17.0</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#fastfold","title":"FastFold","text":"<p>Optimizing Protein Structure Prediction Model Training and Inference on GPU Clusters</p> <p>homepage: https://github.com/hpcaitech/FastFold</p>    version versionsuffix toolchain     <code>20220729</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#fastme","title":"FastME","text":"<p>FastME: a comprehensive, accurate and fast distance-based phylogeny inference program.</p> <p>homepage: http://www.atgc-montpellier.fr/fastme/</p>    version toolchain     <code>2.1.5</code> <code>foss/2016a</code>   <code>2.1.6.1</code> <code>GCC/10.2.0</code>, <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#fastp","title":"fastp","text":"<p>A tool designed to provide fast all-in-one preprocessing for FastQ files.  This tool is developed in C++ with multithreading supported to afford high performance.</p> <p>homepage: https://github.com/OpenGene/fastp</p>    version toolchain     <code>0.19.7</code> <code>foss/2018b</code>   <code>0.20.0</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>0.23.2</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#fastparquet","title":"fastparquet","text":"<p>fastparquet is a python implementation of the parquet format, aiming to integrate into python-based big data work-flows. It is used implicitly by the projects Dask, Pandas and intake-parquet.</p> <p>homepage: https://fastparquet.readthedocs.io/</p>    version toolchain     <code>0.7.2</code> <code>foss/2021a</code>   <code>0.8.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#fastphase","title":"fastPHASE","text":"<p>fastPHASE: software for haplotype reconstruction,  and estimating missing genotypes from population data Documentation: http://scheet.org/code/fastphase_doc_1.4.pdf</p> <p>homepage: http://stephenslab.uchicago.edu/software.html#fastphase</p>    version toolchain     <code>1.4.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#fastq-pair","title":"fastq-pair","text":"<p>Match up paired end fastq files quickly and efficiently.</p> <p>homepage: https://github.com/linsalrob/fastq-pair</p>    version toolchain     <code>1.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#fastq-tools","title":"fastq-tools","text":"<p>This package provides a number of small and efficient programs to perform  common tasks with high throughput sequencing data in the FASTQ format. All of the programs  work with typical FASTQ files as well as gzipped FASTQ files.</p> <p>homepage: https://homes.cs.washington.edu/~dcjones/fastq-tools/</p>    version toolchain     <code>0.8</code> <code>foss/2016b</code>, <code>foss/2018b</code>   <code>0.8.3</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#fastq_screen","title":"FastQ_Screen","text":"<p>FastQ Screen allows you to screen a library of sequences in FastQ  format against a set of sequence databases so you can see if the composition of the  library matches with what you expect.</p> <p>homepage: http://www.bioinformatics.babraham.ac.uk/projects/fastq_screen/</p>    version versionsuffix toolchain     <code>0.11.3</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>0.11.4</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>0.12.0</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>0.13.0</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#fastqc","title":"FastQC","text":"<p>FastQC is a quality control application for high throughput sequence data. It reads in sequence data in a variety of formats and can either provide an interactive application to review the results of several different QC checks, or create an HTML based report which can be integrated into a pipeline.</p> <p>homepage: https://www.bioinformatics.babraham.ac.uk/projects/fastqc/</p>    version versionsuffix toolchain     <code>0.10.1</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>0.11.2</code> <code>-Java-1.7.0_60</code> <code>system</code>   <code>0.11.3</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>0.11.4</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>0.11.4</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>0.11.5</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>0.11.5</code> <code>-Java-1.8.0_144</code> <code>system</code>   <code>0.11.5</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>0.11.7</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>0.11.8</code> <code>-Java-1.8</code> <code>system</code>   <code>0.11.8</code> <code>-Java-11</code> <code>system</code>   <code>0.11.9</code> <code>-Java-1.8</code> <code>system</code>   <code>0.11.9</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#fastqsplitter","title":"fastqsplitter","text":"<p>Splits fastq files evenly.</p> <p>homepage: https://github.com/LUMC/fastqsplitter</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#fastqtl","title":"FastQTL","text":"<p>FastQTL is a QTL mapper</p> <p>homepage: http://fastqtl.sourceforge.net/</p>    version toolchain     <code>2.184</code> <code>GCC/11.2.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#fastqz","title":"fastqz","text":"<p>fastqz is a compressor for FASTQ files. FASTQ is the output of DNA sequencing machines.  It is one of the compressors described in the paper: Bonfield JK, Mahoney MV (2013) Compression of  FASTQ and SAM Format Sequencing Data. (mirror) PLoS ONE 8(3): e59190. doi:10.1371/journal.pone.0059190</p> <p>homepage: http://mattmahoney.net/dc/fastqz/</p>    version toolchain     <code>1.5</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#fastrfs","title":"FastRFS","text":"<p>Fast Robinson Foulds Supertrees</p> <p>homepage: https://github.com/pranjalv123/FastRFS</p>    version toolchain     <code>1.0-20190613</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#faststructure","title":"fastStructure","text":"<p>fastStructure is a fast algorithm for inferring population structure from large SNP genotype data. It is based on a variational Bayesian framework for posterior inference and is written in Python2.x. </p> <p>homepage: https://rajanil.github.io/fastStructure/</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.0</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>1.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#fasttree","title":"FastTree","text":"<p>FastTree infers approximately-maximum-likelihood phylogenetic trees from alignments of nucleotide  or protein sequences. FastTree can handle alignments with up to a million of sequences in a reasonable amount of  time and memory. </p> <p>homepage: http://www.microbesonline.org/fasttree/</p>    version toolchain     <code>2.1.10</code> <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>2.1.11</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#fastviromeexplorer","title":"FastViromeExplorer","text":"<p>Identify the viruses/phages and their abundance in the viral metagenomics data.</p> <p>homepage: https://code.vt.edu/saima5/FastViromeExplorer</p>    version toolchain     <code>20180422</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#fastx-toolkit","title":"FASTX-Toolkit","text":"<p>The FASTX-Toolkit is a collection of command line tools for   Short-Reads FASTA/FASTQ files preprocessing.</p> <p>homepage: http://hannonlab.cshl.edu/fastx_toolkit/</p>    version toolchain     <code>0.0.14</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fatslim","title":"fatslim","text":"<p>FATSLiM stands for \u201cFast Analysis Toolbox for Simulations of Lipid Membranes\u201d and its goal is to provide an efficient, yet robust, tool to extract physical parameters from MD trajectories.</p> <p>homepage: https://github.com/FATSLiM/fatslim</p>    version versionsuffix toolchain     <code>0.2.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#fbm","title":"fbm","text":"<p>Exact methods for simulating fractional Brownian motion and fractional Gaussian noise in Python</p> <p>homepage: https://pypi.org/project/fbm</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fbpic","title":"FBPIC","text":"<p>FBPIC (Fourier-Bessel Particle-In-Cell) is a Particle-In-Cell (PIC) code for relativistic plasma  physics. It is especially well-suited for physical simulations of laser-wakefield acceleration and  plasma-wakefield acceleration.</p> <p>homepage: https://fbpic.github.io/</p>    version toolchain     <code>0.20.3</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#fcc","title":"FCC","text":"<p>Fujitsu Compiler based compiler toolchain.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>4.5.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#fcm","title":"FCM","text":"<p>FCM is a set of tools for managing and building source code.</p> <p>homepage: http://www.metoffice.gov.uk/research/collaboration/fcm</p>    version toolchain     <code>2.3.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#fdict","title":"fdict","text":"<p>A variable and dictionary in pure fortran for retaining any data-type and a fast hash-table dictionary. </p> <p>homepage: https://github.com/zerothi/fdict</p>    version toolchain     <code>0.8.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#fds","title":"FDS","text":"<p>Fire Dynamics Simulator (FDS) is a large-eddy simulation (LES) code for low-speed flows,  with an emphasis on smoke and heat transport from fires.</p> <p>homepage: https://pages.nist.gov/fds-smv</p>    version versionsuffix toolchain     <code>6.0.1</code> <code>-no-OFED</code> <code>system</code>   <code>6.5.2</code>  <code>intel/2016b</code>   <code>6.5.3</code>  <code>intel/2017a</code>   <code>6.6.0</code>  <code>intel/2017b</code>, <code>intel/2018a</code>   <code>6.7.0</code>  <code>intel/2018a</code>   <code>6.7.4</code>  <code>intel/2020a</code>   <code>6.7.5</code>  <code>intel/2020a</code>   <code>6.7.6</code>  <code>intel/2020b</code>   <code>6.7.7</code>  <code>intel/2021b</code>   <code>6.7.9</code>  <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#fdstools","title":"fdstools","text":"<p>Forensic DNA Sequencing Tools Tools for characterisation and filtering of PCR stutter artefacts  and other systemic noise in Next Generation Sequencing data of forensic STR markers.</p> <p>homepage: https://git.lumc.nl/jerryhoogenboom/fdstools</p>    version versionsuffix toolchain     <code>20160322</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#fdtd_solutions","title":"FDTD_Solutions","text":"<p>High performance FDTD-method Maxwell solver for the design, analysis and optimization of nanophotonic devices, processes and materials.</p> <p>homepage: http://www.lumerical.com/tcad-products/fdtd/</p>    version toolchain     <code>8.6.2</code> <code>system</code>   <code>8.11.337</code> <code>system</code>   <code>8.16.982</code> <code>system</code>   <code>8.20.1731</code> <code>system</code>"},{"location":"version-specific/supported-software/#feh","title":"feh","text":"<p>feh is an X11 image viewer aimed mostly at console users. Unlike most other viewers, it does not have a fancy GUI, but simply displays images. It is controlled via commandline arguments and configurable key/mouse actions. </p> <p>homepage: https://feh.finalrewind.org/</p>    version toolchain     <code>2.26</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#fenics","title":"FEniCS","text":"<p>FEniCS is a computing platform for solving partial differential equations (PDEs).</p> <p>homepage: https://fenicsproject.org/</p>    version versionsuffix toolchain     <code>2019.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#fermi-lite","title":"fermi-lite","text":"<p>Standalone C library for assembling Illumina short reads in small regions.</p> <p>homepage: https://github.com/lh3/fermi-lite</p>    version toolchain     <code>20190320</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#ferret","title":"Ferret","text":"<p>Ferret is an interactive computer visualization and analysis environment designed to meet the needs of oceanographers and meteorologists analyzing large and complex gridded data sets.</p> <p>homepage: https://ferret.pmel.noaa.gov/Ferret/</p>    version toolchain     <code>7.3</code> <code>intel/2017b</code>   <code>7.5.0</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#festival","title":"festival","text":"<p>University of Edinburgh's Festival Speech Synthesis Systems is a free software multi-lingual speech synthesis workbench that runs on multiple-platforms offering black box text to speech, as well as an open architecture for research in speech synthesis. It designed as a component of large speech technology systems. </p> <p>homepage: &lt;['http://festvox.org/festival/']&gt;</p>    version toolchain     <code>2.5.0</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#fetchmg","title":"fetchMG","text":"<p>The program \u201cfetchMG\u201d was written to extract the 40 MGs from genomes and metagenomes  in an easy and accurate manner.</p> <p>homepage: http://vm-lux.embl.de/~mende/fetchMG/about.html</p>    version toolchain     <code>1.0</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#ffc","title":"FFC","text":"<p>The FEniCS Form Compiler (FFC) is a compiler for finite element variational forms.</p> <p>homepage: https://bitbucket.org/fenics-project/ffc</p>    version versionsuffix toolchain     <code>2018.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2019.1.0.post0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#fflas-ffpack","title":"FFLAS-FFPACK","text":"<p>Finite Field Linear Algebra Subroutines / Package</p> <p>homepage: https://linbox-team.github.io/fflas-ffpack/</p>    version toolchain     <code>2.2.0</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#ffmpeg","title":"FFmpeg","text":"<p>A complete, cross-platform solution to record, convert and stream audio and video.</p> <p>homepage: https://www.ffmpeg.org/</p>    version toolchain     <code>0.10.16</code> <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.8.6</code> <code>intel/2016a</code>   <code>2.8.7</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.0.2</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.1.3</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.2.4</code> <code>gimkl/2017a</code>   <code>3.3.1</code> <code>foss/2016b</code>   <code>3.3.4</code> <code>intel/2017a</code>   <code>3.4</code> <code>GCCcore/6.4.0</code>   <code>3.4.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.4.2</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.4.5</code> <code>foss/2018b</code>   <code>4.0</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>4.0.1</code> <code>intel/2018a</code>   <code>4.1</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>4.1.3</code> <code>GCCcore/8.2.0</code>   <code>4.2.1</code> <code>GCCcore/8.3.0</code>   <code>4.2.2</code> <code>GCCcore/9.3.0</code>   <code>4.3.1</code> <code>GCCcore/10.2.0</code>   <code>4.3.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>4.4.2</code> <code>GCCcore/11.3.0</code>   <code>5.0.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ffmpi","title":"ffmpi","text":"<p>Fujitsu Compiler based compiler toolchain, including Fujitsu MPI for MPI support.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>4.5.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#ffnet","title":"ffnet","text":"<p>Feed-forward neural network solution for python</p> <p>homepage: http://ffnet.sourceforge.net/</p>    version versionsuffix toolchain     <code>0.8.3</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#fftlib","title":"fftlib","text":"<p>A library that intercepts FFTW calls and adds features on top of it.  In particular, it enables FFT plan reuse when there are multiple calls for the same geometry.</p> <p>homepage: https://github.com/flwende/fftlib</p>    version toolchain     <code>20170628</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#fftw","title":"FFTW","text":"<p>FFTW is a C subroutine library for computing the discrete Fourier transform (DFT)  in one or more dimensions, of arbitrary input size, and of both real and complex data.</p> <p>homepage: https://www.fftw.org</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-fujitsu</code> <code>FCC/4.5.0</code>   <code>2.1.5</code>  <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2018b</code>   <code>3.3.4</code>  <code>gmpich/2016a</code>, <code>gmvapich2/1.7.20</code>, <code>gmvapich2/2016a</code>, <code>gompi/2016.04</code>, <code>gompi/2016.06</code>, <code>gompi/2016.07</code>, <code>gompi/2016a</code>, <code>gompi/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>3.3.5</code>  <code>gompi/2016.07</code>, <code>gompi/2016.09</code>, <code>gompi/2016b</code>, <code>intel/2016b</code>   <code>3.3.6</code>  <code>gimpi/2017b</code>, <code>gimpic/2017b</code>, <code>gompi/2017a</code>, <code>gompi/2017b</code>, <code>gompic/2017b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>3.3.7</code>  <code>gimkl/2017a</code>, <code>gimpi/2018a</code>, <code>gmpich/2017.08</code>, <code>gompi/2018a</code>, <code>gompic/2018a</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>, <code>intel/2018.01</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>3.3.7</code> <code>-serial</code> <code>GCC/6.4.0-2.28</code>   <code>3.3.8</code>  <code>gompi/2018.08</code>, <code>gompi/2018b</code>, <code>gompi/2019a</code>, <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompic/2018b</code>, <code>gompic/2019a</code>, <code>gompic/2019b</code>, <code>gompic/2020a</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>, <code>intel/2018b</code>, <code>intel/2019a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>, <code>iomkl/2018b</code>   <code>3.3.8</code> <code>-amd</code> <code>gompi/2020a</code>   <code>3.3.8</code> <code>-serial</code> <code>GCC/9.3.0</code>   <code>3.3.9</code>  <code>gompi/2021a</code>, <code>intel/2021a</code>   <code>3.3.10</code>  <code>GCC/11.3.0</code>, <code>GCC/12.2.0</code>, <code>gompi/2021b</code>, <code>iimpi/2021b</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#fftwmpi","title":"FFTW.MPI","text":"<p>FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data.</p> <p>homepage: https://www.fftw.org</p>    version toolchain     <code>3.3.10</code> <code>gompi/2022.05</code>, <code>gompi/2022.10</code>, <code>gompi/2022a</code>, <code>gompi/2022b</code>"},{"location":"version-specific/supported-software/#fgbio","title":"fgbio","text":"<p>A set of tools to analyze genomic data with a focus on Next Generation Sequencing.</p> <p>homepage: https://fulcrumgenomics.github.io/fgbio</p>    version toolchain     <code>1.3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#fgsl","title":"FGSL","text":"<p>FGSL: A Fortran interface to the GNU Scientific Library</p> <p>homepage: https://www.lrz.de/services/software/mathematik/gsl/fortran/</p>    version toolchain     <code>1.1.0</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#fhi-aims","title":"FHI-aims","text":"<p>FHI-aims is an efficient, accurate all-electron, full-potential electronic structure code package for computational molecular and materials science (non-periodic and periodic systems). The code supports DFT (semilocal and hybrid) and many-body perturbation theory. FHI-aims is particularly efficient for molecular systems and nanostructures, while maintaining high numerical accuracy for all production tasks. Production calculations handle up to several thousand atoms and can efficiently use (ten) thousands of cores.  </p> <p>homepage: https://aimsclub.fhi-berlin.mpg.de/</p>    version toolchain     <code>200112_2</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#fiat","title":"FIAT","text":"<p>The FInite element Automatic Tabulator (FIAT) supports generation of arbitrary order instances of the Lagrange elements on lines, triangles, and tetrahedra. It is also capable of generating arbitrary order instances of Jacobi-type quadrature rules on the same element shapes.</p> <p>homepage: https://bitbucket.org/fenics-project/fiat</p>    version versionsuffix toolchain     <code>1.6.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2018.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2019.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#figaro","title":"FIGARO","text":"<p>FIGARO: An efficient and objective tool for optimizing microbiome rRNA gene trimming parameters.</p> <p>homepage: https://github.com/Zymo-Research/figaro</p>    version toolchain     <code>1.1.2</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#figuregen","title":"FigureGen","text":"<p>FigureGen is a Fortran program that creates images for ADCIRC files. It reads mesh files (fort.14, etc.), nodal attributes files (fort.13, etc.) and output  files (fort.63, fort.64, maxele.63, etc.). It plots contours, contour lines, and vectors.  Using FigureGen, you can go directly from the ADCIRC input and output files to a  presentation-quality figure, for one or multiple time snaps.  </p> <p>homepage: https://ccht.ccee.ncsu.edu/category/software/figuregen/</p>    version toolchain     <code>51-20190516</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#fiji","title":"Fiji","text":"<p>Fiji is an image processing package\u2014a 'batteries-included' distribution of  ImageJ, bundling a lot of plugins which facilitate scientific image analysis. This release is based on ImageJ-2.1.0 and Fiji-2.1.1</p> <p>homepage: https://fiji.sc/</p>    version versionsuffix toolchain     <code>2.9.0</code> <code>-Java-1.8</code> <code>system</code>   <code>2.9.0</code> <code>-Java-8</code> <code>system</code>   <code>20170530</code>  <code>system</code>   <code>20191119-2057</code>  <code>system</code>   <code>20201104-1356</code>  <code>system</code>"},{"location":"version-specific/supported-software/#file","title":"file","text":"<p>The file command is 'a file type guesser', that is, a command-line tool  that tells you in words what kind of data a file contains.</p> <p>homepage: https://www.darwinsys.com/file/</p>    version toolchain     <code>5.17</code> <code>GCC/4.8.2</code>   <code>5.25</code> <code>intel/2016a</code>   <code>5.28</code> <code>foss/2016b</code>   <code>5.30</code> <code>intel/2017a</code>   <code>5.33</code> <code>GCCcore/6.4.0</code>   <code>5.35</code> <code>GCCcore/7.3.0</code>   <code>5.38</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>5.39</code> <code>GCCcore/10.2.0</code>   <code>5.40</code> <code>GCCcore/10.3.0</code>   <code>5.41</code> <code>GCCcore/11.2.0</code>   <code>5.43</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#filevercmp","title":"filevercmp","text":"<p>filevercmp function as in sort --version-sort.</p> <p>homepage: https://github.com/ekg/filevercmp</p>    version toolchain     <code>20141119</code> <code>GCCcore/9.3.0</code>   <code>20191210</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#filtlong","title":"Filtlong","text":"<p>Filtlong is a tool for filtering long reads by quality. It can take a set  of long reads and produce a smaller, better subset. It uses both read length (longer is better)  and read identity (higher is better) when choosing which reads pass the filter</p> <p>homepage: https://github.com/rrwick/Filtlong</p>    version toolchain     <code>0.2.0</code> <code>GCC/10.2.0</code>, <code>foss/2016b</code>   <code>0.2.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#find_circ","title":"find_circ","text":"<p>circRNA detection from RNA-seq reads</p> <p>homepage: https://github.com/marvin-jens/find_circ</p>    version versionsuffix toolchain     <code>1.2-20170228</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#findhap","title":"findhap","text":"<p>Find haplotypes and impute genotypes using multiple chip sets and sequence data</p> <p>homepage: http://aipl.arsusda.gov/software/findhap/</p>    version toolchain     <code>4</code> <code>system</code>"},{"location":"version-specific/supported-software/#findutils","title":"findutils","text":"<p>findutils: The GNU find, locate, updatedb, and xargs utilities</p> <p>homepage: http://www.gnu.org/software/findutils/findutils.html</p>    version toolchain     <code>4.4.2</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#fineradstructure","title":"fineRADstructure","text":"<p>A package for population structure inference from RAD-seq data</p> <p>homepage: http://cichlid.gurdon.cam.ac.uk/fineRADstructure.html</p>    version toolchain     <code>20180709</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#finestructure","title":"fineSTRUCTURE","text":"<p>fineSTRUCTURE is a fast and powerful algorithm for identifying population structure using  dense sequencing data.</p> <p>homepage: https://people.maths.bris.ac.uk/~madjl/finestructure/finestructure_info.html</p>    version toolchain     <code>2.1.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#fio","title":"fio","text":"<p>Flexible I/O tester</p> <p>homepage: https://github.com/axboe/fio</p>    version toolchain     <code>3.30</code> <code>GCCcore/10.3.0</code>   <code>3.32</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#fiona","title":"Fiona","text":"<p>Fiona is designed to be simple and dependable. It focuses on reading and writing data in standard Python IO style and relies upon familiar Python types and protocols such as files, dictionaries, mappings, and iterators instead of classes specific to OGR. Fiona can read and write real-world data using multi-layered GIS formats and zipped virtual file systems and integrates readily with other Python GIS packages such as pyproj, Rtree, and Shapely.</p> <p>homepage: https://github.com/Toblerity/Fiona</p>    version versionsuffix toolchain     <code>1.8.13</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>1.8.13.post1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.8.16</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.8.20</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>intel/2020b</code>   <code>1.8.21</code>  <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#firefox","title":"Firefox","text":"<p>Firefox is a free, open source Web browser for Windows, Linux and Mac OS X. It is based on the  Mozilla code base and offers customization options and features such as its capability to block pop-up windows,  tabbed browsing, privacy and security measures, smart searching, and RSS live bookmarks.</p> <p>homepage: https://www.mozilla.org/en-US/firefox/new/</p>    version toolchain     <code>44.0.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#firestarter","title":"FIRESTARTER","text":"<p>FIRESTARTER: A Processor Stress Test Utility. FIRESTARTER maximizes the energy consumption of 64-Bit x86 processors by generating heavy load on the execution units as well as transferring data between the cores and multiple levels of the memory hierarchy.</p> <p>homepage: https://github.com/tud-zih-energy/FIRESTARTER/</p>    version toolchain     <code>2.0</code> <code>gcccuda/2020a</code>, <code>gcccuda/2020b</code>"},{"location":"version-specific/supported-software/#fireworks","title":"FireWorks","text":"<p>FireWorks helps run calculation workflows, with a centralized workflow server  controlling many worker nodes.</p> <p>homepage: https://pypi.python.org/pypi/FireWorks</p>    version versionsuffix toolchain     <code>1.4.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#fit-sne","title":"FIt-SNE","text":"<p>t-distributed stochastic neighbor embedding (t-SNE) is widely used for  visualizing single-cell RNA-sequencing (scRNA-seq) data, but it scales poorly to large  datasets. We dramatically accelerate t-SNE, obviating the need for data downsampling, and  hence allowing visualization of rare cell populations. Furthermore, we implement a  heatmap-style visualization for scRNA-seq based on one-dimensional t-SNE for simultaneously  visualizing the expression patterns of thousands of genes.</p> <p>homepage: https://github.com/KlugerLab/FIt-SNE</p>    version toolchain     <code>1.1.0</code> <code>gompi/2018b</code>"},{"location":"version-specific/supported-software/#fix","title":"FIX","text":"<p>FIX attempts to auto-classify ICA components into \"good\" vs \"bad\" components, so that the bad components can be removed from the 4D FMRI data.</p> <p>homepage: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX</p>    version versionsuffix toolchain     <code>1.06.12</code> <code>-Octave-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#fixesproto","title":"fixesproto","text":"<p>X.org FixesProto protocol headers.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>5.0</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#flac","title":"FLAC","text":"<p>FLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality.</p> <p>homepage: https://xiph.org/flac/</p>    version toolchain     <code>1.3.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.3.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#flair","title":"FLAIR","text":"<p>FLAIR (Full-Length Alternative Isoform analysis of RNA)  for the correction, isoform definition, and alternative splicing analysis of noisy reads.  FLAIR has primarily been used for nanopore cDNA, native RNA, and PacBio sequencing reads.</p> <p>homepage: https://github.com/BrooksLabUCSC/flair</p>    version versionsuffix toolchain     <code>1.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.5.1-20200630</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#flair-nlp","title":"flair-NLP","text":"<p>A very simple framework for state-of-the-art NLP</p> <p>homepage: https://github.com/flairNLP/flair</p>    version versionsuffix toolchain     <code>0.11.3</code>  <code>foss/2021a</code>   <code>0.11.3</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#flann","title":"FLANN","text":"<p>FLANN is a library for performing fast approximate nearest neighbor searches in high dimensional spaces.</p> <p>homepage: https://github.com/mariusmuja/flann/</p>    version versionsuffix toolchain     <code>1.8.4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.8.4</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.8.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.9.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#flash","title":"FLASH","text":"<p>FLASH (Fast Length Adjustment of SHort reads) is a very fast and accurate software tool to merge paired-end reads from next-generation sequencing experiments. FLASH is designed to merge pairs of reads when the original DNA fragments are shorter than twice the length of reads. The resulting longer reads can significantly improve genome assemblies. They can also improve transcriptome assembly when FLASH is used to merge RNA-seq data. </p> <p>homepage: https://ccb.jhu.edu/software/FLASH/</p>    version toolchain     <code>1.2.11</code> <code>GCC/8.3.0</code>, <code>foss/2016a</code>, <code>foss/2018a</code>, <code>foss/2018b</code>   <code>2.2.00</code> <code>GCC/11.2.0</code>, <code>foss/2018b</code>, <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#flask","title":"Flask","text":"<p>Flask is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications. This module includes the Flask extensions: Flask-Cors</p> <p>homepage: https://www.palletsprojects.com/p/flask/</p>    version versionsuffix toolchain     <code>1.0.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.1.2</code>  <code>GCCcore/10.2.0</code>   <code>1.1.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.1.2</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>1.1.4</code>  <code>GCCcore/10.3.0</code>   <code>2.0.2</code>  <code>GCCcore/11.2.0</code>   <code>2.2.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#flatbuffers","title":"flatbuffers","text":"<p>FlatBuffers: Memory Efficient Serialization Library</p> <p>homepage: https://github.com/google/flatbuffers/</p>    version toolchain     <code>1.12.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.0.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#flatbuffers-python","title":"flatbuffers-python","text":"<p>Python Flatbuffers runtime library.</p> <p>homepage: https://github.com/google/flatbuffers/</p>    version versionsuffix toolchain     <code>1.12</code>  <code>GCCcore/10.2.0</code>   <code>1.12</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#fleur","title":"FLEUR","text":"<p>FLEUR is a feature-full, freely available FLAPW (full potential linearized augmented planewave) code,  based on density-functional theory.</p> <p>homepage: http://www.flapw.de/</p>    version toolchain     <code>0.26e</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#flex","title":"flex","text":"<p>Flex (Fast Lexical Analyzer) is a tool for generating scanners. A scanner,  sometimes called a tokenizer, is a program which recognizes lexical patterns  in text. </p> <p>homepage: http://flex.sourceforge.net/</p>    version toolchain     <code>2.5.35</code> <code>system</code>   <code>2.5.38</code> <code>GCC/4.8.2</code>   <code>2.5.39</code> <code>GCC/4.9.2</code>, <code>GCC/4.9.2-binutils-2.25</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-binutils-2.25</code>, <code>GCC/5.1.0-binutils-2.25</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>system</code>   <code>2.6.0</code> <code>GCC/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/4.9.4</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>2.6.2</code> <code>intel/2016b</code>   <code>2.6.3</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/7.1.0</code>, <code>gimkl/2017a</code>, <code>system</code>   <code>2.6.4</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.1.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/5.5.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/7.4.0</code>, <code>GCCcore/8.1.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/8.4.0</code>, <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>, <code>GCCcore/9.4.0</code>, <code>GCCcore/9.5.0</code>, <code>GCCcore/system</code>, <code>system</code>"},{"location":"version-specific/supported-software/#flexbar","title":"Flexbar","text":"<p>The program Flexbar preprocesses high-throughput sequencing data efficiently</p> <p>homepage: https://github.com/seqan/flexbar</p>    version toolchain     <code>3.5.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#flexiblas","title":"FlexiBLAS","text":"<p>FlexiBLAS is a wrapper library that enables the exchange of the BLAS and LAPACK implementation used by a program without recompiling or relinking it.</p> <p>homepage: https://gitlab.mpi-magdeburg.mpg.de/software/flexiblas-release</p>    version toolchain     <code>3.0.4</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>3.1.3</code> <code>GCC/11.2.0</code>   <code>3.2.0</code> <code>GCC/11.3.0</code>   <code>3.2.1</code> <code>GCC/12.2.0</code>"},{"location":"version-specific/supported-software/#flexidot","title":"FlexiDot","text":"<p>Highly customizable, ambiguity-aware dotplots for visual sequence analyses </p> <p>homepage: https://github.com/molbio-dresden/flexidot</p>    version versionsuffix toolchain     <code>1.06</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#flink","title":"Flink","text":"<p>Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.</p> <p>homepage: https://flink.apache.org/</p>    version versionsuffix toolchain     <code>1.11.2</code> <code>-bin-scala_2.11</code> <code>system</code>"},{"location":"version-specific/supported-software/#flint","title":"FLINT","text":"<p>FLINT (Fast Library for Number Theory) is a C library in support of computations  in number theory. Operations that can be performed include conversions, arithmetic, computing GCDs,  factoring, solving linear systems, and evaluating special functions. In addition, FLINT provides  various low-level routines for fast arithmetic. FLINT is extensively documented and tested.</p> <p>homepage: https://www.flintlib.org/</p>    version toolchain     <code>2.5.2</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>   <code>2.7.1</code> <code>GCC/10.3.0</code>   <code>2.8.4</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#flook","title":"flook","text":"<p>The fortran-Lua-hook library.</p> <p>homepage: https://github.com/ElectronicStructureLibrary/flook</p>    version toolchain     <code>0.8.1</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#fltk","title":"FLTK","text":"<p>FLTK is a cross-platform C++ GUI toolkit for UNIX/Linux (X11), Microsoft Windows,  and MacOS X. FLTK provides modern GUI functionality without the bloat and supports 3D graphics via OpenGL  and its built-in GLUT emulation.</p> <p>homepage: https://www.fltk.org</p>    version toolchain     <code>1.3.3</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.3.4</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>fosscuda/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intelcuda/2017b</code>   <code>1.3.5</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.3.6</code> <code>GCCcore/10.3.0</code>   <code>1.3.7</code> <code>GCCcore/11.2.0</code>   <code>1.3.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#fluent","title":"FLUENT","text":"<p>ANSYS FLUENT software contains the broad physical modeling capabilities needed to model flow, turbulence, heat transfer, and reactions for industrial applications ranging from air flow over an aircraft wing to combustion in a furnace, from bubble columns to oil platforms, from blood flow to semiconductor manufacturing, and from clean room design to wastewater treatment plants.</p> <p>homepage: https://www.ansys.com/products/fluids/ansys-fluent</p>    version toolchain     <code>14.5</code> <code>system</code>   <code>15.0.7</code> <code>system</code>   <code>16.0</code> <code>system</code>   <code>17.1</code> <code>system</code>   <code>18.0</code> <code>system</code>   <code>18.1</code> <code>system</code>   <code>18.2</code> <code>system</code>   <code>2021R1</code> <code>system</code>   <code>2021R2</code> <code>system</code>"},{"location":"version-specific/supported-software/#flye","title":"Flye","text":"<p>Flye is a de novo assembler for long and noisy reads, such as those produced by PacBio  and Oxford Nanopore Technologies.</p> <p>homepage: https://github.com/fenderglass/Flye</p>    version versionsuffix toolchain     <code>2.4</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>2.6</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>2.6</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>2.8.1</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>2.8.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.8.3</code>  <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>2.9</code>  <code>GCC/10.3.0</code>, <code>intel-compilers/2021.2.0</code>   <code>2.9.1</code>  <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#fmilibrary","title":"FMILibrary","text":"<p>FMI library is intended as a foundation for applications interfacing  FMUs (Functional Mockup Units) that follow FMI Standard. This version of the library supports  FMI 1.0 and FMI2.0. See http://www.fmi-standard.org/</p> <p>homepage: https://jmodelica.org/</p>    version toolchain     <code>2.0.3</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#fmm3d","title":"FMM3D","text":"<p>Flatiron Institute Fast Multipole Libraries: a set of libraries to compute N-body interactions governed by the Laplace and Helmholtz equations, to a specified precision, in three dimensions, on a multi-core shared-memory machine.</p> <p>homepage: https://fmm3d.readthedocs.io</p>    version toolchain     <code>20211018</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#fmpy","title":"FMPy","text":"<p>FMPy is a free Python library to simulate Functional Mock-up Units (FMUs).</p> <p>homepage: https://github.com/CATIA-Systems/FMPy</p>    version toolchain     <code>0.3.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#fmriprep","title":"FMRIprep","text":"<p>FMRIprep is a functional magnetic resonance imaging (fMRI) data preprocessing pipeline that is  designed to provide an easily accessible, state-of-the-art interface that is robust to variations in scan  acquisition protocols and that requires minimal user input, while providing easily interpretable and comprehensive  error and output reporting.</p> <p>homepage: https://fmriprep.readthedocs.io</p>    version versionsuffix toolchain     <code>1.1.8</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.4.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#fms","title":"FMS","text":"<p>The Flexible Modeling System (FMS) is a software framework for   supporting the efficient development, construction, execution, and scientific  interpretation of atmospheric, oceanic, and climate system models.</p> <p>homepage: https://github.com/NOAA-GFDL/FMS</p>    version toolchain     <code>2022.02</code> <code>gompi/2022a</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#fmt","title":"fmt","text":"<p>fmt (formerly cppformat) is an open-source formatting library.</p> <p>homepage: http://fmtlib.net/</p>    version toolchain     <code>3.0.1</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.0.2</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>5.3.0</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>6.2.1</code> <code>GCCcore/9.3.0</code>   <code>7.0.3</code> <code>GCCcore/9.3.0</code>   <code>7.1.1</code> <code>GCCcore/11.2.0</code>   <code>9.1.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#fobis","title":"FoBiS","text":"<p>A Fortran Building System for automatic building modern Fortran projects</p> <p>homepage: https://github.com/szaghi/FoBiS</p>    version toolchain     <code>3.0.5</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#foldx","title":"FoldX","text":"<p>FoldX is used to provide a fast and quantitative estimation of the importance of the interactions  contributing to the stability of proteins and protein complexes.</p> <p>homepage: http://foldx.crg.es/</p>    version toolchain     <code>2.5.2</code> <code>system</code>   <code>3.0-beta5.1</code> <code>system</code>   <code>3.0-beta6</code> <code>system</code>   <code>3.0-beta6.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#fontconfig","title":"fontconfig","text":"<p>Fontconfig is a library designed to provide system-wide font configuration,  customization and application access. </p> <p>homepage: https://www.freedesktop.org/wiki/Software/fontconfig/</p>    version versionsuffix toolchain     <code>2.11.94</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.11.95</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.12.1</code>  <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>2.12.1</code> <code>-libpng-1.6.29</code> <code>GCCcore/6.3.0</code>   <code>2.12.4</code>  <code>GCCcore/6.4.0</code>   <code>2.12.6</code>  <code>GCCcore/6.4.0</code>   <code>2.13.0</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.13.1</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.13.92</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.13.93</code>  <code>GCCcore/10.3.0</code>   <code>2.13.94</code>  <code>GCCcore/11.2.0</code>   <code>2.14.0</code>  <code>GCCcore/11.3.0</code>   <code>2.14.1</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#fontsproto","title":"fontsproto","text":"<p>X11 font extension wire protocol</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>2.1.3</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#ford","title":"FORD","text":"<p>FORD is an automatic documentation generator for modern Fortran programs</p> <p>homepage: https://github.com/Fortran-FOSS-Programmers/ford/wiki</p>    version toolchain     <code>6.1.1</code> <code>GCCcore/10.2.0</code>   <code>6.1.6</code> <code>GCCcore/10.3.0</code>   <code>6.1.15</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#foss","title":"foss","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  OpenMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: https://easybuild.readthedocs.io/en/master/Common-toolchains.html#foss-toolchain</p>    version toolchain     <code>2016.04</code> <code>system</code>   <code>2016.06</code> <code>system</code>   <code>2016.07</code> <code>system</code>   <code>2016.09</code> <code>system</code>   <code>2016a</code> <code>system</code>   <code>2016b</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2018.08</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>   <code>2021a</code> <code>system</code>   <code>2021b</code> <code>system</code>   <code>2022.05</code> <code>system</code>   <code>2022.10</code> <code>system</code>   <code>2022a</code> <code>system</code>   <code>2022b</code> <code>system</code>"},{"location":"version-specific/supported-software/#fosscuda","title":"fosscuda","text":"<p>GCC based compiler toolchain with CUDA support, and including  OpenMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2017b</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#fox","title":"FoX","text":"<p>FoX is an XML library written in Fortran 95. It allows software developers to read, write and modify XML documents from Fortran applications without the complications of dealing with multi-language development.</p> <p>homepage: http://homepages.see.leeds.ac.uk/~earawa/FoX/</p>    version toolchain     <code>4.1.2</code> <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>, <code>intel/2017b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fox-toolkit","title":"FOX-Toolkit","text":"<p>FOX is a C++ based Toolkit for developing Graphical User Interfaces easily and effectively. It offers a wide, and growing, collection of Controls, and provides state of the art facilities such as drag and drop, selection, as well as OpenGL widgets for 3D graphical manipulation. FOX also implements icons, images, and user-convenience features such as status line help, and tooltips.</p> <p>homepage: https://www.fox-toolkit.org/</p>    version toolchain     <code>1.6.57</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#fpm","title":"FPM","text":"<p>Effing package management! Build packages for multiple platforms (deb, rpm, etc) with great ease  and sanity.</p> <p>homepage: https://github.com/jordansissel/fpm</p>    version versionsuffix toolchain     <code>1.3.3</code> <code>-Ruby-2.1.6</code> <code>system</code>"},{"location":"version-specific/supported-software/#fpocket","title":"fpocket","text":"<p>The fpocket suite of programs is a very fast open source protein pocket detection algorithm based on Voronoi tessellation. The platform is suited for the scientific community willing to develop new scoring functions and  extract pocket descriptors on a large scale level.</p> <p>homepage: https://github.com/Discngine/fpocket</p>    version toolchain     <code>3.1.4.2</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#fqtrim","title":"fqtrim","text":"<p>fqtrim is a versatile stand-alone utility that can be used to trim adapters, poly-A tails,  terminal unknown bases (Ns) and low quality 3' regions in reads from high-throughput next-generation sequencing  machines.</p> <p>homepage: http://ccb.jhu.edu/software/fqtrim/</p>    version toolchain     <code>0.9.4</code> <code>intel/2016b</code>   <code>0.9.5</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#fqzcomp","title":"fqzcomp","text":"<p>Fqzcomp is a basic fastq compressor, designed primarily for high performance.  Despite that it is comparable to bzip2 for compression levels.</p> <p>homepage: http://sourceforge.net/projects/fqzcomp/</p>    version toolchain     <code>4.6</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#fraggenescan","title":"FragGeneScan","text":"<p>FragGeneScan is an application for finding (fragmented) genes in short reads.</p> <p>homepage: http://omics.informatics.indiana.edu/FragGeneScan/</p>    version toolchain     <code>1.31</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#franz","title":"FRANz","text":"<p>A fast and flexible parentage inference program for natural populations.</p> <p>homepage: https://www.bioinf.uni-leipzig.de/Software/FRANz</p>    version toolchain     <code>2.0.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#freebarcodes","title":"FreeBarcodes","text":"<p>A package for the generation and decoding of FREE divergence error-correcting DNA barcodes</p> <p>homepage: https://github.com/hawkjo/freebarcodes</p>    version toolchain     <code>3.0.a5</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#freebayes","title":"freebayes","text":"<p>Bayesian haplotype-based genetic polymorphism discovery and genotyping.</p> <p>homepage: https://github.com/freebayes/freebayes</p>    version versionsuffix toolchain     <code>1.3.5</code>  <code>GCC/10.2.0</code>   <code>1.3.5</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>1.3.6</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>1.3.6</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#freefem","title":"FreeFEM","text":"<p>FreeFEM offers a fast interpolation algorithm and a language for the manipulation  of data on multiple meshes.</p> <p>homepage: https://freefem.org</p>    version versionsuffix toolchain     <code>4.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#freefem_1","title":"FreeFem++","text":"<p>FreeFem++ is a partial differential equation solver. It has its own language. freefem scripts can solve multiphysics non linear systems in 2D and 3D. </p> <p>homepage: http://www.freefem.org/</p>    version versionsuffix toolchain     <code>3.58</code> <code>-downloaded-deps</code> <code>foss/2017b</code>   <code>3.60</code> <code>-downloaded-deps</code> <code>intel/2018a</code>   <code>3.61-1</code> <code>-downloaded-deps</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#freeglut","title":"freeglut","text":"<p>freeglut is a completely OpenSourced alternative to the OpenGL Utility Toolkit (GLUT) library.</p> <p>homepage: http://freeglut.sourceforge.net/</p>    version versionsuffix toolchain     <code>3.0.0</code>  <code>GCCcore/8.2.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.0.0</code> <code>-Mesa-11.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.2.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>3.2.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#freeimage","title":"FreeImage","text":"<p>FreeImage is an Open Source library project for developers who would like to support popular graphics image formats like PNG, BMP, JPEG, TIFF and others as needed by today's multimedia applications. FreeImage is easy to use, fast, multithreading safe.</p> <p>homepage: http://freeimage.sourceforge.net</p>    version toolchain     <code>3.18.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#freesasa","title":"FreeSASA","text":"<p>FreeSASA is a command line tool, C-library and Python module for calculating solvent accessible surface areas (SASA).</p> <p>homepage: https://freesasa.github.io</p>    version toolchain     <code>2.0.3</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#freesurfer","title":"FreeSurfer","text":"<p>FreeSurfer is a set of tools for analysis and visualization  of structural and functional brain imaging data.  FreeSurfer contains a fully  automatic structural imaging stream for processing cross sectional and  longitudinal data.</p> <p>homepage: https://surfer.nmr.mgh.harvard.edu/</p>    version versionsuffix toolchain     <code>5.3.0</code> <code>-centos4_x86_64</code> <code>system</code>   <code>5.3.0</code> <code>-centos6_x86_64</code> <code>system</code>   <code>6.0.0</code> <code>-centos6_x86_64</code> <code>system</code>   <code>6.0.1</code> <code>-centos6_x86_64</code> <code>system</code>   <code>7.1.1</code> <code>-centos6_x86_64</code> <code>system</code>   <code>7.1.1</code> <code>-centos7_x86_64</code> <code>system</code>   <code>7.1.1</code> <code>-centos8_x86_64</code> <code>system</code>   <code>7.2.0</code> <code>-centos7_x86_64</code> <code>system</code>   <code>7.2.0</code> <code>-centos8_x86_64</code> <code>system</code>   <code>7.2.0</code> <code>-ubuntu18_amd64</code> <code>system</code>   <code>7.3.2</code> <code>-centos7_x86_64</code> <code>system</code>   <code>7.3.2</code> <code>-centos8_x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#freetds","title":"FreeTDS","text":"<p>FreeTDS is a set of libraries for Unix and Linux that allows your programs to  natively talk to Microsoft SQL Server and Sybase databases.</p> <p>homepage: https://www.freetds.org/</p>    version toolchain     <code>1.3.3</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#freetype","title":"freetype","text":"<p>FreeType 2 is a software font engine that is designed to be small, efficient,  highly customizable, and portable while capable of producing high-quality  output (glyph images). It can be used in graphics libraries, display servers,  font conversion tools, text image generation tools, and many other products  as well. </p> <p>homepage: https://freetype.org</p>    version versionsuffix toolchain     <code>2.6.2</code>  <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.6.3</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.6.5</code>  <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.7</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.7.1</code>  <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>2.7.1</code> <code>-libpng-1.6.29</code> <code>GCCcore/6.3.0</code>   <code>2.8</code>  <code>GCCcore/6.4.0</code>   <code>2.8.1</code>  <code>GCCcore/6.4.0</code>   <code>2.9</code>  <code>GCCcore/6.4.0</code>   <code>2.9.1</code>  <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>2.10.1</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.10.3</code>  <code>GCCcore/10.2.0</code>   <code>2.10.4</code>  <code>GCCcore/10.3.0</code>   <code>2.11.0</code>  <code>GCCcore/11.2.0</code>   <code>2.12.1</code>  <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#freetype-py","title":"freetype-py","text":"<p>Python binding for the freetype library</p> <p>homepage: https://github.com/rougier/freetype-py</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#freexl","title":"FreeXL","text":"<p>FreeXL is an open source library to extract valid data from within an Excel (.xls) spreadsheet. </p> <p>homepage: https://www.gaia-gis.it/fossil/freexl/index</p>    version toolchain     <code>1.0.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.0.3</code> <code>GCCcore/6.4.0</code>   <code>1.0.5</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>1.0.6</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#freud-analysis","title":"freud-analysis","text":"<p>The freud Python library provides a simple, flexible, powerful set of tools for analyzing trajectories obtained from molecular dynamics or Monte Carlo simulations. High performance, parallelized C++ is used to compute standard tools such as radial distribution functions, correlation functions, order parameters, and clusters, as well as original analysis methods including potentials of mean force and torque (PMFTs) and local environment matching. The freud library supports many input formats and outputs NumPy arrays, enabling integration with the scientific Python ecosystem for many typical materials science workflows.</p> <p>homepage: https://github.com/glotzerlab/freud</p>    version toolchain     <code>2.6.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#fribidi","title":"FriBidi","text":"<p>The Free Implementation of the Unicode Bidirectional Algorithm. </p> <p>homepage: https://github.com/fribidi/fribidi</p>    version toolchain     <code>1.0.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.0.2</code> <code>GCCcore/6.4.0</code>   <code>1.0.5</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>1.0.9</code> <code>GCCcore/9.3.0</code>   <code>1.0.10</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.0.12</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#fruit","title":"FRUIT","text":"<p>FORTRAN Unit Test Framework (FRUIT)</p> <p>homepage: https://fortranxunit.sourceforge.io</p>    version versionsuffix toolchain     <code>3.4.3</code> <code>-Ruby-2.5.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fruit_processor","title":"FRUIT_processor","text":"<p>FORTRAN Unit Test Framework (FRUIT)</p> <p>homepage: https://fortranxunit.sourceforge.io</p>    version versionsuffix toolchain     <code>3.4.3</code> <code>-Ruby-2.5.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fsl","title":"FSL","text":"<p>FSL is a comprehensive library of analysis tools for FMRI, MRI and DTI brain imaging data.</p> <p>homepage: https://www.fmrib.ox.ac.uk/fsl/</p>    version versionsuffix toolchain     <code>5.0.9</code>  <code>intel/2016a</code>   <code>5.0.9</code> <code>-Mesa-11.2.1</code> <code>intel/2016a</code>   <code>5.0.9</code> <code>-centos6_64</code> <code>system</code>   <code>5.0.10</code>  <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>5.0.11</code>  <code>foss/2018b</code>   <code>5.0.11</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>6.0.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>6.0.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>6.0.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>foss/2019a</code>   <code>6.0.2</code> <code>-Python-2.7.15-CUDA-9.2.88</code> <code>foss/2018b</code>   <code>6.0.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>6.0.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>6.0.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>6.0.5.1</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#fsleyes","title":"FSLeyes","text":"<p>FSLeyes is the FSL image viewer.</p> <p>homepage: https://git.fmrib.ox.ac.uk/fsl/fsleyes/fsleyes</p>    version versionsuffix toolchain     <code>0.15.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#fsom","title":"fsom","text":"<p>A tiny C library for managing SOM (Self-Organizing Maps) neural networks.</p> <p>homepage: https://github.com/ekg/fsom</p>    version toolchain     <code>20141119</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#fson","title":"FSON","text":"<p>Fortran 95 JSON Parser</p> <p>homepage: https://github.com/josephalevin/fson</p>    version toolchain     <code>1.0.5</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#ftgl","title":"FTGL","text":"<p>FTGL is a free open source library to enable developers to use arbitrary fonts in their OpenGL (www.opengl.org) applications. </p> <p>homepage: https://github.com/frankheckenbach/ftgl</p>    version toolchain     <code>2.1.3-rc5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2018b</code>, <code>intel/2017b</code>   <code>2.4.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#fujitsu","title":"Fujitsu","text":"<p>Toolchain using Fujitsu compilers and libraries.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>21.05</code> <code>system</code>"},{"location":"version-specific/supported-software/#fullrmc","title":"fullrmc","text":"<p>Reverse Monte Carlo (RMC) is probably best known for its applications  in condensed matter physics and solid state chemistry. fullrmc which stands for  FUndamental Library Language for Reverse Monte Carlo is different than traditional  RMC but a stochastic modelling method to solve an inverse problem whereby  an atomic/molecular model is adjusted until its atoms position havei  the greatest consistency with a set of experimental data.</p> <p>homepage: https://bachiraoun.github.io/fullrmc</p>    version versionsuffix toolchain     <code>3.2.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#fumi_tools","title":"fumi_tools","text":"<p>This tool is intended to deduplicate UMIs from single-end and paired-end  sequencing data. Reads are considered identical when their UMIs have the same sequence,  they have the same length and map at the same position.</p> <p>homepage: https://ccb-gitlab.cs.uni-saarland.de/tobias/fumi_tools</p>    version versionsuffix toolchain     <code>0.18.2</code>  <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>0.18.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#funwave-tvd","title":"FUNWAVE-TVD","text":"<p>FUNWAVE\u2013TVD is the TVD version of the fully nonlinear Boussinesq wave model (FUNWAVE)  initially developed by Kirby et al.</p> <p>homepage: https://fengyanshi.github.io</p>    version versionsuffix toolchain     <code>3.1-20170525</code>  <code>intel/2017a</code>   <code>3.1-20170525</code> <code>-no-storm</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#fuse","title":"FUSE","text":"<p>The reference implementation of the Linux FUSE (Filesystem in Userspace) interface</p> <p>homepage: https://github.com/libfuse/libfuse</p>    version toolchain     <code>3.2.6</code> <code>intel/2018a</code>   <code>3.4.1</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#fuseq","title":"FuSeq","text":"<p>FuSeq is a novel method to discover fusion genes from paired-end RNA sequencing data.</p> <p>homepage: https://github.com/nghiavtr/FuSeq</p>    version toolchain     <code>1.1.2</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#fusioncatcher","title":"FusionCatcher","text":"<p>FusionCatcher searches for novel/known somatic fusion genes, translocations, and chimeras in RNA-seq data (paired-end or single-end reads from Illumina NGS platforms like Solexa/HiSeq/NextSeq/MiSeq/MiniSeq) from diseased samples.</p> <p>homepage: https://github.com/ndaniel/fusioncatcher</p>    version versionsuffix toolchain     <code>1.20</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>1.30</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#futhark","title":"futhark","text":"<p>Futhark is a small programming language designed to be compiled to efficient parallel code. It     is a statically typed, data-parallel, and purely functional array language in the ML family, and comes     with a heavily optimising ahead-of-time compiler that presently generates GPU code via CUDA and OpenCL,     although the language itself is hardware-agnostic and can also run on multicore CPUs</p> <p>homepage: https://futhark-lang.org/</p>    version toolchain     <code>0.19.5</code> <code>system</code>"},{"location":"version-specific/supported-software/#futile","title":"futile","text":"<p>The FUTILE project (Fortran Utilities for the Treatment of Innermost Level of Executables) is a set of modules   and wrapper that encapsulate the most common low-level operations of a Fortran code.  </p> <p>homepage: https://launchpad.net/futile</p>    version toolchain     <code>1.8.3</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#future","title":"future","text":"<p>python-future is the missing compatibility layer between Python 2 and Python 3.</p> <p>homepage: https://python-future.org/</p>    version versionsuffix toolchain     <code>0.16.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>0.16.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.16.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.16.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#fxtract","title":"fxtract","text":"<p>Extract sequences from a fastx (fasta or fastq) file given a subsequence.</p> <p>homepage: https://github.com/ctSkennerton/fxtract</p>    version toolchain     <code>2.3</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#g","title":"G","text":"<p>G-PhoCS - g2clib - g2lib - g2log - Gaia - GAMESS-US - gap - GapCloser - GapFiller - gappa - GARLI - garnett - GAT - GATE - GATK - Gaussian - gawk - Gblocks - GBprocesS - gbs2ploidy - gc - GC3Pie - GCC - GCCcore - gcccuda - gcloud - GConf - GCTA - Gctf - GD - GDAL - GDB - gdbgui - gdbm - gdc-client - GDCHART - GDCM - GDGraph - gdist - Gdk-Pixbuf - GDRCopy - Geant4 - Geant4-data - gearshifft - GEGL - GEM-library - GEMMA - gemmi - gencore_variant_detection - GeneMark-ET - gengetopt - Genome_Profiler - GenomeMapper - GenomeTester4 - GenomeThreader - GenomeTools - GenomeWorks - GenotypeHarmonizer - genozip - gensim - geocube - geopandas - geopy - georges - GEOS - Gerris - GETORB - GetOrganelle - gettext - gexiv2 - gfbf - GffCompare - gffread - gflags - GFOLD - gh - GHC - Ghostscript - Gibbs2 - giflib - gifsicle - GIMIC - gimkl - GIMP - gimpi - gimpic - GIMPS - giolf - giolfc - git - git-extras - git-lfs - GitPython - Givaro - Giza - GL2PS - Glade - glew - GLFW - GLib - glib-networking - glibc - GLibmm - GLIMMER - GlimmerHMM - GLM - GLM-AED - GlobalArrays - Globus-CLI - GlobusConnectPersonal - glog - GLPK - glproto - Glucose - GMAP-GSNAP - GMP - gmpich - gmpolf - gmpy2 - gmsh - GMT - gmvapich2 - gmvolf - GNU - gnuplot - GnuTLS - Go - goalign - GOATOOLS - gobff - GObject-Introspection - goblf - Godon - gofasta - golf - gomkl - gompi - gompic - google-java-format - googletest - gotree - GP2C - GPAW - GPAW-setups - gperf - gperftools - gpustat - GPy - GPyOpt - GPyTorch - Grace - Gradle - gradunwarp - graph-tool - Graphene - GraphicsMagick - graphite2 - GraPhlAn - GraphMap - GraphMap2 - Graphviz - graphviz - GRASP - GRASS - Greenlet - Grep - gretl - grib_api - GRIT - GRNBoost - groff - GroIMP - GROMACS - GromacsWrapper - GroopM - Groovy - gRPC - GSEA - gsettings-desktop-schemas - GSL - gSOAP - gsport - GST-plugins-bad - GST-plugins-base - GStreamer - gsutil - gsw - GTDB-Tk - GTK+ - GTK2 - GTK3 - GTK4 - GtkSourceView - GTOOL - GTS - gubbins - guenomu - Guile - GULP - Gurobi - gzip</p>"},{"location":"version-specific/supported-software/#g-phocs","title":"G-PhoCS","text":"<p>G-PhoCS is a software package for inferring ancestral population sizes, population divergence times, and migration rates from individual genome sequences. G-PhoCS accepts as input a set of multiple sequence alignments from separate neutrally evolving loci along the genome. Parameter inference is done in a Bayesian manner, using a Markov Chain Monte Carlo (MCMC) to jointly sample model parameters and genealogies at the input loci. </p> <p>homepage: http://compgen.cshl.edu/GPhoCS/</p>    version toolchain     <code>1.2.3</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#g2clib","title":"g2clib","text":"<p>Library contains GRIB2 encoder/decoder ('C' version).</p> <p>homepage: https://github.com/NOAA-EMC/NCEPLIBS-g2c</p>    version toolchain     <code>1.6.0</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>1.6.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.7.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#g2lib","title":"g2lib","text":"<p>Library contains GRIB2 encoder/decoder and search/indexing routines.</p> <p>homepage: https://www.nco.ncep.noaa.gov/pmb/codes/GRIB2/</p>    version toolchain     <code>1.4.0</code> <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.1.0</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.2.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#g2log","title":"g2log","text":"<p>g2log, efficient asynchronous logger using C++11</p> <p>homepage: https://sites.google.com/site/kjellhedstrom2//g2log-efficient-background-io-processign-with-c11</p>    version toolchain     <code>1.0</code> <code>GCCcore/8.3.0</code>, <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#gaia","title":"Gaia","text":"<p>Gaia is a C++ library with python bindings which implements similarity measures and classi\ufb01cations  on the results of audio analysis, and generates classi\ufb01cation models that Essentia can use to compute high-level  description of music.</p> <p>homepage: https://github.com/MTG/gaia</p>    version versionsuffix toolchain     <code>2.4.5</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#gamess-us","title":"GAMESS-US","text":"<p>The General Atomic and Molecular Electronic Structure System (GAMESS)  is a general ab initio quantum chemistry package. </p> <p>homepage: http://www.msg.chem.iastate.edu/gamess/index.html</p>    version versionsuffix toolchain     <code>20141205-R1</code>  <code>intel/2016a</code>   <code>20170420-R1</code>  <code>intel/2016b</code>   <code>20170420-R1</code> <code>-sockets</code> <code>intel/2016b</code>   <code>20180214-R1</code>  <code>foss/2016b</code>   <code>20180214-R1</code> <code>-sockets</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#gap","title":"gap","text":"<p>GAP is a system for computational discrete algebra, with particular emphasis on Computational Group Theory.</p> <p>homepage: https://www.gap-system.org</p>    version toolchain     <code>4.9.3</code> <code>intel/2018b</code>   <code>4.11.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#gapcloser","title":"GapCloser","text":"<p>GapCloser is designed to close the gaps emerging during the scaffolding process  by SOAPdenovo or other assembler, using the abundant pair relationships of short reads.</p> <p>homepage: https://sourceforge.net/projects/soapdenovo2/files/GapCloser/</p>    version toolchain     <code>1.12-r6</code> <code>foss/2018a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#gapfiller","title":"GapFiller","text":"<p>GapFiller is a seed-and-extend local assembler to fill the gap within paired reads.  It can be used for both DNA and RNA and it has been tested on Illumina data.</p> <p>homepage: https://sourceforge.net/projects/gapfiller</p>    version toolchain     <code>2.1.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#gappa","title":"gappa","text":"<p>gappa is a collection of commands for working with phylogenetic data. Its main focus are evolutionary placements of short environmental sequences on a reference phylogenetic tree. Such data is typically produced by tools like EPA-ng, RAxML-EPA or pplacer and usually stored in jplace files. </p> <p>homepage: https://github.com/lczech/gappa</p>    version toolchain     <code>0.7.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#garli","title":"GARLI","text":"<p>GARLI, Genetic Algorithm for Rapid Likelihood Inference is a   program for inferring phylogenetic trees. Using an approach similar to a   classical genetic algorithm, it rapidly searches the space of evolutionary   trees and model parameters to find the solution maximizing the likelihood   score. It implements nucleotide, amino acid and codon-based models of sequence   evolution, and runs on all platforms.</p> <p>homepage: https://code.google.com/archive/p/garli/</p>    version toolchain     <code>2.01</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#garnett","title":"garnett","text":"<p>Garnett is a software package that faciliates automated cell type classification from single-cell expression data.</p> <p>homepage: https://cole-trapnell-lab.github.io/garnett</p>    version versionsuffix toolchain     <code>0.1.20</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#gat","title":"GAT","text":"<p>The Genomic Association Tester (GAT) is a tool for computing the significance of overlap between   multiple sets of genomic intervals. GAT estimates significance based on simulation.</p> <p>homepage: https://gat.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.2.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#gate","title":"GATE","text":"<p>GATE is an advanced opensource software developed by the international OpenGATE collaboration and  dedicated to the numerical simulations in medical imaging. It currently supports simulations of Emission Tomography  (Positron Emission Tomography - PET and Single Photon Emission Computed Tomography - SPECT), and Computed Tomography</p> <p>homepage: http://www.opengatecollaboration.org/</p>    version versionsuffix toolchain     <code>6.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>7.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>7.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>8.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.0</code> <code>-Python-2.7.14-Geant4-10.04</code> <code>intel/2017b</code>   <code>8.1.p01</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>8.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>9.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>9.1</code>  <code>foss/2021b</code>   <code>9.2</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gatk","title":"GATK","text":"<p>The Genome Analysis Toolkit or GATK is a software package developed at the Broad Institute  to analyse next-generation resequencing data. The toolkit offers a wide variety of tools,  with a primary focus on variant discovery and genotyping as well as strong emphasis on  data quality assurance. Its robust architecture, powerful processing engine and  high-performance computing features make it capable of taking on projects of any size.</p> <p>homepage: https://www.broadinstitute.org/gatk/</p>    version versionsuffix toolchain     <code>1.0.5083</code>  <code>system</code>   <code>2.5-2</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>2.6-5</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>2.7-4</code>  <code>system</code>   <code>2.7-4</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>2.8-1</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>3.0-0</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>3.3-0</code> <code>-Java-1.7.0_21</code> <code>system</code>   <code>3.3-0</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>3.3-0</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>3.5</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>3.5</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>3.6</code> <code>-Java-1.8.0_92</code> <code>system</code>   <code>3.7</code> <code>-Java-1.8.0_112</code> <code>system</code>   <code>3.8-0</code> <code>-Java-1.8.0_144</code> <code>system</code>   <code>4.0.1.2</code> <code>-Java-1.8</code> <code>system</code>   <code>4.0.4.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>4.0.4.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.0.5.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>4.0.7.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>4.0.7.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.0.8.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.0.8.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.0.10.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.0.12.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.1.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.1.2.0</code> <code>-Java-1.8</code> <code>GCCcore/8.2.0</code>   <code>4.1.3.0</code> <code>-Java-1.8</code> <code>GCCcore/8.3.0</code>   <code>4.1.4.1</code> <code>-Java-1.8</code> <code>GCCcore/8.3.0</code>   <code>4.1.4.1</code> <code>-Java-11</code> <code>GCCcore/8.3.0</code>   <code>4.1.5.0</code> <code>-Java-1.8</code> <code>GCCcore/9.3.0</code>   <code>4.1.5.0</code> <code>-Java-11</code> <code>GCCcore/9.3.0</code>   <code>4.1.8.1</code> <code>-Java-1.8</code> <code>GCCcore/9.3.0</code>   <code>4.2.0.0</code> <code>-Java-1.8</code> <code>GCCcore/10.2.0</code>   <code>4.2.0.0</code> <code>-Java-11</code> <code>GCCcore/10.2.0</code>   <code>4.2.3.0</code> <code>-Java-11</code> <code>GCCcore/11.2.0</code>   <code>4.2.5.0</code> <code>-Java-11</code> <code>GCCcore/11.2.0</code>   <code>4.2.6.1</code> <code>-Java-11</code> <code>GCCcore/11.2.0</code>   <code>4.3.0.0</code> <code>-Java-11</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gaussian","title":"Gaussian","text":"<p>Gaussian provides state-of-the-art capabilities for electronic structure modeling. Gaussian 09 is licensed for a wide variety of computer systems. All versions of Gaussian 09 contain every scientific/modeling feature, and none imposes any artificial limitations on calculations other than your computing resources and patience.  This is the official gaussian AVX2 build. </p> <p>homepage: https://www.gaussian.com/</p>    version versionsuffix toolchain     <code>09.e.01</code> <code>-AVX</code> <code>system</code>   <code>16.A.03</code> <code>-AVX2</code> <code>system</code>"},{"location":"version-specific/supported-software/#gawk","title":"gawk","text":"<p>The awk utility interprets a special-purpose programming language that makes it possible to handle simple data-reformatting jobs with just a few lines of code.</p> <p>homepage: https://www.gnu.org/software/gawk</p>    version toolchain     <code>5.1.0</code> <code>GCC/10.2.0</code>   <code>5.1.1</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gblocks","title":"Gblocks","text":"<p>Selection of conserved blocks from multiple alignments for their use in phylogenetic analysis</p> <p>homepage: http://molevol.cmima.csic.es/castresana/Gblocks.html</p>    version toolchain     <code>0.91b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gbprocess","title":"GBprocesS","text":"<p>GBprocesS allows for the extraction of genomic inserts from NGS data for GBS experiments. Preprocessing is performed in different stages that are part of a linear pipeline where the steps are performed in order. GBprocesS provides a flexible way to adjust the functionality to your needs, as the operations required and the execution order vary depending on the GBS protocol used.</p> <p>homepage: https://gbprocess.readthedocs.io/</p>    version versionsuffix toolchain     <code>2.3</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#gbs2ploidy","title":"gbs2ploidy","text":"<p>Inference of Ploidy from (Genotyping-by-Sequencing) GBS Data</p> <p>homepage: https://cran.r-project.org/web/packages/gbs2ploidy</p>    version versionsuffix toolchain     <code>1.0</code> <code>-R-3.4.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#gc","title":"gc","text":"<p>The Boehm-Demers-Weiser conservative garbage collector can be used as a garbage collecting replacement for C malloc or C++ new. </p> <p>homepage: https://hboehm.info/gc/</p>    version toolchain     <code>7.4.4</code> <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>   <code>7.6.0</code> <code>GCCcore/6.4.0</code>   <code>7.6.4</code> <code>GCCcore/7.3.0</code>   <code>7.6.10</code> <code>GCCcore/8.2.0</code>   <code>7.6.12</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>8.0.4</code> <code>GCCcore/10.3.0</code>   <code>8.2.0</code> <code>GCCcore/11.2.0</code>   <code>8.2.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gc3pie","title":"GC3Pie","text":"<p>GC3Pie is a Python package for running large job campaigns on diverse batch-oriented execution  environments.</p> <p>homepage: https://gc3pie.readthedocs.org</p>    version toolchain     <code>2.4.2</code> <code>system</code>   <code>2.5.0</code> <code>system</code>   <code>2.5.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#gcc","title":"GCC","text":"<p>The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Java, and Ada,  as well as libraries for these languages (libstdc++, libgcj,...).</p> <p>homepage: http://gcc.gnu.org/</p>    version versionsuffix toolchain     <code>4.8.1</code>  <code>system</code>   <code>4.8.1</code> <code>-CLooG</code> <code>system</code>   <code>4.8.2</code>  <code>system</code>   <code>4.8.2</code> <code>-CLooG</code> <code>system</code>   <code>4.8.2</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.8.2</code> <code>-multilib</code> <code>system</code>   <code>4.8.3</code>  <code>system</code>   <code>4.8.3</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.8.4</code>  <code>system</code>   <code>4.8.4</code> <code>-CLooG</code> <code>system</code>   <code>4.8.4</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.8.5</code>  <code>system</code>   <code>4.9.0</code>  <code>system</code>   <code>4.9.0</code> <code>-CLooG</code> <code>system</code>   <code>4.9.0</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.9.1</code>  <code>system</code>   <code>4.9.1</code> <code>-CLooG</code> <code>system</code>   <code>4.9.1</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.9.2</code>  <code>system</code>   <code>4.9.2</code> <code>-CLooG</code> <code>system</code>   <code>4.9.2</code> <code>-CLooG-multilib</code> <code>system</code>   <code>4.9.2</code> <code>-binutils-2.25</code> <code>system</code>   <code>4.9.3</code>  <code>system</code>   <code>4.9.3</code> <code>-2.25</code> <code>system</code>   <code>4.9.3</code> <code>-binutils-2.25</code> <code>system</code>   <code>4.9.4</code> <code>-2.25</code> <code>system</code>   <code>5.1.0</code>  <code>system</code>   <code>5.1.0</code> <code>-binutils-2.25</code> <code>system</code>   <code>5.2.0</code>  <code>system</code>   <code>5.3.0</code>  <code>system</code>   <code>5.3.0</code> <code>-2.26</code> <code>system</code>   <code>5.4.0</code> <code>-2.26</code> <code>system</code>   <code>5.5.0</code> <code>-2.26</code> <code>system</code>   <code>6.1.0</code> <code>-2.27</code> <code>system</code>   <code>6.2.0</code> <code>-2.27</code> <code>system</code>   <code>6.3.0</code> <code>-2.27</code> <code>system</code>   <code>6.3.0</code> <code>-2.28</code> <code>system</code>   <code>6.4.0</code> <code>-2.28</code> <code>system</code>   <code>7.1.0</code> <code>-2.28</code> <code>system</code>   <code>7.2.0</code> <code>-2.29</code> <code>system</code>   <code>7.3.0</code> <code>-2.30</code> <code>system</code>   <code>7.4.0</code> <code>-2.31.1</code> <code>system</code>   <code>8.1.0</code> <code>-2.30</code> <code>system</code>   <code>8.2.0</code> <code>-2.31.1</code> <code>system</code>   <code>8.3.0</code>  <code>system</code>   <code>8.3.0</code> <code>-2.32</code> <code>system</code>   <code>8.4.0</code>  <code>system</code>   <code>9.1.0</code> <code>-2.32</code> <code>system</code>   <code>9.2.0</code>  <code>system</code>   <code>9.2.0</code> <code>-2.32</code> <code>system</code>   <code>9.3.0</code>  <code>system</code>   <code>9.4.0</code>  <code>system</code>   <code>9.5.0</code>  <code>system</code>   <code>10.1.0</code>  <code>system</code>   <code>10.2.0</code>  <code>system</code>   <code>10.3.0</code>  <code>system</code>   <code>11.1.0</code>  <code>system</code>   <code>11.2.0</code>  <code>system</code>   <code>11.3.0</code>  <code>system</code>   <code>12.1.0</code>  <code>system</code>   <code>12.2.0</code>  <code>system</code>   <code>system</code>  <code>system</code>   <code>system</code> <code>-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#gcccore","title":"GCCcore","text":"<p>The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Java, and Ada,  as well as libraries for these languages (libstdc++, libgcj,...).</p> <p>homepage: http://gcc.gnu.org/</p>    version toolchain     <code>4.9.2</code> <code>system</code>   <code>4.9.3</code> <code>system</code>   <code>4.9.4</code> <code>system</code>   <code>5.3.0</code> <code>system</code>   <code>5.4.0</code> <code>system</code>   <code>5.5.0</code> <code>system</code>   <code>6.1.0</code> <code>system</code>   <code>6.2.0</code> <code>system</code>   <code>6.3.0</code> <code>system</code>   <code>6.4.0</code> <code>system</code>   <code>6.5.0</code> <code>system</code>   <code>7.1.0</code> <code>system</code>   <code>7.2.0</code> <code>system</code>   <code>7.3.0</code> <code>system</code>   <code>7.4.0</code> <code>system</code>   <code>8.1.0</code> <code>system</code>   <code>8.2.0</code> <code>system</code>   <code>8.3.0</code> <code>system</code>   <code>8.4.0</code> <code>system</code>   <code>9.1.0</code> <code>system</code>   <code>9.2.0</code> <code>system</code>   <code>9.3.0</code> <code>system</code>   <code>9.4.0</code> <code>system</code>   <code>9.5.0</code> <code>system</code>   <code>10.1.0</code> <code>system</code>   <code>10.2.0</code> <code>system</code>   <code>10.3.0</code> <code>system</code>   <code>11.1.0</code> <code>system</code>   <code>11.2.0</code> <code>system</code>   <code>11.3.0</code> <code>system</code>   <code>12.1.0</code> <code>system</code>   <code>12.2.0</code> <code>system</code>   <code>system</code> <code>system</code>"},{"location":"version-specific/supported-software/#gcccuda","title":"gcccuda","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, along with CUDA toolkit.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2016.08</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gcloud","title":"gcloud","text":"<p>Libraries and tools for interacting with Google Cloud products and services.</p> <p>homepage: https://cloud.google.com/sdk</p>    version toolchain     <code>382.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#gconf","title":"GConf","text":"<p>GConf is a system for storing application preferences.  It is intended for user preferences; not configuration  of something like Apache, or arbitrary data storage.</p> <p>homepage: https://projects.gnome.org/gconf/</p>    version toolchain     <code>3.2.6</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016a</code>, <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#gcta","title":"GCTA","text":"<p>GCTA (Genome-wide Complex Trait Analysis) is a software package, which was  initially developed to estimate the proportion of phenotypic variance explained  by all genome-wide SNPs for a complex trait but has been extensively extended  for many other analyses of data from genome-wide association studies (GWASs). </p> <p>homepage: https://yanglab.westlake.edu.cn/software/gcta/</p>    version toolchain     <code>1.94.0beta</code> <code>foss/2021b</code>, <code>gfbf/2022a</code>"},{"location":"version-specific/supported-software/#gctf","title":"Gctf","text":"<p>Gctf: real-time CTF determination and correction, Kai Zhang, 2016</p> <p>homepage: https://www.mrc-lmb.cam.ac.uk/kzhang/</p>    version toolchain     <code>1.06</code> <code>system</code>"},{"location":"version-specific/supported-software/#gd","title":"GD","text":"<p>GD.pm - Interface to Gd Graphics Library</p> <p>homepage: https://github.com/lstein/Perl-GD</p>    version versionsuffix toolchain     <code>2.66</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>2.68</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>2.69</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>   <code>2.71</code>  <code>GCCcore/9.3.0</code>   <code>2.73</code>  <code>GCCcore/10.3.0</code>   <code>2.75</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gdal","title":"GDAL","text":"<p>GDAL is a translator library for raster geospatial data formats that is released under an X/MIT style  Open Source license by the Open Source Geospatial Foundation. As a library, it presents a single abstract data model  to the calling application for all supported formats. It also comes with a variety of useful commandline utilities for  data translation and processing.</p> <p>homepage: https://www.gdal.org</p>    version versionsuffix toolchain     <code>2.0.2</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.1.0</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.1.1</code>  <code>foss/2016a</code>   <code>2.1.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.1.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.1.3</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.1.3</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.1.3</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.2.0</code> <code>-Python-2.7.13-HDF5-1.8.18</code> <code>intel/2017a</code>   <code>2.2.0</code> <code>-Python-2.7.13-HDF5-HDF</code> <code>intel/2017a</code>   <code>2.2.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.2.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.2.2</code> <code>-Python-2.7.14-HDF5-1.8.19</code> <code>intel/2017b</code>   <code>2.2.3</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.2.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.2.3</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>2.2.3</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>2.2.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.0.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.0.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.0.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>3.0.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>3.2.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>3.3.0</code>  <code>foss/2021a</code>   <code>3.3.2</code>  <code>foss/2021b</code>   <code>3.5.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#gdb","title":"GDB","text":"<p>The GNU Project Debugger</p> <p>homepage: https://www.gnu.org/software/gdb/gdb.html</p>    version versionsuffix toolchain     <code>7.8.2</code>  <code>GCC/4.9.2</code>   <code>7.9</code>  <code>GCC/4.9.2</code>   <code>7.10.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>7.11</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>7.11.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>8.0.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>   <code>8.0.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>8.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>8.1.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>8.3</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>9.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>10.1</code>  <code>GCCcore/10.2.0</code>   <code>10.2</code>  <code>GCCcore/10.3.0</code>   <code>10.2</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>11.1</code>  <code>GCCcore/11.2.0</code>   <code>12.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gdbgui","title":"gdbgui","text":"<p>Browser-based frontend to gdb (gnu debugger). Add breakpoints, view the stack, visualize data structures, and more in C, C++, Go, Rust, and Fortran. Run gdbgui from the terminal and a new tab will open in your browser.</p> <p>homepage: https://gdbgui.com</p>    version versionsuffix toolchain     <code>0.13.1.2</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#gdbm","title":"gdbm","text":"<p>GNU dbm (or GDBM, for short) is a library of database functions that use extensible hashing  and work similar to the standard UNIX dbm.  These routines are provided to a programmer needing to create and manipulate a hashed database.</p> <p>homepage: https://www.gnu.org.ua/software/gdbm/gdbm.html</p>    version toolchain     <code>1.18.1</code> <code>foss/2020a</code>   <code>1.21</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#gdc-client","title":"gdc-client","text":"<p>The gdc-client provides several convenience functions over  the GDC API which provides general download/upload via HTTPS.</p> <p>homepage: https://gdc.nci.nih.gov/access-data/gdc-data-transfer-tool</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.3.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>1.3.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.6.0</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#gdchart","title":"GDCHART","text":"<p>Easy to use C API, high performance library to create charts  and graphs in PNG, GIF and WBMP format.</p> <p>homepage: http://users.fred.net/brv/chart</p>    version toolchain     <code>0.11.5dev</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#gdcm","title":"GDCM","text":"<p>Grassroots DICOM: Cross-platform DICOM implementation</p> <p>homepage: https://sourceforge.net/projects/gdcm</p>    version toolchain     <code>2.8.8</code> <code>GCCcore/6.4.0</code>   <code>2.8.9</code> <code>GCCcore/7.3.0</code>   <code>3.0.4</code> <code>GCCcore/8.2.0</code>   <code>3.0.5</code> <code>GCCcore/8.3.0</code>   <code>3.0.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#gdgraph","title":"GDGraph","text":"<p>GDGraph is a Perl package to generate charts</p> <p>homepage: https://metacpan.org/release/GDGraph</p>    version versionsuffix toolchain     <code>1.54</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>1.54</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#gdist","title":"gdist","text":"<p>The gdist module is a Cython interface to a C++ library (http://code.google.com/p/geodesic/) for  computing geodesic distance which is the length of shortest line between two vertices on a triangulated mesh in three  dimensions, such that the line lies on the surface.</p> <p>homepage: https://pypi.python.org/pypi/gdist</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#gdk-pixbuf","title":"Gdk-Pixbuf","text":"<p>The Gdk Pixbuf is a toolkit for image loading and pixel buffer manipulation.  It is used by GTK+ 2 and GTK+ 3 to load and manipulate images. In the past it  was distributed as part of GTK+ 2 but it was split off into a separate package  in preparation for the change to GTK+ 3. </p> <p>homepage: https://docs.gtk.org/gdk-pixbuf/</p>    version toolchain     <code>2.32.3</code> <code>intel/2016a</code>   <code>2.35.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.36.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.36.8</code> <code>intel/2017a</code>   <code>2.36.10</code> <code>intel/2017a</code>   <code>2.36.11</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.36.12</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2.38.1</code> <code>GCCcore/8.2.0</code>   <code>2.38.2</code> <code>GCCcore/8.3.0</code>   <code>2.40.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.42.6</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.42.8</code> <code>GCCcore/11.3.0</code>   <code>2.42.10</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#gdrcopy","title":"GDRCopy","text":"<p>A low-latency GPU memory copy library based on NVIDIA GPUDirect RDMA technology.</p> <p>homepage: https://github.com/NVIDIA/gdrcopy</p>    version versionsuffix toolchain     <code>2.1</code> <code>-CUDA-11.0.2</code> <code>GCCcore/9.3.0</code>   <code>2.1</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code>   <code>2.1</code> <code>-CUDA-11.2.1</code> <code>GCCcore/10.2.0</code>   <code>2.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.3</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#geant4","title":"Geant4","text":"<p>Geant4 is a toolkit for the simulation of the passage of particles through matter.  Its areas of application include high energy, nuclear and accelerator physics,   as well as studies in medical and space science.</p> <p>homepage: https://geant4.cern.ch</p>    version toolchain     <code>9.5.p02</code> <code>intel/2016a</code>   <code>9.6.p04</code> <code>intel/2016a</code>   <code>10.01.p03</code> <code>intel/2016a</code>   <code>10.02.p01</code> <code>intel/2016a</code>   <code>10.03.p03</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>10.04</code> <code>intel/2017b</code>   <code>10.5</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018b</code>   <code>10.6</code> <code>foss/2019b</code>   <code>10.6.2</code> <code>foss/2020a</code>   <code>10.7.1</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>   <code>11.0.0</code> <code>GCC/11.2.0</code>   <code>11.0.1</code> <code>GCC/11.2.0</code>   <code>11.0.2</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#geant4-data","title":"Geant4-data","text":"<p>Datasets for Geant4.</p> <p>homepage: https://geant4.cern.ch/</p>    version toolchain     <code>20201103</code> <code>system</code>   <code>20210510</code> <code>system</code>"},{"location":"version-specific/supported-software/#gearshifft","title":"gearshifft","text":"<p>Benchmark Suite for Heterogenuous FFT Implementations</p> <p>homepage: https://github.com/mpicbg-scicomp/gearshifft</p>    version toolchain     <code>0.4.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#gegl","title":"GEGL","text":"<p>GEGL (Generic Graphics Library) is a data flow based image processing framework,  providing floating point processing and non-destructive image processing capabilities to  GNU Image Manipulation Program (GIMP) and other projects.</p> <p>homepage: https://www.gegl.org</p>    version toolchain     <code>0.4.30</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#gem-library","title":"GEM-library","text":"<p>Next-generation sequencing platforms (Illumina/Solexa, ABI/SOLiD, etc.)   call for powerful and very optimized tools to index/analyze huge genomes. The GEM library   strives to be a true \"next-generation\" tool for handling any kind of sequence data, offering   state-of-the-art algorithms and data structures specifically tailored to this demanding task.   At the moment, efficient indexing and searching algorithms based on the Burrows-Wheeler   transform (BWT) have been implemented. The library core is written in C for maximum speed,   with concise interfaces to higher-level programming languages like OCaml and Python.   Many high-performance standalone programs (mapper, splice mapper, etc.) are provided along   with the library; in general, new algorithms and tools can be easily implemented on the top of it. </p> <p>homepage: http://algorithms.cnag.cat/wiki/The_GEM_library</p>    version versionsuffix toolchain     <code>20130406-045632</code> <code>_pre-release-3_Linux-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#gemma","title":"GEMMA","text":"<p>Genome-wide Efficient Mixed Model Association</p> <p>homepage: https://github.com/genetics-statistics/GEMMA</p>    version toolchain     <code>0.97</code> <code>foss/2016b</code>, <code>foss/2017a</code>   <code>0.98.1</code> <code>foss/2018b</code>   <code>0.98.5</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gemmi","title":"gemmi","text":"<p>Gemmi is a library, accompanied by a set of programs, developed primarily for   use in macromolecular crystallography (MX). For working with:  macromolecular models (content of PDB, PDBx/mmCIF and mmJSON files), refinement restraints (CIF files), reflection data (MTZ and mmCIF formats), data on a 3D   grid (electron density maps, masks, MRC/CCP4 format) crystallographic symmetry. Parts of this library can be useful in structural bioinformatics (for symmetry- aware analysis of protein models), and in other molecular-structure sciences    that use CIF files (we have the fastest open-source CIF parser). </p> <p>homepage: https://gemmi.readthedocs.io/</p>    version toolchain     <code>0.4.5</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#gencore_variant_detection","title":"gencore_variant_detection","text":"<p>This is a bundled install of many software packages for doing variant detection analysis. </p> <p>homepage: https://nyuad-cgsb.github.io/variant_detection/public/index.html</p>    version toolchain     <code>1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#genemark-et","title":"GeneMark-ET","text":"<p>Eukaryotic gene prediction suite with automatic training</p> <p>homepage: http://exon.gatech.edu/GeneMark</p>    version toolchain     <code>4.38</code> <code>GCCcore/8.2.0</code>   <code>4.57</code> <code>GCCcore/8.3.0</code>   <code>4.65</code> <code>GCCcore/10.2.0</code>   <code>4.71</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gengetopt","title":"gengetopt","text":"<p>Gengetopt is a tool to write command line option parsing code for C programs.</p> <p>homepage: https://www.gnu.org/software/gengetopt/gengetopt.html</p>    version toolchain     <code>2.23</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#genome_profiler","title":"Genome_Profiler","text":"<p>Genome Profiler (GeP) is a program to perform whole-genome multilocus  sequence typing (wgMLST) analysis for bacterial isolates</p> <p>homepage: https://sourceforge.net/projects/genomeprofiler/</p>    version versionsuffix toolchain     <code>2.1</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#genomemapper","title":"GenomeMapper","text":"<p>GenomeMapper is a short read mapping tool designed for accurate read alignments.   It quickly aligns millions of reads either with ungapped or gapped alignments.   This version is used to align against a single reference.   If you are unsure which one is the appropriate GenomeMapper, you might want to use this one.</p> <p>homepage: https://1001genomes.org/software/genomemapper_singleref.html</p>    version toolchain     <code>0.4.4</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#genometester4","title":"GenomeTester4","text":"<p>A toolkit for performing set operations - union, intersection and complement - on k-mer lists.</p> <p>homepage: https://github.com/bioinfo-ut/GenomeTester4</p>    version toolchain     <code>4.0</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#genomethreader","title":"GenomeThreader","text":"<p>GenomeThreader is a software tool to compute gene structure predictions.</p> <p>homepage: http://genomethreader.org</p>    version versionsuffix toolchain     <code>1.7.1</code> <code>-Linux_x86_64-64bit</code> <code>system</code>   <code>1.7.3</code> <code>-Linux_x86_64-64bit</code> <code>system</code>"},{"location":"version-specific/supported-software/#genometools","title":"GenomeTools","text":"<p>A comprehensive software library for efficient processing of structured genome annotations.</p> <p>homepage: http://genometools.org</p>    version versionsuffix toolchain     <code>1.5.10</code>  <code>foss/2018b</code>   <code>1.5.10</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.6.1</code>  <code>GCC/10.2.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>   <code>1.6.1</code> <code>-Python-2.7.16</code> <code>GCC/8.3.0</code>   <code>1.6.2</code>  <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#genomeworks","title":"GenomeWorks","text":"<p>SDK for GPU accelerated genome assembly and analysis</p> <p>homepage: https://github.com/clara-parabricks/GenomeWorks</p>    version toolchain     <code>2021.02.2</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#genotypeharmonizer","title":"GenotypeHarmonizer","text":"<p>The Genotype Harmonizer is an easy to use command-line tool that allows harmonization of genotype data  stored using different file formats with different and potentially unknown strands.</p> <p>homepage: https://github.com/molgenis/systemsgenetics/wiki/Genotype-Harmonizer</p>    version versionsuffix toolchain     <code>1.4.14</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#genozip","title":"genozip","text":"<p>Genozip is a compressor for genomic files - it compresses FASTQ, SAM/BAM/CRAM, VCF, FASTA and others.</p> <p>homepage: https://genozip.com</p>    version toolchain     <code>13.0.5</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gensim","title":"gensim","text":"<p>Gensim is a Python library for topic modelling, document indexing and similarity retrieval with  large corpora.</p> <p>homepage: https://radimrehurek.com/gensim</p>    version versionsuffix toolchain     <code>0.13.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.8.3</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>4.2.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#geocube","title":"geocube","text":"<p>Tool to convert geopandas vector data into rasterized xarray data.</p> <p>homepage: https://corteva.github.io/geocube/latest/</p>    version versionsuffix toolchain     <code>0.0.14</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#geopandas","title":"geopandas","text":"<p>GeoPandas is a project to add support for geographic data to pandas objects. It currently implements GeoSeries and GeoDataFrame types which are subclasses of pandas.Series and pandas.DataFrame respectively. GeoPandas objects can act on shapely geometry objects and perform geometric operations.</p> <p>homepage: https://github.com/geopandas/geopandas</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.8.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.8.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>0.8.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.10.2</code>  <code>foss/2021a</code>   <code>0.11.0</code>  <code>foss/2021b</code>   <code>0.12.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#geopy","title":"geopy","text":"<p>geopy is a Python client for several popular geocoding web services. geopy makes it easy for Python developers to locate the coordinates of addresses, cities, countries, and landmarks across the globe using third-party geocoders and other data sources. </p> <p>homepage: https://geopy.readthedocs.io/en/stable/</p>    version versionsuffix toolchain     <code>1.11.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.1.0</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#georges","title":"georges","text":"<p>Georges the lemur opinionated particle accelerator modeling Python package. Also a thin wrapper over MAD-X/PTC, BDSim and G4Beamline.</p> <p>homepage: https://github.com/ULB-Metronu/georges</p>    version versionsuffix toolchain     <code>2019.2</code>  <code>foss/2021a</code>   <code>2019.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#geos","title":"GEOS","text":"<p>GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS)</p> <p>homepage: https://trac.osgeo.org/geos</p>    version versionsuffix toolchain     <code>3.5.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.5.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.6.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.6.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.6.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.6.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.6.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.6.2</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>3.6.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>   <code>3.6.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>3.6.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.7.2</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.7.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.8.0</code>  <code>GCC/8.3.0</code>   <code>3.8.0</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>3.8.1</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>   <code>3.9.1</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>   <code>3.10.3</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gerris","title":"Gerris","text":"<p>Gerris is a Free Software program for the solution of the partial                  differential equations describing fluid flow</p> <p>homepage: http://gfs.sourceforge.net/wiki/index.php/Main_Page</p>    version toolchain     <code>20131206</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#getorb","title":"GETORB","text":"<p>GETORB software package contains programs to handle the orbital data records (ODRs)</p> <p>homepage: http://www.deos.tudelft.nl/ers/precorbs/tools/getorb_pack.shtml</p>    version toolchain     <code>2.3.2</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#getorganelle","title":"GetOrganelle","text":"<p>This toolkit assemblies organelle genome from genomic skimming data.</p> <p>homepage: https://github.com/Kinggerm/GetOrganelle</p>    version versionsuffix toolchain     <code>1.7.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.7.4-pre2</code>  <code>foss/2020b</code>   <code>1.7.5.3</code>  <code>foss/2021b</code>   <code>1.7.6.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gettext","title":"gettext","text":"<p>GNU 'gettext' is an important step for the GNU Translation Project, as it is an asset on which we may build many other steps. This package offers to programmers, translators, and even users, a well integrated set of tools and documentation</p> <p>homepage: https://www.gnu.org/software/gettext/</p>    version versionsuffix toolchain     <code>0.18.2</code>  <code>system</code>   <code>0.19.4</code>  <code>GCC/4.9.2</code>, <code>system</code>   <code>0.19.6</code>  <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>system</code>   <code>0.19.7</code>  <code>foss/2016a</code>, <code>intel/2016a</code>, <code>system</code>   <code>0.19.8</code>  <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016.04</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>system</code>   <code>0.19.8.1</code>  <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>system</code>   <code>0.19.8.1</code> <code>-libxml2-2.9.7</code> <code>GCCcore/6.4.0</code>   <code>0.20.1</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>0.21</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>system</code>   <code>0.21.1</code>  <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#gexiv2","title":"gexiv2","text":"<p>gexiv2 is a GObject wrapper around the Exiv2 photo metadata library.</p> <p>homepage: https://wiki.gnome.org/Projects/gexiv2</p>    version toolchain     <code>0.12.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#gfbf","title":"gfbf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  FlexiBLAS (BLAS and LAPACK support) and (serial) FFTW.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2022a</code> <code>system</code>   <code>2022b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gffcompare","title":"GffCompare","text":"<p>GffCompare provides classification and reference annotation mapping and  matching statistics for RNA-Seq assemblies (transfrags) or other generic GFF/GTF files.</p> <p>homepage: https://ccb.jhu.edu/software/stringtie/gffcompare.shtml</p>    version toolchain     <code>0.10.1</code> <code>foss/2016b</code>   <code>0.10.6</code> <code>GCCcore/7.3.0</code>   <code>0.11.6</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.12.2</code> <code>GCC/10.3.0</code>   <code>0.12.6</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#gffread","title":"gffread","text":"<p>GFF/GTF parsing utility providing format conversions, region filtering, FASTA sequence extraction and  more.</p> <p>homepage: https://github.com/gpertea/gffread</p>    version toolchain     <code>0.9.12</code> <code>foss/2016b</code>   <code>0.10.6</code> <code>GCCcore/7.3.0</code>   <code>0.11.6</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.12.7</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gflags","title":"gflags","text":"<p>The gflags package contains a C++ library that implements commandline flags processing.  It includes built-in support for standard types such as string and the ability to define flags in the source file in which they are used. </p> <p>homepage: https://github.com/gflags/gflags</p>    version toolchain     <code>2.1.2</code> <code>foss/2016a</code>   <code>2.2.1</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.2.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#gfold","title":"GFOLD","text":"<p>Generalized fold change for ranking differentially expressed genes from RNA-seq data</p> <p>homepage: http://www.tongji.edu.cn/~zhanglab/GFOLD/index.html</p>    version toolchain     <code>1.1.4</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#gh","title":"gh","text":"<p>gh is GitHub on the command line.</p> <p>homepage: https://github.com/cli/cli</p>    version toolchain     <code>1.3.1</code> <code>system</code>   <code>2.20.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#ghc","title":"GHC","text":"<p>The Glorious/Glasgow Haskell Compiler</p> <p>homepage: https://haskell.org/ghc/</p>    version versionsuffix toolchain     <code>6.12.3</code>  <code>system</code>   <code>8.6.5</code> <code>-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#ghostscript","title":"Ghostscript","text":"<p>Ghostscript is a versatile processor for PostScript data with the ability to render PostScript to  different targets. It used to be part of the cups printing stack, but is no longer used for that.</p> <p>homepage: https://ghostscript.com</p>    version versionsuffix toolchain     <code>9.19</code>  <code>intel/2016a</code>, <code>intel/2016b</code>   <code>9.20</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>9.21</code>  <code>intel/2017a</code>   <code>9.22</code>  <code>GCCcore/6.4.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>9.22</code> <code>-cairo-1.14.12</code> <code>GCCcore/6.4.0</code>   <code>9.23</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>9.23</code> <code>-cairo-1.14.12</code> <code>GCCcore/6.4.0</code>   <code>9.27</code>  <code>GCCcore/8.2.0</code>   <code>9.50</code>  <code>GCCcore/8.3.0</code>   <code>9.52</code>  <code>GCCcore/9.3.0</code>   <code>9.53.3</code>  <code>GCCcore/10.2.0</code>   <code>9.54.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>9.56.1</code>  <code>GCCcore/11.3.0</code>   <code>10.0.0</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#gibbs2","title":"Gibbs2","text":"<p>Gibbs2 is a program for the calculation of thermodynamic properties in periodic solids under arbitrary  conditions of temperature and pressure. Gibbs2 uses the results of periodic solid-state quantum-mechanical  calculations, specifically the energy-volume curve and possibly the harmonic phonon frequencies, to compute the  thermodynamic properties of the solid within the framework of the quasiharmonic approximation.</p> <p>homepage: https://aoterodelaroza.github.io/gibbs2/</p>    version toolchain     <code>1.0</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#giflib","title":"giflib","text":"<p>giflib is a library for reading and writing gif images. It is API and ABI compatible with libungif which was in wide use while the LZW compression algorithm was patented.</p> <p>homepage: http://giflib.sourceforge.net/</p>    version toolchain     <code>5.1.4</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>5.2.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#gifsicle","title":"gifsicle","text":"<p>Gifsicle is a command-line tool for creating, editing,  and getting information about GIF images and animations.   Making a GIF animation with gifsicle is easy.</p> <p>homepage: https://github.com/kohler/gifsicle</p>    version toolchain     <code>1.92</code> <code>GCCcore/8.2.0</code>   <code>1.93</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gimic","title":"GIMIC","text":"<p>The GIMIC program calculates magnetically induced currents in molecules.  You need to provide this program with a density matrix in atomic-orbital (AO) basis  and three (effective) magnetically perturbed AO density matrices in the proper format. Currently ACES2, Turbomole, G09, QChem, FERMION++, and LSDalton can produce these matrices.</p> <p>homepage: http://gimic.readthedocs.io</p>    version versionsuffix toolchain     <code>2018.04.20</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#gimkl","title":"gimkl","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain with Intel MPI and MKL</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2.11.5</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2018b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gimp","title":"GIMP","text":"<p>GIMP is a cross-platform image editor available for GNU/Linux, OS X, Windows and more operating systems.</p> <p>homepage: https://www.gimp.org</p>    version toolchain     <code>2.10.24</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#gimpi","title":"gimpi","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain with Intel MPI.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2.11.5</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gimpic","title":"gimpic","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain along with CUDA toolkit,  including IntelMPI for MPI support with CUDA features enabled.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2017b</code> <code>system</code>"},{"location":"version-specific/supported-software/#gimps","title":"GIMPS","text":"<p>GIMPS: Great Internet Mersenne Prime Search;  it can be useful for limited stress testing of nodes, in user space</p> <p>homepage: http://www.mersenne.org/</p>    version toolchain     <code>p95v279</code> <code>GCC/4.8.2</code>   <code>p95v279.linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#giolf","title":"giolf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  IntelMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2017b</code> <code>system</code>   <code>2018a</code> <code>system</code>"},{"location":"version-specific/supported-software/#giolfc","title":"giolfc","text":"<p>GCC based compiler toolchain with CUDA support, and including  IntelMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2017b</code> <code>system</code>"},{"location":"version-specific/supported-software/#git","title":"git","text":"<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p> <p>homepage: http://git-scm.com/</p>    version versionsuffix toolchain     <code>1.8.5.6</code>  <code>GCC/4.9.2</code>   <code>2.2.2</code>  <code>GCC/4.9.2</code>   <code>2.4.1</code>  <code>GCC/4.9.2</code>   <code>2.8.0</code>  <code>foss/2016a</code>   <code>2.12.2</code>  <code>foss/2016b</code>   <code>2.13.1</code>  <code>foss/2016b</code>   <code>2.14.1</code>  <code>GCCcore/6.4.0</code>   <code>2.16.1</code>  <code>foss/2018a</code>   <code>2.18.0</code>  <code>GCCcore/7.3.0</code>   <code>2.19.1</code>  <code>GCCcore/7.3.0</code>   <code>2.21.0</code>  <code>GCCcore/8.2.0</code>   <code>2.21.0</code> <code>-nodocs</code> <code>GCCcore/8.2.0</code>   <code>2.23.0</code>  <code>GCCcore/8.3.0</code>   <code>2.23.0</code> <code>-nodocs</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.28.0</code> <code>-nodocs</code> <code>GCCcore/10.2.0</code>   <code>2.32.0</code> <code>-nodocs</code> <code>GCCcore/10.3.0</code>   <code>2.33.1</code> <code>-nodocs</code> <code>GCCcore/11.2.0</code>   <code>2.36.0</code> <code>-nodocs</code> <code>GCCcore/11.3.0</code>   <code>2.38.1</code> <code>-nodocs</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#git-extras","title":"git-extras","text":"<p>Extra useful scripts for git</p> <p>homepage: https://github.com/tj/git-extras</p>    version toolchain     <code>5.1.0</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#git-lfs","title":"git-lfs","text":"<p>Git Large File Storage (LFS) replaces large files such as audio  samples, videos, datasets, and graphics with text pointers inside Git, while  storing the file contents on a remote server like GitHub.com</p> <p>homepage: https://git-lfs.github.com</p>    version toolchain     <code>1.1.1</code> <code>system</code>   <code>2.7.1</code> <code>system</code>   <code>2.11.0</code> <code>system</code>   <code>3.2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#gitpython","title":"GitPython","text":"<p>GitPython is a python library used to interact with Git repositories </p> <p>homepage: https://github.com/gitpython-developers/GitPython</p>    version versionsuffix toolchain     <code>2.1.11</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.1.15</code>  <code>system</code>   <code>3.0.3</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>3.1.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>3.1.9</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>3.1.14</code>  <code>GCCcore/10.2.0</code>   <code>3.1.18</code>  <code>GCCcore/10.3.0</code>   <code>3.1.24</code>  <code>GCCcore/11.2.0</code>   <code>3.1.27</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#givaro","title":"Givaro","text":"<p>C++ library for arithmetic and algebraic computations</p> <p>homepage: http://givaro.forge.imag.fr/</p>    version toolchain     <code>4.0.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#giza","title":"Giza","text":"<p>Giza is an open, lightweight scientific plotting library built on  top of cairo that provides uniform output to multiple devices.</p> <p>homepage: https://danieljprice.github.io/giza/</p>    version toolchain     <code>1.1.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#gl2ps","title":"GL2PS","text":"<p>GL2PS: an OpenGL to PostScript printing library</p> <p>homepage: https://www.geuz.org/gl2ps/</p>    version versionsuffix toolchain     <code>1.3.9</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.3.9</code> <code>-Mesa-11.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.4.0</code>  <code>GCCcore/8.3.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.4.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#glade","title":"Glade","text":"<p>Glade is a RAD tool to enable quick &amp; easy development of user interfaces for the GTK+ toolkit  and the GNOME desktop environment.</p> <p>homepage: https://glade.gnome.org/</p>    version versionsuffix toolchain     <code>3.8.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.8.5</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>3.8.6</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>3.8.6</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#glew","title":"glew","text":"<p>The OpenGL Extension Wrangler Library (GLEW) is a cross-platform open-source C/C++ extension loading library. GLEW provides efficient run-time mechanisms for determining which OpenGL extensions are supported on the target platform.</p> <p>homepage: https://github.com/nigels-com/glew</p>    version versionsuffix toolchain     <code>2.1.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>   <code>2.2.0</code> <code>-egl</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>2.2.0</code> <code>-glx</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>   <code>2.2.0</code> <code>-osmesa</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#glfw","title":"GLFW","text":"<p>GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan development on the desktop</p> <p>homepage: https://www.glfw.org</p>    version toolchain     <code>3.2.1</code> <code>intel/2018a</code>   <code>3.3.2</code> <code>GCCcore/9.3.0</code>   <code>3.3.3</code> <code>GCCcore/10.2.0</code>   <code>3.3.4</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.3.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#glib","title":"GLib","text":"<p>GLib is one of the base libraries of the GTK+ project</p> <p>homepage: https://www.gtk.org/</p>    version toolchain     <code>2.42.1</code> <code>GCC/4.9.2</code>   <code>2.44.0</code> <code>GCC/4.9.2</code>   <code>2.47.5</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.48.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.49.5</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.52.0</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.53.5</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>2.54.2</code> <code>GCCcore/6.4.0</code>   <code>2.54.3</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.60.1</code> <code>GCCcore/8.2.0</code>   <code>2.62.0</code> <code>GCCcore/8.3.0</code>   <code>2.64.1</code> <code>GCCcore/9.3.0</code>   <code>2.66.1</code> <code>GCCcore/10.2.0</code>   <code>2.68.2</code> <code>GCCcore/10.3.0</code>   <code>2.69.1</code> <code>GCCcore/11.2.0</code>   <code>2.72.1</code> <code>GCCcore/11.3.0</code>   <code>2.75.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#glib-networking","title":"glib-networking","text":"<p>Network extensions for GLib</p> <p>homepage: https://gitlab.gnome.org/GNOME/glib-networking</p>    version toolchain     <code>2.68.1</code> <code>GCCcore/10.3.0</code>   <code>2.72.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#glibc","title":"glibc","text":"<p>The GNU C Library project provides the core libraries for the GNU system and GNU/Linux systems,  as well as many other systems that use Linux as the kernel.</p> <p>homepage: https://www.gnu.org/software/libc/</p>    version toolchain     <code>2.17</code> <code>GCCcore/6.4.0</code>   <code>2.26</code> <code>GCCcore/6.4.0</code>   <code>2.30</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#glibmm","title":"GLibmm","text":"<p>C++ bindings for Glib</p> <p>homepage: https://www.gtk.org/</p>    version toolchain     <code>2.49.7</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.66.4</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#glimmer","title":"GLIMMER","text":"<p>Glimmer is a system for finding genes in microbial DNA, especially  the genomes of bacteria, archaea, and viruses.</p> <p>homepage: http://ccb.jhu.edu/software/glimmer/index.shtml</p>    version toolchain     <code>3.02b</code> <code>foss/2016b</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#glimmerhmm","title":"GlimmerHMM","text":"<p>GlimmerHMM is a new gene finder based on a Generalized Hidden Markov Model.  Although the gene finder conforms to the overall mathematical framework of a GHMM, additionally  it incorporates splice site models adapted from the GeneSplicer program and a decision tree adapted  from GlimmerM. It also utilizes Interpolated Markov Models for the coding and noncoding models.</p> <p>homepage: https://ccb.jhu.edu/software/glimmerhmm</p>    version toolchain     <code>3.0.4</code> <code>foss/2016b</code>, <code>foss/2018b</code>   <code>3.0.4c</code> <code>GCC/10.2.0</code>, <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#glm","title":"GLM","text":"<p>OpenGL Mathematics (GLM) is a header only C++ mathematics library for graphics software based on  the OpenGL Shading Language (GLSL) specifications.</p> <p>homepage: https://github.com/g-truc/glm</p>    version toolchain     <code>0.9.7.6</code> <code>intel/2016a</code>   <code>0.9.8.3</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/7.3.0</code>   <code>0.9.9.0</code> <code>GCCcore/6.4.0</code>   <code>0.9.9.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#glm-aed","title":"GLM-AED","text":"<p>The General Lake Model (GLM) is a water balance and one-dimensional vertical stratification hydrodynamic model, which is dynamically coupled with the AED water quality modelling library. GLM-AED is suitable for simulating conditions in a wide range of natural and engineered lakes, including shallow (well-mixed) and deep (stratified) systems. The model has been successfully applied to systems from the scale of individual ponds and wetlands, to actively operated reservoirs, upto the scale of the Great Lakes.</p> <p>homepage: https://github.com/AquaticEcoDynamics/glm-aed</p>    version toolchain     <code>3.3.0a5</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#globalarrays","title":"GlobalArrays","text":"<p>Global Arrays (GA) is a Partitioned Global Address Space (PGAS) programming model</p> <p>homepage: https://hpc.pnl.gov/globalarrays</p>    version versionsuffix toolchain     <code>5.7</code>  <code>intel/2018b</code>   <code>5.7</code> <code>-peigs</code> <code>intel/2019a</code>   <code>5.7.2</code>  <code>intel/2019b</code>   <code>5.7.2</code> <code>-peigs</code> <code>intel/2019b</code>   <code>5.8</code>  <code>intel/2020a</code>, <code>intel/2021a</code>   <code>5.8.1</code>  <code>intel/2022a</code>   <code>5.8.2</code>  <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#globus-cli","title":"Globus-CLI","text":"<p>A Command Line Wrapper over the Globus SDK for Python, which provides an interface to Globus services  from the shell, and is suited to both interactive and simple scripting use cases.</p> <p>homepage: https://docs.globus.org/cli/</p>    version toolchain     <code>1.11.0</code> <code>GCCcore/8.3.0</code>   <code>3.1.1</code> <code>GCCcore/10.2.0</code>   <code>3.2.0</code> <code>GCCcore/10.3.0</code>   <code>3.6.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#globusconnectpersonal","title":"GlobusConnectPersonal","text":"<p>Globus Connect Personal turns your laptop or other personal computer into a  Globus endpoint with a just a few clicks. With Globus Connect Personal you can  share and transfer files to/from a local machine\u2014campus server, desktop computer or laptop\u2014even if it's behind a firewall and you don't have administrator  privileges. </p> <p>homepage: https://www.globus.org/globus-connect-personal</p>    version toolchain     <code>2.3.6</code> <code>system</code>"},{"location":"version-specific/supported-software/#glog","title":"glog","text":"<p>A C++ implementation of the Google logging module.</p> <p>homepage: https://github.com/google/glog</p>    version toolchain     <code>0.3.4</code> <code>foss/2016a</code>   <code>0.3.5</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>0.4.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.5.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#glpk","title":"GLPK","text":"<p>The GLPK (GNU Linear Programming Kit) package is intended for  solving large-scale linear programming (LP),  mixed integer programming (MIP), and other related problems.  It is a set of routines written in ANSI C   and organized in the form of a callable library.</p> <p>homepage: https://www.gnu.org/software/glpk/</p>    version toolchain     <code>4.58</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.60</code> <code>GCCcore/5.4.0</code>, <code>intel/2016b</code>   <code>4.61</code> <code>intel/2017a</code>   <code>4.65</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>5.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#glproto","title":"glproto","text":"<p>X protocol and ancillary headers</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.4.17</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#glucose","title":"Glucose","text":"<p>Glucose is based on a new scoring scheme (well, not so new now, it was introduced in 2009) for the clause learning mechanism of so called Modern SAT solvers (it is based on our IJCAI'09 paper). It is designed to be parallel, since v4.0.</p> <p>homepage: https://www.labri.fr/perso/lsimon/glucose/</p>    version toolchain     <code>4.1</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#gmap-gsnap","title":"GMAP-GSNAP","text":"<p>GMAP: A Genomic Mapping and Alignment Program for mRNA and EST Sequences  GSNAP: Genomic Short-read Nucleotide Alignment Program</p> <p>homepage: http://research-pub.gene.com/gmap/</p>    version toolchain     <code>2016-05-01</code> <code>foss/2016a</code>   <code>2016-11-07</code> <code>foss/2016b</code>   <code>2018-05-11</code> <code>intel/2018a</code>   <code>2018-07-04</code> <code>intel/2018a</code>   <code>2019-03-15</code> <code>foss/2018b</code>   <code>2019-09-12</code> <code>GCC/8.3.0</code>   <code>2020-12-17</code> <code>GCC/9.3.0</code>   <code>2021-21-17</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#gmp","title":"GMP","text":"<p>GMP is a free library for arbitrary precision arithmetic, operating on signed  integers, rational numbers, and floating point numbers. </p> <p>homepage: https://gmplib.org/</p>    version toolchain     <code>4.3.2</code> <code>system</code>   <code>5.1.3</code> <code>GCC/4.8.2</code>   <code>6.0.0</code> <code>GCC/4.9.2</code>   <code>6.0.0a</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GNU/4.9.3-2.25</code>   <code>6.1.0</code> <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>6.1.1</code> <code>GCC/5.4.0-2.26</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>6.1.2</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016b</code>   <code>6.2.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>6.2.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#gmpich","title":"gmpich","text":"<p>gcc and GFortran based compiler toolchain,  including MPICH for MPI support.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2016a</code> <code>system</code>   <code>2017.08</code> <code>system</code>"},{"location":"version-specific/supported-software/#gmpolf","title":"gmpolf","text":"<p>gcc and GFortran based compiler toolchain,  MPICH for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2016a</code> <code>system</code>   <code>2017.10</code> <code>system</code>"},{"location":"version-specific/supported-software/#gmpy2","title":"gmpy2","text":"<p>GMP/MPIR, MPFR, and MPC interface to Python 2.6+ and 3.x</p> <p>homepage: https://github.com/aleaxit/gmpy</p>    version versionsuffix toolchain     <code>2.0.8</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.0.8</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.0.8</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.0b1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.0b1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.0b4</code>  <code>GCC/8.3.0</code>   <code>2.1.0b5</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2020.4.304</code>   <code>2.1.2</code>  <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gmsh","title":"gmsh","text":"<p>Gmsh is a 3D finite element grid generator with a build-in CAD engine and post-processor.</p> <p>homepage: https://gmsh.info/</p>    version versionsuffix toolchain     <code>3.0.6</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>   <code>3.0.6</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.2.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.5.6</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>4.5.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>4.7.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>4.8.4</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>4.9.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#gmt","title":"GMT","text":"<p>GMT is an open source collection of about 80 command-line tools for manipulating  geographic and Cartesian data sets (including filtering, trend fitting, gridding, projecting,  etc.) and producing PostScript illustrations ranging from simple x-y plots via contour maps  to artificially illuminated surfaces and 3D perspective views; the GMT supplements add another  40 more specialized and discipline-specific tools. </p> <p>homepage: https://www.generic-mapping-tools.org/</p>    version toolchain     <code>4.5.17</code> <code>foss/2018a</code>   <code>5.4.1</code> <code>intel/2017a</code>   <code>5.4.3</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>5.4.5</code> <code>foss/2019a</code>   <code>6.2.0</code> <code>foss/2019b</code>, <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#gmvapich2","title":"gmvapich2","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain,  including MVAPICH2 for MPI support.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>1.7.20</code> <code>system</code>   <code>2016a</code> <code>system</code>"},{"location":"version-specific/supported-software/#gmvolf","title":"gmvolf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  MVAPICH2 for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>1.7.20</code> <code>system</code>   <code>2016a</code> <code>system</code>"},{"location":"version-specific/supported-software/#gnu","title":"GNU","text":"<p>Compiler-only toolchain with GCC and binutils.</p> <p>homepage: http://www.gnu.org/software/</p>    version toolchain     <code>4.9.2-2.25</code> <code>system</code>   <code>4.9.3-2.25</code> <code>system</code>   <code>5.1.0-2.25</code> <code>system</code>"},{"location":"version-specific/supported-software/#gnuplot","title":"gnuplot","text":"<p>Portable interactive, function plotting utility</p> <p>homepage: http://gnuplot.sourceforge.net</p>    version toolchain     <code>5.0.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.0.5</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>5.0.6</code> <code>intel/2017a</code>   <code>5.2.2</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>5.2.5</code> <code>foss/2018b</code>   <code>5.2.6</code> <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>5.2.8</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>5.4.1</code> <code>GCCcore/10.2.0</code>   <code>5.4.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>5.4.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gnutls","title":"GnuTLS","text":"<p>GnuTLS is a secure communications library implementing the SSL, TLS  and DTLS protocols and technologies around them. It provides a simple  C language application programming interface (API) to access the secure  communications protocols as well as APIs to parse and write X.509, PKCS #12,  OpenPGP and other required structures. It is aimed to be portable  and efficient with focus on security and interoperability.</p> <p>homepage: https://www.gnutls.org</p>    version toolchain     <code>3.3.21</code> <code>intel/2016a</code>   <code>3.4.7</code> <code>GNU/4.9.3-2.25</code>   <code>3.4.11</code> <code>foss/2016a</code>   <code>3.7.2</code> <code>GCCcore/10.3.0</code>   <code>3.7.3</code> <code>GCCcore/11.2.0</code>   <code>3.7.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#go","title":"Go","text":"<p>Go is an open source programming language that makes it easy to build  simple, reliable, and efficient software.</p> <p>homepage: http://www.golang.org</p>    version toolchain     <code>1.2.1</code> <code>GCC/4.8.2</code>   <code>1.4.2</code> <code>GCC/4.8.4</code>   <code>1.5</code> <code>GCC/4.8.4</code>   <code>1.8.1</code> <code>system</code>   <code>1.11.5</code> <code>system</code>   <code>1.12</code> <code>system</code>   <code>1.12.1</code> <code>GCCcore/7.3.0</code>   <code>1.13.1</code> <code>system</code>   <code>1.14</code> <code>system</code>   <code>1.14.1</code> <code>system</code>   <code>1.16.3</code> <code>system</code>   <code>1.16.5</code> <code>system</code>   <code>1.16.6</code> <code>system</code>   <code>1.17.3</code> <code>system</code>   <code>1.17.6</code> <code>system</code>   <code>1.18.1</code> <code>system</code>   <code>1.18.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#goalign","title":"goalign","text":"<p>Goalign is a set of command line tools to manipulate multiple alignments.</p> <p>homepage: https://github.com/evolbioinfo/goalign</p>    version toolchain     <code>0.3.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#goatools","title":"GOATOOLS","text":"<p>A Python library for Gene Ontology analyses</p> <p>homepage: https://github.com/tanghaibao/goatools</p>    version toolchain     <code>1.1.6</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#gobff","title":"gobff","text":"<p>GCC and GFortran based compiler toolchain with OpenMPI, BLIS, libFLAME, ScaLAPACK and FFTW.</p> <p>homepage: &lt;(none)&gt;</p>    version versionsuffix toolchain     <code>2020.06</code> <code>-amd</code> <code>system</code>   <code>2020.11</code>  <code>system</code>   <code>2020b</code>  <code>system</code>   <code>2021a</code>  <code>system</code>"},{"location":"version-specific/supported-software/#gobject-introspection","title":"GObject-Introspection","text":"<p>GObject introspection is a middleware layer between C libraries  (using GObject) and language bindings. The C library can be scanned at  compile time and generate a metadata file, in addition to the actual  native C library. Then at runtime, language bindings can read this  metadata and automatically provide bindings to call into the C library.</p> <p>homepage: https://gi.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>1.47.1</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.48.0</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.49.1</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.52.0</code>  <code>intel/2017a</code>   <code>1.53.5</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.53.5</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.53.5</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.54.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.54.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.54.1</code> <code>-Python-3.6.6</code> <code>fosscuda/2018b</code>   <code>1.58.3</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>   <code>1.60.1</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>1.63.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.64.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>1.66.1</code>  <code>GCCcore/10.2.0</code>   <code>1.68.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.72.0</code>  <code>GCCcore/11.3.0</code>   <code>1.74.0</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#goblf","title":"goblf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  OpenMPI for MPI support, BLIS (BLAS support), LAPACK, FFTW and ScaLAPACK.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2018b</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#godon","title":"Godon","text":"<p>Godon is codon models software written in Go.</p> <p>homepage: https://bitbucket.org/Davydov/godon/</p>    version versionsuffix toolchain     <code>20210913</code> <code>-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#gofasta","title":"gofasta","text":"<p>Some functions for dealing with alignments,  developed to handle SARS-CoV-2 data as part of the COG-UK project.</p> <p>homepage: https://github.com/cov-ert/gofasta</p>    version toolchain     <code>0.0.5</code> <code>system</code>"},{"location":"version-specific/supported-software/#golf","title":"golf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  OpenBLAS (BLAS and LAPACK support) and FFTW.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2018a</code> <code>system</code>   <code>2020a</code> <code>system</code>"},{"location":"version-specific/supported-software/#gomkl","title":"gomkl","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain with OpenMPI and MKL</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2018b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>   <code>2021a</code> <code>system</code>"},{"location":"version-specific/supported-software/#gompi","title":"gompi","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain,  including OpenMPI for MPI support.</p> <p>homepage: &lt;(none)&gt;</p>    version versionsuffix toolchain     <code>2016.04</code>  <code>system</code>   <code>2016.06</code>  <code>system</code>   <code>2016.07</code>  <code>system</code>   <code>2016.09</code>  <code>system</code>   <code>2016a</code>  <code>system</code>   <code>2016b</code>  <code>system</code>   <code>2017a</code>  <code>system</code>   <code>2017b</code>  <code>system</code>   <code>2018.08</code>  <code>system</code>   <code>2018a</code>  <code>system</code>   <code>2018b</code>  <code>system</code>   <code>2019a</code>  <code>system</code>   <code>2019b</code>  <code>system</code>   <code>2020a</code>  <code>system</code>   <code>2020b</code>  <code>system</code>   <code>2021a</code>  <code>system</code>   <code>2021b</code>  <code>system</code>   <code>2022.05</code>  <code>system</code>   <code>2022.10</code>  <code>system</code>   <code>2022a</code>  <code>system</code>   <code>2022b</code>  <code>system</code>   <code>system</code> <code>-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#gompic","title":"gompic","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain along with CUDA toolkit,  including OpenMPI for MPI support with CUDA features enabled.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2017b</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#google-java-format","title":"google-java-format","text":"<p>Reformats Java source code to comply with Google Java Style.</p> <p>homepage: https://github.com/google/google-java-format</p>    version versionsuffix toolchain     <code>1.7</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#googletest","title":"googletest","text":"<p>Google's framework for writing C++ tests on a variety of platforms</p> <p>homepage: https://github.com/google/googletest</p>    version toolchain     <code>1.8.0</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.8.1</code> <code>GCCcore/8.2.0</code>   <code>1.10.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.11.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gotree","title":"gotree","text":"<p>GoTree is a set of command line tools to manipulate phylogenetic trees.</p> <p>homepage: https://github.com/evolbioinfo/gotree</p>    version toolchain     <code>0.4.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#gp2c","title":"GP2C","text":"<p>The gp2c compiler is a package for translating GP routines into the C programming language, so that  they can  be compiled and used with the PARI system or the GP calculator. </p> <p>homepage: http://pari.math.u-bordeaux.fr/pub/pari/manuals/gp2c/gp2c.html</p>    version toolchain     <code>0.0.9pl5</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#gpaw","title":"GPAW","text":"<p>GPAW is a density-functional theory (DFT) Python code based on the projector-augmented wave (PAW)  method and the atomic simulation environment (ASE). It uses real-space uniform grids and multigrid methods or  atom-centered basis-functions.</p> <p>homepage: https://wiki.fysik.dtu.dk/gpaw/</p>    version versionsuffix toolchain     <code>1.4.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>19.8.1</code> <code>-ASE-3.18.0-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>19.8.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>20.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>20.10.0</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>20.10.0</code> <code>-ASE-3.20.1-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>21.1.0</code> <code>-ASE-3.21.1</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>21.6.0</code>  <code>foss/2021a</code>   <code>21.6.0</code> <code>-ASE-3.22.0</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>22.8.0</code>  <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#gpaw-setups","title":"GPAW-setups","text":"<p>PAW setup for the GPAW Density Functional Theory package.   Users can install setups manually using 'gpaw install-data' or use setups from this package.   The versions of GPAW and GPAW-setups can be intermixed.</p> <p>homepage: https://wiki.fysik.dtu.dk/gpaw/</p>    version toolchain     <code>0.8.7929</code> <code>system</code>   <code>0.9.9672</code> <code>system</code>   <code>0.9.11271</code> <code>system</code>   <code>0.9.20000</code> <code>system</code>"},{"location":"version-specific/supported-software/#gperf","title":"gperf","text":"<p>GNU gperf is a perfect hash function generator. For a given list of strings,  it produces a hash function and hash table, in form of C or C++ code, for  looking up a value depending on the input string. The hash function is  perfect, which means that the hash table has no collisions, and the hash  table lookup needs a single string comparison only. </p> <p>homepage: https://www.gnu.org/software/gperf/</p>    version toolchain     <code>3.0.4</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>3.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#gperftools","title":"gperftools","text":"<p>gperftools is a collection of a high-performance multi-threaded malloc() implementation, plus some pretty nifty performance analysis tools. Includes TCMalloc, heap-checker, heap-profiler and cpu-profiler. </p> <p>homepage: https://github.com/gperftools/gperftools</p>    version toolchain     <code>2.5</code> <code>foss/2016a</code>, <code>intel/2016b</code>   <code>2.6.3</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.7.90</code> <code>GCCcore/8.3.0</code>   <code>2.8</code> <code>GCCcore/9.3.0</code>   <code>2.9.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.10</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gpustat","title":"gpustat","text":"<p>A simple command-line utility for querying and monitoring GPU status</p> <p>homepage: https://github.com/wookayin/gpustat</p>    version versionsuffix toolchain     <code>0.5.0</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>0.6.0</code>  <code>GCCcore/10.3.0</code>, <code>gcccuda/2020b</code>   <code>0.6.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.0.0b1</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gpy","title":"GPy","text":"<p>GPy is a Gaussian Process (GP) framework written in Python</p> <p>homepage: https://sheffieldml.github.io/GPy</p>    version toolchain     <code>1.10.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gpyopt","title":"GPyOpt","text":"<p>GPyOpt is a Python open-source library for Bayesian Optimization</p> <p>homepage: https://sheffieldml.github.io/GPyOpt</p>    version toolchain     <code>1.2.6</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#gpytorch","title":"GPyTorch","text":"<p>GPyTorch is a Gaussian process library implemented using PyTorch.</p> <p>homepage: https://gpytorch.ai</p>    version toolchain     <code>1.3.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#grace","title":"Grace","text":"<p>Grace is a WYSIWYG tool to make two-dimensional plots of numerical data.</p> <p>homepage: https://plasma-gate.weizmann.ac.il/Grace/</p>    version versionsuffix toolchain     <code>5.1.25</code>  <code>foss/2016a</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2016a</code>   <code>5.1.25</code> <code>-5build1</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>intel/2017b</code>, <code>intel/2019a</code>, <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#gradle","title":"Gradle","text":"<p>Complete Gradle install. From mobile apps to microservices, from small startups to big enterprises, Gradle helps teams build, automate and deliver better software, faster. </p> <p>homepage: https://gradle.org</p>    version toolchain     <code>4.5.1</code> <code>system</code>   <code>6.1.1</code> <code>system</code>   <code>6.9.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#gradunwarp","title":"gradunwarp","text":"<p>Gradient Unwarping. This is the Human Connectome Project fork of the no longer maintained original.</p> <p>homepage: https://github.com/Washington-University/gradunwarp</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-HCP-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.2.0</code> <code>-HCP-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.2.0</code> <code>-HCP-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#graph-tool","title":"graph-tool","text":"<p>Graph-tool is an efficient Python module for manipulation and  statistical analysis of graphs (a.k.a. networks). Contrary to  most other python modules with similar functionality, the core  data structures and algorithms are implemented in C++, making  extensive use of template metaprogramming, based heavily on  the Boost Graph Library. This confers it a level of  performance that is comparable (both in memory usage and  computation time) to that of a pure C/C++ library.</p> <p>homepage: https://graph-tool.skewed.de/</p>    version versionsuffix toolchain     <code>2.26</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>2.27</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#graphene","title":"Graphene","text":"<p>Graphene is a a thin layer of types for graphic libraries</p> <p>homepage: https://ebassi.github.io/graphene/</p>    version toolchain     <code>1.6.0</code> <code>intel/2017a</code>   <code>1.10.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#graphicsmagick","title":"GraphicsMagick","text":"<p>GraphicsMagick is the swiss army knife of image processing.</p> <p>homepage: https://www.graphicsmagick.org/</p>    version toolchain     <code>1.3.23</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3.25</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.3.28</code> <code>foss/2018a</code>   <code>1.3.31</code> <code>foss/2018b</code>   <code>1.3.34</code> <code>foss/2019a</code>, <code>foss/2019b</code>   <code>1.3.36</code> <code>GCCcore/11.2.0</code>, <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#graphite2","title":"graphite2","text":"<p>Graphite is a \"smart font\" system developed specifically to  handle the complexities of lesser-known languages of the world.</p> <p>homepage: https://scripts.sil.org/cms/scripts/page.php?site_id=projects&amp;item_id=graphite_home</p>    version toolchain     <code>1.3.14</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#graphlan","title":"GraPhlAn","text":"<p>GraPhlAn is a software tool for producing high-quality circular representations  of taxonomic and phylogenetic trees. It focuses on concise, integrative, informative,  and publication-ready representations of phylogenetically- and taxonomically-driven investigation. </p> <p>homepage: https://segatalab.github.io/tools/graphlan</p>    version versionsuffix toolchain     <code>1.1.3</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#graphmap","title":"GraphMap","text":"<p>A highly sensitive and accurate mapper for long, error-prone reads</p> <p>homepage: https://github.com/isovic/graphmap</p>    version toolchain     <code>0.5.2</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#graphmap2","title":"GraphMap2","text":"<p>A highly sensitive and accurate mapper for long, error-prone reads</p> <p>homepage: https://github.com/lbcb-sci/graphmap2</p>    version toolchain     <code>0.6.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#graphviz","title":"Graphviz","text":"<p>Graphviz is open source graph visualization software. Graph visualization  is a way of representing structural information as diagrams of  abstract graphs and networks. It has important applications in networking,  bioinformatics,  software engineering, database and web design, machine learning,  and in visual interfaces for other technical domains.</p> <p>homepage: https://www.graphviz.org/</p>    version versionsuffix toolchain     <code>2.38.0</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.40.1</code>  <code>foss/2018b</code>, <code>intel/2018a</code>   <code>2.40.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.42.2</code>  <code>foss/2019b</code>   <code>2.42.2</code> <code>-Java-11</code> <code>GCCcore/8.3.0</code>   <code>2.42.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.44.1</code> <code>-Java-11</code> <code>GCCcore/9.3.0</code>   <code>2.44.1</code> <code>-Java-11-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>2.47.0</code> <code>-Java-11</code> <code>GCCcore/10.2.0</code>   <code>2.47.2</code>  <code>GCCcore/10.3.0</code>   <code>2.50.0</code>  <code>GCCcore/11.2.0</code>   <code>5.0.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#graphviz_1","title":"graphviz","text":"<p>Simple Python interface for Graphviz</p> <p>homepage: https://pypi.python.org/pypi/graphviz</p>    version versionsuffix toolchain     <code>0.5.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.5.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.8.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#grasp","title":"GRASP","text":"<p>The General Relativistic Atomic Structure Package (GRASP) is a set of  Fortran 90 programs for performing fully-relativistic electron structure  calculations of atoms.</p> <p>homepage: https://compas.github.io/grasp/</p>    version toolchain     <code>2018</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#grass","title":"GRASS","text":"<p>The Geographic Resources Analysis Support System - used  for geospatial data management and analysis, image processing,  graphics and maps production, spatial modeling, and visualization</p> <p>homepage: https://grass.osgeo.org</p>    version versionsuffix toolchain     <code>7.6.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>7.8.3</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>8.2.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#greenlet","title":"Greenlet","text":"<p>The greenlet package is a spin-off of Stackless, a version of CPython that supports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on \"channels\". A \"greenlet\", on the other hand, is a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when you want to control exactly when your code runs. </p> <p>homepage: https://github.com/python-greenlet/greenlet</p>    version versionsuffix toolchain     <code>0.4.9</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.4.9</code> <code>-Python-3.5.1</code> <code>intel/2016a</code>   <code>0.4.11</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.4.12</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#grep","title":"Grep","text":"<p>The grep command searches one or more input files for lines containing a match to a specified pattern.  By default, grep prints the matching lines.</p> <p>homepage: http://www.gnu.org/software/grep/</p>    version toolchain     <code>2.21</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#gretl","title":"gretl","text":"<p>A cross-platform software package for econometric analysis</p> <p>homepage: http://gretl.sourceforge.net</p>    version toolchain     <code>2020a</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#grib_api","title":"grib_api","text":"<p>The ECMWF GRIB API is an application program interface accessible from C, FORTRAN and Python  programs developed for encoding and decoding WMO FM-92 GRIB edition 1 and edition 2 messages. A useful set of  command line tools is also provided to give quick access to GRIB messages.</p> <p>homepage: https://software.ecmwf.int/wiki/display/GRIB/Home</p>    version toolchain     <code>1.16.0</code> <code>intel/2016a</code>   <code>1.21.0</code> <code>foss/2017a</code>   <code>1.24.0</code> <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#grit","title":"GRIT","text":"<p>GRIT - A tool for the integrative analysis of RNA-seq type assays</p> <p>homepage: https://github.com/nboley/grit</p>    version versionsuffix toolchain     <code>2.0.5</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#grnboost","title":"GRNBoost","text":"<p>XGBoost is an optimized distributed gradient boosting library designed to be highly efficient,  flexible and portable.</p> <p>homepage: https://github.com/dmlc/xgboost</p>    version versionsuffix toolchain     <code>20171009</code> <code>-Java-1.8.0_152</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#groff","title":"groff","text":"<p>Groff (GNU troff) is a typesetting system that reads plain text mixed with formatting commands  and produces formatted output.</p> <p>homepage: https://www.gnu.org/software/groff</p>    version toolchain     <code>1.22.4</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#groimp","title":"GroIMP","text":"<p>GroIMP (Growth Grammar-related Interactive Modelling Platform) is a 3D-modelling platform.</p> <p>homepage: http://www.grogra.de/software/groimp</p>    version toolchain     <code>1.5</code> <code>system</code>"},{"location":"version-specific/supported-software/#gromacs","title":"GROMACS","text":"<p>GROMACS is a versatile package to perform molecular dynamics,  i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.</p> <p>homepage: http://www.gromacs.org</p>    version versionsuffix toolchain     <code>5.1.2</code> <code>-hybrid</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.1.2</code> <code>-hybrid-dp</code> <code>intel/2016a</code>   <code>5.1.2</code> <code>-mt</code> <code>foss/2016a</code>   <code>5.1.4</code> <code>-hybrid</code> <code>foss/2016b</code>   <code>5.1.4</code> <code>-mt</code> <code>foss/2016b</code>   <code>2016</code> <code>-hybrid</code> <code>foss/2016b</code>   <code>2016</code> <code>-mt</code> <code>foss/2016b</code>   <code>2016.1</code> <code>-PLUMED</code> <code>foss/2017a</code>   <code>2016.2</code>  <code>foss/2017a</code>   <code>2016.3</code>  <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2016.3</code> <code>-GPU-enabled</code> <code>foss/2016b</code>   <code>2016.4</code>  <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>giolf/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>2016.5</code>  <code>intel/2018a</code>   <code>2018</code>  <code>foss/2018a</code>   <code>2018.1</code> <code>-PLUMED</code> <code>foss/2018b</code>   <code>2018.2</code>  <code>foss/2017b</code>, <code>foss/2018b</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>2018.3</code>  <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2018.4</code> <code>-PLUMED-2.5.0</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2019</code>  <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2019.2</code>  <code>fosscuda/2019a</code>   <code>2019.3</code>  <code>foss/2019a</code>, <code>foss/2019b</code>, <code>fosscuda/2019a</code>, <code>fosscuda/2019b</code>   <code>2019.4</code>  <code>foss/2019b</code>   <code>2019.6</code>  <code>fosscuda/2019b</code>   <code>2020</code>  <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2020.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2020.3</code>  <code>fosscuda/2019b</code>   <code>2020.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2020.5</code> <code>-Python-3.8.2</code> <code>fosscuda/2020a</code>   <code>2021</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2021.2</code>  <code>fosscuda/2020b</code>   <code>2021.3</code>  <code>foss/2021a</code>   <code>2021.3</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2021.3</code> <code>-CUDA-11.3.1-PLUMED-2.7.2</code> <code>foss/2021a</code>   <code>2021.3</code> <code>-PLUMED-2.7.2</code> <code>foss/2021a</code>   <code>2021.5</code>  <code>foss/2021b</code>   <code>2021.5</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>   <code>2021.5</code> <code>-CUDA-11.4.1-PLUMED-2.8.0</code> <code>foss/2021b</code>   <code>2021.5</code> <code>-PLUMED-2.8.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gromacswrapper","title":"GromacsWrapper","text":"<p>GromacsWrapper is a python package that wraps system calls to Gromacs tools into thin classes.  This allows for fairly seamless integration of the gromacs tools into python scripts. </p> <p>homepage: https://gromacswrapper.readthedocs.org</p>    version versionsuffix toolchain     <code>0.8.0</code> <code>-Python-3.7.2</code> <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#groopm","title":"GroopM","text":"<p>GroopM is a metagenomic binning toolset. It leverages spatio-temporal   dynamics (differential coverage) to accurately (and almost automatically)   extract population genomes from multi-sample metagenomic datasets.  </p> <p>homepage: https://ecogenomics.github.io/GroopM/</p>    version versionsuffix toolchain     <code>0.3.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#groovy","title":"Groovy","text":"<p>Groovy is a powerful, optionally typed and dynamic language, with static-typing and static compilation capabilities, for the Java platform aimed at improving developer productivity thanks to a concise, familiar and easy to learn syntax.</p> <p>homepage: https://groovy-lang.org</p>    version versionsuffix toolchain     <code>2.5.9</code> <code>-Java-11</code> <code>system</code>   <code>4.0.3</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#grpc","title":"gRPC","text":"<p>gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.</p> <p>homepage: https://grpc.io/</p>    version toolchain     <code>1.44.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gsea","title":"GSEA","text":"<p>Gene Set Enrichment Analysis (GSEA) is a computational method that  determines whether an a priori defined set of genes shows statistically significant, concordant differences between two biological states (e.g. phenotypes). </p> <p>homepage: https://www.gsea-msigdb.org/gsea/index.jsp</p>    version toolchain     <code>4.0.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#gsettings-desktop-schemas","title":"gsettings-desktop-schemas","text":"<p>gsettings-desktop-schemas contains a collection of GSettings schemas for  settings shared by various components of a desktop.</p> <p>homepage: https://gitlab.gnome.org/GNOME/gsettings-desktop-schemas</p>    version toolchain     <code>3.34.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#gsl","title":"GSL","text":"<p>The GNU Scientific Library (GSL) is a numerical library for C and C++ programmers.  The library provides a wide range of mathematical routines such as random number generators, special functions  and least-squares fitting.</p> <p>homepage: https://www.gnu.org/software/gsl/</p>    version toolchain     <code>1.16</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.1</code> <code>GCC/5.4.0-2.26</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>2.2.1</code> <code>intel/2016a</code>, <code>intel/2016b</code>   <code>2.3</code> <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2.4</code> <code>GCCcore/6.4.0</code>   <code>2.5</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.6</code> <code>GCC/10.2.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.5.281</code>, <code>iccifort/2020.1.217</code>, <code>iccifort/2020.4.304</code>   <code>2.7</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#gsoap","title":"gSOAP","text":"<p>The gSOAP toolkit is a C and C++ software development toolkit for  SOAP and REST XML Web services and generic C/C++ XML data bindings.  The toolkit analyzes WSDLs and XML schemas (separately or as a combined set) and maps the XML schema types  and the SOAP/REST XML messaging protocols to easy-to-use and efficient C and C++ code.  It also supports exposing (legacy) C and C++ applications as XML Web services  by auto-generating XML serialization code and WSDL specifications.  Or you can simply use it to automatically convert XML to/from C and C++ data.  The toolkit supports options to generate pure ANSI C or C++ with or without STL.</p> <p>homepage: http://www.cs.fsu.edu/~engelen/soap.html</p>    version toolchain     <code>2.8.48</code> <code>GCCcore/6.3.0</code>   <code>2.8.100</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#gsport","title":"gsport","text":"<p>GSPORT command-line tool for accessing GenomeScan Customer Portal</p> <p>homepage: https://github.com/genomescan/gsport</p>    version versionsuffix toolchain     <code>1.4.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#gst-plugins-bad","title":"GST-plugins-bad","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p>    version toolchain     <code>1.20.2</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gst-plugins-base","title":"GST-plugins-base","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p>    version toolchain     <code>0.10.36</code> <code>foss/2016a</code>, <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.6.4</code> <code>foss/2016a</code>   <code>1.8.3</code> <code>foss/2016a</code>   <code>1.16.0</code> <code>GCC/8.2.0-2.31.1</code>   <code>1.16.2</code> <code>GCC/8.3.0</code>   <code>1.18.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>1.18.5</code> <code>GCC/11.2.0</code>   <code>1.20.2</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gstreamer","title":"GStreamer","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p>    version toolchain     <code>0.10.36</code> <code>foss/2016a</code>, <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.6.4</code> <code>foss/2016a</code>   <code>1.8.3</code> <code>foss/2016a</code>   <code>1.15.1</code> <code>fosscuda/2018b</code>   <code>1.16.0</code> <code>GCC/8.2.0-2.31.1</code>   <code>1.16.2</code> <code>GCC/8.3.0</code>   <code>1.18.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>1.18.5</code> <code>GCC/11.2.0</code>   <code>1.20.2</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gsutil","title":"gsutil","text":"<p>gsutil is a Python application that lets you access Cloud Storage from the command line.</p> <p>homepage: https://cloud.google.com/storage/docs/gsutil</p>    version toolchain     <code>5.10</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#gsw","title":"gsw","text":"<p>This Python implementation of the Thermodynamic Equation of  Seawater 2010 (TEOS-10) is based primarily on numpy ufunc wrappers of the GSW-C  implementation. This library replaces the original python-gsw pure-python  implementation.. The primary reasons for this change are that by building on  the C implementation we reduce code duplication and we gain an immediate update  to the 75-term equation. Additional benefits include a major increase in speed, a reduction in memory  usage, and the inclusion of more functions. The penalty is that a C  (or MSVC C++ for Windows) compiler is required to build the package from source.</p> <p>homepage: https://github.com/TEOS-10/GSW-python</p>    version toolchain     <code>3.6.16</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#gtdb-tk","title":"GTDB-Tk","text":"<p>A toolkit for assigning objective taxonomic classifications to bacterial and archaeal genomes.</p> <p>homepage: https://github.com/Ecogenomics/GTDBTk</p>    version versionsuffix toolchain     <code>0.2.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>0.3.2</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>1.0.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.3.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>1.5.0</code>  <code>intel/2020b</code>   <code>1.7.0</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>intel/2020b</code>   <code>2.0.0</code>  <code>foss/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#gtk","title":"GTK+","text":"<p>The GTK+ 2 package contains libraries used for creating graphical user interfaces for applications. </p> <p>homepage: https://developer.gnome.org/gtk+/stable/</p>    version toolchain     <code>2.24.28</code> <code>intel/2016a</code>   <code>2.24.30</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.24.31</code> <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2.24.32</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.24.33</code> <code>GCCcore/10.3.0</code>   <code>3.22.30</code> <code>fosscuda/2018b</code>   <code>3.24.8</code> <code>GCCcore/8.2.0</code>   <code>3.24.13</code> <code>GCCcore/8.3.0</code>   <code>3.24.17</code> <code>GCCcore/9.3.0</code>   <code>3.24.23</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#gtk2","title":"GTK2","text":"<p>The GTK+ 2 package contains libraries used for creating graphical user interfaces for applications. </p> <p>homepage: https://www.gtk.org</p>    version toolchain     <code>2.24.33</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gtk3","title":"GTK3","text":"<p>GTK+ is the primary library used to construct user interfaces in GNOME. It  provides all the user interface controls, or widgets, used in a common  graphical application. Its object-oriented API allows you to construct  user interfaces without dealing with the low-level details of drawing and  device interaction. </p> <p>homepage: https://developer.gnome.org/gtk3/stable/</p>    version toolchain     <code>3.24.29</code> <code>GCCcore/10.3.0</code>   <code>3.24.31</code> <code>GCCcore/11.2.0</code>   <code>3.24.33</code> <code>GCCcore/11.3.0</code>   <code>3.24.35</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#gtk4","title":"GTK4","text":"<p>GTK+ is the primary library used to construct user interfaces in GNOME. It  provides all the user interface controls, or widgets, used in a common  graphical application. Its object-oriented API allows you to construct  user interfaces without dealing with the low-level details of drawing and  device interaction. </p> <p>homepage: https://docs.gtk.org/gtk4/</p>    version toolchain     <code>4.7.0</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#gtksourceview","title":"GtkSourceView","text":"<p>GtkSourceView is a GNOME library that extends GtkTextView, the standard GTK+  widget for multiline text editing. GtkSourceView adds support for syntax  highlighting, undo/redo, file loading and saving, search and replace, a  completion system, printing, displaying line numbers, and other features  typical of a source code editor. </p> <p>homepage: https://wiki.gnome.org/Projects/GtkSourceView</p>    version toolchain     <code>3.24.11</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>   <code>4.4.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#gtool","title":"GTOOL","text":"<p>GTOOL is a program for transforming sets of genotype data for use with  the programs SNPTEST and IMPUTE.  </p> <p>homepage: http://www.well.ox.ac.uk/~cfreeman/software/gwas/gtool.html</p>    version toolchain     <code>0.7.5</code> <code>system</code>"},{"location":"version-specific/supported-software/#gts","title":"GTS","text":"<p>GTS stands for the GNU Triangulated Surface Library.  It is an Open Source Free Software Library intended to provide a set of useful  functions to deal with 3D surfaces meshed with interconnected triangles.</p> <p>homepage: http://gts.sourceforge.net/</p>    version toolchain     <code>0.7.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2018b</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2018a</code>   <code>20121130</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#gubbins","title":"gubbins","text":"<p>Gubbins (Genealogies Unbiased By recomBinations In Nucleotide Sequences) is an algorithm that iteratively identifies loci containing elevated densities of base substitutions while concurrently constructing a phylogeny based on the putative point mutations outside of these regions. Simulations demonstrate the algorithm generates highly accurate reconstructions under realistic models of short-term bacterial evolution, and can be run in only a few hours on alignments of hundreds of bacterial genome sequences. </p> <p>homepage: https://sanger-pathogens.github.io/gubbins</p>    version toolchain     <code>2.4.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#guenomu","title":"guenomu","text":"<p>guenomu is a software written in C that estimates the species tree for a given set of gene families.</p> <p>homepage: https://bitbucket.org/leomrtns/guenomu</p>    version versionsuffix toolchain     <code>2019.07.05</code> <code>-mpi</code> <code>iimpi/2019a</code>"},{"location":"version-specific/supported-software/#guile","title":"Guile","text":"<p>Guile is a programming language, designed to help programmers create flexible  applications that can be extended by users or other programmers with plug-ins,  modules, or scripts. </p> <p>homepage: https://www.gnu.org/software/guile/</p>    version toolchain     <code>1.8.8</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>2.0.11</code> <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>   <code>2.2.2</code> <code>GCCcore/6.4.0</code>   <code>2.2.4</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.2.7</code> <code>GCCcore/10.3.0</code>   <code>3.0.7</code> <code>GCCcore/11.2.0</code>   <code>3.0.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gulp","title":"GULP","text":"<p>GULP is a program for performing a variety of types of simulation on materials  using boundary conditions of 0-D (molecules and clusters), 1-D (polymers), 2-D (surfaces, slabs  and grain boundaries), or 3-D (periodic solids)Band Unfolding code for Plane-wave based calculations</p> <p>homepage: https://gulp.curtin.edu.au/gulp/</p>    version toolchain     <code>5.1</code> <code>intel/2019a</code>   <code>6.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#gurobi","title":"Gurobi","text":"<p>The Gurobi Optimizer is a state-of-the-art solver for mathematical programming. The solvers in the Gurobi Optimizer were designed from the ground up to exploit modern architectures and multi-core processors, using the most advanced implementations of the latest algorithms.</p> <p>homepage: https://www.gurobi.com</p>    version versionsuffix toolchain     <code>6.5.1</code>  <code>system</code>   <code>6.5.2</code>  <code>system</code>   <code>7.0.1</code>  <code>system</code>   <code>7.5.2</code>  <code>system</code>   <code>7.5.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>8.1.1</code>  <code>system</code>   <code>9.0.0</code>  <code>system</code>   <code>9.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>9.0.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>9.0.1</code>  <code>system</code>   <code>9.0.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>9.0.3</code>  <code>GCCcore/10.2.0</code>, <code>system</code>   <code>9.1.0</code>  <code>system</code>   <code>9.1.1</code>  <code>GCCcore/10.2.0</code>   <code>9.1.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>system</code>   <code>9.5.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>9.5.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#gzip","title":"gzip","text":"<p>gzip (GNU zip) is a popular data compression program as a replacement for compress</p> <p>homepage: http://www.gnu.org/software/gzip/</p>    version toolchain     <code>1.8</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>1.9</code> <code>GCCcore/7.3.0</code>   <code>1.10</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.12</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#h","title":"H","text":"<p>h4toh5 - H5hut - h5py - Hadoop - HAL - hanythingondemand - HAPGEN2 - HarfBuzz - Harminv - harmony - HBase - HDBSCAN - HDDM - HDF - HDF-EOS - HDF-EOS5 - HDF5 - hdf5storage - HDFView - HEALPix - heaptrack - hector - HeFFTe - Hello - help2man - HH-suite - HiC-Pro - HiCExplorer - hierfstat - hifiasm - HighFive - Highway - HIP - hipify-clang - HIPS - hipSYCL - hiredis - HISAT2 - histolab - hivtrace - hl7apy - HLAminer - HMMER - HMMER2 - hmmlearn - HOME - Horovod - horton - how_are_we_stranded_here - HPCG - HPCX - HPDBSCAN - HPL - htop - HTSeq - HTSlib - hub - humann - hunspell - hwloc - Hydra - Hyperopt - HyperQueue - hyperspy - HyPhy - HyPo - hypothesis - Hypre</p>"},{"location":"version-specific/supported-software/#h4toh5","title":"h4toh5","text":"<p>The h4toh5 software consists of the h4toh5 and h5toh4 command-line utilities,  as well as a conversion library for converting between individual HDF4 and HDF5 objects.</p> <p>homepage: http://www.hdfgroup.org/h4toh5/</p>    version versionsuffix toolchain     <code>2.2.2</code> <code>-linux-x86_64-static</code> <code>system</code>   <code>2.2.3</code>  <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#h5hut","title":"H5hut","text":"<p>HDF5 Utility Toolkit: High-Performance I/O Library for Particle-based Simulations</p> <p>homepage: https://amas.psi.ch/H5hut/</p>    version toolchain     <code>1.99.13</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#h5py","title":"h5py","text":"<p>HDF5 for Python (h5py) is a general-purpose Python interface to the Hierarchical Data Format library,  version 5. HDF5 is a versatile, mature scientific software library designed for the fast, flexible storage of enormous  amounts of data.</p> <p>homepage: https://www.h5py.org/</p>    version versionsuffix toolchain     <code>2.5.0</code> <code>-Python-2.7.11-HDF5-1.8.16</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.5.0</code> <code>-Python-2.7.11-HDF5-1.8.16-serial</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.5.0</code> <code>-Python-3.5.1-HDF5-1.8.16</code> <code>foss/2016a</code>   <code>2.6.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.6.0</code> <code>-Python-2.7.12-HDF5-1.10.0-patch1</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.0</code> <code>-Python-2.7.12-HDF5-1.8.17</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.0</code> <code>-Python-2.7.12-HDF5-1.8.18</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.0</code> <code>-Python-3.5.2-HDF5-1.10.0-patch1</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.0</code> <code>-Python-3.5.2-HDF5-1.8.17</code> <code>intel/2016b</code>   <code>2.6.0</code> <code>-Python-3.5.2-HDF5-1.8.18</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.7.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.7.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.7.0</code> <code>-Python-2.7.13-HDF5-1.10.1</code> <code>foss/2017a</code>   <code>2.7.0</code> <code>-Python-2.7.13-HDF5-1.8.19</code> <code>foss/2017a</code>   <code>2.7.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.7.0</code> <code>-Python-3.6.1-HDF5-1.10.0-patch1</code> <code>intel/2017a</code>   <code>2.7.0</code> <code>-Python-3.6.1-HDF5-1.10.1</code> <code>foss/2017a</code>   <code>2.7.0</code> <code>-Python-3.6.1-HDF5-1.8.19</code> <code>foss/2017a</code>   <code>2.7.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.7.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.7.1</code> <code>-Python-2.7.14-serial</code> <code>intel/2018a</code>   <code>2.7.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.7.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>   <code>2.7.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.8.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.8.0</code> <code>-Python-2.7.15-serial</code> <code>intel/2018b</code>   <code>2.8.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.9.0</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>, <code>intelcuda/2019a</code>   <code>2.10.0</code> <code>-Python-2.7.18</code> <code>intel/2020a</code>   <code>2.10.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>, <code>intelcuda/2019b</code>   <code>2.10.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>, <code>intelcuda/2020a</code>   <code>2.10.0</code> <code>-serial-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.1.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>3.2.1</code>  <code>foss/2021a</code>, <code>gomkl/2021a</code>   <code>3.6.0</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>3.7.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#hadoop","title":"Hadoop","text":"<p>Hadoop MapReduce by Cloudera</p> <p>homepage: https://archive.cloudera.com/cdh5/cdh/5/</p>    version versionsuffix toolchain     <code>2.4.0</code> <code>-seagate-722af1-native</code> <code>system</code>   <code>2.5.0-cdh5.3.1</code> <code>-native</code> <code>system</code>   <code>2.6.0-cdh5.4.5</code> <code>-native</code> <code>system</code>   <code>2.6.0-cdh5.7.0</code> <code>-native</code> <code>system</code>   <code>2.6.0-cdh5.8.0</code> <code>-native</code> <code>system</code>   <code>2.6.0-cdh5.12.0</code> <code>-native</code> <code>system</code>   <code>2.9.2</code> <code>-native</code> <code>GCCcore/7.3.0</code>   <code>2.10.0</code> <code>-native</code> <code>GCCcore/8.3.0</code>   <code>2.10.0</code> <code>-native-Java-1.8</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#hal","title":"HAL","text":"<p>HAL is a structure to efficiently store and index multiple genome alignments and ancestral reconstructions. HAL is a graph-based representation which provides several advantages over matrix/block-based formats such as MAF, such as improved scalability and the ability to perform queries with respect to an arbitrary reference or subtree.  This package includes the HAL API and several analysis and conversion tools which are described below. HAL files are presently stored in either HDF5 or mmap format, but we note that the tools and most of the API are format-independent, so other databases could be implemented in the future. </p> <p>homepage: https://github.com/ComparativeGenomicsToolkit/hal</p>    version toolchain     <code>2.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#hanythingondemand","title":"hanythingondemand","text":"<p>HanythingOnDemand (HOD) is a system for provisioning virtual Hadoop clusters over a large physical cluster. It uses the Torque resource manager to do node allocation.</p> <p>homepage: https://github.com/hpcugent/hanythingondemand</p>    version versionsuffix toolchain     <code>3.0.0</code> <code>-cli</code> <code>system</code>   <code>3.0.1</code> <code>-cli</code> <code>system</code>   <code>3.0.2</code> <code>-cli</code> <code>system</code>   <code>3.0.3</code> <code>-cli</code> <code>system</code>   <code>3.0.4</code> <code>-cli</code> <code>system</code>   <code>3.1.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.1.0</code> <code>-cli</code> <code>system</code>   <code>3.1.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.1.1</code> <code>-cli</code> <code>system</code>   <code>3.1.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.1.2</code> <code>-cli</code> <code>system</code>   <code>3.1.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.1.3</code> <code>-cli</code> <code>system</code>   <code>3.1.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.1.4</code> <code>-cli</code> <code>system</code>   <code>3.2.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.2.0</code> <code>-cli</code> <code>system</code>   <code>3.2.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.2.2</code> <code>-cli</code> <code>system</code>"},{"location":"version-specific/supported-software/#hapgen2","title":"HAPGEN2","text":"<p>'HAPGEN2' simulates case control datasets at SNP markers.</p> <p>homepage: https://mathgen.stats.ox.ac.uk/genetics_software/hapgen/hapgen2.html</p>    version toolchain     <code>2.2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#harfbuzz","title":"HarfBuzz","text":"<p>HarfBuzz is an OpenType text shaping engine.</p> <p>homepage: https://www.freedesktop.org/wiki/Software/HarfBuzz</p>    version toolchain     <code>1.1.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.2.7</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3.1</code> <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.5.1</code> <code>intel/2017a</code>   <code>1.7.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.7.5</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.9.0</code> <code>fosscuda/2018b</code>   <code>2.2.0</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2.4.0</code> <code>GCCcore/8.2.0</code>   <code>2.6.4</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.6.7</code> <code>GCCcore/10.2.0</code>   <code>2.8.1</code> <code>GCCcore/10.3.0</code>   <code>2.8.2</code> <code>GCCcore/11.2.0</code>   <code>4.2.1</code> <code>GCCcore/11.3.0</code>   <code>5.3.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#harminv","title":"Harminv","text":"<p>Harminv is a free program (and accompanying library) to solve the problem of harmonic inversion -  given a discrete-time, finite-length signal that consists of a sum of finitely-many sinusoids (possibly exponentially  decaying) in a given bandwidth, it determines the frequencies, decay constants, amplitudes, and phases of those  sinusoids.</p> <p>homepage: https://github.com/stevengj/harminv</p>    version toolchain     <code>1.4</code> <code>foss/2016a</code>   <code>1.4.1</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2018a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#harmony","title":"harmony","text":"<p>Harmony is a general-purpose R package with an efficient algorithm for integrating multiple data sets.</p> <p>homepage: https://portals.broadinstitute.org/harmony</p>    version versionsuffix toolchain     <code>1.0.0-20200224</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#hbase","title":"HBase","text":"<p>Apache HBase. is the Hadoop database, a distributed, scalable, big data store. </p> <p>homepage: http://hbase.apache.org/</p>    version toolchain     <code>1.0.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#hdbscan","title":"HDBSCAN","text":"<p>The hdbscan library is a suite of tools to use unsupervised learning to find clusters, or dense  regions, of a dataset. The primary algorithm is HDBSCAN* as proposed by Campello, Moulavi, and Sander. The library  provides a high performance implementation of this algorithm, along with tools for analysing the resulting  clustering.</p> <p>homepage: http://hdbscan.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>0.8.24</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.8.27</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#hddm","title":"HDDM","text":"<p>HDDM is a Python toolbox for hierarchical Bayesian parameter estimation  of the Drift Diffusion Model (via PyMC).</p> <p>homepage: http://ski.clps.brown.edu/hddm_docs</p>    version versionsuffix toolchain     <code>0.6.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.7.5</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>0.7.5</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#hdf","title":"HDF","text":"<p>HDF (also known as HDF4) is a library and multi-object file format for  storing and managing data between machines. </p> <p>homepage: https://www.hdfgroup.org/products/hdf4/</p>    version versionsuffix toolchain     <code>4.2.11</code>  <code>intel/2016a</code>   <code>4.2.12</code>  <code>intel/2017a</code>   <code>4.2.13</code>  <code>GCCcore/6.4.0</code>   <code>4.2.13</code> <code>-no-netcdf</code> <code>intel/2017a</code>   <code>4.2.14</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>4.2.15</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#hdf-eos","title":"HDF-EOS","text":"<p>HDF-EOS libraries are software libraries built on HDF libraries.  It supports three data structures for remote sensing data: Grid, Point and Swath.</p> <p>homepage: https://hdfeos.org/</p>    version toolchain     <code>2.20</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#hdf-eos5","title":"HDF-EOS5","text":"<p>HDF-EOS libraries are software libraries built on HDF libraries.  It supports three data structures for remote sensing data: Grid, Point and Swath.</p> <p>homepage: https://hdfeos.org/</p>    version toolchain     <code>1.16</code> <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#hdf5","title":"HDF5","text":"<p>HDF5 is a data model, library, and file format for storing and managing data.  It supports an unlimited variety of datatypes, and is designed for flexible  and efficient I/O and for high volume and complex data.</p> <p>homepage: https://portal.hdfgroup.org/display/support</p>    version versionsuffix toolchain     <code>1.8.10</code> <code>-serial</code> <code>GCC/4.8.1</code>   <code>1.8.11</code> <code>-serial</code> <code>GCC/4.8.1</code>   <code>1.8.12</code>  <code>foss/2018b</code>, <code>intel/2016b</code>   <code>1.8.13</code>  <code>foss/2018b</code>   <code>1.8.16</code>  <code>foss/2016a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>1.8.16</code> <code>-serial</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>1.8.17</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.8.17</code> <code>-serial</code> <code>GCC/5.4.0-2.26</code>, <code>foss/2016a</code>, <code>intel/2016b</code>   <code>1.8.18</code>  <code>foss/2016b</code>, <code>foss/2017a</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>, <code>intel/2017.01</code>, <code>intel/2017a</code>   <code>1.8.18</code> <code>-serial</code> <code>intel/2017a</code>   <code>1.8.19</code>  <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.8.20</code>  <code>foss/2018a</code>, <code>gmpolf/2017.10</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.10.0-patch1</code>  <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017.01</code>, <code>intel/2017a</code>   <code>1.10.1</code>  <code>foss/2017a</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>, <code>intel/2018.01</code>, <code>intel/2018a</code>, <code>intelcuda/2017b</code>, <code>iomkl/2017b</code>, <code>iomkl/2018a</code>   <code>1.10.2</code>  <code>PGI/18.4-GCC-6.4.0-2.28</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>1.10.5</code>  <code>gompi/2019a</code>, <code>gompi/2019b</code>, <code>gompic/2019a</code>, <code>gompic/2019b</code>, <code>iimpi/2019a</code>, <code>iimpi/2019b</code>, <code>iimpic/2019a</code>, <code>iimpic/2019b</code>, <code>iompi/2019b</code>   <code>1.10.5</code> <code>-serial</code> <code>GCCcore/8.3.0</code>   <code>1.10.6</code>  <code>gompi/2020a</code>, <code>gompic/2020a</code>, <code>iimpi/2020a</code>, <code>iimpic/2020a</code>   <code>1.10.7</code>  <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>, <code>iimpic/2020b</code>   <code>1.10.8</code>  <code>gompi/2021b</code>, <code>gompi/2022a</code>   <code>1.12.0</code>  <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>1.12.1</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>1.12.2</code>  <code>gompi/2022a</code>, <code>iimpi/2022a</code>   <code>1.12.2</code> <code>-serial</code> <code>GCCcore/11.3.0</code>   <code>1.13.1</code>  <code>gompi/2022a</code>, <code>iimpi/2022a</code>   <code>1.13.1</code> <code>-serial</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#hdf5storage","title":"hdf5storage","text":"<p>This Python package provides high level utilities to read/write a variety of Python types to/from  HDF5 (Heirarchal Data Format) formatted files. This package also provides support for MATLAB MAT v7.3 formatted  files, which are just HDF5 files with a different extension and some extra meta-data. All of this is done without  pickling data. Pickling is bad for security because it allows arbitrary code to be executed in the interpreter.  One wants to be able to read possibly HDF5 and MAT files from untrusted sources, so pickling is avoided in this  package.</p> <p>homepage: https://pythonhosted.org/hdf5storage/</p>    version toolchain     <code>0.1.15</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#hdfview","title":"HDFView","text":"<p>HDFView is a visual tool for browsing and editing HDF4 and HDF5 files.</p> <p>homepage: https://support.hdfgroup.org/products/java/hdfview/</p>    version versionsuffix toolchain     <code>2.14</code> <code>-Java-1.8.0_152-centos6</code> <code>system</code>   <code>2.14</code> <code>-Java-1.8.0_152-centos7</code> <code>system</code>"},{"location":"version-specific/supported-software/#healpix","title":"HEALPix","text":"<p>Hierarchical Equal Area isoLatitude Pixelation of a sphere.</p> <p>homepage: http://healpix.sourceforge.net/</p>    version toolchain     <code>3.50</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#heaptrack","title":"heaptrack","text":"<p>A heap memory profiler for Linux.</p> <p>homepage: http://milianw.de/blog/heaptrack-a-heap-memory-profiler-for-linux</p>    version toolchain     <code>1.1.0</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#hector","title":"hector","text":"<p>This is the repository for Hector, an open source, object-oriented,  simple global climate carbon-cycle model. It runs essentially instantaneously while  still representing the most critical global scale earth system processes, and is  one of a class of models heavily used for for emulating complex climate models  and uncertainty analyses.</p> <p>homepage: https://github.com/JGCRI/hector</p>    version toolchain     <code>2.5.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#heffte","title":"HeFFTe","text":"<p>Highly Efficient FFT for Exascale (HeFFTe) library</p> <p>homepage: https://icl.utk.edu/fft</p>    version toolchain     <code>1.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#hello","title":"Hello","text":"<p>The GNU Hello program produces a familiar, friendly greeting. Yes, this is another implementation of the classic program that prints \"Hello, world!\" when you run it.  However, unlike the minimal version often seen, GNU Hello processes its argument list to modify its behavior, supports greetings in many languages, and so on. </p> <p>homepage: https://www.gnu.org/software/hello/</p>    version toolchain     <code>2.10</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#help2man","title":"help2man","text":"<p>help2man produces simple manual pages from the '--help' and '--version' output of other commands.</p> <p>homepage: https://www.gnu.org/software/help2man/</p>    version toolchain     <code>1.47.4</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.1.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/system</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>, <code>system</code>   <code>1.47.5</code> <code>GCCcore/5.5.0</code>   <code>1.47.6</code> <code>GCCcore/8.1.0</code>   <code>1.47.7</code> <code>GCCcore/8.2.0</code>   <code>1.47.8</code> <code>GCCcore/7.4.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/8.4.0</code>   <code>1.47.10</code> <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>   <code>1.47.12</code> <code>GCCcore/9.3.0</code>   <code>1.47.15</code> <code>GCCcore/10.1.0</code>   <code>1.47.16</code> <code>GCCcore/10.2.0</code>   <code>1.48.3</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.4.0</code>   <code>1.49.2</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/9.5.0</code>"},{"location":"version-specific/supported-software/#hh-suite","title":"HH-suite","text":"<p>The HH-suite is an open-source software package  for sensitive protein sequence searching based on the pairwise  alignment of hidden Markov models (HMMs).</p> <p>homepage: https://github.com/soedinglab/hh-suite</p>    version versionsuffix toolchain     <code>3.0-beta.3</code>  <code>intel/2018a</code>   <code>3.2.0</code>  <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>3.3.0</code>  <code>foss/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompic/2020b</code>   <code>3.3.0</code> <code>-Python-3.7.4</code> <code>gompic/2019b</code>"},{"location":"version-specific/supported-software/#hic-pro","title":"HiC-Pro","text":"<p>HiC-Pro was designed to process Hi-C data, from raw fastq files (paired-end Illumina data)   to the normalized contact maps.</p> <p>homepage: http://nservant.github.io/HiC-Pro</p>    version versionsuffix toolchain     <code>2.9.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#hicexplorer","title":"HiCExplorer","text":"<p>HiCexplorer addresses the common tasks of Hi-C analysis from processing to visualization.</p> <p>homepage: http://hicexplorer.readthedocs.org/</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#hierfstat","title":"hierfstat","text":"<p>Estimates hierarchical F-statistics from haploid or diploid genetic data with any numbers of levels in the hierarchy.</p> <p>homepage: https://cran.r-project.org/package=hierfstat</p>    version versionsuffix toolchain     <code>0.5-7</code> <code>-R-4.0.0-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#hifiasm","title":"hifiasm","text":"<p>Hifiasm: a haplotype-resolved assembler for accurate Hifi reads.</p> <p>homepage: https://github.com/chhylp123/hifiasm</p>    version toolchain     <code>0.15.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.16.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#highfive","title":"HighFive","text":"<p>HighFive is a modern header-only C++11 friendly interface for libhdf5.</p> <p>homepage: https://github.com/BlueBrain/HighFive</p>    version toolchain     <code>2.6.2</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#highway","title":"Highway","text":"<p>Highway is a C++ library for SIMD (Single Instruction, Multiple Data), i.e. applying the same operation to 'lanes'.</p> <p>homepage: https://github.com/google/highway</p>    version toolchain     <code>0.12.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#hip","title":"HIP","text":"<p>HIP is a C++ Runtime API and Kernel Language that allows developers to create portable applications for AMD and NVIDIA GPUs from single source code.</p> <p>homepage: https://github.com/ROCm-Developer-Tools/HIP</p>    version versionsuffix toolchain     <code>4.5.0</code> <code>-amd</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#hipify-clang","title":"hipify-clang","text":"<p>Hipify-clang is a clang-based tool for translating CUDA   sources into HIP sources. It translates CUDA source into an abstract syntax   tree, which is traversed by transformation matchers. After applying all the   matchers, the output HIP source is produced.</p> <p>homepage: https://github.com/ROCm-Developer-Tools/HIPIFY</p>    version toolchain     <code>4.2.0</code> <code>gcccuda/2020b</code>"},{"location":"version-specific/supported-software/#hips","title":"HIPS","text":"<p>HIPS (Hierarchical Iterative Parallel Solver) is a scientific library that provides  an efficient parallel iterative solver for very large sparse linear systems. </p> <p>homepage: http://hips.gforge.inria.fr/</p>    version toolchain     <code>1.2b-rc5</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#hipsycl","title":"hipSYCL","text":"<p>hipSYCL is a modern SYCL implementation targeting CPUs and GPUs, with a focus on leveraging existing toolchains such as CUDA or HIP</p> <p>homepage: https://github.com/illuhad/hipSYCL</p>    version toolchain     <code>0.9.1</code> <code>GCC/10.2.0</code>, <code>gcccuda/2020b</code>"},{"location":"version-specific/supported-software/#hiredis","title":"hiredis","text":"<p>Hiredis is a minimalistic C client library for the Redis database.  It is minimalistic because it just adds minimal support for the protocol, but at the same time it uses a high level printf-alike API in order to make it much higher level than otherwise suggested by its minimal code base and the lack of explicit bindings for every Redis command.</p> <p>homepage: https://github.com/redis/hiredis</p>    version toolchain     <code>1.0.2</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#hisat2","title":"HISAT2","text":"<p>HISAT2 is a fast and sensitive alignment program for mapping next-generation sequencing reads  (both DNA and RNA) against the general human population (as well as against a single reference genome).</p> <p>homepage: https://daehwankimlab.github.io/hisat2</p>    version toolchain     <code>2.0.3-beta</code> <code>intel/2016a</code>   <code>2.0.4</code> <code>foss/2016b</code>   <code>2.0.5</code> <code>intel/2017a</code>   <code>2.1.0</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.2.0</code> <code>foss/2018b</code>   <code>2.2.1</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#histolab","title":"histolab","text":"<p>Library for Digital Pathology Image Processing</p> <p>homepage: https://github.com/histolab/histolab</p>    version toolchain     <code>0.4.1</code> <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#hivtrace","title":"hivtrace","text":"<p>HIV-TRACE is an application that identifies potential transmission clusters within a  supplied FASTA file with an option to find potential links against the Los Alamos HIV Sequence Database.</p> <p>homepage: https://github.com/veg/hivtrace</p>    version toolchain     <code>0.6.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#hl7apy","title":"hl7apy","text":"<p>Python library to parse, create and handle HL7 v2 messages.</p> <p>homepage: https://github.com/crs4/hl7apy</p>    version versionsuffix toolchain     <code>1.3.3</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#hlaminer","title":"HLAminer","text":"<p>HLAminer is a software for HLA predictions from next-generation shotgun (NGS) sequence read data and supports direct  read alignment and targeted de novo assembly of sequence reads. </p> <p>homepage: http://www.bcgsc.ca/platform/bioinfo/software/hlaminer</p>    version versionsuffix toolchain     <code>1.4</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#hmmer","title":"HMMER","text":"<p>HMMER is used for searching sequence databases for homologs  of protein sequences, and for making protein sequence alignments. It  implements methods using probabilistic models called profile hidden Markov  models (profile HMMs).  Compared to BLAST, FASTA, and other sequence  alignment and database search tools based on older scoring methodology,  HMMER aims to be significantly more accurate and more able to detect remote  homologs because of the strength of its underlying mathematical models. In the  past, this strength came at significant computational expense, but in the new  HMMER3 project, HMMER is now essentially as fast as BLAST.</p> <p>homepage: http://hmmer.org/</p>    version toolchain     <code>3.1b2</code> <code>GCC/6.4.0-2.28</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2018a</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>3.2.1</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iimpi/2019b</code>, <code>intel/2018b</code>   <code>3.3.1</code> <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>3.3.2</code> <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>, <code>iimpi/2021b</code>"},{"location":"version-specific/supported-software/#hmmer2","title":"HMMER2","text":"<p>HMMER is used for searching sequence databases for sequence homologs,  and for making sequence alignments.</p> <p>homepage: http://hmmer.org</p>    version toolchain     <code>2.3.2</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#hmmlearn","title":"hmmlearn","text":"<p>hmmlearn is a set of algorithms for unsupervised learning and inference of Hidden Markov Models</p> <p>homepage: https://github.com/hmmlearn/hmmlearn</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.2.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#home","title":"HOME","text":"<p>HOME (histogram of methylation) is a python package for differential methylation region (DMR) identification. The method uses histogram of methylation features and the linear Support Vector Machine (SVM) to identify DMRs  from whole genome bisulfite sequencing (WGBS) data.</p> <p>homepage: https://github.com/ListerLab/HOME</p>    version versionsuffix toolchain     <code>0.9</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#horovod","title":"Horovod","text":"<p>Horovod is a distributed training framework for TensorFlow.</p> <p>homepage: https://github.com/uber/horovod</p>    version versionsuffix toolchain     <code>0.9.10</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.18.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.18.2</code> <code>-TensorFlow-1.15.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.18.2</code> <code>-TensorFlow-1.15.2-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.18.2</code> <code>-TensorFlow-2.0.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.19.1</code> <code>-TensorFlow-2.1.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.19.5</code> <code>-TensorFlow-2.2.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.20.3</code> <code>-TensorFlow-2.3.1-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.21.1</code> <code>-PyTorch-1.7.1-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.21.1</code> <code>-TensorFlow-2.4.1</code> <code>fosscuda/2020b</code>   <code>0.21.1</code> <code>-TensorFlow-2.4.1-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.21.3</code> <code>-PyTorch-1.7.1</code> <code>fosscuda/2020b</code>   <code>0.21.3</code> <code>-TensorFlow-2.3.1-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>0.22.0</code> <code>-PyTorch-1.8.1</code> <code>fosscuda/2020b</code>   <code>0.22.1</code> <code>-CUDA-11.3.1-TensorFlow-2.6.0</code> <code>foss/2021a</code>   <code>0.22.1</code> <code>-TensorFlow-2.5.0</code> <code>fosscuda/2020b</code>   <code>0.22.1</code> <code>-TensorFlow-2.5.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.23.0</code> <code>-CUDA-11.3.1-PyTorch-1.10.0</code> <code>foss/2021a</code>   <code>0.23.0</code> <code>-TensorFlow-2.5.0</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#horton","title":"horton","text":"<p>HORTON is a Helpful Open-source Research TOol for N-fermion systems, written  primarily in the Python programming language. (HORTON is named after the helpful  pachyderm, not the Canadian caffeine supply store.) The ultimate goal of HORTON  is to provide a platform for testing new ideas on the quantum many-body problem  at a reasonable computational cost. Although HORTON is primarily designed to be  a quantum-chemistry program, it can perform computations involving model  Hamiltonians, and could be extended for computations in nuclear physics.</p> <p>homepage: https://theochem.github.io/horton</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.1.1</code> <code>-Python-2.7.18</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#how_are_we_stranded_here","title":"how_are_we_stranded_here","text":"<p>Python package for testing strandedness of RNA-Seq fastq files</p> <p>homepage: https://github.com/signalbash/how_are_we_stranded_here</p>    version toolchain     <code>1.0.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#hpcg","title":"HPCG","text":"<p>The HPCG Benchmark project is an effort to create a more relevant metric for ranking HPC systems than  the High Performance LINPACK (HPL) benchmark, that is currently used by the TOP500 benchmark.</p> <p>homepage: https://software.sandia.gov/hpcg</p>    version toolchain     <code>3.0</code> <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.1</code> <code>foss/2018b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2018b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#hpcx","title":"HPCX","text":"<p>The Mellanox HPC-X Toolkit is a comprehensive MPI and SHMEM/PGAS software suite for high performance computing environments</p> <p>homepage: http://www.mellanox.com/page/products_dyn?product_family=189&amp;mtag=hpc-x</p>    version toolchain     <code>2.3.0</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#hpdbscan","title":"HPDBSCAN","text":"<p>Highly parallel density based spatial clustering for application with noise</p> <p>homepage: https://github.com/Markus-Goetz/hpdbscan</p>    version toolchain     <code>20171110</code> <code>foss/2017b</code>   <code>20210826</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#hpl","title":"HPL","text":"<p>HPL is a software package that solves a (random) dense linear system in double precision (64 bits)  arithmetic on distributed-memory computers. It can thus be regarded as a portable as well as freely available  implementation of the High Performance Computing Linpack Benchmark.</p> <p>homepage: https://www.netlib.org/benchmark/hpl/</p>    version toolchain     <code>2.1</code> <code>foss/2016.04</code>, <code>foss/2016.06</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>gmpolf/2016a</code>, <code>gmvolf/1.7.20</code>, <code>gmvolf/2016a</code>, <code>intel/2016.00</code>, <code>intel/2016.01</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016.02-GCC-5.3</code>, <code>intel/2016.03-GCC-4.9</code>, <code>intel/2016.03-GCC-5.3</code>, <code>intel/2016.03-GCC-5.4</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>pomkl/2016.03</code>, <code>pomkl/2016.04</code>, <code>pomkl/2016.09</code>   <code>2.2</code> <code>foss/2016.07</code>, <code>foss/2016.09</code>, <code>foss/2017a</code>, <code>foss/2017b</code>, <code>foss/2018.08</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>fosscuda/2018b</code>, <code>gimkl/2018b</code>, <code>giolf/2017b</code>, <code>giolf/2018a</code>, <code>giolfc/2017b</code>, <code>gmpolf/2017.10</code>, <code>goblf/2018b</code>, <code>gomkl/2018b</code>, <code>intel/2017.00</code>, <code>intel/2017.01</code>, <code>intel/2017.02</code>, <code>intel/2017.09</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>, <code>intel/2018.01</code>, <code>intel/2018.02</code>, <code>intel/2018.04</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2019.00</code>, <code>intel/2019.01</code>, <code>intelcuda/2016.10</code>, <code>intelcuda/2017b</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>iomkl/2016.09-GCC-5.4.0-2.26</code>, <code>iomkl/2017.01</code>, <code>iomkl/2017a</code>, <code>iomkl/2017b</code>, <code>iomkl/2018.02</code>, <code>iomkl/2018a</code>, <code>iomkl/2018b</code>, <code>pomkl/2016.09</code>   <code>2.3</code> <code>CrayCCE/19.06</code>, <code>CrayGNU/19.06</code>, <code>CrayIntel/19.06</code>, <code>Fujitsu/21.05</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022.05</code>, <code>foss/2022.10</code>, <code>foss/2022a</code>, <code>foss/2022b</code>, <code>fosscuda/2019b</code>, <code>fosscuda/2020a</code>, <code>gobff/2020.06-amd</code>, <code>gobff/2020.11</code>, <code>gobff/2020b</code>, <code>gobff/2021a</code>, <code>goblf/2020b</code>, <code>gomkl/2019a</code>, <code>gomkl/2020b</code>, <code>gomkl/2021a</code>, <code>iibff/2020b</code>, <code>intel/2019.02</code>, <code>intel/2019.03</code>, <code>intel/2019a</code>, <code>intel/2019b</code>, <code>intel/2020.00</code>, <code>intel/2020.06-impi-18.5</code>, <code>intel/2020.12</code>, <code>intel/2020a</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>, <code>intel/2022.00</code>, <code>intel/2022.09</code>, <code>intel/2022.11</code>, <code>intel/2022b</code>, <code>intelcuda/2019b</code>, <code>intelcuda/2020a</code>, <code>iomkl/2019.01</code>, <code>iomkl/2021a</code>"},{"location":"version-specific/supported-software/#htop","title":"htop","text":"<p>An interactive process viewer for Unix</p> <p>homepage: https://htop.dev</p>    version toolchain     <code>2.0.0</code> <code>system</code>   <code>2.0.1</code> <code>system</code>   <code>3.2.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#htseq","title":"HTSeq","text":"<p>HTSeq is a Python library to facilitate processing and analysis  of data from high-throughput sequencing (HTS) experiments.</p> <p>homepage: https://github.com/simon-anders/htseq</p>    version versionsuffix toolchain     <code>0.6.1p1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.6.1p1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.9.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>0.9.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.9.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>0.9.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.10.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>0.11.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.11.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.11.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.11.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.11.3</code>  <code>foss/2020b</code>, <code>foss/2021b</code>   <code>2.0.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#htslib","title":"HTSlib","text":"<p>PacBio fork of C library for reading/writing high-throughput sequencing data.  This package includes the utilities bgzip and tabix</p> <p>homepage: https://github.com/PacificBiosciences/htslib</p>    version versionsuffix toolchain     <code>1.2.1</code>  <code>foss/2016b</code>   <code>1.3</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.3.2</code>  <code>intel/2016b</code>   <code>1.4</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.4.1</code>  <code>foss/2016a</code>, <code>intel/2017a</code>   <code>1.6</code>  <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.7</code>  <code>intel/2018a</code>   <code>1.8</code>  <code>GCC/6.4.0-2.28</code>, <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.9</code>  <code>GCC/6.4.0-2.28</code>, <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>   <code>1.10.2</code>  <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.5.281</code>   <code>1.11</code>  <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>1.12</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/9.3.0</code>   <code>1.14</code>  <code>GCC/11.2.0</code>   <code>1.15.1</code>  <code>GCC/11.3.0</code>   <code>20160107</code> <code>-PacBio</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#hub","title":"hub","text":"<p>hub is a command-line wrapper for git that makes you better at GitHub.</p> <p>homepage: https://hub.github.com/</p>    version versionsuffix toolchain     <code>2.2.2</code> <code>-linux-amd64</code> <code>system</code>"},{"location":"version-specific/supported-software/#humann","title":"humann","text":"<p>HUMAnN v3 is a pipeline for efficiently  and accurately determining the coverage and abundance  of microbial pathways in a community from metagenomic data. Sequencing a metagenome typically produces millions  of short DNA/RNA reads. This process, referred  to as functional profiling, aims to describe the metabolic potential  of a microbial community and its members. More generally,  functional profiling answers the question:  What are the microbes in my community-of-interest doing (or capable of doing)?</p> <p>homepage: http://huttenhower.sph.harvard.edu/humann</p>    version toolchain     <code>3.6</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#hunspell","title":"hunspell","text":"<p>Hunspell is a spell checker and morphological analyzer library and program designed for languageswith rich morphology and complex word compounding or character encoding.</p> <p>homepage: https://hunspell.github.io/</p>    version toolchain     <code>1.6.1</code> <code>intel/2017a</code>   <code>1.7.0</code> <code>GCCcore/8.2.0</code>   <code>1.7.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#hwloc","title":"hwloc","text":"<p>The Portable Hardware Locality (hwloc) software package provides a portable  abstraction (across OS, versions, architectures, ...) of the hierarchical  topology of modern architectures, including NUMA memory nodes, sockets, shared  caches, cores and simultaneous multithreading. It also gathers various system  attributes such as cache and memory information as well as the locality of I/O  devices such as network interfaces, InfiniBand HCAs or GPUs. It primarily  aims at helping applications with gathering information about modern computing  hardware so as to exploit it accordingly and efficiently. </p> <p>homepage: https://www.open-mpi.org/projects/hwloc/</p>    version toolchain     <code>1.7.2</code> <code>GCC/4.8.2</code>   <code>1.8.1</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.3</code>   <code>1.9</code> <code>GCC/4.8.3</code>   <code>1.10.0</code> <code>GCC/4.9.2</code>   <code>1.10.1</code> <code>GCC/4.8.4</code>, <code>GNU/4.9.2-2.25</code>   <code>1.11.0</code> <code>GNU/4.9.3-2.25</code>   <code>1.11.1</code> <code>GCC/4.9.3</code>   <code>1.11.2</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>   <code>1.11.3</code> <code>GCC/5.2.0</code>, <code>GCC/5.3.0-2.26</code>, <code>GCC/5.4.0-2.26</code>, <code>GCC/6.1.0-2.27</code>, <code>PGI/16.3-GCC-4.9.3-2.25</code>, <code>PGI/16.4-GCC-5.3.0-2.26</code>, <code>iccifort/2016.3.210-GCC-4.9.3-2.25</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.11.4</code> <code>GCC/6.2.0-2.27</code>, <code>PGI/16.7-GCC-5.4.0-2.26</code>, <code>iccifort/2017.1.132-GCC-5.4.0-2.26</code>   <code>1.11.5</code> <code>GCC/5.4.0-2.26</code>, <code>GCC/6.3.0-2.27</code>, <code>iccifort/2017.1.132-GCC-6.3.0-2.27</code>   <code>1.11.6</code> <code>GCC/6.3.0-2.28</code>   <code>1.11.7</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>   <code>1.11.8</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>intel/2017a</code>   <code>1.11.10</code> <code>GCCcore/7.3.0</code>   <code>1.11.11</code> <code>GCCcore/8.2.0</code>   <code>1.11.12</code> <code>GCCcore/8.3.0</code>   <code>2.0.2</code> <code>GCCcore/8.2.0</code>   <code>2.0.3</code> <code>GCCcore/8.3.0</code>   <code>2.1.0</code> <code>GCCcore/9.2.0</code>   <code>2.2.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.4.1</code> <code>GCCcore/10.3.0</code>   <code>2.5.0</code> <code>GCCcore/11.2.0</code>   <code>2.7.1</code> <code>GCCcore/11.3.0</code>   <code>2.8.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#hydra","title":"Hydra","text":"<p>Hydra is an open-source Python framework that simplifies the development of research and other complex applications. The key feature is the ability to dynamically create a hierarchical configuration by composition and override it through config files and the command line. The name Hydra comes from its ability to run multiple similar jobs - much like a Hydra with multiple heads.</p> <p>homepage: https://hydra.cc/</p>    version toolchain     <code>1.1.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#hyperopt","title":"Hyperopt","text":"<p>hyperopt is a Python library for optimizing over awkward search spaces with real-valued,  discrete, and conditional dimensions.</p> <p>homepage: http://hyperopt.github.io/hyperopt/</p>    version versionsuffix toolchain     <code>0.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.1.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.2.4</code> <code>-Python-3.7.4-Java-1.8</code> <code>intel/2019b</code>   <code>0.2.5</code>  <code>fosscuda/2020b</code>   <code>0.2.7</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#hyperqueue","title":"HyperQueue","text":"<p>HyperQueue lets you build a computation plan consisting of a large amount of tasks and then execute it transparently over a system like SLURM/PBS. It dynamically groups jobs into SLURM/PBS jobs and distributes them to fully utilize allocated nodes. You thus do not have to manually aggregate your tasks into SLURM/PBS jobs.</p> <p>homepage: https://it4innovations.github.io/hyperqueue/</p>    version toolchain     <code>0.13.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#hyperspy","title":"hyperspy","text":"<p>HyperSpy is an open source Python library which provides tools to facilitate the interactive  data analysis of multi-dimensional datasets that can be described as multi-dimensional arrays of a given signal  (e.g. a 2D array of spectra a.k.a spectrum image)</p> <p>homepage: https://hyperspy.org/</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#hyphy","title":"HyPhy","text":"<p>HyPhy (Hypothesis Testing using Phylogenies) is an open-source software package   for the analysis of genetic sequences (in particular the inference of natural selection)   using techniques in phylogenetics, molecular evolution, and machine learning</p> <p>homepage: https://veg.github.io/hyphy-site/</p>    version toolchain     <code>2.3.13</code> <code>foss/2016b</code>   <code>2.5.1</code> <code>gompi/2019a</code>   <code>2.5.33</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#hypo","title":"HyPo","text":"<p>HyPo: Super Fast &amp; Accurate Polisher for Long Read Genome Assemblies</p> <p>homepage: https://github.com/kensung-lab/hypo</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#hypothesis","title":"hypothesis","text":"<p>Hypothesis is an advanced testing library for Python. It lets you write tests which are parametrized  by a source of examples, and then generates simple and comprehensible examples that make your tests fail. This lets  you find more bugs in your code with less work.</p> <p>homepage: https://github.com/HypothesisWorks/hypothesis</p>    version versionsuffix toolchain     <code>4.5.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>4.23.4</code>  <code>GCCcore/8.2.0</code>   <code>4.39.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.44.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>4.53.1</code>  <code>GCCcore/10.2.0</code>   <code>4.57.1</code> <code>-Python-2.7.18</code> <code>GCCcore/11.2.0</code>   <code>5.6.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>5.41.2</code>  <code>GCCcore/10.2.0</code>   <code>5.41.5</code>  <code>GCCcore/10.2.0</code>   <code>6.7.0</code>  <code>GCCcore/10.2.0</code>   <code>6.13.1</code>  <code>GCCcore/10.3.0</code>   <code>6.14.6</code>  <code>GCCcore/11.2.0</code>   <code>6.46.7</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#hypre","title":"Hypre","text":"<p>Hypre is a library for solving large, sparse linear systems of equations on massively  parallel computers. The problems of interest arise in the simulation codes being developed at LLNL  and elsewhere to study physical phenomena in the defense, environmental, energy, and biological sciences.</p> <p>homepage: https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods</p>    version toolchain     <code>2.11.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.14.0</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.15.1</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.18.2</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>   <code>2.20.0</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2.21.0</code> <code>foss/2021a</code>, <code>fosscuda/2020b</code>   <code>2.24.0</code> <code>intel/2021b</code>   <code>2.25.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#i","title":"I","text":"<p>i-cisTarget - i-PI - I-TASSER - i7z - ICA-AROMA - icc - iccifort - iccifortcuda - ichorCNA - icmake - iCount - ICU - IDBA-UD - idemux - ieeg-cli - ifort - IgBLAST - IGMPlot - igraph - IGV - igv-reports - IGVTools - iibff - iimkl - iimpi - iimpic - IJulia - ILAMB - IMa2 - IMa2p - imagecodecs - imageio - ImageJ - ImageMagick - imake - Imath - IMB - imbalanced-learn - imgaug - imkl - imkl-FFTW - Imlib2 - immunedeconv - IMOD - impi - IMPUTE2 - InChI - indicators - Inelastica - inferCNV - infercnvpy - Infernal - Infomap - inline - InParanoid - inputproto - Inspector - IntaRNA - INTEGRATE - INTEGRATE-Neo - intel - intel-compilers - IntelClusterChecker - intelcuda - IntelDAAL - IntelPython - InterProScan - InterProScan_data - intervaltree - intervaltree-python - intltool - io_lib - ioapi - iomkl - iompi - IOR - IOzone - IPM - Ipopt - ipp - IPy - ipyparallel - ipyrad - IPython - IQ-TREE - Iris - IRkernel - IronPython - ISA-L - ISL - isoCirc - IsoNet - ispc - itac - ITK - itpp - ITSTool - ITSx - iVar</p>"},{"location":"version-specific/supported-software/#i-cistarget","title":"i-cisTarget","text":"<p>An integrative genomics method for the prediction of regulatory features and cis-regulatory modules  in Human, Mouse, and Fly</p> <p>homepage: https://gbiomed.kuleuven.be/apps/lcb/i-cisTarget</p>    version versionsuffix toolchain     <code>20160602</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#i-pi","title":"i-PI","text":"<p>A Python wrapper for (ab initio) (path integrals) molecular dynamics</p> <p>homepage: https://github.com/i-pi/i-pi</p>    version versionsuffix toolchain     <code>1.0-20160213</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#i-tasser","title":"I-TASSER","text":"<p>I-TASSER is a set of pre-compiled binaries and scripts for protein structure and function modelling and comparison.</p> <p>homepage: http://zhanglab.ccmb.med.umich.edu/I-TASSER/</p>    version toolchain     <code>4.0</code> <code>system</code>   <code>4.2</code> <code>system</code>   <code>5.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#i7z","title":"i7z","text":"<p>A better i7 (and now i3, i5) reporting tool for Linux </p> <p>homepage: https://github.com/ajaiantilal/i7z</p>    version toolchain     <code>20131012</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#ica-aroma","title":"ICA-AROMA","text":"<p>ICA-AROMA (i.e. 'ICA-based Automatic Removal Of Motion Artifacts') concerns a data-driven method  to identify and remove motion-related independent components from fMRI data.</p> <p>homepage: https://github.com/maartenmennes/ICA-AROMA</p>    version versionsuffix toolchain     <code>0.4.4-beta</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#icc","title":"icc","text":"<p>C and C++ compiler from Intel</p> <p>homepage: http://software.intel.com/en-us/intel-compilers/</p>    version versionsuffix toolchain     <code>2016.0.109</code>  <code>system</code>   <code>2016.0.109</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.1.150</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.0.098</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.2.174</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.4.196</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.5.239</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.6.256</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.7.259</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.0.128</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.1.163</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.2.199</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.3.222</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2018.5.274</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2019.0.117</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.1.144</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.2.187</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.3.199</code> <code>-GCC-8.3.0-2.32</code> <code>system</code>   <code>system</code> <code>-GCC-system-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#iccifort","title":"iccifort","text":"<p>Intel C, C++ &amp; Fortran compilers</p> <p>homepage: http://software.intel.com/en-us/intel-cluster-toolkit-compiler/</p>    version versionsuffix toolchain     <code>2016.0.109</code>  <code>system</code>   <code>2016.0.109</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.1.150</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.0.098</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.2.174</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.4.196</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.5.239</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.0.128</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.1.163</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.2.199</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.3.222</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2018.5.274</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2019.0.117</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.1.144</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.2.187</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.3.199</code> <code>-GCC-8.3.0-2.32</code> <code>system</code>   <code>2019.4.243</code>  <code>system</code>   <code>2019.5.281</code>  <code>system</code>   <code>2020.0.166</code>  <code>system</code>   <code>2020.0.166</code> <code>-GCC-9.2.0</code> <code>system</code>   <code>2020.1.217</code>  <code>system</code>   <code>2020.4.304</code>  <code>system</code>   <code>system</code> <code>-GCC-system-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#iccifortcuda","title":"iccifortcuda","text":"<p>Intel C, C++ &amp; Fortran compilers with CUDA toolkit</p> <p>homepage: &lt;(none)&gt;</p>    version versionsuffix toolchain     <code>2016.10</code>  <code>system</code>   <code>2017.4.196</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2019a</code>  <code>system</code>   <code>2019b</code>  <code>system</code>   <code>2020a</code>  <code>system</code>   <code>2020b</code>  <code>system</code>"},{"location":"version-specific/supported-software/#ichorcna","title":"ichorCNA","text":"<p>ichorCNA is a tool for estimating the fraction of tumor in cell-free DNA from ultra-low-pass whole genome sequencing</p> <p>homepage: https://github.com/broadinstitute/ichorCNA/wiki</p>    version toolchain     <code>0.2.0</code> <code>foss/2019b</code>   <code>0.3.2-20191219</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#icmake","title":"icmake","text":"<p>Icmake is a hybrid between a 'make' utility and a 'shell script' language. Originally, it was written  to provide a useful tool for automatic program maintenance and system administrative tasks on old MS-DOS platforms.</p> <p>homepage: http://icmake.sourceforge.net/</p>    version toolchain     <code>7.23.02</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#icount","title":"iCount","text":"<p>iCount: protein-RNA interaction analysis  is a Python module and associated command-line interface (CLI),  which provides all the commands needed to process iCLIP data on protein-RNA interactions.</p> <p>homepage: https://github.com/tomazc/iCount</p>    version versionsuffix toolchain     <code>20180820</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#icu","title":"ICU","text":"<p>ICU is a mature, widely used set of C/C++ and Java libraries providing Unicode and Globalization  support for software applications.</p> <p>homepage: https://icu.unicode.org</p>    version toolchain     <code>61.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>64.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>65.1</code> <code>GCCcore/8.3.0</code>   <code>66.1</code> <code>GCCcore/9.3.0</code>   <code>67.1</code> <code>GCCcore/10.2.0</code>   <code>69.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>71.1</code> <code>GCCcore/11.3.0</code>   <code>72.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#idba-ud","title":"IDBA-UD","text":"<p>IDBA-UD is a iterative De Bruijn Graph De Novo Assembler for Short Reads  Sequencing data with Highly Uneven Sequencing Depth. It is an extension of IDBA algorithm.  IDBA-UD also iterates from small k to a large k. In each iteration, short and low-depth  contigs are removed iteratively with cutoff threshold from low to high to reduce the errors  in low-depth and high-depth regions. Paired-end reads are aligned to contigs and assembled  locally to generate some missing k-mers in low-depth regions. With these technologies, IDBA-UD  can iterate k value of de Bruijn graph to a very large value with less gaps and less branches  to form long contigs in both low-depth and high-depth regions.</p> <p>homepage: http://i.cs.hku.hk/~alse/hkubrg/projects/idba_ud/</p>    version toolchain     <code>1.1.3</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018a</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#idemux","title":"idemux","text":"<p>idemux - inline barcode demultiplexing Idemux is a command line tool designed to demultiplex paired-end FASTQ files from QuantSeq-Pool.</p> <p>homepage: https://github.com/Lexogen-Tools/idemux</p>    version toolchain     <code>0.1.6</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#ieeg-cli","title":"ieeg-cli","text":"<p>IEEG.ORG is a collaborative initiative funded by the National Institutes  of Neurological Disorders and Stroke. This initiative seeks to advance research towards  the understanding of epilepsy by providing a platform for sharing data,  tools and expertise between researchers.</p> <p>homepage: https://www.ieeg.org/</p>    version toolchain     <code>1.14.56</code> <code>system</code>"},{"location":"version-specific/supported-software/#ifort","title":"ifort","text":"<p>Fortran compiler from Intel</p> <p>homepage: http://software.intel.com/en-us/intel-compilers/</p>    version versionsuffix toolchain     <code>2016.0.109</code>  <code>system</code>   <code>2016.0.109</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.1.150</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.2.181</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.3.210</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.0.098</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.1.132</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.2.174</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.4.196</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.5.239</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.6.256</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2017.7.259</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.0.128</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.1.163</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.2.199</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>2018.3.222</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2018.5.274</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>2019.0.117</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.1.144</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.2.187</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>2019.3.199</code> <code>-GCC-8.3.0-2.32</code> <code>system</code>   <code>system</code> <code>-GCC-system-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#igblast","title":"IgBLAST","text":"<p>IgBLAST faclilitates the analysis of immunoglobulin and T cell receptor variable domain sequences.</p> <p>homepage: https://ncbi.github.io/igblast</p>    version versionsuffix toolchain     <code>1.15.0</code> <code>-x64-linux</code> <code>system</code>   <code>1.18.0</code> <code>-x64-linux</code> <code>system</code>"},{"location":"version-specific/supported-software/#igmplot","title":"IGMPlot","text":"<p>IGMPlot is a free open-source program developed to identify molecular interactions and  prepare data to build 2D and 3D representations of them in the molecular environment.</p> <p>homepage: http://igmplot.univ-reims.fr</p>    version toolchain     <code>2.4.2</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>2.6.9b</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#igraph","title":"igraph","text":"<p>igraph is a collection of network analysis tools with the emphasis on efficiency, portability and ease of use. igraph is open source and free. igraph can be programmed in R, Python and C/C++.</p> <p>homepage: https://igraph.org</p>    version toolchain     <code>0.7.1</code> <code>foss/2018b</code>, <code>intel/2016b</code>, <code>intel/2017b</code>   <code>0.8.0</code> <code>foss/2019b</code>   <code>0.8.2</code> <code>foss/2020a</code>   <code>0.8.5</code> <code>foss/2020b</code>   <code>0.9.1</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.9.4</code> <code>foss/2021a</code>   <code>0.9.5</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#igv","title":"IGV","text":"<p>This package contains command line utilities for  preprocessing, computing feature count density (coverage),  sorting, and  indexing data files.</p> <p>homepage: https://www.broadinstitute.org/software/igv/</p>    version versionsuffix toolchain     <code>2.3.68</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.3.80</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.5.0</code> <code>-Java-11</code> <code>system</code>   <code>2.8.0</code> <code>-Java-11</code> <code>system</code>   <code>2.9.4</code> <code>-Java-11</code> <code>system</code>   <code>2.12.3</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#igv-reports","title":"igv-reports","text":"<p>Python application to generate self-contained igv.js pages that can be opened within a browser with \"file\" protocol.</p> <p>homepage: https://github.com/igvteam/igv-reports</p>    version versionsuffix toolchain     <code>0.9.8</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#igvtools","title":"IGVTools","text":"<p>This package contains command line utilities for preprocessing,   computing feature count density (coverage),  sorting, and indexing data files.  See also http://www.broadinstitute.org/software/igv/igvtools_commandline. </p> <p>homepage: https://software.broadinstitute.org/software/igv/igvtools</p>    version versionsuffix toolchain     <code>2.3.68</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.3.72</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.3.75</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.4.18</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#iibff","title":"iibff","text":"<p>GCC and GFortran based compiler toolchain with OpenMPI, BLIS, libFLAME, ScaLAPACK and FFTW.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#iimkl","title":"iimkl","text":"<p>Intel C/C++ and Fortran compilers, alongside Intel Math Kernel Library (MKL).</p> <p>homepage: https://software.intel.com/en-us/intel-cluster-toolkit-compiler/</p>    version toolchain     <code>2018a</code> <code>system</code>   <code>2022b</code> <code>system</code>"},{"location":"version-specific/supported-software/#iimpi","title":"iimpi","text":"<p>Intel C/C++ and Fortran compilers, alongside Intel MPI.</p> <p>homepage: http://software.intel.com/en-us/intel-cluster-toolkit-compiler/</p>    version versionsuffix toolchain     <code>8.1.5</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.00</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.01</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.02</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.02</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.03</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.03</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>2016.03</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2016b</code>  <code>system</code>   <code>2017.00</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.01</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.02</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>2017.09</code>  <code>system</code>   <code>2017a</code>  <code>system</code>   <code>2017b</code>  <code>system</code>   <code>2018.00</code>  <code>system</code>   <code>2018.01</code>  <code>system</code>   <code>2018.02</code>  <code>system</code>   <code>2018.04</code>  <code>system</code>   <code>2018a</code>  <code>system</code>   <code>2018b</code>  <code>system</code>   <code>2019.00</code>  <code>system</code>   <code>2019.01</code>  <code>system</code>   <code>2019.02</code>  <code>system</code>   <code>2019.03</code>  <code>system</code>   <code>2019a</code>  <code>system</code>   <code>2019b</code>  <code>system</code>   <code>2020.00</code>  <code>system</code>   <code>2020.06-impi-18.5</code>  <code>system</code>   <code>2020.12</code>  <code>system</code>   <code>2020a</code>  <code>system</code>   <code>2020b</code>  <code>system</code>   <code>2021a</code>  <code>system</code>   <code>2021b</code>  <code>system</code>   <code>2022.00</code>  <code>system</code>   <code>2022.05</code>  <code>system</code>   <code>2022.09</code>  <code>system</code>   <code>2022.11</code>  <code>system</code>   <code>2022a</code>  <code>system</code>   <code>2022b</code>  <code>system</code>   <code>system</code> <code>-GCC-system-2.29</code> <code>system</code>"},{"location":"version-specific/supported-software/#iimpic","title":"iimpic","text":"<p>Intel C/C++ and Fortran compilers, alongside Intel MPI and CUDA.</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2016.10</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#ijulia","title":"IJulia","text":"<p>Julia kernel for Jupyter</p> <p>homepage: https://github.com/JuliaLang/IJulia.jl</p>    version versionsuffix toolchain     <code>1.23.3</code> <code>-Julia-1.6.7</code> <code>system</code>"},{"location":"version-specific/supported-software/#ilamb","title":"ILAMB","text":"<p>The International Land Model Benchmarking (ILAMB) project is a model-data intercomparison and integration project designed to improve the performance of land models and, in parallel, improve the design of new measurement campaigns to reduce uncertainties associated with key land surface processes. </p> <p>homepage: https://www.ilamb.org/</p>    version versionsuffix toolchain     <code>2.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#ima2","title":"IMa2","text":"<p>IMa2 is a progam for population genetic analysis that can handle two or more populations.</p> <p>homepage: https://bio.cst.temple.edu/~hey/software/software.htm#IMa2</p>    version toolchain     <code>8.27.12</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#ima2p","title":"IMa2p","text":"<p>IMa2p is a parallel implementation of IMa2, using OpenMPI-C++ - a Bayesian MCMC  based method for inferring population demography under the IM (Isolation with  Migration) model. http://dx.doi.org/10.1111/1755-0998.12437 </p> <p>homepage: https://github.com/arunsethuraman/ima2p</p>    version toolchain     <code>20151123</code> <code>foss/2016a</code>   <code>20160804</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#imagecodecs","title":"imagecodecs","text":"<p>Imagecodecs is a Python library that provides block-oriented, in-memory buffer transformation, compression, and decompression functions for use in the tifffile, czifile, zarr, and other scientific image input/output modules.</p> <p>homepage: https://github.com/cgohlke/imagecodecs</p>    version toolchain     <code>2021.8.26</code> <code>foss/2020b</code>   <code>2022.9.26</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#imageio","title":"imageio","text":"<p>Imageio is a Python library that provides an easy interface to read and write a wide range of  image data, including animated images, video, volumetric data, and scientific formats.</p> <p>homepage: https://imageio.github.io</p>    version versionsuffix toolchain     <code>2.3.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>2.5.0</code>  <code>foss/2019a</code>   <code>2.9.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.9.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>2.10.5</code>  <code>foss/2021a</code>   <code>2.13.5</code>  <code>foss/2021b</code>   <code>2.22.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#imagej","title":"ImageJ","text":"<p>Image Processing and Analysis in Java</p> <p>homepage: https://imagej.nih.gov/ij</p>    version versionsuffix toolchain     <code>1.51a</code>  <code>system</code>   <code>1.51i</code>  <code>system</code>   <code>1.51k</code>  <code>system</code>   <code>1.52q</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#imagemagick","title":"ImageMagick","text":"<p>ImageMagick is a software suite to create, edit, compose, or convert bitmap images</p> <p>homepage: https://www.imagemagick.org/</p>    version versionsuffix toolchain     <code>6.9.4-8</code>  <code>intel/2016a</code>   <code>7.0.1-6</code>  <code>intel/2016a</code>   <code>7.0.1-9</code>  <code>intel/2016a</code>   <code>7.0.2-9</code>  <code>intel/2016a</code>   <code>7.0.3-1</code>  <code>intel/2016b</code>   <code>7.0.5-4</code>  <code>intel/2017a</code>   <code>7.0.5-10</code>  <code>foss/2016b</code>   <code>7.0.7-8</code> <code>-JasPer-1.900.1</code> <code>intel/2017a</code>   <code>7.0.7-14</code>  <code>foss/2017b</code>, <code>intel/2017b</code>   <code>7.0.7-15</code>  <code>GCCcore/6.4.0</code>   <code>7.0.7-26</code>  <code>foss/2018a</code>   <code>7.0.7-30</code>  <code>GCCcore/6.4.0</code>   <code>7.0.7-30</code> <code>-Ghostscript-9.22-cairo-1.14.12</code> <code>GCCcore/6.4.0</code>   <code>7.0.7-39</code> <code>-Ghostscript-9.23-cairo-1.14.12</code> <code>GCCcore/6.4.0</code>   <code>7.0.8-11</code>  <code>GCCcore/7.3.0</code>   <code>7.0.8-46</code>  <code>GCCcore/8.2.0</code>   <code>7.0.9-5</code>  <code>GCCcore/8.3.0</code>   <code>7.0.10-1</code>  <code>GCCcore/9.3.0</code>   <code>7.0.10-35</code>  <code>GCCcore/10.2.0</code>   <code>7.0.11-14</code>  <code>GCCcore/10.3.0</code>   <code>7.1.0-4</code>  <code>GCCcore/11.2.0</code>   <code>7.1.0-37</code>  <code>GCCcore/11.3.0</code>   <code>7.1.0-53</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#imake","title":"imake","text":"<p>imake is a Makefile-generator that is intended to make it easier to develop software portably for multiple systems.</p> <p>homepage: https://www.x.org/</p>    version toolchain     <code>1.0.7</code> <code>intel/2016a</code>   <code>1.0.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#imath","title":"Imath","text":"<p>Imath is a C++ and python library of 2D and 3D vector, matrix, and math operations for computer graphics </p> <p>homepage: https://imath.readthedocs.io/en/latest/</p>    version toolchain     <code>3.1.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#imb","title":"IMB","text":"<p>The Intel MPI Benchmarks perform a set of MPI performance measurements for point-to-point and  global communication operations for a range of message sizes</p> <p>homepage: https://software.intel.com/en-us/articles/intel-mpi-benchmarks</p>    version toolchain     <code>4.1</code> <code>foss/2016a</code>, <code>foss/2017a</code>, <code>intel/2017.02</code>, <code>intel/2017a</code>   <code>2018.1</code> <code>intel/2017a</code>   <code>2019.3</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>2021.3</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#imbalanced-learn","title":"imbalanced-learn","text":"<p>imbalanced-learn is a Python package offering a number of re-sampling techniques commonly used in  datasets showing strong between-class imbalance.</p> <p>homepage: https://github.com/scikit-learn-contrib/imbalanced-learn</p>    version versionsuffix toolchain     <code>0.2.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.2.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.3.3</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>0.4.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.7.0</code>  <code>foss/2020b</code>   <code>0.9.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#imgaug","title":"imgaug","text":"<p>This python library helps you with augmenting images for your machine learning projects.  It converts a set of input images into a new, much larger set of slightly altered images. </p> <p>homepage: https://imgaug.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>0.2.8</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.4.0</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>   <code>0.4.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.4.0</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>   <code>0.4.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>   <code>0.4.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#imkl","title":"imkl","text":"<p>Intel oneAPI Math Kernel Library</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html</p>    version versionsuffix toolchain     <code>11.2.3.187</code>  <code>gimpi/2.11.5</code>   <code>11.3.0.109</code>  <code>iimpi/2016.00-GCC-4.9.3-2.25</code>   <code>11.3.1.150</code>  <code>iimpi/2016.01-GCC-4.9.3-2.25</code>, <code>iimpi/8.1.5-GCC-4.9.3-2.25</code>   <code>11.3.2.181</code>  <code>iimpi/2016.02-GCC-4.9.3-2.25</code>, <code>iimpi/2016.02-GCC-5.3.0-2.26</code>, <code>pompi/2016.03</code>   <code>11.3.3.210</code>  <code>iimpi/2016.03-GCC-4.9.3-2.25</code>, <code>iimpi/2016.03-GCC-5.3.0-2.26</code>, <code>iimpi/2016.03-GCC-5.4.0-2.26</code>, <code>iimpi/2016b</code>, <code>iimpic/2016.10</code>, <code>iompi/2016.07</code>, <code>iompi/2016.09-GCC-4.9.3-2.25</code>, <code>iompi/2016.09-GCC-5.4.0-2.26</code>, <code>pompi/2016.04</code>, <code>pompi/2016.09</code>   <code>2017.0.098</code>  <code>iimpi/2017.00-GCC-5.4.0-2.26</code>   <code>2017.1.132</code>  <code>gimpi/2017a</code>, <code>iimpi/2017.01-GCC-5.4.0-2.26</code>, <code>iimpi/2017a</code>, <code>iompi/2017.01</code>, <code>iompi/2017a</code>   <code>2017.2.174</code>  <code>iimpi/2017.02-GCC-6.3.0-2.27</code>   <code>2017.3.196</code>  <code>gompi/2017b</code>, <code>iimpi/2017b</code>, <code>iimpic/2017b</code>, <code>iompi/2017b</code>   <code>2017.4.239</code>  <code>iimpi/2017.09</code>   <code>2018.0.128</code>  <code>iimpi/2018.00</code>   <code>2018.1.163</code>  <code>iimpi/2018.01</code>, <code>iimpi/2018a</code>, <code>iompi/2018a</code>   <code>2018.1.163</code> <code>-serial</code> <code>iccifort/2018.1.163-GCC-6.4.0-2.28</code>   <code>2018.2.199</code>  <code>iimpi/2018.02</code>, <code>iompi/2018.02</code>   <code>2018.3.222</code>  <code>gimpi/2018b</code>, <code>gompi/2018b</code>, <code>iimpi/2018b</code>, <code>iompi/2018b</code>   <code>2018.4.274</code>  <code>iimpi/2018.04</code>   <code>2019.0.117</code>  <code>iimpi/2019.00</code>   <code>2019.1.144</code>  <code>gompi/2019a</code>, <code>iimpi/2019.01</code>, <code>iimpi/2019a</code>, <code>iimpic/2019a</code>, <code>iompi/2019.01</code>   <code>2019.2.187</code>  <code>iimpi/2019.02</code>   <code>2019.3.199</code>  <code>iimpi/2019.03</code>   <code>2019.5.281</code>  <code>gompi/2019b</code>, <code>gompic/2019b</code>, <code>iimpi/2019b</code>, <code>iimpic/2019b</code>, <code>iompi/2019b</code>   <code>2020.0.166</code>  <code>iimpi/2020.00</code>   <code>2020.1.217</code>  <code>gompi/2020a</code>, <code>iimpi/2020.06-impi-18.5</code>, <code>iimpi/2020a</code>, <code>iimpic/2020a</code>, <code>iompi/2020a</code>   <code>2020.4.304</code>  <code>NVHPC/21.2</code>, <code>gompi/2020b</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>, <code>iimpic/2020b</code>, <code>iompi/2020b</code>   <code>2021.1.1</code>  <code>iimpi/2020.12</code>   <code>2021.2.0</code>  <code>gompi/2021a</code>, <code>iimpi/2021a</code>, <code>iompi/2021a</code>   <code>2021.3.0</code>  <code>gompi/2021a</code>   <code>2021.4.0</code>  <code>system</code>   <code>2022.0.1</code>  <code>system</code>   <code>2022.1.0</code>  <code>system</code>   <code>2022.2.0</code>  <code>system</code>   <code>2022.2.1</code>  <code>system</code>"},{"location":"version-specific/supported-software/#imkl-fftw","title":"imkl-FFTW","text":"<p>FFTW interfaces using Intel oneAPI Math Kernel Library</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html</p>    version toolchain     <code>2021.4.0</code> <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>2022.0.1</code> <code>iimpi/2022.00</code>   <code>2022.1.0</code> <code>iimpi/2022.05</code>, <code>iimpi/2022a</code>   <code>2022.2.0</code> <code>iimpi/2022.09</code>   <code>2022.2.1</code> <code>iimpi/2022.11</code>, <code>iimpi/2022b</code>"},{"location":"version-specific/supported-software/#imlib2","title":"Imlib2","text":"<p>This is the Imlib 2 library - a library that does image file loading and saving as well as rendering, manipulation, arbitrary polygon support, etc. It does ALL of these operations FAST. Imlib2 also tries to be highly intelligent about doing them, so writing naive programs can be done easily, without sacrificing speed. </p> <p>homepage: https://docs.enlightenment.org/api/imlib2/html/</p>    version toolchain     <code>1.5.1</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#immunedeconv","title":"immunedeconv","text":"<p>immunedeconv is an R package for unified access to computational methods for estimating immune cell fractions from bulk RNA sequencing data.</p> <p>homepage: https://github.com/icbi-lab/immunedeconv</p>    version versionsuffix toolchain     <code>2.0.2</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#imod","title":"IMOD","text":"<p>IMOD is a set of image processing, modeling and display programs used for tomographic reconstruction and for 3D reconstruction of EM serial sections and optical sections. The package contains tools for assembling and aligning data within multiple types and sizes of image stacks, viewing 3-D data from any orientation, and modeling and display of the image files. IMOD was developed primarily by David Mastronarde, Rick Gaudette, Sue Held, Jim Kremer, Quanren Xiong, and John Heumann at the University of Colorado.</p> <p>homepage: http://bio3d.colorado.edu/imod/</p>    version versionsuffix toolchain     <code>4.7.15</code> <code>_RHEL6-64_CUDA6.0</code> <code>system</code>   <code>4.11.5</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#impi","title":"impi","text":"<p>The Intel(R) MPI Library for Linux* OS is a multi-fabric message  passing library based on ANL MPICH2 and OSU MVAPICH2. The Intel MPI Library for  Linux OS implements the Message Passing Interface, version 2 (MPI-2) specification.</p> <p>homepage: http://software.intel.com/en-us/intel-mpi-library/</p>    version versionsuffix toolchain     <code>3.2.2.006</code>  <code>system</code>   <code>4.0.0.028</code>  <code>system</code>   <code>4.0.0.028</code> <code>-32bit</code> <code>system</code>   <code>4.0.2.003</code>  <code>system</code>   <code>4.1.0.027</code>  <code>system</code>   <code>4.1.0.030</code>  <code>system</code>   <code>4.1.1.036</code>  <code>system</code>   <code>4.1.2.040</code>  <code>system</code>   <code>4.1.3.045</code>  <code>system</code>   <code>4.1.3.049</code>  <code>GCC/4.8.3</code>, <code>system</code>   <code>5.0.3.048</code>  <code>GCC/4.9.3</code>   <code>5.1.1.109</code>  <code>iccifort/2016.0.109-GCC-4.9.3-2.25</code>   <code>5.1.2.150</code>  <code>iccifort/2016.1.150-GCC-4.9.3-2.25</code>   <code>5.1.3.181</code>  <code>iccifort/2016.2.181-GCC-4.9.3-2.25</code>, <code>iccifort/2016.2.181-GCC-5.3.0-2.26</code>, <code>iccifort/2016.3.210-GCC-4.9.3-2.25</code>, <code>iccifort/2016.3.210-GCC-5.3.0-2.26</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>iccifortcuda/2016.10</code>   <code>2017.0.098</code>  <code>iccifort/2017.0.098-GCC-5.4.0-2.26</code>   <code>2017.1.132</code>  <code>GCC/5.4.0-2.26</code>, <code>iccifort/2017.1.132-GCC-5.4.0-2.26</code>, <code>iccifort/2017.1.132-GCC-6.3.0-2.27</code>   <code>2017.2.174</code>  <code>iccifort/2017.2.174-GCC-6.3.0-2.27</code>   <code>2017.3.196</code>  <code>GCC/6.4.0-2.28</code>, <code>gcccuda/2017b</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>iccifortcuda/2017.4.196-GCC-6.4.0-2.28</code>   <code>2017.4.239</code>  <code>iccifort/2017.5.239-GCC-6.4.0-2.28</code>   <code>2018.0.128</code>  <code>iccifort/2018.0.128-GCC-6.4.0-2.28</code>   <code>2018.1.163</code>  <code>GCC/6.4.0-2.28</code>, <code>iccifort/2018.1.163-GCC-6.4.0-2.28</code>   <code>2018.2.199</code>  <code>iccifort/2018.2.199-GCC-6.4.0-2.28</code>   <code>2018.3.222</code>  <code>GCC/7.3.0-2.30</code>, <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>   <code>2018.4.274</code>  <code>iccifort/2018.5.274-GCC-7.3.0-2.30</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifortcuda/2019a</code>   <code>2018.5.288</code>  <code>iccifort/2019.5.281</code>, <code>iccifort/2020.1.217</code>, <code>iccifortcuda/2019b</code>   <code>2019.0.117</code>  <code>iccifort/2019.0.117-GCC-8.2.0-2.31.1</code>   <code>2019.1.144</code>  <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2019.2.187</code>  <code>iccifort/2019.2.187-GCC-8.2.0-2.31.1</code>   <code>2019.3.199</code>  <code>iccifort/2019.3.199-GCC-8.3.0-2.32</code>   <code>2019.6.166</code>  <code>iccifort/2020.0.166-GCC-9.2.0</code>   <code>2019.7.217</code>  <code>iccifort/2020.1.217</code>, <code>iccifortcuda/2020a</code>   <code>2019.9.304</code>  <code>iccifort/2020.4.304</code>, <code>iccifortcuda/2020b</code>   <code>2019.12.320</code>  <code>iccifort/2020.4.304</code>   <code>2021.1.1</code>  <code>intel-compilers/2021.1.2</code>   <code>2021.2.0</code>  <code>intel-compilers/2021.2.0</code>   <code>2021.3.0</code>  <code>intel-compilers/2021.3.0</code>   <code>2021.4.0</code>  <code>intel-compilers/2021.4.0</code>   <code>2021.5.0</code>  <code>intel-compilers/2022.0.1</code>   <code>2021.6.0</code>  <code>intel-compilers/2022.1.0</code>   <code>2021.7.0</code>  <code>intel-compilers/2022.2.0</code>   <code>2021.7.1</code>  <code>intel-compilers/2022.2.1</code>   <code>system</code>  <code>iccifort/system-GCC-system-2.29</code>"},{"location":"version-specific/supported-software/#impute2","title":"IMPUTE2","text":"<p>IMPUTE version 2 (also known as IMPUTE2) is a genotype imputation   and haplotype phasing program based on ideas from Howie et al. 2009 </p> <p>homepage: http://mathgen.stats.ox.ac.uk/impute/impute_v2.html</p>    version versionsuffix toolchain     <code>2.3.0</code> <code>_x86_64_dynamic</code> <code>system</code>   <code>2.3.0</code> <code>_x86_64_static</code> <code>system</code>   <code>2.3.2</code> <code>_x86_64_dynamic</code> <code>system</code>   <code>2.3.2</code> <code>_x86_64_static</code> <code>system</code>"},{"location":"version-specific/supported-software/#inchi","title":"InChI","text":"<p>The IUPAC International Chemical Identifier (InChI TM) is a non-proprietary identifier for chemical substances that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.</p> <p>homepage: https://www.inchi-trust.org/</p>    version toolchain     <code>1.06</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#indicators","title":"indicators","text":"<ul> <li>Thread-safe progress bars and spinners - Header-only library. Grab a copy of include/indicators. - Single-header version in single_include/indicators. </li> </ul> <p>homepage: https://github.com/p-ranav/indicators</p>    version toolchain     <code>2.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#inelastica","title":"Inelastica","text":"<p>Python package for eigenchannels, vibrations and inelastic electron transport based on SIESTA/TranSIESTA DFT.</p> <p>homepage: https://github.com/tfrederiksen/inelastica</p>    version versionsuffix toolchain     <code>1.3.5</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#infercnv","title":"inferCNV","text":"<p>InferCNV is used to explore tumor single cell RNA-Seq data to identify evidence  for somatic large-scale chromosomal copy number alterations, such as gains or  deletions of entire chromosomes or large segments of chromosomes.</p> <p>homepage: https://github.com/broadinstitute/inferCNV/wiki</p>    version versionsuffix toolchain     <code>1.0.4</code> <code>-Python-3.7.2-R-3.6.0</code> <code>foss/2019a</code>   <code>1.2.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.3.3</code>  <code>foss/2020b</code>, <code>foss/2021a</code>   <code>1.3.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.10.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#infercnvpy","title":"infercnvpy","text":"<p>Infer copy number variation (CNV) from scRNA-seq data. Plays nicely with Scanpy.</p> <p>homepage: https://github.com/icbi-lab/infercnvpy</p>    version toolchain     <code>0.4.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#infernal","title":"Infernal","text":"<p>Infernal (\"INFERence of RNA ALignment\") is for searching DNA sequence databases  for RNA structure and sequence similarities.</p> <p>homepage: http://eddylab.org/infernal/</p>    version toolchain     <code>1.1.2</code> <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2018b</code>   <code>1.1.4</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#infomap","title":"Infomap","text":"<p>Multi-level network clustering based on the Map equation.</p> <p>homepage: https://www.mapequation.org/code.html#Linux</p>    version toolchain     <code>20190308</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#inline","title":"inline","text":"<p>Functionality to dynamically define R functions and S4 methods  with 'inlined' C, C++ or Fortran code supporting the .C and .Call calling  conventions.</p> <p>homepage: https://cran.r-project.org/web/packages/inline</p>    version versionsuffix toolchain     <code>0.3.19</code> <code>-R-4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#inparanoid","title":"InParanoid","text":"<p>InParanoid: ortholog groups with inparalogs.</p> <p>homepage: https://inparanoid.sbc.su.se</p>    version toolchain     <code>5.0-20220607</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#inputproto","title":"inputproto","text":"<p>X.org InputProto protocol headers.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>2.3.1</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.3.2</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#inspector","title":"Inspector","text":"<p>Intel Inspector is a dynamic memory and threading error  checking tool for users developing serial and parallel applications</p> <p>homepage: https://software.intel.com/en-us/inspector</p>    version toolchain     <code>2013_update6</code> <code>system</code>   <code>2013_update7</code> <code>system</code>   <code>2016_update3</code> <code>system</code>   <code>2017_update1</code> <code>system</code>   <code>2017_update2</code> <code>system</code>   <code>2018_update1</code> <code>system</code>   <code>2018_update2</code> <code>system</code>   <code>2018_update3</code> <code>system</code>   <code>2019_update2</code> <code>system</code>   <code>2019_update5</code> <code>system</code>   <code>2021.4.0</code> <code>system</code>   <code>2022.0.0</code> <code>system</code>   <code>2022.1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#intarna","title":"IntaRNA","text":"<p>Efficient RNA-RNA interaction prediction incorporating accessibility and seeding of interaction sites</p> <p>homepage: https://github.com/BackofenLab/IntaRNA</p>    version versionsuffix toolchain     <code>2.3.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#integrate","title":"INTEGRATE","text":"<p>INTEGRATE is a tool calling gene fusions with exact fusion junctions and genomic breakpoints  by combining RNA-Seq and WGS data. It is highly sensitive and accurate by applying a fast split-read  mapping algorithm based on Burrow-Wheeler transform. </p> <p>homepage: https://sourceforge.net/p/integrate-fusion/wiki/Home/</p>    version toolchain     <code>0.2.6</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#integrate-neo","title":"INTEGRATE-Neo","text":"<p>INTEGRATE-Neo is a gene fusion neoantigen discovering tool using next-generation sequencing data.  It is written in C++ and Python. </p> <p>homepage: &lt;&gt;</p>    version versionsuffix toolchain     <code>1.2.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#intel","title":"intel","text":"<p>Compiler toolchain including Intel compilers, Intel MPI and Intel Math Kernel Library (MKL).</p> <p>homepage: https://easybuild.readthedocs.io/en/master/Common-toolchains.html#intel-toolchain</p>    version versionsuffix toolchain     <code>2016.00</code>  <code>system</code>   <code>2016.01</code>  <code>system</code>   <code>2016.02</code> <code>-GCC-4.9</code> <code>system</code>   <code>2016.02</code> <code>-GCC-5.3</code> <code>system</code>   <code>2016.03</code> <code>-GCC-4.9</code> <code>system</code>   <code>2016.03</code> <code>-GCC-5.3</code> <code>system</code>   <code>2016.03</code> <code>-GCC-5.4</code> <code>system</code>   <code>2016a</code>  <code>system</code>   <code>2016b</code>  <code>system</code>   <code>2017.00</code>  <code>system</code>   <code>2017.01</code>  <code>system</code>   <code>2017.02</code>  <code>system</code>   <code>2017.09</code>  <code>system</code>   <code>2017a</code>  <code>system</code>   <code>2017b</code>  <code>system</code>   <code>2018.00</code>  <code>system</code>   <code>2018.01</code>  <code>system</code>   <code>2018.02</code>  <code>system</code>   <code>2018.04</code>  <code>system</code>   <code>2018a</code>  <code>system</code>   <code>2018b</code>  <code>system</code>   <code>2019.00</code>  <code>system</code>   <code>2019.01</code>  <code>system</code>   <code>2019.02</code>  <code>system</code>   <code>2019.03</code>  <code>system</code>   <code>2019a</code>  <code>system</code>   <code>2019b</code>  <code>system</code>   <code>2020.00</code>  <code>system</code>   <code>2020.06-impi-18.5</code>  <code>system</code>   <code>2020.12</code>  <code>system</code>   <code>2020a</code>  <code>system</code>   <code>2020b</code>  <code>system</code>   <code>2021a</code>  <code>system</code>   <code>2021b</code>  <code>system</code>   <code>2022.00</code>  <code>system</code>   <code>2022.05</code>  <code>system</code>   <code>2022.09</code>  <code>system</code>   <code>2022.11</code>  <code>system</code>   <code>2022a</code>  <code>system</code>   <code>2022b</code>  <code>system</code>"},{"location":"version-specific/supported-software/#intel-compilers","title":"intel-compilers","text":"<p>Intel C, C++ &amp; Fortran compilers (classic and oneAPI)</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/hpc-toolkit.html</p>    version toolchain     <code>2021.1.2</code> <code>system</code>   <code>2021.2.0</code> <code>system</code>   <code>2021.3.0</code> <code>system</code>   <code>2021.4.0</code> <code>system</code>   <code>2022.0.1</code> <code>system</code>   <code>2022.0.2</code> <code>system</code>   <code>2022.1.0</code> <code>system</code>   <code>2022.2.0</code> <code>system</code>   <code>2022.2.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#intelclusterchecker","title":"IntelClusterChecker","text":"<p>Intel Cluster Checker verifies the configuration and  performance of Linux OS-based clusters. Anomalies and performance differences  can be identified and practical resolutions provided. </p> <p>homepage: https://software.intel.com/en-us/cluster-checker</p>    version toolchain     <code>2017.1.016</code> <code>system</code>   <code>2021.5.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#intelcuda","title":"intelcuda","text":"<p>Intel Cluster Toolkit Compiler Edition provides Intel C/C++ and Fortran compilers,  Intel MPI &amp; Intel MKL, with CUDA toolkit</p> <p>homepage: &lt;(none)&gt;</p>    version toolchain     <code>2016.10</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2019a</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>"},{"location":"version-specific/supported-software/#inteldaal","title":"IntelDAAL","text":"<p>Intel\u00ae Data Analytics Acceleration Library (Intel\u00ae DAAL) is the library of  Intel\u00ae architecture optimized building blocks covering all stages of data analytics: data acquisition from a data source, preprocessing, transformation, data mining, modeling, validation, and decision making.  </p> <p>homepage: https://software.intel.com/en-us/daal</p>    version toolchain     <code>2019.4.007</code> <code>system</code>"},{"location":"version-specific/supported-software/#intelpython","title":"IntelPython","text":"<p>Intel\u00ae Distribution for Python. Powered by Anaconda.  Accelerating Python* performance on modern architectures from Intel. </p> <p>homepage: https://software.intel.com/en-us/intel-distribution-for-python</p>    version versionsuffix toolchain     <code>2.7.15</code> <code>-2019.2.066</code> <code>system</code>   <code>3.6.8</code> <code>-2019.2.066</code> <code>system</code>"},{"location":"version-specific/supported-software/#interproscan","title":"InterProScan","text":"<p>InterProScan is a sequence analysis application (nucleotide and protein sequences) that combines  different protein signature recognition methods into one resource [code only: libraries and external binaries  but no data].</p> <p>homepage: https://www.ebi.ac.uk/interpro/</p>    version toolchain     <code>5.26-65.0</code> <code>intel/2017b</code>   <code>5.27-66.0</code> <code>intel/2017b</code>   <code>5.28-67.0</code> <code>intel/2018a</code>   <code>5.52-86.0</code> <code>GCCcore/10.3.0</code>   <code>5.55-88.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#interproscan_data","title":"InterProScan_data","text":"<p>InterProScan is a sequence analysis application (nucleotide and protein sequences) that combines  different protein signature recognition methods into one resource [data only].</p> <p>homepage: https://www.ebi.ac.uk/interpro/</p>    version toolchain     <code>5.55-88.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#intervaltree","title":"intervaltree","text":"<p>An interval tree can be used to efficiently find a set of numeric intervals  overlapping or containing another interval. This library provides a basic implementation of an  interval tree using C++ templates, allowing the insertion of arbitrary types into the tree. </p> <p>homepage: https://github.com/ekg/intervaltree</p>    version toolchain     <code>0.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#intervaltree-python","title":"intervaltree-python","text":"<p>A mutable, self-balancing interval tree. Queries may be by  point, by range overlap, or by range containment. </p> <p>homepage: https://github.com/chaimleib/intervaltree</p>    version versionsuffix toolchain     <code>3.0.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.1.0</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#intltool","title":"intltool","text":"<p>intltool is a set of tools to centralize translation of  many different file formats using GNU gettext-compatible PO files.</p> <p>homepage: http://freedesktop.org/wiki/Software/intltool/</p>    version versionsuffix toolchain     <code>0.51.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.51.0</code> <code>-Perl-5.20.3</code> <code>intel/2016a</code>   <code>0.51.0</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.51.0</code> <code>-Perl-5.24.0</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>0.51.0</code> <code>-Perl-5.24.1</code> <code>GCCcore/6.3.0</code>, <code>intel/2017a</code>   <code>0.51.0</code> <code>-Perl-5.26.0</code> <code>GCCcore/6.4.0</code>   <code>0.51.0</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>0.51.0</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#io_lib","title":"io_lib","text":"<p>Io_lib is a library of file reading and writing code to provide a general purpose trace file (and  Experiment File) reading interface. The programmer simply calls the (eg) read_reading to create a \"Read\" C structure  with the data loaded into memory. It has been compiled and tested on a variety of unix systems, MacOS X and MS   Windows.</p> <p>homepage: http://sourceforge.net/projects/staden/files/io_lib/</p>    version toolchain     <code>1.14.8</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#ioapi","title":"ioapi","text":"<p>The Models-3/EDSS Input/Output Applications Programming Interface (I/O API) provides the  environmental model developer with an easy-to-learn, easy-to-use programming library for data storage and  access, available from both Fortran and C. The same routines can be used for both file storage (using netCDF  files) and model coupling (using PVM mailboxes). It is the standard data access library for both the  NCSC/CMAS's EDSS project and EPA's Models-3, CMAQ, and SMOKE, as well as various other atmospheric and  hydrological modeling systems.</p> <p>homepage: https://www.cmascenter.org/ioapi/</p>    version versionsuffix toolchain     <code>3.2-2020111</code> <code>-nocpl</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#iomkl","title":"iomkl","text":"<p>Compiler toolchain including Intel compilers, Open MPI and Intel Math Kernel Library (MKL).</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/hpc-toolkit.html</p>    version toolchain     <code>2016.07</code> <code>system</code>   <code>2016.09-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.09-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.01</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2018.02</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019.01</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>   <code>2021a</code> <code>system</code>"},{"location":"version-specific/supported-software/#iompi","title":"iompi","text":"<p>Intel C/C++ and Fortran compilers, alongside Open MPI.</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/hpc-toolkit.html</p>    version toolchain     <code>2016.07</code> <code>system</code>   <code>2016.09-GCC-4.9.3-2.25</code> <code>system</code>   <code>2016.09-GCC-5.4.0-2.26</code> <code>system</code>   <code>2017.01</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2017b</code> <code>system</code>   <code>2018.02</code> <code>system</code>   <code>2018a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019.01</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>   <code>2021a</code> <code>system</code>"},{"location":"version-specific/supported-software/#ior","title":"IOR","text":"<p>The IOR software is used for benchmarking parallel file systems using POSIX, MPIIO,  or HDF5 interfaces. </p> <p>homepage: https://github.com/hpc/ior</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-mpiio</code> <code>foss/2016a</code>   <code>3.2.1</code>  <code>gompi/2019b</code>   <code>3.3.0</code>  <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#iozone","title":"IOzone","text":"<p>IOzone is a filesystem benchmark tool. The benchmark generates and measures a variety of file  operations. Iozone has been ported to many machines and runs under many operating systems.</p> <p>homepage: http://www.iozone.org/</p>    version toolchain     <code>3.434</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#ipm","title":"IPM","text":"<p>IPM is a portable profiling infrastructure for parallel codes. It provides  a low-overhead profile of application performance and resource utilization  in a parallel program. Communication, computation, and IO are the primary  focus. </p> <p>homepage: https://github.com/nerscadmin/IPM</p>    version toolchain     <code>2.0.6</code> <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iompi/2020a</code>"},{"location":"version-specific/supported-software/#ipopt","title":"Ipopt","text":"<p>IPOPT (Interior Point Optimizer, pronounced Eye-Pea-Opt)  is an open source software package for large-scale nonlinear optimization. </p> <p>homepage: https://projects.coin-or.org/Ipopt</p>    version toolchain     <code>3.12.9</code> <code>foss/2017b</code>   <code>3.12.13</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#ipp","title":"ipp","text":"<p>Intel Integrated Performance Primitives (Intel IPP) is an extensive library  of multicore-ready, highly optimized software functions for multimedia, data processing,  and communications applications. Intel IPP offers thousands of optimized functions  covering frequently used fundamental algorithms.</p> <p>homepage: https://software.intel.com/en-us/articles/intel-ipp/</p>    version toolchain     <code>7.0.5.233</code> <code>system</code>   <code>8.1.0.144</code> <code>system</code>   <code>9.0.1.150</code> <code>system</code>   <code>2017.1.132</code> <code>system</code>"},{"location":"version-specific/supported-software/#ipy","title":"IPy","text":"<p>Class and tools for handling of IPv4 and IPv6 addresses and networks</p> <p>homepage: https://pypi.python.org/pypi/IPy</p>    version toolchain     <code>0.83</code> <code>system</code>"},{"location":"version-specific/supported-software/#ipyparallel","title":"ipyparallel","text":"<p>ipyparallel is a Python package and collection  of CLI scripts for controlling clusters for Jupyter</p> <p>homepage: https://ipyparallel.readthedocs.io</p>    version versionsuffix toolchain     <code>6.2.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#ipyrad","title":"ipyrad","text":"<p>ipyrad is an interactive toolkit for assembly and analysis of restriction-site associated genomic  data sets (e.g., RAD, ddRAD, GBS) for population genetic and phylogenetic studies.</p> <p>homepage: https://ipyrad.readthedocs.io</p>    version versionsuffix toolchain     <code>0.6.15</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#ipython","title":"IPython","text":"<p>IPython provides a rich architecture for interactive computing with:  Powerful interactive shells (terminal and Qt-based).  A browser-based notebook with support for code, text, mathematical expressions, inline plots and other rich media.  Support for interactive data visualization and use of GUI toolkits.  Flexible, embeddable interpreters to load into your own projects.  Easy to use, high performance tools for parallel computing.</p> <p>homepage: https://ipython.org/index.html</p>    version versionsuffix toolchain     <code>3.2.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.2.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>5.0.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>5.0.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>5.1.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>5.1.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>5.2.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>5.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>5.7.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>5.8.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>5.8.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>fosscuda/2018b</code>, <code>fosscuda/2019a</code>, <code>intel/2018b</code>   <code>5.8.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>5.10.0</code> <code>-Python-2.7.18</code> <code>foss/2021b</code>   <code>6.2.1</code> <code>-Python-3.6.4</code> <code>foss/2017a</code>   <code>6.3.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>6.4.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>7.2.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>7.7.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>   <code>7.9.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>7.13.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>7.15.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>7.18.1</code>  <code>GCCcore/10.2.0</code>   <code>7.25.0</code>  <code>GCCcore/10.3.0</code>   <code>7.26.0</code>  <code>GCCcore/11.2.0</code>   <code>8.5.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#iq-tree","title":"IQ-TREE","text":"<p>Efficient phylogenomic software by maximum likelihood</p> <p>homepage: http://www.iqtree.org/</p>    version versionsuffix toolchain     <code>1.5.5</code> <code>-omp-mpi</code> <code>foss/2016a</code>   <code>1.6.6</code>  <code>intel/2018a</code>   <code>1.6.12</code>  <code>foss/2018b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>   <code>2.1.2</code>  <code>foss/2020a</code>, <code>gompi/2020b</code>   <code>2.1.3</code>  <code>gompi/2021a</code>   <code>2.2.1</code>  <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#iris","title":"Iris","text":"<p>A module for improving the insertion sequences of structural variant calls</p> <p>homepage: https://github.com/mkirsche/Iris</p>    version versionsuffix toolchain     <code>1.0.5</code> <code>-Java-15</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#irkernel","title":"IRkernel","text":"<p>The R kernel for the 'Jupyter' environment executes R code   which the front-end (Jupyter Notebook or other front-ends) submits to the   kernel via the network.</p> <p>homepage: https://irkernel.github.io</p>    version versionsuffix toolchain     <code>0.8.15</code> <code>-R-3.4.3-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.1</code> <code>-R-3.6.2-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.1</code> <code>-R-3.6.3-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.2</code> <code>-R-4.0.0-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.2</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>1.3</code> <code>-R-4.2.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ironpython","title":"IronPython","text":"<p>IronPython is an open-source implementation of the Python programming language  which is tightly integrated with the .NET Framework. IronPython can use the .NET Framework and Python libraries, and other .NET languages can use Python code just as easily.</p> <p>homepage: http://ironpython.net/</p>    version toolchain     <code>2.7</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#isa-l","title":"ISA-L","text":"<p>Intelligent Storage Acceleration Library</p> <p>homepage: https://github.com/intel/isa-l</p>    version toolchain     <code>2.30.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#isl","title":"ISL","text":"<p>isl is a library for manipulating sets and relations of integer points bounded by linear constraints.</p> <p>homepage: http://isl.gforge.inria.fr/</p>    version toolchain     <code>0.14</code> <code>GCC/4.9.2</code>   <code>0.15</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>   <code>0.16</code> <code>GCC/4.9.3-2.25</code>   <code>0.17</code> <code>foss/2016a</code>   <code>0.23</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.24</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#isocirc","title":"isoCirc","text":"<p>isoCirc: computational pipeline to identify high-confidence BSJs and full-length circRNA isoforms from isoCirc long-read data </p> <p>homepage: https://github.com/Xinglab/isoCirc</p>    version toolchain     <code>1.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#isonet","title":"IsoNet","text":"<p>IsoNet stands for for ISOtropic reconstructioN of Electron Tomography. It trains deep convolutional neural networks to reconstruct meaningful contents in the mis sing wedge for electron tomography, and to increase signal-to-noise ratio,       using the information learned from the original tomogram. The software requires  tomograms as input. Observing at about 30A resolution, the IsoNet generated      tomograms are largely isotropic.</p> <p>homepage: https://github.com/Heng-Z/IsoNet</p>    version toolchain     <code>0.1_20210822_04_674f67f</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#ispc","title":"ispc","text":"<p>Intel SPMD Program Compilers; An open-source compiler for high-performance  SIMD programming on the CPU. ispc is a compiler for a variant of the C programming language,  with extensions for 'single program, multiple data' (SPMD) programming.  Under the SPMD model, the programmer writes a program that generally appears  to be a regular serial program, though the execution model is actually that  a number of program instances execute in parallel on the hardware.</p> <p>homepage: http://ispc.github.io/ , https://github.com/ispc/ispc/</p>    version toolchain     <code>1.6.0</code> <code>system</code>   <code>1.10.0</code> <code>system</code>   <code>1.12.0</code> <code>system</code>   <code>1.16.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#itac","title":"itac","text":"<p>The Intel Trace Collector is a low-overhead tracing library that performs  event-based tracing in applications. The Intel Trace Analyzer provides a convenient way to monitor application  activities gathered by the Intel Trace Collector through graphical displays. </p> <p>homepage: https://software.intel.com/en-us/intel-trace-analyzer/</p>    version toolchain     <code>8.0.0.011</code> <code>system</code>   <code>8.1.4.045</code> <code>system</code>   <code>9.0.3.051</code> <code>system</code>   <code>2017.1.024</code> <code>system</code>   <code>2018.1.017</code> <code>system</code>   <code>2018.3.022</code> <code>system</code>   <code>2019.2.026</code> <code>system</code>   <code>2019.4.036</code> <code>system</code>   <code>2021.2.0</code> <code>system</code>   <code>2021.5.0</code> <code>system</code>   <code>2021.6.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#itk","title":"ITK","text":"<p>Insight Segmentation and Registration Toolkit (ITK) provides  an extensive suite of software tools for registering and segmenting  multidimensional imaging data.</p> <p>homepage: https://itk.org</p>    version versionsuffix toolchain     <code>4.12.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>4.13.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>4.13.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>4.13.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>4.13.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.13.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>4.13.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.13.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>5.0.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>5.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>5.0b01</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>5.1.2</code>  <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>5.1.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>5.2.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#itpp","title":"itpp","text":"<p>IT++ is a C++ library of mathematical, signal processing and communication  classes and functions. Its main use is in simulation of communication systems and for  performing research in the area of communications.</p> <p>homepage: https://sourceforge.net/projects/itpp/</p>    version toolchain     <code>4.3.1</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#itstool","title":"ITSTool","text":"<p>ITS Tool allows you to translate your XML documents with PO files</p> <p>homepage: http://itstool.org/</p>    version versionsuffix toolchain     <code>2.0.5</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.0.5</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.0.6</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#itsx","title":"ITSx","text":"<p>ITSx: Improved software detection and extraction of ITS1 and ITS2 from ribosomal ITS sequences of fungi and other eukaryotes for use in environmental sequencing.</p> <p>homepage: https://microbiology.se/software/itsx/</p>    version toolchain     <code>1.1.2</code> <code>GCCcore/9.3.0</code>   <code>1.1.3</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#ivar","title":"iVar","text":"<p>iVar is a computational package that contains functions broadly useful for viral amplicon-based sequencing. </p> <p>homepage: https://github.com/andersen-lab/ivar</p>    version toolchain     <code>1.0.1</code> <code>foss/2018b</code>   <code>1.3.1</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#j","title":"J","text":"<p>JAGS - Jansson - Jasmine - JasPer - Java - JavaFX - jax - JAXFrontCE - jbigkit - Jellyfish - jemalloc - jhbuild - JiTCODE - jModelTest - Jorg - joypy - jq - json-c - json-fortran - JSON-GLib - JsonCpp - JUBE - Judy - Julia - JUnit - jupyter-matlab-proxy - jupyter-resource-usage - jupyter-server - jupyter-server-proxy - JupyterHub - JupyterLab - JWM - jxrlib</p>"},{"location":"version-specific/supported-software/#jags","title":"JAGS","text":"<p>JAGS is Just Another Gibbs Sampler.  It is a program for analysis   of Bayesian hierarchical models using Markov Chain Monte Carlo (MCMC) simulation  </p> <p>homepage: http://mcmc-jags.sourceforge.net/</p>    version toolchain     <code>4.2.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>, <code>intel/2017a</code>   <code>4.3.0</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>fosscuda/2020b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#jansson","title":"Jansson","text":"<p>Jansson is a C library for encoding, decoding and manipulating JSON data.  Its main features and design principles are:  * Simple and intuitive API and data model  * Comprehensive documentation  * No dependencies on other libraries  * Full Unicode support (UTF-8)  * Extensive test suite</p> <p>homepage: http://www.digip.org/jansson/</p>    version toolchain     <code>2.6</code> <code>GCC/4.8.3</code>   <code>2.13.1</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>   <code>2.14</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#jasmine","title":"Jasmine","text":"<p>SV Merging Across Samples</p> <p>homepage: https://github.com/mkirsche/Jasmine</p>    version versionsuffix toolchain     <code>1.1.4</code> <code>-Java-15</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#jasper","title":"JasPer","text":"<p>The JasPer Project is an open-source initiative to provide a free  software-based reference implementation of the codec specified in  the JPEG-2000 Part-1 standard. </p> <p>homepage: https://www.ece.uvic.ca/~frodo/jasper/</p>    version toolchain     <code>1.900.1</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2.0.10</code> <code>intel/2016b</code>   <code>2.0.12</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2017a</code>   <code>2.0.14</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.0.16</code> <code>GCCcore/9.3.0</code>   <code>2.0.24</code> <code>GCCcore/10.2.0</code>   <code>2.0.28</code> <code>GCCcore/10.3.0</code>   <code>2.0.33</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>4.0.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#java","title":"Java","text":"<p>Java Platform, Standard Edition (Java SE) lets you develop and deploy Java applications on desktops and servers.</p> <p>homepage: https://java.com/</p>    version versionsuffix toolchain     <code>1.6.0_24</code>  <code>system</code>   <code>1.7.0_10</code>  <code>system</code>   <code>1.7.0_15</code>  <code>system</code>   <code>1.7.0_21</code>  <code>system</code>   <code>1.7.0_40</code>  <code>system</code>   <code>1.7.0_45</code>  <code>system</code>   <code>1.7.0_60</code>  <code>system</code>   <code>1.7.0_75</code>  <code>system</code>   <code>1.7.0_76</code>  <code>system</code>   <code>1.7.0_79</code>  <code>system</code>   <code>1.7.0_80</code>  <code>system</code>   <code>1.8</code>  <code>system</code>   <code>1.8.0_20</code>  <code>system</code>   <code>1.8.0_25</code>  <code>system</code>   <code>1.8.0_31</code>  <code>system</code>   <code>1.8.0_40</code>  <code>system</code>   <code>1.8.0_45</code>  <code>system</code>   <code>1.8.0_60</code>  <code>system</code>   <code>1.8.0_65</code>  <code>system</code>   <code>1.8.0_66</code>  <code>system</code>   <code>1.8.0_72</code>  <code>system</code>   <code>1.8.0_74</code>  <code>system</code>   <code>1.8.0_77</code>  <code>system</code>   <code>1.8.0_92</code>  <code>system</code>   <code>1.8.0_112</code>  <code>system</code>   <code>1.8.0_121</code>  <code>system</code>   <code>1.8.0_131</code>  <code>system</code>   <code>1.8.0_141</code>  <code>system</code>   <code>1.8.0_144</code>  <code>system</code>   <code>1.8.0_152</code>  <code>system</code>   <code>1.8.0_162</code>  <code>system</code>   <code>1.8.0_172</code>  <code>system</code>   <code>1.8.0_181</code>  <code>system</code>   <code>1.8.0_192</code>  <code>system</code>   <code>1.8.0_202</code>  <code>system</code>   <code>1.8.0_212</code>  <code>system</code>   <code>1.8.0_221</code>  <code>system</code>   <code>1.8.0_231</code>  <code>system</code>   <code>1.8.0_241</code>  <code>system</code>   <code>1.8.0_271</code>  <code>system</code>   <code>1.8.0_281</code>  <code>system</code>   <code>1.8.0_292</code> <code>-OpenJDK</code> <code>system</code>   <code>1.8.0_311</code>  <code>system</code>   <code>1.8_191</code> <code>-b26-OpenJDK</code> <code>system</code>   <code>1.8_265</code> <code>-b01-OpenJDK-aarch64</code> <code>system</code>   <code>1.9.0.4</code>  <code>system</code>   <code>8</code>  <code>system</code>   <code>8.345</code>  <code>system</code>   <code>11</code>  <code>system</code>   <code>11.0.2</code>  <code>system</code>   <code>11.0.6</code> <code>-ppc64le</code> <code>system</code>   <code>11.0.8</code> <code>-aarch64</code> <code>system</code>   <code>11.0.16</code>  <code>system</code>   <code>13</code>  <code>system</code>   <code>13.0.2</code>  <code>system</code>   <code>15</code>  <code>system</code>   <code>15.0.1</code>  <code>system</code>   <code>16</code>  <code>system</code>   <code>16.0.1</code>  <code>system</code>   <code>17</code>  <code>system</code>   <code>17.0.1</code>  <code>system</code>   <code>17.0.2</code>  <code>system</code>   <code>17.0.4</code>  <code>system</code>"},{"location":"version-specific/supported-software/#javafx","title":"JavaFX","text":"<p>OpenJFX is an open source, next generation client application platform for desktop,  mobile and embedded systems built on Java </p> <p>homepage: https://openjfx.io/</p>    version versionsuffix toolchain     <code>11.0.2</code> <code>_linux-x64_bin-sdk</code> <code>system</code>"},{"location":"version-specific/supported-software/#jax","title":"jax","text":"<p>Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more</p> <p>homepage: https://pypi.python.org/pypi/jax</p>    version versionsuffix toolchain     <code>0.2.19</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.2.20</code>  <code>foss/2021a</code>   <code>0.2.24</code>  <code>foss/2021a</code>   <code>0.2.24</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.3.9</code>  <code>foss/2021a</code>   <code>0.3.9</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.3.14</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>   <code>0.3.23</code>  <code>foss/2022a</code>   <code>0.3.23</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#jaxfrontce","title":"JAXFrontCE","text":"<p>JAXFront is a technology to generate graphical user interfaces  on multiple channels (Java Swing, HTML, PDF) on the basis of an XML schema.</p> <p>homepage: http://www.jaxfront.org/pages/free_community_edition.html</p>    version toolchain     <code>2.75</code> <code>system</code>"},{"location":"version-specific/supported-software/#jbigkit","title":"jbigkit","text":"<p>JBIG-KIT is a software implementation of the JBIG1 data  compression standard (ITU-T T.82), which was designed for bi-level image  data, such as scanned documents.</p> <p>homepage: https://www.cl.cam.ac.uk/~mgk25/jbigkit/</p>    version toolchain     <code>2.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#jellyfish","title":"Jellyfish","text":"<p>Jellyfish is a tool for fast, memory-efficient counting of k-mers in DNA.</p> <p>homepage: http://www.genome.umd.edu/jellyfish.html</p>    version toolchain     <code>1.1.11</code> <code>foss/2016a</code>, <code>foss/2016b</code>   <code>1.1.12</code> <code>foss/2018b</code>, <code>intel/2018a</code>   <code>2.2.6</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>2.2.10</code> <code>foss/2018b</code>, <code>intel/2018a</code>   <code>2.3.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#jemalloc","title":"jemalloc","text":"<p>jemalloc is a general purpose malloc(3) implementation that emphasizes fragmentation avoidance and  scalable concurrency support.</p> <p>homepage: http://jemalloc.net</p>    version toolchain     <code>4.1.0</code> <code>intel/2016a</code>   <code>4.2.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.2.1</code> <code>intel/2016b</code>   <code>4.5.0</code> <code>intel/2017a</code>   <code>5.0.1</code> <code>GCCcore/6.4.0</code>   <code>5.1.0</code> <code>GCCcore/7.3.0</code>   <code>5.2.0</code> <code>GCCcore/8.2.0</code>   <code>5.2.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>5.3.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#jhbuild","title":"jhbuild","text":"<p>JHBuild allows you to automatically download and compile \u201cmodules\u201d (i.e. source code packages).  Modules are listed in \u201cmodule set\u201d files, which also include dependency information so that JHBuild can discover  what modules need to be built and in what order.</p> <p>homepage: https://wiki.gnome.org/action/show/Projects/Jhbuild</p>    version toolchain     <code>3.15.92</code> <code>GCCcore/4.9.3</code>"},{"location":"version-specific/supported-software/#jitcode","title":"JiTCODE","text":"<p>Just-in-time compilation for ordinary/delay/stochastic differential equations (DDEs)</p> <p>homepage: https://jitcde-common.readthedocs.io</p>    version versionsuffix toolchain     <code>1.3.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.4.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#jmodeltest","title":"jModelTest","text":"<p>jModelTest is a tool to carry out statistical selection of best-fit models of nucleotide substitution.</p> <p>homepage: https://github.com/ddarriba/jmodeltest2</p>    version versionsuffix toolchain     <code>2.1.10r20160303</code> <code>-Java-1.8.0_92</code> <code>system</code>"},{"location":"version-specific/supported-software/#jorg","title":"Jorg","text":"<p>A MAG Circularization Method By Lauren Lui, Torben Nielsen, and Adam Arkin</p> <p>homepage: https://github.com/lmlui/Jorg</p>    version toolchain     <code>1.0.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#joypy","title":"joypy","text":"<p>Joyplots in Python with matplotlib &amp; pandas</p> <p>homepage: https://github.com/sbebo/joypy</p>    version versionsuffix toolchain     <code>0.2.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>0.2.4</code>  <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#jq","title":"jq","text":"<p>jq is a lightweight and flexible command-line JSON processor.</p> <p>homepage: https://stedolan.github.io/jq/</p>    version toolchain     <code>1.5</code> <code>GCCcore/6.4.0</code>   <code>1.6</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#json-c","title":"json-c","text":"<p>JSON-C implements a reference counting object model that allows you to easily construct JSON objects  in C, output them as JSON formatted strings and parse JSON formatted strings back into the C representation of JSON objects.</p> <p>homepage: https://github.com/json-c/json-c</p>    version toolchain     <code>0.15</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>0.16</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#json-fortran","title":"json-fortran","text":"<p>JSON-Fortran: A Modern Fortran JSON API</p> <p>homepage: https://github.com/jacobwilliams/json-fortran</p>    version toolchain     <code>8.3.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#json-glib","title":"JSON-GLib","text":"<p>JSON-GLib implements a full JSON parser and generator using GLib and GObject,  and integrates JSON with GLib data types.</p> <p>homepage: https://wiki.gnome.org/Projects/JsonGlib</p>    version toolchain     <code>1.6.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#jsoncpp","title":"JsonCpp","text":"<p>JsonCpp is a C++ library that allows manipulating JSON values,  including serialization and deserialization to and from strings. It can also preserve existing comment in  unserialization/serialization steps, making it a convenient format to store user input files. </p> <p>homepage: https://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html</p>    version toolchain     <code>0.10.7</code> <code>GCCcore/8.2.0</code>   <code>1.9.3</code> <code>GCCcore/8.3.0</code>   <code>1.9.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.9.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#jube","title":"JUBE","text":"<p>The JUBE benchmarking environment provides a script based framework to easily create benchmark sets, run those sets on different computer systems and evaluate the results. </p> <p>homepage: https://www.fz-juelich.de/jsc/jube</p>    version toolchain     <code>2.0.3</code> <code>system</code>   <code>2.0.4</code> <code>system</code>   <code>2.0.5</code> <code>system</code>   <code>2.4.0</code> <code>system</code>   <code>2.4.1</code> <code>system</code>   <code>2.4.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#judy","title":"Judy","text":"<p>A C library that implements a dynamic array.</p> <p>homepage: http://judy.sourceforge.net/</p>    version toolchain     <code>1.0.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#julia","title":"Julia","text":"<p>Julia is a high-level, high-performance dynamic programming language for numerical computing</p> <p>homepage: https://julialang.org</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.2.0</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.3.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.4.0</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.4.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.4.2</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.5.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.5.3</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.2</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.4</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.5</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.6</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.6.7</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.7.0</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.7.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.7.2</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.7.3</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.8.0</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.8.2</code> <code>-linux-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#junit","title":"JUnit","text":"<p>A programmer-oriented testing framework for Java.</p> <p>homepage: http://sourceforge.net/projects/junit</p>    version versionsuffix toolchain     <code>4.10</code> <code>-Java-1.7.0_10</code> <code>system</code>   <code>4.10</code> <code>-Java-1.7.0_21</code> <code>system</code>   <code>4.11</code> <code>-Java-1.7.0_15</code> <code>system</code>   <code>4.11</code> <code>-Java-1.7.0_21</code> <code>system</code>   <code>4.11</code> <code>-Java-1.7.0_60</code> <code>system</code>   <code>4.11</code> <code>-Java-1.7.0_75</code> <code>system</code>   <code>4.11</code> <code>-Java-1.7.0_79</code> <code>system</code>   <code>4.12</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_112</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_121</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_144</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_152</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_72</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_77</code> <code>system</code>   <code>4.12</code> <code>-Java-1.8.0_92</code> <code>system</code>"},{"location":"version-specific/supported-software/#jupyter-matlab-proxy","title":"jupyter-matlab-proxy","text":"<p>MATLAB Integration for Jupyter</p> <p>homepage: https://github.com/mathworks/jupyter-matlab-proxy</p>    version toolchain     <code>0.3.4</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#jupyter-resource-usage","title":"jupyter-resource-usage","text":"<p>Jupyter Notebook Extension for monitoring your own Resource Usage (memory and/or CPU)</p> <p>homepage: https://github.com/jupyter-server/jupyter-resource-usage</p>    version toolchain     <code>0.6.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#jupyter-server","title":"jupyter-server","text":"<p>The Jupyter Server provides the backend (i.e. the core services, APIs, and REST endpoints) for Jupyter web applications like Jupyter notebook, JupyterLab, and Voila.</p> <p>homepage: https://jupyter.org/</p>    version toolchain     <code>1.21.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#jupyter-server-proxy","title":"jupyter-server-proxy","text":"<p>Jupyter Server Proxy lets you run arbitrary external processes (such as RStudio, Shiny Server, Syncthing, PostgreSQL, Code Server, etc) alongside your notebook server and provide authenticated web access to them     using a path like /rstudio next to others like /lab. Alongside the python package that provides the main functionality, the JupyterLab extension (@jupyterlab/server-proxy) provides buttons in the JupyterLab launcher window to get to RStudio for example.</p> <p>homepage: https://github.com/jupyterhub/jupyter-server-proxy</p>    version toolchain     <code>3.2.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#jupyterhub","title":"JupyterHub","text":"<p>JupyterHub is a multiuser version of the Jupyter (IPython) notebook designed  for centralized deployments in companies, university classrooms and research labs.</p> <p>homepage: https://jupyter.org</p>    version versionsuffix toolchain     <code>0.6.1</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.8.1</code> <code>-Python-3.6.4</code> <code>foss/2017a</code>   <code>1.1.0</code>  <code>GCCcore/10.2.0</code>   <code>1.4.1</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#jupyterlab","title":"JupyterLab","text":"<p>JupyterLab is the next-generation user interface for Project Jupyter offering all the familiar  building blocks of the classic Jupyter Notebook (notebook, terminal, text editor, file browser, rich outputs,  etc.) in a flexible and powerful user interface. JupyterLab will eventually replace the classic Jupyter  Notebook.</p> <p>homepage: https://jupyter.org/</p>    version versionsuffix toolchain     <code>1.2.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.2.8</code>  <code>GCCcore/10.2.0</code>   <code>3.0.16</code>  <code>GCCcore/10.3.0</code>   <code>3.1.6</code>  <code>GCCcore/11.2.0</code>   <code>3.2.8</code>  <code>GCCcore/10.3.0</code>   <code>3.5.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#jwm","title":"JWM","text":"<p>JWM is a light-weight window manager for the X11 Window System.</p> <p>homepage: https://joewing.net/projects/jwm/</p>    version toolchain     <code>2.3.5</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#jxrlib","title":"jxrlib","text":"<p>Open source implementation of jpegxr</p> <p>homepage: https://github.com/4creators/jxrlib</p>    version toolchain     <code>1.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#k","title":"K","text":"<p>KaHIP - Kaiju - Kaleido - Kalign - kallisto - KAT - kbproto - kedro - Kent_tools - Keras - khmer - kim-api - king - KITE - kma - KMC - KmerGenie - KNIME - kpcalg - Kraken - Kraken2 - Kratos - KronaTools - kwant - KWIML - kWIP - KyotoCabinet</p>"},{"location":"version-specific/supported-software/#kahip","title":"KaHIP","text":"<p>The graph partitioning framework KaHIP -- Karlsruhe High Quality Partitioning.</p> <p>homepage: https://kahip.github.io/</p>    version toolchain     <code>3.14</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#kaiju","title":"Kaiju","text":"<p>Kaiju is a program for sensitive taxonomic classification of high-throughput sequencing reads from metagenomic whole genome sequencing experiments</p> <p>homepage: http://kaiju.binf.ku.dk/</p>    version versionsuffix toolchain     <code>1.5.0</code>  <code>intel/2016b</code>   <code>1.7.2</code> <code>-Python-3.7.2</code> <code>iimpi/2019a</code>   <code>1.7.3</code> <code>-Python-3.7.4</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#kaleido","title":"Kaleido","text":"<p>Fast static image export for web-based visualization libraries with zero dependencies</p> <p>homepage: https://github.com/plotly/Kaleido</p>    version toolchain     <code>0.1.0</code> <code>GCCcore/10.2.0</code>   <code>0.2.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#kalign","title":"Kalign","text":"<p>Kalign is a fast multiple sequence alignment program for biological sequences.</p> <p>homepage: https://github.com/TimoLassmann/kalign</p>    version toolchain     <code>2.0.4</code> <code>GCCcore/10.2.0</code>   <code>3.3.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.3.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#kallisto","title":"kallisto","text":"<p>kallisto is a program for quantifying abundances of transcripts from RNA-Seq data, or more generally  of target sequences using high-throughput sequencing reads.</p> <p>homepage: https://pachterlab.github.io/kallisto/</p>    version toolchain     <code>0.42.5</code> <code>foss/2016a</code>   <code>0.43.0</code> <code>intel/2016b</code>   <code>0.43.1</code> <code>foss/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>0.44.0</code> <code>foss/2016b</code>, <code>intel/2018a</code>   <code>0.45.0</code> <code>foss/2018b</code>   <code>0.45.1</code> <code>foss/2019a</code>   <code>0.46.0</code> <code>intel/2019a</code>   <code>0.46.1</code> <code>foss/2019b</code>, <code>iimpi/2020a</code>, <code>iimpi/2020b</code>   <code>0.46.2</code> <code>foss/2020b</code>   <code>0.48.0</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#kat","title":"KAT","text":"<p>The K-mer Analysis Toolkit (KAT) contains a number of tools that analyse and compare K-mer spectra.</p> <p>homepage: https://www.earlham.ac.uk/kat-tools</p>    version versionsuffix toolchain     <code>2.4.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2.4.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#kbproto","title":"kbproto","text":"<p>X.org KBProto protocol headers.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.0.7</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#kedro","title":"kedro","text":"<p>Kedro is an open-source Python framework that applies software engineering best-practice to data and machine-learning pipelines. </p> <p>homepage: https://github.com/quantumblacklabs/kedro</p>    version versionsuffix toolchain     <code>0.16.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#kent_tools","title":"Kent_tools","text":"<p>Kent utilities: collection of tools used by the UCSC genome browser.</p> <p>homepage: https://genome.cse.ucsc.edu/</p>    version versionsuffix toolchain     <code>401</code>  <code>gompi/2019b</code>   <code>411</code>  <code>GCC/10.2.0</code>   <code>418</code>  <code>GCC/10.3.0</code>   <code>422</code>  <code>GCC/11.2.0</code>   <code>20130806</code> <code>-linux.x86_64</code> <code>system</code>   <code>20171107</code> <code>-linux.x86_64</code> <code>system</code>   <code>20180716</code> <code>-linux.x86_64</code> <code>system</code>   <code>20190326</code> <code>-linux.x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#keras","title":"Keras","text":"<p>Keras is a deep learning API written in Python, running on top of the machine learning platform TensorFlow. </p> <p>homepage: https://keras.io/</p>    version versionsuffix toolchain     <code>1.0.8</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.1.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>2.0.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.0.4</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.0.5</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.0.8</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.1.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.1.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>2.1.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.1.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>2.1.3</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.2.0</code> <code>-Python-2.7.14</code> <code>fosscuda/2017b</code>   <code>2.2.0</code> <code>-Python-3.6.3</code> <code>fosscuda/2017b</code>   <code>2.2.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2.2.2</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>2.2.4</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>2.2.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2.2.4</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>2.3.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.3.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.4.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#khmer","title":"khmer","text":"<p>In-memory nucleotide sequence k-mer counting, filtering, graph traversal and more </p> <p>homepage: https://github.com/ged-lab/khmer/</p>    version versionsuffix toolchain     <code>1.4.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.1.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#kim-api","title":"kim-api","text":"<p>Open Knowledgebase of Interatomic Models.  KIM is an API and OpenKIM is a collection of interatomic models (potentials) for atomistic simulations.  This is a library that can be used by simulation programs to get access to the models in the OpenKIM database.  This EasyBuild only installs the API, the models can be installed with the package openkim-models, or the user can install them manually by running     kim-api-collections-management install user MODELNAME or     kim-api-collections-management install user OpenKIM to install them all.  </p> <p>homepage: https://openkim.org/</p>    version toolchain     <code>2.1.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.1.3</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>   <code>2.2.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.3.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#king","title":"king","text":"<p>KING is a toolset that makes use of high-throughput  SNP data typically seen in a genome-wide association study (GWAS) or  a sequencing project. Applications of KING include family relationship  inference and pedigree error checking, quality control, population  substructure identification, forensics, gene mapping, etc.</p> <p>homepage: https://kingrelatedness.com/</p>    version toolchain     <code>2.2.4</code> <code>system</code>   <code>2.2.7</code> <code>system</code>"},{"location":"version-specific/supported-software/#kite","title":"KITE","text":"<p>KITE is an open-source Python/C++ software suite for efficient real-space tight-binding (TB)  simulations of electronic structure and bulk quantum transport properties of disordered systems scalable to  multi billions of atomic orbitals.</p> <p>homepage: https://github.com/quantum-kite/kite</p>    version toolchain     <code>1.1</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#kma","title":"kma","text":"<p>KMA is a mapping method designed to map raw reads directly against redundant databases,  in an ultra-fast manner using seed and extend.</p> <p>homepage: https://bitbucket.org/genomicepidemiology/kma</p>    version toolchain     <code>1.2.22</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#kmc","title":"KMC","text":"<p>KMC is a disk-based programm for counting k-mers from (possibly gzipped) FASTQ/FASTA files.</p> <p>homepage: http://sun.aei.polsl.pl/kmc</p>    version versionsuffix toolchain     <code>3.1.0</code>  <code>foss/2018a</code>, <code>foss/2018b</code>   <code>3.1.1</code> <code>-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>3.1.2rc1</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>3.2.1</code>  <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#kmergenie","title":"KmerGenie","text":"<p>KmerGenie estimates the best k-mer length for genome de novo assembly.</p> <p>homepage: http://kmergenie.bx.psu.edu/</p>    version toolchain     <code>1.7044</code> <code>intel/2017a</code>   <code>1.7048</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#knime","title":"KNIME","text":"<p>KNIME Analytics Platform is the open source software for creating data science applications and services. KNIME stands for KoNstanz Information MinEr.  </p> <p>homepage: https://www.knime.com/</p>    version toolchain     <code>3.6.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#kpcalg","title":"kpcalg","text":"<p>Kernel PC (kPC) algorithm for causal structure learning and  causal inference using graphical models. kPC is a version of PC algorithm that  uses kernel based independence criteria in order to be able to deal with  non-linear relationships and non-Gaussian noise.  Includes pcalg: Functions for causal structure learning and causal inference  using graphical models.</p> <p>homepage: https://cran.r-project.org/package=kpcalg</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#kraken","title":"Kraken","text":"<p>Kraken is a system for assigning taxonomic labels to short DNA sequences,  usually obtained through metagenomic studies. Previous attempts by other  bioinformatics software to accomplish this task have often used sequence  alignment or machine learning techniques that were quite slow, leading to  the development of less sensitive but much faster abundance estimation  programs. Kraken aims to achieve high sensitivity and high speed by  utilizing exact alignments of k-mers and a novel classification algorithm.</p> <p>homepage: https://ccb.jhu.edu/software/kraken/</p>    version versionsuffix toolchain     <code>0.10.5-beta</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>   <code>0.10.5-beta</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>1.0</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>1.1</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>1.1.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.1.1</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#kraken2","title":"Kraken2","text":"<p>Kraken is a system for assigning taxonomic labels to short DNA sequences,  usually obtained through metagenomic studies. Previous attempts by other  bioinformatics software to accomplish this task have often used sequence  alignment or machine learning techniques that were quite slow, leading to  the development of less sensitive but much faster abundance estimation  programs. Kraken aims to achieve high sensitivity and high speed by  utilizing exact alignments of k-mers and a novel classification algorithm.</p> <p>homepage: https://github.com/DerrickWood/kraken2/wiki</p>    version versionsuffix toolchain     <code>2.0.6-beta</code> <code>-Perl-5.26.1</code> <code>foss/2018a</code>   <code>2.0.7-beta</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>2.0.8-beta</code> <code>-Perl-5.30.0</code> <code>gompi/2019b</code>   <code>2.0.9-beta</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>2.0.9-beta</code> <code>-Perl-5.30.2</code> <code>gompi/2020a</code>   <code>2.1.1</code>  <code>gompi/2020b</code>   <code>2.1.2</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#kratos","title":"Kratos","text":"<p>Kratos Multiphysics (A.K.A Kratos) is a framework for building parallel multi-disciplinary  simulation software.</p> <p>homepage: https://www.cimne.com/kratos</p>    version versionsuffix toolchain     <code>6.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#kronatools","title":"KronaTools","text":"<p>Krona Tools is a set of scripts to create Krona charts from  several Bioinformatics tools as well as from text and XML files.</p> <p>homepage: https://github.com/marbl/Krona/wiki/KronaTools</p>    version toolchain     <code>2.7</code> <code>GCCcore/7.3.0</code>   <code>2.7.1</code> <code>GCCcore/8.2.0</code>   <code>2.8</code> <code>GCC/10.3.0</code>, <code>GCCcore/10.2.0</code>   <code>2.8.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#kwant","title":"kwant","text":"<p>Kwant is a free (open source), powerful, and easy to use Python package for   numerical calculations on tight-binding models with a strong focus on quantum transport.</p> <p>homepage: https://kwant-project.org/</p>    version versionsuffix toolchain     <code>1.4.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#kwiml","title":"KWIML","text":"<p>The Kitware Information Macro Library</p> <p>homepage: https://gitlab.kitware.com/utils/kwiml</p>    version toolchain     <code>20180201</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#kwip","title":"kWIP","text":"<p>This software implements a de novo, alignment free measure of sample  genetic dissimilarity which operates upon raw sequencing reads.  It is able to calculate the genetic dissimilarity between samples without any reference genome,  and without assembling one.</p> <p>homepage: https://github.com/kdmurray91/kWIP</p>    version toolchain     <code>0.2.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#kyotocabinet","title":"KyotoCabinet","text":"<p>Kyoto Cabinet is a library of routines for managing a database.</p> <p>homepage: https://fallabs.com/kyotocabinet</p>    version toolchain     <code>1.2.77</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#l","title":"L","text":"<p>L_RNA_scaffolder - LADR - lagrangian-filtering - LAME - LAMMPS - lancet - LAPACK - LAST - LASTZ - lavaan - LBFGS++ - LCov - LDC - lDDT - LeadIT - leidenalg - LEMON - Leptonica - LERC - less - LevelDB - lftp - LHAPDF - libaec - libaio - libarchive - libav - libavif - libBigWig - libbitmask - libcdms - libcerf - libcint - libcircle - libcmaes - libconfig - libcpuset - libcroco - libctl - libdap - libde265 - libdeflate - libdivsufsort - libdrm - libdrs - libdwarf - libedit - libelf - libepoxy - libev - libevent - libexif - libfabric - libfdf - libffcall - libffi - libFLAME - libfontenc - libgcrypt - libgd - libgdiplus - libGDSII - libgeotiff - libgit2 - libglade - libGLU - libglvnd - libgpg-error - libgpuarray - libGridXC - libgtextutils - libharu - libheif - libibmad - libibumad - libICE - libiconv - libidn - libidn2 - Libint - LiBis - libjpeg-turbo - libjxl - LibLZF - libmad - libmatheval - libmaus2 - libmbd - libMemcached - libmicrohttpd - libmo_unpack - libmypaint - libnsl - libobjcryst - libogg - libopus - libosmium - libpci - libpciaccess - libplinkio - libpng - libpsl - libPSML - libpsml - libpsortb - libpspio - libpthread-stubs - libQGLViewer - libreadline - libRmath - librosa - librsb - librsvg - librttopo - libsamplerate - libSBML - libsigc++ - libsigsegv - libSM - libsndfile - libsodium - LibSoup - libspatialindex - libspatialite - libssh - libStatGen - LIBSVM - libtar - libtasn1 - libtecla - LibTIFF - libtirpc - libtool - libtree - libunistring - libunwind - libutempter - LibUUID - libuv - libvdwxc - libvorbis - libwebp - libwpe - libX11 - libXau - libxc - libxcb - libXcursor - libXdamage - libXdmcp - libXext - libXfixes - libXfont - libXft - libXi - libXinerama - libxkbcommon - libxml++ - libxml2 - libxml2-python - libXmu - libXp - libXpm - libXrandr - libXrender - libxslt - libxsmm - libXt - libXxf86vm - libyaml - libzeep - libzip - lie_learn - lifelines - Lighter - liknorm - likwid - limix - LinBox - line_profiler - Lingeling - LittleCMS - LLDB - LLVM - LMDB - LMfit - Lmod - LncLOOM - LocARNA - LoFreq - Log-Log4perl - logaddexp - LOHHLA - Loki - longestrunsubsequence - longread_umi - Longshot - loompy - LPeg - LPJmL - lpsolve - lrslib - LS-PrePost - LSD2 - LSMS - LTR_retriever - LtrDetector - Lua - LuaJIT - LuaJIT2-OpenResty - Lucene-Geo-Gazetteer - LUMPY - LUSCUS - lwgrp - lxml - lynx - lz4 - LZO</p>"},{"location":"version-specific/supported-software/#l_rna_scaffolder","title":"L_RNA_scaffolder","text":"<p>L_RNA_scaffolder is a novel scaffolding tool using long trancriptome reads to scaffold genome fragments</p> <p>homepage: http://www.fishbrowser.org/software/L_RNA_scaffolder/</p>    version versionsuffix toolchain     <code>20141124</code> <code>-Perl-5.24.0</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#ladr","title":"LADR","text":"<p>Prover9, Mace4, and several related programs come packaged in  a system called LADR (Library for Automated Deduction Research). </p> <p>homepage: https://www.cs.unm.edu/~mccune/mace4/download</p>    version toolchain     <code>2009-11A</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#lagrangian-filtering","title":"lagrangian-filtering","text":"<p>Temporal filtering of data in a Lagrangian frame of reference.</p> <p>homepage: https://github.com/angus-g/lagrangian-filtering</p>    version toolchain     <code>0.8.3</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#lame","title":"LAME","text":"<p>LAME is a high quality MPEG Audio Layer III (MP3) encoder licensed under the LGPL.</p> <p>homepage: http://lame.sourceforge.net/</p>    version toolchain     <code>3.99.5</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>3.100</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#lammps","title":"LAMMPS","text":"<p>LAMMPS is a classical molecular dynamics code, and an acronym for Large-scale Atomic/Molecular Massively Parallel Simulator. LAMMPS has potentials for solid-state materials (metals, semiconductors) and soft matter (biomolecules, polymers) and coarse-grained or mesoscopic systems. It can be used to model atoms or, more generically, as a parallel particle simulator at the atomic, meso, or continuum scale. LAMMPS runs on single processors or in parallel using message-passing techniques and a spatial-decomposition of the simulation domain. The code is designed to be easy to modify or extend with new functionality. </p> <p>homepage: https://lammps.sandia.gov/</p>    version versionsuffix toolchain     <code>3Mar2020</code> <code>-Python-3.7.4-kokkos</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3Mar2020</code> <code>-Python-3.8.2-kokkos</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>7Aug2019</code> <code>-Python-3.7.4-kokkos</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>7Aug2019</code> <code>-Python-3.7.4-kokkos-OCTP</code> <code>intel/2019b</code>   <code>23Jun2022</code> <code>-kokkos</code> <code>foss/2021a</code>, <code>foss/2021b</code>   <code>23Jun2022</code> <code>-kokkos-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>23Jun2022</code> <code>-kokkos-CUDA-11.4.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#lancet","title":"lancet","text":"<p>Lancet is a somatic variant caller (SNVs and indels) for short read data.</p> <p>homepage: https://github.com/nygenome/lancet</p>    version toolchain     <code>1.1.0</code> <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#lapack","title":"LAPACK","text":"<p>LAPACK is written in Fortran90 and provides routines for solving systems of  simultaneous linear equations, least-squares solutions of linear systems of equations, eigenvalue  problems, and singular value problems.</p> <p>homepage: https://www.netlib.org/lapack/</p>    version toolchain     <code>3.8.0</code> <code>GCC/7.3.0-2.30</code>   <code>3.9.1</code> <code>GCC/10.2.0</code>   <code>3.10.1</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#last","title":"LAST","text":"<p>LAST finds similar regions between sequences.</p> <p>homepage: http://last.cbrc.jp/</p>    version toolchain     <code>869</code> <code>intel/2017a</code>   <code>914</code> <code>intel/2017b</code>   <code>1045</code> <code>intel/2019b</code>   <code>1179</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#lastz","title":"LASTZ","text":"<p>LASTZ is a program for aligning DNA sequences, a pairwise aligner. Originally designed to handle  sequences the size of human chromosomes and from different species, it is also useful for sequences produced by NGS   sequencing technologies such as Roche 454. </p> <p>homepage: https://www.bx.psu.edu/~rsharris/lastz/</p>    version toolchain     <code>1.02.00</code> <code>foss/2016a</code>   <code>1.04.03</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#lavaan","title":"lavaan","text":"<p>Fit a variety of latent variable models, including confirmatory factor analysis, structural  equation modeling and latent growth curve models.</p> <p>homepage: https://cran.r-project.org/web/packages/lavaan</p>    version versionsuffix toolchain     <code>0.6-2</code> <code>-R-3.4.4</code> <code>intel/2018a</code>   <code>0.6-4.1433</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>0.6-9</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#lbfgs","title":"LBFGS++","text":"<p>A header-only C++ library for L-BFGS and L-BFGS-B algorithms</p> <p>homepage: https://lbfgspp.statr.me</p>    version toolchain     <code>0.1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#lcov","title":"LCov","text":"<p>LCOV - the LTP GCOV extension</p> <p>homepage: http://ltp.sourceforge.net/coverage/lcov.php</p>    version toolchain     <code>1.13</code> <code>GCCcore/7.2.0</code>"},{"location":"version-specific/supported-software/#ldc","title":"LDC","text":"<p>The LLVM-based D Compiler</p> <p>homepage: https://wiki.dlang.org/LDC</p>    version versionsuffix toolchain     <code>0.17.6</code> <code>-x86_64</code> <code>system</code>   <code>1.24.0</code> <code>-x86_64</code> <code>system</code>   <code>1.25.1</code>  <code>GCCcore/10.2.0</code>   <code>1.26.0</code>  <code>GCCcore/10.3.0</code>   <code>1.30.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#lddt","title":"lDDT","text":"<p>The local Distance Difference Test (lDDT) is a superposition-free score which evaluates local distance differences in a model compared to a reference structure.</p> <p>homepage: https://openstructure.org</p>    version toolchain     <code>1.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#leadit","title":"LeadIT","text":"<p>Visually Informed LeadOpt</p> <p>homepage: http://www.biosolveit.de/LeadIT/index.html</p>    version toolchain     <code>2.1.9</code> <code>system</code>"},{"location":"version-specific/supported-software/#leidenalg","title":"leidenalg","text":"<p>Implementation of the Leiden algorithm for various quality functions to be used with igraph in Python.</p> <p>homepage: https://github.com/vtraag/leidenalg</p>    version versionsuffix toolchain     <code>0.8.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.8.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.8.7</code>  <code>foss/2021a</code>   <code>0.8.8</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#lemon","title":"LEMON","text":"<p>LEMON stands for Library for Efficient Modeling and Optimization in Networks.  It is a C++ template library providing efficient implementations of common data structures and algorithms  with focus on combinatorial optimization tasks connected mainly with graphs and networks. </p> <p>homepage: https://lemon.cs.elte.hu</p>    version toolchain     <code>1.3.1</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#leptonica","title":"Leptonica","text":"<p>Leptonica is a collection of pedagogically-oriented open source software  that is broadly useful for image processing and image analysis applications.</p> <p>homepage: http://www.leptonica.org</p>    version toolchain     <code>1.77.0</code> <code>GCCcore/7.3.0</code>   <code>1.78.0</code> <code>GCCcore/8.2.0</code>   <code>1.82.0</code> <code>GCCcore/10.3.0</code>   <code>1.83.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#lerc","title":"LERC","text":"<p>LERC is an open-source image or raster format which supports rapid encoding and decoding for any pixel type (not just RGB or Byte). Users set the maximum compression error per pixel while encoding, so the precision of the original input image is preserved (within user defined error bounds).</p> <p>homepage: https://github.com/Esri/lerc</p>    version toolchain     <code>3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#less","title":"less","text":"<p>Less is a free, open-source file pager. It can be found on most versions of Linux,  Unix and Mac OS, as well as on many other operating systems.</p> <p>homepage: http://www.greenwoodsoftware.com/less/</p>    version toolchain     <code>458</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#leveldb","title":"LevelDB","text":"<p>LevelDB is a fast key-value storage library written at Google that provides an  ordered mapping from string keys to string values.</p> <p>homepage: https://github.com/google/leveldb</p>    version toolchain     <code>1.18</code> <code>foss/2016a</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.20</code> <code>GCCcore/7.3.0</code>   <code>1.22</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#lftp","title":"lftp","text":"<p>LFTP is a sophisticated ftp/http client, and a file transfer program supporting a number of network protocols. Like BASH, it has job control and uses the readline library for input. It has bookmarks, a built-in mirror command, and can transfer several files in parallel. It was designed with reliability in mind.</p> <p>homepage: https://lftp.yar.ru</p>    version toolchain     <code>4.6.4</code> <code>GNU/4.9.3-2.25</code>   <code>4.8.4</code> <code>GCCcore/6.4.0</code>   <code>4.9.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#lhapdf","title":"LHAPDF","text":"<p>Les Houches Parton Density Function  LHAPDF is the standard tool for evaluating parton distribution functions (PDFs) in high-energy physics. </p> <p>homepage: http://lhapdf.hepforge.org/</p>    version toolchain     <code>6.5.3</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#libaec","title":"libaec","text":"<p>Libaec provides fast lossless compression of 1 up to 32 bit wide signed or unsigned integers (samples). The library achieves best results for low entropy data as often encountered in space imaging instrument data or numerical model output from weather or climate simulations. While floating point representations are not directly supported, they can also be efficiently coded by grouping exponents and mantissa.</p> <p>homepage: https://gitlab.dkrz.de/k202009/libaec</p>    version toolchain     <code>1.0.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libaio","title":"libaio","text":"<p>Asynchronous input/output library that uses the kernels native interface.</p> <p>homepage: https://pagure.io/libaio</p>    version toolchain     <code>0.3.111</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.3.112</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libarchive","title":"libarchive","text":"<p>Multi-format archive and compression library </p> <p>homepage: https://www.libarchive.org/</p>    version toolchain     <code>3.4.0</code> <code>GCCcore/8.2.0</code>   <code>3.4.2</code> <code>GCCcore/9.3.0</code>   <code>3.4.3</code> <code>GCCcore/10.2.0</code>   <code>3.5.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.6.1</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libav","title":"libav","text":"<p>Libav is a friendly and community-driven effort to provide its users with  a set of portable, functional and high-performance libraries for dealing  with multimedia formats of all sorts. </p> <p>homepage: https://libav.org/</p>    version toolchain     <code>11.10</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libavif","title":"libavif","text":"<p>This library aims to be a friendly, portable C implementation of the AV1 Image File Format, as described here: https://aomediacodec.github.io/av1-avif/ </p> <p>homepage: https://github.com/AOMediaCodec/libavif</p>    version toolchain     <code>0.9.0</code> <code>foss/2020b</code>   <code>0.11.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#libbigwig","title":"libBigWig","text":"<p>A C library for handling bigWig files</p> <p>homepage: https://github.com/dpryan79/libBigWig</p>    version toolchain     <code>0.4.4</code> <code>GCCcore/8.3.0</code>   <code>0.4.6</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libbitmask","title":"libbitmask","text":"<p>libbitmask provides a convenient, powerful bitmask data type</p> <p>homepage: http://oss.sgi.com/projects/cpusets/</p>    version toolchain     <code>2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#libcdms","title":"libcdms","text":"<p>Climate Data Management System Library.</p> <p>homepage: https://github.com/CDAT/libcdms/</p>    version versionsuffix toolchain     <code>3.1.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#libcerf","title":"libcerf","text":"<p>libcerf is a self-contained numeric library that provides an efficient and  accurate implementation of complex error functions, along with Dawson,  Faddeeva, and Voigt functions. </p> <p>homepage: https://jugit.fz-juelich.de/mlz/libcerf</p>    version toolchain     <code>1.4</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>   <code>1.5</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.7</code> <code>GCCcore/7.3.0</code>   <code>1.11</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.13</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.14</code> <code>GCCcore/10.2.0</code>   <code>1.15</code> <code>GCCcore/10.3.0</code>   <code>1.17</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libcint","title":"libcint","text":"<p>libcint is an open source library for analytical Gaussian integrals.</p> <p>homepage: https://github.com/sunqm/libcint</p>    version toolchain     <code>4.4.0</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>gomkl/2021a</code>   <code>5.1.6</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#libcircle","title":"libcircle","text":"<p>An API to provide an efficient distributed queue on a cluster. libcircle is an  API for distributing embarrassingly parallel workloads using self-stabilization. </p> <p>homepage: https://github.com/hpc/libcircle/</p>    version toolchain     <code>0.2.1-rc.1</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>0.3</code> <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>iimpi/2020a</code>"},{"location":"version-specific/supported-software/#libcmaes","title":"libcmaes","text":"<p>libcmaes is a multithreaded C++11 library for high performance blackbox stochastic optimization using the CMA-ES algorithm for Covariance Matrix Adaptation Evolution Strategy.</p> <p>homepage: http://beniz.github.io/libcmaes/</p>    version toolchain     <code>0.9.5</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#libconfig","title":"libconfig","text":"<p>Libconfig is a simple library for processing structured configuration files</p> <p>homepage: https://hyperrealm.github.io/libconfig</p>    version toolchain     <code>1.5</code> <code>intel/2016b</code>   <code>1.7.1</code> <code>GCCcore/6.4.0</code>   <code>1.7.2</code> <code>GCCcore/7.3.0</code>   <code>1.7.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libcpuset","title":"libcpuset","text":"<p>libcpuset provides full access to cpuset capabilities</p> <p>homepage: http://oss.sgi.com/projects/cpusets/</p>    version toolchain     <code>1.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#libcroco","title":"libcroco","text":"<p>Libcroco is a standalone css2 parsing and manipulation library.</p> <p>homepage: https://github.com/GNOME/libcroco</p>    version toolchain     <code>0.6.11</code> <code>intel/2016a</code>   <code>0.6.13</code> <code>GCC/10.2.0</code>, <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#libctl","title":"libctl","text":"<p>libctl is a free Guile-based library implementing flexible control files for scientific simulations.</p> <p>homepage: https://libctl.readthedocs.io/en/latest/</p>    version toolchain     <code>3.2.2</code> <code>foss/2016a</code>   <code>4.0.0</code> <code>intel/2020a</code>   <code>4.1.3</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libdap","title":"libdap","text":"<p>A C++ SDK which contains an implementation of DAP 2.0 and  DAP4.0. This includes both Client- and Server-side support classes.</p> <p>homepage: https://www.opendap.org/software/libdap</p>    version versionsuffix toolchain     <code>3.18.1</code>  <code>intel/2017a</code>   <code>3.18.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.19.1</code>  <code>GCCcore/6.4.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.20.3</code>  <code>GCCcore/7.3.0</code>   <code>3.20.4</code>  <code>GCCcore/8.2.0</code>   <code>3.20.6</code>  <code>GCCcore/8.3.0</code>   <code>3.20.7</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>3.20.8</code>  <code>GCCcore/11.2.0</code>   <code>3.20.11</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libde265","title":"libde265","text":"<p>libde265 is an open source implementation of the h.265 video codec</p> <p>homepage: https://github.com/strukturag/libde265</p>    version toolchain     <code>1.0.8</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#libdeflate","title":"libdeflate","text":"<p>Heavily optimized library for DEFLATE/zlib/gzip compression and decompression.</p> <p>homepage: https://github.com/ebiggers/libdeflate</p>    version toolchain     <code>1.5</code> <code>GCCcore/7.3.0</code>   <code>1.7</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.8</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.10</code> <code>GCCcore/11.3.0</code>   <code>1.15</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libdivsufsort","title":"libdivsufsort","text":"<p>libdivsufsort is a software library that implements a lightweight suffix  array construction algorithm.</p> <p>homepage: https://github.com/y-256/libdivsufsort</p>    version toolchain     <code>2.0.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#libdrm","title":"libdrm","text":"<p>Direct Rendering Manager runtime library.</p> <p>homepage: https://dri.freedesktop.org</p>    version toolchain     <code>2.4.67</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.4.68</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.4.70</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.4.76</code> <code>GCCcore/6.3.0</code>, <code>intel/2017a</code>   <code>2.4.88</code> <code>GCCcore/6.4.0</code>   <code>2.4.91</code> <code>GCCcore/6.4.0</code>   <code>2.4.92</code> <code>GCCcore/7.3.0</code>   <code>2.4.97</code> <code>GCCcore/8.2.0</code>   <code>2.4.99</code> <code>GCCcore/8.3.0</code>   <code>2.4.100</code> <code>GCCcore/9.3.0</code>   <code>2.4.102</code> <code>GCCcore/10.2.0</code>   <code>2.4.106</code> <code>GCCcore/10.3.0</code>   <code>2.4.107</code> <code>GCCcore/11.2.0</code>   <code>2.4.110</code> <code>GCCcore/11.3.0</code>   <code>2.4.114</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libdrs","title":"libdrs","text":"<p>PCMDI's old DRS format implementation</p> <p>homepage: https://github.com/CDAT/libdrs/</p>    version toolchain     <code>3.1.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#libdwarf","title":"libdwarf","text":"<p>The DWARF Debugging Information Format is of interest to programmers working on compilers and debuggers (and anyone interested in reading or writing DWARF information))</p> <p>homepage: https://www.prevanders.net/dwarf.html</p>    version toolchain     <code>0.4.1</code> <code>GCCcore/11.3.0</code>   <code>20140805</code> <code>GCC/4.9.2</code>   <code>20150310</code> <code>GCC/4.9.2</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>   <code>20190529</code> <code>GCCcore/8.2.0</code>   <code>20201201</code> <code>GCCcore/10.2.0</code>   <code>20210305</code> <code>GCCcore/10.3.0</code>   <code>20210528</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libedit","title":"libedit","text":"<p>This BSD-style licensed command line editor library provides generic line editing, history, and tokenization functions, similar to those found in GNU Readline. </p> <p>homepage: https://thrysoee.dk/editline/</p>    version toolchain     <code>20150325</code> <code>GNU/4.9.3-2.25</code>   <code>20180525</code> <code>GCCcore/6.4.0</code>   <code>20191231</code> <code>GCCcore/9.3.0</code>   <code>20210910</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libelf","title":"libelf","text":"<p>libelf is a free ELF object file access library</p> <p>homepage: https://directory.fsf.org/wiki/Libelf</p>    version toolchain     <code>0.8.13</code> <code>GCC/4.8.3</code>, <code>GCC/4.9.2</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libepoxy","title":"libepoxy","text":"<p>Epoxy is a library for handling OpenGL function pointer management for you</p> <p>homepage: https://github.com/anholt/libepoxy</p>    version toolchain     <code>1.5.2</code> <code>foss/2018a</code>   <code>1.5.3</code> <code>GCCcore/8.2.0</code>, <code>fosscuda/2018b</code>   <code>1.5.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.5.8</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.5.10</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libev","title":"libev","text":"<p>A full-featured and high-performance (see benchmark) event loop that is loosely modelled after libevent, but without its limitations and bugs. It is used in GNU Virtual Private Ethernet, rxvt-unicode, auditd, the Deliantra MORPG Server and Client, and many other programs.</p> <p>homepage: http://software.schmorp.de/pkg/libev.html</p>    version toolchain     <code>4.33</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#libevent","title":"libevent","text":"<p>The libevent API provides a mechanism to execute a callback function when a specific  event occurs on a file descriptor or after a timeout has been reached.  Furthermore, libevent also support callbacks due to signals or regular timeouts.</p> <p>homepage: http://libevent.org/</p>    version toolchain     <code>2.0.22</code> <code>GCC/4.9.2</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GNU/4.9.3-2.25</code>   <code>2.1.8</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>system</code>   <code>2.1.11</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.1.12</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#libexif","title":"libexif","text":"<p>A library for parsing, editing, and saving EXIF data.</p> <p>homepage: https://libexif.github.io/</p>    version toolchain     <code>0.6.24</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libfabric","title":"libfabric","text":"<p>Libfabric is a core component of OFI. It is the library that defines and exports the user-space API of OFI, and is typically the only software that applications deal with directly. It works in conjunction with provider libraries, which are often integrated directly into libfabric. </p> <p>homepage: https://ofiwg.github.io/libfabric/</p>    version toolchain     <code>1.9.1</code> <code>GCCcore/9.3.0</code>   <code>1.10.1</code> <code>GCCcore/9.3.0</code>   <code>1.11.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.12.1</code> <code>GCCcore/10.3.0</code>   <code>1.13.0</code> <code>GCCcore/11.2.0</code>   <code>1.13.1</code> <code>GCCcore/11.2.0</code>   <code>1.13.2</code> <code>GCCcore/11.2.0</code>   <code>1.15.1</code> <code>GCCcore/11.3.0</code>   <code>1.16.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libfdf","title":"libfdf","text":"<p>LibFDF provides a Fortran API to parse files in the  Flexible Data Format (FDF).</p> <p>homepage: https://launchpad.net/libfdf</p>    version versionsuffix toolchain     <code>0.2.2</code> <code>-serial</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#libffcall","title":"libffcall","text":"<p>GNU Libffcall is a collection of four libraries which can be used to build  foreign function call interfaces in embedded interpreters </p> <p>homepage: https://www.gnu.org/software/libffcall/</p>    version toolchain     <code>1.13</code> <code>GCCcore/6.4.0</code>   <code>2.2</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.4</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#libffi","title":"libffi","text":"<p>The libffi library provides a portable, high level programming interface to  various calling conventions. This allows a programmer to call any function  specified by a call interface description at run-time.</p> <p>homepage: https://sourceware.org/libffi/</p>    version toolchain     <code>3.2.1</code> <code>GCC/4.9.2</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>system</code>   <code>3.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>3.4.2</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>3.4.4</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libflame","title":"libFLAME","text":"<p>libFLAME is a portable library for dense matrix computations, providing much of the functionality present in LAPACK.</p> <p>homepage: https://developer.amd.com/amd-cpu-libraries/blas-library/#libflame</p>    version versionsuffix toolchain     <code>1.0</code> <code>-amd</code> <code>GCC/7.3.0-2.30</code>   <code>2.2</code> <code>-amd</code> <code>GCCcore/9.3.0</code>   <code>5.2.0</code>  <code>GCC/10.3.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libfontenc","title":"libfontenc","text":"<p>X11 font encoding library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs/</p>    version toolchain     <code>1.1.3</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libgcrypt","title":"libgcrypt","text":"<p>Libgcrypt is a general purpose cryptographic library originally based on code from GnuPG</p> <p>homepage: https://gnupg.org/related_software/libgcrypt/index.html</p>    version toolchain     <code>1.6.5</code> <code>intel/2016a</code>   <code>1.8.4</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.8.5</code> <code>GCCcore/8.3.0</code>   <code>1.9.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.9.3</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libgd","title":"libgd","text":"<p>GD is an open source code library for the dynamic creation of images by programmers.</p> <p>homepage: https://libgd.github.io</p>    version toolchain     <code>2.1.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.2.3</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.2.4</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2017a</code>   <code>2.2.5</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.3.1</code> <code>GCCcore/10.3.0</code>   <code>2.3.3</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libgdiplus","title":"libgdiplus","text":"<p>Libgdiplus is the Mono library that provides a GDI+-compatible  API on non-Windows operating systems.</p> <p>homepage: https://www.mono-project.com/docs/gui/libgdiplus</p>    version toolchain     <code>6.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libgdsii","title":"libGDSII","text":"<p>libGDSII is a C++ library for working with GDSII binary data files,  intended primarily for use with the computational electromagnetism codes  scuff-em and meep but sufficiently general-purpose to allow other uses as well.</p> <p>homepage: https://github.com/HomerReid/libGDSII</p>    version toolchain     <code>0.21</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libgeotiff","title":"libgeotiff","text":"<p>Library for reading and writing coordinate system information from/to GeoTIFF files</p> <p>homepage: https://directory.fsf.org/wiki/Libgeotiff</p>    version toolchain     <code>1.4.2</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.5.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.6.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.7.0</code> <code>GCCcore/11.2.0</code>   <code>1.7.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libgit2","title":"libgit2","text":"<p>libgit2 is a portable, pure C implementation of the Git core methods provided as a re-entrant linkable library with a solid API, allowing you to write native speed custom Git applications in any language which supports C bindings.</p> <p>homepage: https://libgit2.org/</p>    version toolchain     <code>1.0.0</code> <code>GCCcore/8.3.0</code>   <code>1.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.1.1</code> <code>GCCcore/11.2.0</code>   <code>1.4.3</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libglade","title":"libglade","text":"<p>Libglade is a library for constructing user interfaces dynamically from XML descriptions.</p> <p>homepage: https://developer.gnome.org/libglade/</p>    version toolchain     <code>2.6.4</code> <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#libglu","title":"libGLU","text":"<p>The OpenGL Utility Library (GLU) is a computer graphics library for OpenGL. </p> <p>homepage: https://mesa.freedesktop.org/archive/glu/</p>    version versionsuffix toolchain     <code>9.0.0</code>  <code>GCCcore/8.2.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>fosscuda/2018b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intelcuda/2017b</code>, <code>iomkl/2018a</code>   <code>9.0.0</code> <code>-Mesa-11.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>9.0.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>9.0.2</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libglvnd","title":"libglvnd","text":"<p>libglvnd is a vendor-neutral dispatch layer for arbitrating OpenGL API calls between multiple vendors.</p> <p>homepage: https://gitlab.freedesktop.org/glvnd/libglvnd</p>    version toolchain     <code>1.2.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.3.2</code> <code>GCCcore/10.2.0</code>   <code>1.3.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.4.0</code> <code>GCCcore/11.3.0</code>   <code>1.6.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libgpg-error","title":"libgpg-error","text":"<p>Libgpg-error is a small library that defines common error values for all GnuPG components.</p> <p>homepage: https://gnupg.org/related_software/libgpg-error/index.html</p>    version toolchain     <code>1.21</code> <code>intel/2016a</code>   <code>1.35</code> <code>GCCcore/7.3.0</code>   <code>1.36</code> <code>GCCcore/8.2.0</code>   <code>1.38</code> <code>GCCcore/8.3.0</code>   <code>1.41</code> <code>GCCcore/10.2.0</code>   <code>1.42</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.46</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libgpuarray","title":"libgpuarray","text":"<p>Library to manipulate tensors on the GPU.</p> <p>homepage: http://deeplearning.net/software/libgpuarray/</p>    version versionsuffix toolchain     <code>0.7.5</code> <code>-Python-2.7.14</code> <code>fosscuda/2017b</code>, <code>intelcuda/2017b</code>   <code>0.7.5</code> <code>-Python-3.6.3</code> <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.7.6</code>  <code>fosscuda/2019a</code>, <code>fosscuda/2020b</code>   <code>0.7.6</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>0.7.6</code> <code>-Python-3.6.6</code> <code>fosscuda/2018b</code>   <code>0.7.6</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#libgridxc","title":"libGridXC","text":"<p>A library to compute the exchange and correlation energy  and potential in spherical (i.e. atoms) or periodic systems.</p> <p>homepage: https://gitlab.com/siesta-project/libraries/libgridxc</p>    version toolchain     <code>0.8.5</code> <code>iimpi/2019b</code>   <code>0.9.6</code> <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>, <code>iimpi/2021b</code>"},{"location":"version-specific/supported-software/#libgtextutils","title":"libgtextutils","text":"<p>ligtextutils is a dependency of fastx-toolkit and is provided via the same upstream</p> <p>homepage: http://hannonlab.cshl.edu/fastx_toolkit/</p>    version toolchain     <code>0.7</code> <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#libharu","title":"libharu","text":"<p>libHaru is a free, cross platform, open source library for generating PDF files.</p> <p>homepage: http://libharu.org/</p>    version toolchain     <code>2.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2017a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#libheif","title":"libheif","text":"<p>libheif is an HEIF and AVIF file format decoder and encoder</p> <p>homepage: https://github.com/strukturag/libheif</p>    version toolchain     <code>1.12.0</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#libibmad","title":"libibmad","text":"<p>libibmad is a convenience library to encode, decode, and dump IB MAD packets. It  is implemented on top of and in conjunction with libibumad (the umad kernel  interface library.)</p> <p>homepage: http://www.openfabrics.org</p>    version toolchain     <code>1.3.12</code> <code>GCC/4.9.3-2.25</code>"},{"location":"version-specific/supported-software/#libibumad","title":"libibumad","text":"<p>libibumad is the umad kernel interface library.</p> <p>homepage: http://www.openfabrics.org</p>    version toolchain     <code>1.3.10.2</code> <code>GCC/4.9.3-2.25</code>"},{"location":"version-specific/supported-software/#libice","title":"libICE","text":"<p>X Inter-Client Exchange library for freedesktop.org</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.0.9</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libiconv","title":"libiconv","text":"<p>Libiconv converts from one character encoding to another through Unicode conversion</p> <p>homepage: https://www.gnu.org/software/libiconv</p>    version toolchain     <code>1.15</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>1.16</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.17</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libidn","title":"libidn","text":"<p>GNU Libidn is a fully documented implementation of the Stringprep, Punycode and IDNA specifications. Libidn's purpose is to encode and decode internationalized domain names.</p> <p>homepage: http://www.gnu.org/software/libidn</p>    version toolchain     <code>1.32</code> <code>GCCcore/5.4.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>   <code>1.34</code> <code>GCCcore/6.4.0</code>   <code>1.35</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.36</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.38</code> <code>GCCcore/11.2.0</code>   <code>1.41</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libidn2","title":"libidn2","text":"<p>Libidn2 implements the revised algorithm for internationalized domain names called IDNA2008/TR46.</p> <p>homepage: http://www.gnu.org/software/libidn2</p>    version toolchain     <code>2.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.3.2</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libint","title":"Libint","text":"<p>Libint library is used to evaluate the traditional (electron repulsion) and certain novel two-body  matrix elements (integrals) over Cartesian Gaussian functions used in modern atomic and molecular theory.</p> <p>homepage: https://github.com/evaleev/libint</p>    version versionsuffix toolchain     <code>1.1.4</code>  <code>intel/2016a</code>   <code>1.1.6</code>  <code>GCC/8.2.0-2.31.1</code>, <code>foss/2016b</code>, <code>foss/2018a</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2016b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2020a</code>   <code>2.0.3</code>  <code>foss/2018b</code>, <code>gompi/2019a</code>, <code>intel/2018b</code>   <code>2.1.0</code>  <code>intel/2016b</code>   <code>2.4.2</code>  <code>intel/2018a</code>   <code>2.5.0</code>  <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>2.6.0</code> <code>-lmax-6-cp2k</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>gompi/2020a</code>, <code>iccifort/2020.4.304</code>, <code>iimpi/2020a</code>, <code>iimpi/2021a</code>   <code>2.7.2</code> <code>-lmax-6-cp2k</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#libis","title":"LiBis","text":"<p>An ultrasensitive alignment method for low input bisulfite sequencing</p> <p>homepage: https://github.com/Dangertrip/LiBis</p>    version versionsuffix toolchain     <code>20200428</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#libjpeg-turbo","title":"libjpeg-turbo","text":"<p>libjpeg-turbo is a fork of the original IJG libjpeg which uses SIMD to  accelerate baseline JPEG compression and decompression. libjpeg is a library  that implements JPEG image encoding, decoding and transcoding. </p> <p>homepage: https://sourceforge.net/projects/libjpeg-turbo/</p>    version versionsuffix toolchain     <code>1.4.2</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>   <code>1.4.2</code> <code>-NASM-2.12.01</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.5.0</code>  <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.5.1</code>  <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.5.2</code>  <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>1.5.3</code>  <code>GCCcore/6.4.0</code>   <code>2.0.0</code>  <code>GCCcore/7.3.0</code>   <code>2.0.2</code>  <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>2.0.3</code>  <code>GCCcore/8.3.0</code>   <code>2.0.4</code>  <code>GCCcore/9.3.0</code>   <code>2.0.5</code>  <code>GCCcore/10.2.0</code>   <code>2.0.6</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.1.3</code>  <code>GCCcore/11.3.0</code>   <code>2.1.4</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libjxl","title":"libjxl","text":"<p>JPEG XL image format reference implementation</p> <p>homepage: https://github.com/libjxl/libjxl</p>    version toolchain     <code>0.5</code> <code>GCCcore/10.3.0</code>   <code>0.6.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#liblzf","title":"LibLZF","text":"<p>LibLZF is a very small data compression library. It consists of only two .c and two .h files and is very easy to incorporate into your own programs. The compression algorithm is very, very fast, yet still written in portable C.</p> <p>homepage: http://oldhome.schmorp.de/marc/liblzf.html</p>    version toolchain     <code>3.4</code> <code>GCCcore/10.2.0</code>   <code>3.6</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#libmad","title":"libmad","text":"<p>MAD is a high-quality MPEG audio decoder.</p> <p>homepage: https://www.underbit.com/products/mad/</p>    version toolchain     <code>0.15.1b</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libmatheval","title":"libmatheval","text":"<p>GNU libmatheval is a library (callable from C and Fortran) to parse  and evaluate symbolic expressions input as text.</p> <p>homepage: http://www.gnu.org/software/libmatheval/</p>    version toolchain     <code>1.1.11</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#libmaus2","title":"libmaus2","text":"<p>libmaus2 is a collection of data structures and algorithms.</p> <p>homepage: https://github.com/gt1/libmaus2</p>    version toolchain     <code>2.0.453</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#libmbd","title":"libmbd","text":"<p>Libmbd implements the many-body dispersion (MBD) method in several programming languages and frameworks:   - The Fortran implementation is the reference, most advanced implementation, with support for analytical     gradients and distributed parallelism, and additional functionality beyond the MBD method itself.     It provides a low-level and a high-level Fortran API, as well as a C API. Furthermore, Python bindings     to the C API are provided.  - The Python/Numpy implementation is intended for prototyping, and as a high-level language reference.  - The Python/Tensorflow implementation is an experiment that should enable rapid prototyping of machine     learning applications with MBD.  The Python-based implementations as well as Python bindings to the Libmbd C API are accessible from the  Python package called Pymbd. </p> <p>homepage: https://libmbd.github.io/index.html</p>    version toolchain     <code>0.10.4</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>intel/2020b</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#libmemcached","title":"libMemcached","text":"<p>libMemcached is an open source C/C++ client library and tools for  the memcached server (http://danga.com/memcached). It has been designed to be light  on memory usage, thread safe, and provide full access to server side methods.</p> <p>homepage: https://memcached.org</p>    version toolchain     <code>1.0.18</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libmicrohttpd","title":"libmicrohttpd","text":"<p>GNU libmicrohttpd is a small C library that is supposed to make it easy to run  an HTTP server as part of another application. </p> <p>homepage: https://www.gnu.org/software/libmicrohttpd/</p>    version toolchain     <code>0.9.71</code> <code>GCCcore/9.3.0</code>   <code>0.9.73</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#libmo_unpack","title":"libmo_unpack","text":"<p>A library for handling the WGDOS and RLE compression schemes used in UM files.</p> <p>homepage: https://github.com/SciTools/libmo_unpack</p>    version toolchain     <code>3.1.2</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libmypaint","title":"libmypaint","text":"<p>libmypaint, a.k.a. \"brushlib\", is a library for making brushstrokes which is used by MyPaint  and other projects</p> <p>homepage: https://github.com/mypaint/libmypaint</p>    version toolchain     <code>1.6.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#libnsl","title":"libnsl","text":"<p>The libnsl package contains the public client interface for NIS(YP).</p> <p>homepage: https://github.com/thkukuk/libnsl</p>    version toolchain     <code>1.3.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#libobjcryst","title":"libobjcryst","text":"<p>ObjCryst++ is Object-Oriented Crystallographic Library for C++</p> <p>homepage: https://github.com/diffpy/libobjcryst</p>    version toolchain     <code>2017.2.3</code> <code>intel/2020a</code>   <code>2021.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#libogg","title":"libogg","text":"<p>Ogg is a multimedia container format, and the native file and stream format for the Xiph.org multimedia codecs.</p> <p>homepage: https://xiph.org/ogg/</p>    version toolchain     <code>1.3.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.3.5</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libopus","title":"libopus","text":"<p>Opus is a totally open, royalty-free, highly versatile audio codec. Opus is unmatched for interactive  speech and music transmission over the Internet, but is also intended for storage and streaming applications. It is  standardized by the Internet Engineering Task Force (IETF) as RFC 6716 which incorporated technology from Skype\u2019s  SILK codec and Xiph.Org\u2019s CELT codec.</p> <p>homepage: https://www.opus-codec.org/</p>    version toolchain     <code>1.3.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libosmium","title":"libosmium","text":"<p>A fast and flexible C++ library for working with OpenStreetMap data.  The Osmium Library has extensive support for all types of OSM entities:  nodes, ways, relations, and changesets.  It allows reading from and writing to OSM files in XML and PBF formats, including change files and full history files.  Osmium can store OSM data in memory and on disk in various formats and using various indexes.  Its easy to use handler interface allows you to quickly write data filtering and conversion functions.  Osmium can create WKT, WKB, OGR, GEOS and GeoJSON geometries for easy conversion into many GIS formats  and it can assemble multipolygons from ways and relations.</p> <p>homepage: https://osmcode.org/libosmium/</p>    version versionsuffix toolchain     <code>2.15.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.15.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#libpci","title":"libpci","text":"<p>Library for portable access to PCI bus configuration registers from PCI Utils.</p> <p>homepage: https://github.com/pciutils/pciutils</p>    version toolchain     <code>3.7.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libpciaccess","title":"libpciaccess","text":"<p>Generic PCI access library.</p> <p>homepage: https://cgit.freedesktop.org/xorg/lib/libpciaccess/</p>    version toolchain     <code>0.13.4</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>0.14</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.16</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>0.17</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libplinkio","title":"libplinkio","text":"<p>A small C and Python library for reading PLINK genotype files.</p> <p>homepage: https://github.com/mfranberg/libplinkio</p>    version toolchain     <code>0.9.8</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libpng","title":"libpng","text":"<p>libpng is the official PNG reference library</p> <p>homepage: http://www.libpng.org/pub/png/libpng.html</p>    version toolchain     <code>1.2.58</code> <code>system</code>   <code>1.2.59</code> <code>system</code>   <code>1.5.30</code> <code>system</code>   <code>1.6.21</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>1.6.23</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.6.24</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.6.26</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.6.27</code> <code>intel/2016b</code>   <code>1.6.28</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>gimkl/2017a</code>   <code>1.6.29</code> <code>GCCcore/6.3.0</code>   <code>1.6.32</code> <code>GCCcore/6.4.0</code>   <code>1.6.34</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.6.36</code> <code>GCCcore/8.2.0</code>   <code>1.6.37</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.6.38</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libpsl","title":"libpsl","text":"<p>C library for the Public Suffix List</p> <p>homepage: https://rockdaboot.github.io/libpsl</p>    version toolchain     <code>0.20.2</code> <code>GCCcore/7.3.0</code>   <code>0.21.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.21.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libpsml","title":"libPSML","text":"<p>A library to handle PSML, the pseudopotential markup language.</p> <p>homepage: https://launchpad.net/libpsml</p>    version toolchain     <code>1.1.8</code> <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#libpsml_1","title":"libpsml","text":"<p>LibPSML provides a Fortran API to parse files in the  PSeudopotential Markup Language (PSML) format.</p> <p>homepage: https://launchpad.net/libpsml</p>    version toolchain     <code>1.1.7</code> <code>foss/2016b</code>, <code>foss/2017a</code>   <code>1.1.10</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#libpsortb","title":"libpsortb","text":"<p>PSORT family of programs for subcellular localization prediction as well as other datasets and  resources relevant to localization prediction.</p> <p>homepage: http://psort.org/</p>    version toolchain     <code>1.0</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#libpspio","title":"libpspio","text":"<p>libpspio is a library to read and write pseudopotentials in multiple formats.</p> <p>homepage: https://gitlab.e-cam2020.eu/esl/pspio/</p>    version toolchain     <code>0.2.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#libpthread-stubs","title":"libpthread-stubs","text":"<p>The X protocol C-language Binding (XCB) is a replacement for Xlib featuring  a small footprint, latency hiding, direct access to the protocol, improved  threading support, and extensibility. </p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.3</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>0.4</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libqglviewer","title":"libQGLViewer","text":"<p>libQGLViewer is a C++ library based on Qt that eases the creation of OpenGL 3D viewers.</p> <p>homepage: http://libqglviewer.com/</p>    version versionsuffix toolchain     <code>2.6.3</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.3</code> <code>-Mesa-11.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.6.4</code>  <code>intel/2016b</code>   <code>2.7.1</code>  <code>intel/2018a</code>   <code>2.8.0</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#libreadline","title":"libreadline","text":"<p>The GNU Readline library provides a set of functions for use by applications  that allow users to edit command lines as they are typed in. Both Emacs and  vi editing modes are available. The Readline library includes additional  functions to maintain a list of previously-entered command lines, to recall  and perhaps reedit those lines, and perform csh-like history expansion on  previous commands. </p> <p>homepage: https://tiswww.case.edu/php/chet/readline/rltop.html</p>    version toolchain     <code>6.3</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>7.0</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>8.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>8.1</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>8.1.2</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>   <code>8.2</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#librmath","title":"libRmath","text":"<p>The routines supporting the distribution and special functions in R and a few others are declared  in C header file Rmath.h. These can be compiled into a standalone library for linking to other applications.</p> <p>homepage: https://cran.r-project.org/doc/manuals/r-release/R-admin.html#The-standalone-Rmath-library</p>    version toolchain     <code>3.6.0</code> <code>foss/2018b</code>   <code>4.0.0</code> <code>GCCcore/9.3.0</code>   <code>4.1.0</code> <code>GCCcore/10.2.0</code>   <code>4.1.2</code> <code>GCCcore/11.2.0</code>   <code>4.2.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#librosa","title":"librosa","text":"<p>Python module for audio and music processing</p> <p>homepage: https://librosa.github.io</p>    version versionsuffix toolchain     <code>0.7.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#librsb","title":"librsb","text":"<p>A shared memory parallel sparse matrix computations library for the Recursive Sparse Blocks format</p> <p>homepage: https://sourceforge.net/projects/librsb/</p>    version toolchain     <code>1.2.0.9</code> <code>GCC/10.2.0</code>   <code>1.2.0.10</code> <code>GCC/10.2.0</code>   <code>1.2.0.11</code> <code>GCC/10.2.0</code>   <code>1.3.0.0</code> <code>GCC/10.2.0</code>   <code>1.3.0.1</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#librsvg","title":"librsvg","text":"<p>Librsvg is a library to render SVG files using cairo.</p> <p>homepage: https://wiki.gnome.org/Projects/LibRsvg</p>    version toolchain     <code>2.40.15</code> <code>intel/2016a</code>   <code>2.48.4</code> <code>foss/2019a</code>   <code>2.51.2</code> <code>GCCcore/10.3.0</code>   <code>2.52.8</code> <code>GCCcore/11.2.0</code>   <code>2.55.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#librttopo","title":"librttopo","text":"<p>The RT Topology Library exposes an API to create and manage standard (ISO 13249 aka SQL/MM) topologies using user-provided data stores.</p> <p>homepage: https://git.osgeo.org/gitea/rttopo/librttopo</p>    version toolchain     <code>1.1.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#libsamplerate","title":"libsamplerate","text":"<p>Secret Rabbit Code (aka libsamplerate) is a Sample Rate Converter for audio.</p> <p>homepage: http://www.mega-nerd.com/libsamplerate</p>    version toolchain     <code>0.1.9</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#libsbml","title":"libSBML","text":"<p>libSBML (Systems Biology Markup Language library) is a free, open-source programming library to help you read, write, manipulate, translate, and validate SBML files and data streams. It's not an application itself (though it does come with example programs), but rather a library you embed in your own applications.</p> <p>homepage: http://sbml.org/Software/libSBML</p>    version toolchain     <code>5.19.0</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#libsigc","title":"libsigc++","text":"<p>The libsigc++ package implements a typesafe callback system for standard C++.</p> <p>homepage: https://libsigcplusplus.github.io/libsigcplusplus/</p>    version toolchain     <code>2.10.0</code> <code>GCCcore/6.4.0</code>   <code>2.10.1</code> <code>GCCcore/7.3.0</code>   <code>2.10.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.10.8</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#libsigsegv","title":"libsigsegv","text":"<p>GNU libsigsegv is a library for handling page faults in user mode.</p> <p>homepage: https://www.gnu.org/software/libsigsegv/</p>    version toolchain     <code>2.11</code> <code>GCCcore/6.4.0</code>   <code>2.12</code> <code>GCCcore/9.3.0</code>   <code>2.13</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#libsm","title":"libSM","text":"<p>X11 Session Management library, which allows for applications to both manage sessions,  and make use of session managers to save and restore their state for later use.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.2.2</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libsndfile","title":"libsndfile","text":"<p>Libsndfile is a C library for reading and writing files containing sampled sound  (such as MS Windows WAV and the Apple/SGI AIFF format) through one standard library interface.</p> <p>homepage: http://www.mega-nerd.com/libsndfile</p>    version toolchain     <code>1.0.28</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2017a</code>   <code>1.0.31</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.1.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libsodium","title":"libsodium","text":"<p>Sodium is a modern, easy-to-use software library for encryption, decryption, signatures,  password hashing and more.</p> <p>homepage: https://doc.libsodium.org/</p>    version toolchain     <code>1.0.6</code> <code>intel/2016a</code>   <code>1.0.8</code> <code>foss/2016a</code>   <code>1.0.11</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.0.12</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>1.0.13</code> <code>GCCcore/6.4.0</code>, <code>foss/2017a</code>   <code>1.0.16</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.0.17</code> <code>GCCcore/8.2.0</code>   <code>1.0.18</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libsoup","title":"LibSoup","text":"<p>libsoup is an HTTP client/server library for GNOME. It uses GObjects and the glib main loop, to integrate well with GNOME applications, and also has a synchronous API, for use in threaded applications.</p> <p>homepage: https://wiki.gnome.org/Projects/libsoup</p>    version toolchain     <code>2.66.1</code> <code>GCCcore/8.2.0</code>   <code>2.70.0</code> <code>GCCcore/8.3.0</code>   <code>2.72.0</code> <code>GCCcore/10.2.0</code>   <code>2.74.0</code> <code>GCCcore/10.3.0</code>   <code>3.0.7</code> <code>GCC/11.2.0</code>   <code>3.0.8</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#libspatialindex","title":"libspatialindex","text":"<p>C++ implementation of R*-tree, an MVR-tree and a TPR-tree with C API</p> <p>homepage: https://libspatialindex.org</p>    version toolchain     <code>1.8.5</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2018a</code>   <code>1.9.3</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libspatialite","title":"libspatialite","text":"<p>SpatiaLite is an open source library intended to extend the SQLite core to support  fully fledged Spatial SQL capabilities.</p> <p>homepage: https://www.gaia-gis.it/fossil/libspatialite/home</p>    version versionsuffix toolchain     <code>4.3.0a</code>  <code>foss/2016b</code>, <code>foss/2018b</code>, <code>intel/2016b</code>   <code>4.3.0a</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>4.3.0a</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>5.0.1</code>  <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#libssh","title":"libssh","text":"<p>Multiplatform C library implementing the SSHv2 protocol on client and server side</p> <p>homepage: https://www.libssh.org</p>    version toolchain     <code>0.9.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libstatgen","title":"libStatGen","text":"<p>Useful set of classes for creating statistical genetic programs.</p> <p>homepage: https://genome.sph.umich.edu/wiki/C++_Library:_libStatGen</p>    version toolchain     <code>1.0.15</code> <code>GCCcore/10.2.0</code>   <code>20190330</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libsvm","title":"LIBSVM","text":"<p>LIBSVM is an integrated software for support vector classification, (C-SVC, nu-SVC), regression  (epsilon-SVR, nu-SVR) and distribution estimation (one-class SVM). It supports multi-class classification.</p> <p>homepage: https://www.csie.ntu.edu.tw/~cjlin/libsvm/</p>    version toolchain     <code>3.22</code> <code>intel/2016b</code>, <code>intel/2017b</code>   <code>3.23</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.24</code> <code>GCCcore/9.3.0</code>   <code>3.25</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.30</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libtar","title":"libtar","text":"<p>C library for manipulating POSIX tar files</p> <p>homepage: https://repo.or.cz/libtar.git</p>    version toolchain     <code>1.2.20</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#libtasn1","title":"libtasn1","text":"<p>Libtasn1 is the ASN.1 library used by GnuTLS, GNU Shishi and some other packages.  It was written by Fabio Fiorina, and has been shipped as part of GnuTLS  for some time but is now a proper GNU package.</p> <p>homepage: https://www.gnu.org/software/libtasn1/</p>    version toolchain     <code>4.7</code> <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.12</code> <code>GCCcore/5.4.0</code>   <code>4.13</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>4.16.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>   <code>4.17.0</code> <code>GCCcore/10.3.0</code>   <code>4.18.0</code> <code>GCCcore/11.2.0</code>   <code>4.19.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libtecla","title":"libtecla","text":"<p>The tecla library provides UNIX and LINUX programs with interactive command line editing facilities,  similar to those of the UNIX tcsh shell. In addition to simple command-line editing, it supports recall of previously  entered command lines, TAB completion of file names or other tokens, and in-line wild-card expansion of filenames.  The internal functions which perform file-name completion and wild-card expansion are also available externally for  optional use by programs. </p> <p>homepage: https://sites.astro.caltech.edu/~mcs/tecla/</p>    version toolchain     <code>1.6.3</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#libtiff","title":"LibTIFF","text":"<p>tiff: Library and tools for reading and writing TIFF data files</p> <p>homepage: https://libtiff.gitlab.io/libtiff/</p>    version toolchain     <code>4.0.6</code> <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>4.0.7</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>4.0.8</code> <code>intel/2017a</code>, <code>intel/2017b</code>   <code>4.0.9</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>, <code>intel/2018b</code>   <code>4.0.10</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>4.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.2.0</code> <code>GCCcore/10.3.0</code>   <code>4.3.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>4.4.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libtirpc","title":"libtirpc","text":"<p>Libtirpc is a port of Suns Transport-Independent RPC library to Linux.</p> <p>homepage: https://sourceforge.net/projects/libtirpc/</p>    version toolchain     <code>1.1.4</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.2.6</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.3.1</code> <code>GCCcore/10.2.0</code>   <code>1.3.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libtool","title":"libtool","text":"<p>GNU libtool is a generic library support script. Libtool hides the complexity  of using shared libraries behind a consistent, portable interface. </p> <p>homepage: https://www.gnu.org/software/libtool</p>    version toolchain     <code>2.4.2</code> <code>GCC/4.8.2</code>, <code>GCC/4.9.2</code>   <code>2.4.5</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>2.4.6</code> <code>FCC/4.5.0</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>GNU/5.1.0-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>2.4.7</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#libtree","title":"libtree","text":"<p>libtree is a tool that turns ldd into a tree, explains why  shared libraries are found and why not and optionally deploys executables and  dependencies into a single directory</p> <p>homepage: https://github.com/haampie/libtree</p>    version toolchain     <code>2.0.0</code> <code>GCCcore/10.3.0</code>   <code>3.0.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#libunistring","title":"libunistring","text":"<p>This library provides functions for manipulating Unicode strings and for  manipulating C strings according to the Unicode standard.</p> <p>homepage: https://www.gnu.org/software/libunistring/</p>    version toolchain     <code>0.9.3</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.9.6</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016b</code>   <code>0.9.7</code> <code>GCCcore/6.4.0</code>   <code>0.9.10</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libunwind","title":"libunwind","text":"<p>The primary goal of libunwind is to define a portable and efficient C programming interface  (API) to determine the call-chain of a program. The API additionally provides the means to manipulate the  preserved (callee-saved) state of each call-frame and to resume execution at any point in the call-chain  (non-local goto). The API supports both local (same-process) and remote (across-process) operation.  As such, the API is useful in a number of applications</p> <p>homepage: https://www.nongnu.org/libunwind/</p>    version toolchain     <code>1.1</code> <code>GCC/4.9.2</code>, <code>foss/2016a</code>, <code>intel/2016b</code>   <code>1.2.1</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016b</code>   <code>1.3.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.4.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.5.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.6.2</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libutempter","title":"libutempter","text":"<p>libutempter is library that provides an interface for terminal  emulators such as screen and xterm to record user sessions to utmp and wtmp files.</p> <p>homepage: http://git.altlinux.org/people/ldv/packages/?p=libutempter.git</p>    version toolchain     <code>1.1.6.2</code> <code>GCC/6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#libuuid","title":"LibUUID","text":"<p>Portable uuid C library</p> <p>homepage: http://sourceforge.net/projects/libuuid/</p>    version toolchain     <code>1.0.3</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016a</code>, <code>intel/2017a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#libuv","title":"libuv","text":"<p>libuv is a multi-platform support library with a focus on asynchronous I/O.</p> <p>homepage: https://libuv.org</p>    version toolchain     <code>1.37.0</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#libvdwxc","title":"libvdwxc","text":"<p>libvdwxc is a general library for evaluating energy and potential for exchange-correlation (XC) functionals from the vdW-DF family that can be used with various of density functional theory (DFT) codes.</p> <p>homepage: https://libvdwxc.org</p>    version toolchain     <code>0.3.2</code> <code>foss/2018b</code>   <code>0.4.0</code> <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#libvorbis","title":"libvorbis","text":"<p>Ogg Vorbis is a fully open, non-proprietary, patent-and-royalty-free, general-purpose compressed audio format</p> <p>homepage: https://xiph.org/vorbis/</p>    version toolchain     <code>1.3.7</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libwebp","title":"libwebp","text":"<p>WebP is a modern image format that provides superior lossless and lossy compression for images on the web. Using WebP, webmasters and web developers can create smaller, richer images that make the web faster.</p> <p>homepage: https://developers.google.com/speed/webp/</p>    version toolchain     <code>1.0.0</code> <code>foss/2018b</code>   <code>1.0.2</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.2.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.2.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libwpe","title":"libwpe","text":"<p>WPE is the reference WebKit port for embedded and low-consumption computer devices. It has been designed from the ground-up with performance, small footprint, accelerated content rendering, and simplicity of deployment in mind, bringing the excellence of the WebKit engine to countless platforms and target devices.</p> <p>homepage: https://webkit.org/wpe</p>    version toolchain     <code>1.13.3</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#libx11","title":"libX11","text":"<p>X11 client-side library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.6.3</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxau","title":"libXau","text":"<p>The libXau package contains a library implementing the X11 Authorization Protocol. This is useful for restricting client access to the display.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.0.8</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxc","title":"libxc","text":"<p>Libxc is a library of exchange-correlation functionals for density-functional theory.  The aim is to provide a portable, well tested and reliable set of exchange and correlation functionals.</p> <p>homepage: https://www.tddft.org/programs/libxc</p>    version toolchain     <code>2.2.2</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.2.3</code> <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.0.0</code> <code>GCC/5.4.0-2.26</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>3.0.1</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>gimkl/2017a</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2020a</code>   <code>4.0.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.0.3</code> <code>foss/2016b</code>, <code>foss/2017a</code>   <code>4.2.3</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>gimkl/2017a</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>4.3.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>, <code>iccifort/2020.1.217</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>   <code>5.1.2</code> <code>GCC/10.2.0</code>   <code>5.1.3</code> <code>GCC/10.2.0</code>   <code>5.1.5</code> <code>GCC/10.3.0</code>, <code>intel-compilers/2021.2.0</code>   <code>5.1.6</code> <code>GCC/11.2.0</code>, <code>intel-compilers/2021.4.0</code>   <code>5.2.3</code> <code>GCC/11.3.0</code>, <code>intel-compilers/2022.1.0</code>"},{"location":"version-specific/supported-software/#libxcb","title":"libxcb","text":"<p>The X protocol C-language Binding (XCB) is a replacement for Xlib featuring a small footprint, latency hiding, direct access to the protocol, improved threading support, and extensibility.</p> <p>homepage: https://xcb.freedesktop.org/</p>    version toolchain     <code>1.11.1</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>1.13</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#libxcursor","title":"libXcursor","text":"<p>X Cursor management library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.14</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxdamage","title":"libXdamage","text":"<p>X Damage extension library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.4</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxdmcp","title":"libXdmcp","text":"<p>The libXdmcp package contains a library implementing the X Display Manager Control Protocol. This is useful for allowing clients to interact with the X Display Manager. </p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.2</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxext","title":"libXext","text":"<p>Common X Extensions library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.3.3</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxfixes","title":"libXfixes","text":"<p>X Fixes extension library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>5.0.1</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>5.0.2</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxfont","title":"libXfont","text":"<p>X font libary</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version versionsuffix toolchain     <code>1.5.1</code>  <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>1.5.1</code> <code>-freetype-2.6.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxft","title":"libXft","text":"<p>X11 client-side library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version versionsuffix toolchain     <code>2.3.2</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.3.2</code> <code>-fontconfig-2.11.95</code> <code>intel/2016a</code>   <code>2.3.2</code> <code>-freetype-2.6.3</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#libxi","title":"libXi","text":"<p>LibXi provides an X Window System client interface to the XINPUT extension to the X protocol.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.7.6</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxinerama","title":"libXinerama","text":"<p>Xinerama multiple monitor library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxkbcommon","title":"libxkbcommon","text":"<p>xkbcommon is a library to handle keyboard descriptions,  including loading them from disk, parsing them and handling their state.  It's mainly meant for client toolkits, window systems,  and other system applications.</p> <p>homepage: http://xkbcommon.org/</p>    version toolchain     <code>0.6.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxml","title":"libxml++","text":"<p>libxml++ is a C++ wrapper for the libxml XML parser library.</p> <p>homepage: http://libxmlplusplus.sourceforge.net</p>    version toolchain     <code>2.40.1</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.42.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#libxml2","title":"libxml2","text":"<p>Libxml2 is the XML C parser and toolchain developed for the Gnome project  (but usable outside of the Gnome platform). </p> <p>homepage: http://xmlsoft.org/</p>    version versionsuffix toolchain     <code>2.9.2</code>  <code>GCC/4.8.3</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>   <code>2.9.3</code>  <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.9.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.9.4</code>  <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>2.9.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.9.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.9.5</code>  <code>GCCcore/6.3.0</code>   <code>2.9.6</code>  <code>GCCcore/6.4.0</code>   <code>2.9.7</code>  <code>GCCcore/6.4.0</code>   <code>2.9.8</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>2.9.9</code>  <code>GCCcore/8.3.0</code>   <code>2.9.10</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.9.13</code>  <code>GCCcore/11.3.0</code>   <code>2.10.3</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libxml2-python","title":"libxml2-python","text":"<p>Libxml2 is the XML C parser and toolchain developed for the Gnome project  (but usable outside of the Gnome platform). This is the Python binding.</p> <p>homepage: http://xmlsoft.org/</p>    version versionsuffix toolchain     <code>2.9.7</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.9.8</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.9.8</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>2.9.13</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#libxmu","title":"libXmu","text":"<p>libXmu provides a set of miscellaneous utility convenience functions for X libraries to use.  libXmuu is a lighter-weight version that does not depend on libXt or libXext</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.2</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxp","title":"libXp","text":"<p>libXp provides the X print library.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.0.3</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxpm","title":"libXpm","text":"<p>libXp provides the X print library.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>3.5.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxrandr","title":"libXrandr","text":"<p>X Resize, Rotate and Reflection extension library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.5.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxrender","title":"libXrender","text":"<p>X11 client-side library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>0.9.9</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxslt","title":"libxslt","text":"<p>Libxslt is the XSLT C library developed for the GNOME project  (but usable outside of the Gnome platform).</p> <p>homepage: http://xmlsoft.org/</p>    version versionsuffix toolchain     <code>1.1.28</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.1.28</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.1.29</code>  <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.1.30</code>  <code>GCCcore/6.3.0</code>   <code>1.1.32</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.1.33</code>  <code>GCCcore/8.2.0</code>   <code>1.1.34</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#libxsmm","title":"libxsmm","text":"<p>LIBXSMM is a library for small dense and small sparse matrix-matrix multiplications targeting Intel Architecture (x86).</p> <p>homepage: https://github.com/hfp/libxsmm</p>    version toolchain     <code>1.4</code> <code>intel/2016a</code>   <code>1.4.4</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.6.4</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.8.2</code> <code>intel/2017b</code>   <code>1.8.3</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.10</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>   <code>1.16.1</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>, <code>iccifort/2020.4.304</code>   <code>1.16.2</code> <code>GCC/10.3.0</code>, <code>intel-compilers/2021.2.0</code>   <code>1.17</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#libxt","title":"libXt","text":"<p>libXt provides the X Toolkit Intrinsics, an abstract widget library upon which other toolkits are  based. Xt is the basis for many toolkits, including the Athena widgets (Xaw), and LessTif (a Motif implementation).</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.5</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libxxf86vm","title":"libXxf86vm","text":"<p>X11 XFree86 video mode extension library</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.4</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#libyaml","title":"libyaml","text":"<p>LibYAML is a YAML parser and emitter written in C.</p> <p>homepage: https://pyyaml.org/wiki/LibYAML</p>    version toolchain     <code>0.1.6</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>0.1.7</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>system</code>   <code>0.2.1</code> <code>GCCcore/7.3.0</code>, <code>system</code>   <code>0.2.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.2.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#libzeep","title":"libzeep","text":"<p>Libzeep was originally developed to make it easy to create SOAP servers.</p> <p>homepage: https://github.com/mhekkel/libzeep</p>    version toolchain     <code>5.0.1</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#libzip","title":"libzip","text":"<p>libzip is a C library for reading, creating, and modifying zip archives.</p> <p>homepage: https://libzip.org/</p>    version toolchain     <code>1.5.2</code> <code>GCCcore/8.2.0</code>   <code>1.7.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.9.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#lie_learn","title":"lie_learn","text":"<p>lie_learn is a python package that knows how to do various tricky computations related to Lie groups and manifolds (mainly the sphere S2 and rotation group SO3).</p> <p>homepage: https://github.com/AMLab-Amsterdam/lie_learn</p>    version versionsuffix toolchain     <code>0.0.1.post1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#lifelines","title":"lifelines","text":"<p>lifelines is a complete survival analysis library, written in pure Python.</p> <p>homepage: https://lifelines.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>0.22.8</code> <code>-Python-3.7.2</code> <code>fosscuda/2019a</code>   <code>0.26.3</code>  <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#lighter","title":"Lighter","text":"<p>Fast and memory-efficient sequencing error corrector</p> <p>homepage: https://github.com/mourisl/Lighter</p>    version toolchain     <code>1.1.1</code> <code>foss/2018a</code>   <code>1.1.2</code> <code>GCC/11.2.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#liknorm","title":"liknorm","text":"<p>Moments of the product of an exponential-family likelihood with a Normal distribution.</p> <p>homepage: https://github.com/limix/liknorm</p>    version toolchain     <code>1.5.2</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#likwid","title":"likwid","text":"<p>Likwid stands for Like I knew what I am doing. This project contributes easy to use command line tools for Linux to support programmers in developing high performance multi threaded programs. </p> <p>homepage: https://github.com/RRZE-HPC/likwid</p>    version toolchain     <code>4.0.1</code> <code>GNU/4.9.3-2.25</code>   <code>4.1.0</code> <code>GCCcore/4.9.3</code>   <code>4.2.0</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2017a</code>, <code>intel/2017a</code>   <code>4.3.2</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>5.0.1</code> <code>GCCcore/8.3.0</code>   <code>5.1.0</code> <code>GCCcore/9.3.0</code>   <code>5.2.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>   <code>5.2.1</code> <code>GCC/11.2.0</code>   <code>5.2.2</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#limix","title":"limix","text":"<p>Limix is a flexible and efficient linear mixed model library with interfaces to Python.  Genomic analyses require flexible models that can be adapted to the needs of the user.  Limix is smart about how particular models are fitted to save computational cost. </p> <p>homepage: https://github.com/limix/limix</p>    version versionsuffix toolchain     <code>2.0.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#linbox","title":"LinBox","text":"<p>C++ library for exact, high-performance linear algebra</p> <p>homepage: http://linalg.org/</p>    version toolchain     <code>1.4.0</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#line_profiler","title":"line_profiler","text":"<p>line_profiler is a module for doing line-by-line profiling of functions. kernprof is a convenient script for running either line_profiler or the Python standard library's cProfile or profile modules, depending on what is available.</p> <p>homepage: https://github.com/pyutils/line_profiler</p>    version versionsuffix toolchain     <code>3.1.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.5.1</code>  <code>foss/2021b</code>   <code>4.0.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#lingeling","title":"Lingeling","text":"<p>One of the design principles of the state-of-the-art SAT solver Lingeling is to use as compact data structures as possible. These reduce memory usage, increase cache efficiency and thus improve runtime, particularly, when using multiple solver instances on multi-core machines, as in our parallel portfolio solver Plingeling and our cube and conquer solver Treengeling.</p> <p>homepage: http://fmv.jku.at/lingeling/</p>    version toolchain     <code>bcp</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#littlecms","title":"LittleCMS","text":"<p>Little CMS intends to be an OPEN SOURCE small-footprint color management engine,  with special focus on accuracy and performance. </p> <p>homepage: http://www.littlecms.com/</p>    version toolchain     <code>2.7</code> <code>intel/2016a</code>   <code>2.8</code> <code>GCCcore/6.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2.9</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>   <code>2.11</code> <code>GCCcore/10.2.0</code>   <code>2.12</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.13.1</code> <code>GCCcore/11.3.0</code>   <code>2.14</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#lldb","title":"LLDB","text":"<p>The debugger component of the LLVM project</p> <p>homepage: https://lldb.llvm.org/</p>    version versionsuffix toolchain     <code>11.0.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#llvm","title":"LLVM","text":"<p>The LLVM Core libraries provide a modern source- and target-independent  optimizer, along with code generation support for many popular CPUs  (as well as some less common ones!) These libraries are built around a well  specified code representation known as the LLVM intermediate representation  (\"LLVM IR\"). The LLVM Core libraries are well documented, and it is  particularly easy to invent your own language (or port an existing compiler)  to use LLVM as an optimizer and code generator.</p> <p>homepage: https://llvm.org/</p>    version toolchain     <code>3.7.1</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>3.8.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.8.1</code> <code>GCCcore/4.9.3</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.9.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.9.1</code> <code>foss/2017a</code>   <code>4.0.0</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>4.0.1</code> <code>intel/2017a</code>, <code>intel/2017b</code>   <code>5.0.0</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>5.0.1</code> <code>GCCcore/6.4.0</code>   <code>6.0.0</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>7.0.0</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>7.0.1</code> <code>GCCcore/8.2.0</code>   <code>8.0.1</code> <code>GCCcore/8.3.0</code>   <code>9.0.0</code> <code>GCCcore/8.3.0</code>   <code>9.0.1</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>10.0.0</code> <code>GCCcore/8.3.0</code>   <code>10.0.1</code> <code>GCCcore/10.2.0</code>   <code>11.0.0</code> <code>GCCcore/10.2.0</code>   <code>11.1.0</code> <code>GCCcore/10.3.0</code>   <code>12.0.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>14.0.3</code> <code>GCCcore/11.3.0</code>   <code>15.0.5</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#lmdb","title":"LMDB","text":"<p>LMDB is a fast, memory-efficient database. With memory-mapped files, it has the read performance  of a pure in-memory database while retaining the persistence of standard disk-based databases.</p> <p>homepage: https://symas.com/lmdb</p>    version toolchain     <code>0.9.18</code> <code>foss/2016a</code>   <code>0.9.21</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>0.9.22</code> <code>GCCcore/7.3.0</code>   <code>0.9.23</code> <code>GCCcore/8.2.0</code>   <code>0.9.24</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.9.28</code> <code>GCCcore/10.3.0</code>   <code>0.9.29</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#lmfit","title":"LMfit","text":"<p>Lmfit provides a high-level interface to non-linear optimization and curve fitting problems for Python</p> <p>homepage: https://lmfit.github.io/lmfit-py</p>    version versionsuffix toolchain     <code>0.9.9</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.9.14</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.0.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.0.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.0.2</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>1.0.3</code>  <code>foss/2021a</code>, <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#lmod","title":"Lmod","text":"<p>Lmod is a Lua based module system. Modules allow for dynamic modification  of a user's environment under Unix systems. See www.tacc.utexas.edu/tacc-projects/lmod  for a complete description. Lmod is a new implementation that easily handles the MODULEPATH  Hierarchical problem. It is drop-in replacement for TCL/C modules and reads TCL modulefiles directly.</p> <p>homepage: http://sourceforge.net/projects/lmod/</p>    version toolchain     <code>5.2</code> <code>GCC/4.8.2</code>   <code>5.2.5</code> <code>GCC/4.8.2</code>   <code>5.3</code> <code>GCC/4.8.2</code>   <code>5.4</code> <code>GCC/4.8.2</code>   <code>5.4.2</code> <code>GCC/4.8.2</code>   <code>5.5</code> <code>GCC/4.8.2</code>   <code>5.5.1</code> <code>GCC/4.8.2</code>   <code>5.6</code> <code>GCC/4.8.2</code>   <code>5.7</code> <code>GCC/4.8.2</code>   <code>5.8</code> <code>GCC/4.8.2</code>   <code>5.8.5</code> <code>GCC/4.8.2</code>   <code>5.9</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>   <code>6.4.2</code> <code>system</code>   <code>7.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#lncloom","title":"LncLOOM","text":"<p>LncLOOM is a graph-based framework that uses integer programming to identify combinations of short motifs that are deeply conserved in rapidly evolving sequences.</p> <p>homepage: https://github.com/lncLOOM/lncLOOMv2/</p>    version toolchain     <code>2.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#locarna","title":"LocARNA","text":"<p>LocARNA is a collection of alignment tools for the structural analysis of RNA.  Given a set of RNA sequences, LocARNA simultaneously aligns and predicts common structures for  your RNAs. In this way, LocARNA performs Sankoff-like alignment and is in particular suited for  analyzing sets of related RNAs without known common structure.</p> <p>homepage: http://www.bioinf.uni-freiburg.de/Software/LocARNA/</p>    version versionsuffix toolchain     <code>1.9.2</code>  <code>foss/2016b</code>   <code>1.9.2.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.9.2.3</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#lofreq","title":"LoFreq","text":"<p>Fast and sensitive variant calling from next-gen sequencing data</p> <p>homepage: http://csb5.github.io/lofreq</p>    version versionsuffix toolchain     <code>2.1.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.1.3.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#log-log4perl","title":"Log-Log4perl","text":"<p>Log4perl</p> <p>homepage: https://metacpan.org/pod/Log::Log4perl</p>    version toolchain     <code>1.47</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#logaddexp","title":"logaddexp","text":"<p>C library that implements the logarithm of the sum of exponentiations. Inspired by NumPy's logaddexp function.</p> <p>homepage: https://github.com/horta/logaddexp</p>    version toolchain     <code>1.0.3</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#lohhla","title":"LOHHLA","text":"<p>LOHHLA, Loss Of Heterozygosity in Human Leukocyte Antigen, a computational tool to evaluate HLA loss using next-generation sequencing data.</p> <p>homepage: https://bitbucket.org/mcgranahanlab/lohhla</p>    version versionsuffix toolchain     <code>2018.11.05</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#loki","title":"Loki","text":"<p>Loki is a C++ library of designs, containing flexible implementations of common design patterns and   idioms. </p> <p>homepage: http://loki-lib.sourceforge.net/</p>    version toolchain     <code>0.1.7</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#longestrunsubsequence","title":"longestrunsubsequence","text":"<p>Implementation of a solver for the Longest Run Subsequence Problem. Given a  sequence as input, compute a longest subsequence such that there is at most one run for every  character. </p> <p>homepage: https://pypi.org/project/longestrunsubsequence/</p>    version toolchain     <code>1.0.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#longread_umi","title":"longread_umi","text":"<p>A collection of scripts for processing longread UMI data.</p> <p>homepage: https://github.com/SorenKarst/longread_umi</p>    version toolchain     <code>0.3.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#longshot","title":"Longshot","text":"<p>Longshot is a variant calling tool for diploid genomes using long error prone reads such as Pacific  Biosciences (PacBio) SMRT and Oxford Nanopore Technologies (ONT). It takes as input an aligned BAM file and outputs  a phased VCF file with variants and haplotype information. It can also output haplotype-separated BAM files that can  be used for downstream analysis. Currently, it only calls single nucleotide variants (SNVs).</p> <p>homepage: https://github.com/pjedge/longshot</p>    version toolchain     <code>0.3.4</code> <code>GCCcore/8.2.0</code>   <code>0.4.1</code> <code>GCC/7.3.0-2.30</code>, <code>GCCcore/8.3.0</code>   <code>0.4.3</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#loompy","title":"loompy","text":"<p>Python implementation of the Loom file format, an efficient file format for large omics datasets</p> <p>homepage: https://loompy.org/</p>    version toolchain     <code>3.0.6</code> <code>intel/2020b</code>   <code>3.0.7</code> <code>foss/2021b</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#lpeg","title":"LPeg","text":"<p>LPeg is a new pattern-matching library for Lua, based on Parsing Expression Grammars (PEGs).</p> <p>homepage: http://www.inf.puc-rio.br/~roberto/lpeg/</p>    version toolchain     <code>1.0.2</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#lpjml","title":"LPJmL","text":"<p>Dynamic global vegetation model with managed land and river routing</p> <p>homepage: https://github.com/PIK-LPJmL/LPJmL</p>    version toolchain     <code>4.0.003</code> <code>iimpi/2020b</code>"},{"location":"version-specific/supported-software/#lpsolve","title":"lpsolve","text":"<p>Mixed Integer Linear Programming (MILP) solver</p> <p>homepage: https://sourceforge.net/projects/lpsolve/</p>    version toolchain     <code>5.5.2.5</code> <code>GCC/6.4.0-2.28</code>, <code>GCC/8.3.0</code>, <code>foss/2018a</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>iccifort/2019.5.281</code>, <code>intel/2017a</code>, <code>intel/2018b</code>   <code>5.5.2.11</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#lrslib","title":"lrslib","text":"<p>lrslib is a self-contained ANSI C implementation of the reverse search algorithm for vertex enumeration/convex hull problems</p> <p>homepage: http://cgm.cs.mcgill.ca/~avis/C/lrs.html</p>    version toolchain     <code>6.2</code> <code>intel/2018b</code>   <code>7.0a</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#ls-prepost","title":"LS-PrePost","text":"<p>LS-PrePost is an advanced pre and post-processor that is delivered free with LS-DYNA.</p> <p>homepage: http://lstc.com/products/ls-prepost</p>    version versionsuffix toolchain     <code>4.6</code> <code>-centos6</code> <code>system</code>   <code>4.6</code> <code>-centos7</code> <code>system</code>   <code>4.6.24</code>  <code>system</code>   <code>4.7.8</code>  <code>system</code>   <code>4.7.15</code>  <code>system</code>"},{"location":"version-specific/supported-software/#lsd2","title":"LSD2","text":"<p>Least-squares methods to estimate rates and dates from phylogenies</p> <p>homepage: https://github.com/tothuhien/lsd2</p>    version toolchain     <code>1.9.7</code> <code>GCCcore/9.3.0</code>   <code>2.2</code> <code>GCCcore/10.2.0</code>   <code>2.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#lsms","title":"LSMS","text":"<p>LSMS benchmark, part of CORAL suite</p> <p>homepage: https://asc.llnl.gov/CORAL-benchmarks/#lsms</p>    version toolchain     <code>3_rev237</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#ltr_retriever","title":"LTR_retriever","text":"<p>LTR_retriever is a highly accurate and sensitive program for  identification of LTR retrotransposons; The LTR Assembly Index (LAI) is also  included in this package. </p> <p>homepage: https://github.com/oushujun/LTR_retriever</p>    version toolchain     <code>2.9.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ltrdetector","title":"LtrDetector","text":"<p>A modern tool-suite for detectinglong terminal repeat retrotransposons de-novo onthe genomic scale</p> <p>homepage: https://github.com/TulsaBioinformaticsToolsmith/LtrDetector</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#lua","title":"Lua","text":"<p>Lua is a powerful, fast, lightweight, embeddable scripting language.  Lua combines simple procedural syntax with powerful data description constructs based  on associative arrays and extensible semantics. Lua is dynamically typed,  runs by interpreting bytecode for a register-based virtual machine,  and has automatic memory management with incremental garbage collection,  making it ideal for configuration, scripting, and rapid prototyping.</p> <p>homepage: https://www.lua.org/</p>    version toolchain     <code>5.1.4-5</code> <code>GCC/4.8.2</code>   <code>5.1.4-8</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>, <code>system</code>   <code>5.1.5</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>   <code>5.2.4</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>5.3.4</code> <code>GCCcore/7.2.0</code>, <code>system</code>   <code>5.3.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>5.4.2</code> <code>GCCcore/10.2.0</code>   <code>5.4.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>5.4.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#luajit","title":"LuaJIT","text":"<p>LuaJIT is a Just-In-Time Compiler (JIT) for the Lua programming language. Lua is a powerful, dynamic and light-weight programming language. It may be embedded or used as a general-purpose, stand-alone language. </p> <p>homepage: http://luajit.org/</p>    version toolchain     <code>2.0.2</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#luajit2-openresty","title":"LuaJIT2-OpenResty","text":"<p>openresty/luajit2 - OpenResty's maintained branch of LuaJIT. LuaJIT is a Just-In-Time Compiler (JIT) for the Lua programming language. Lua is a powerful, dynamic and light-weight programming language. It may be embedded or used as a general-purpose, stand-alone language. </p> <p>homepage: https://github.com/openresty/luajit2</p>    version toolchain     <code>2.1-20220411</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#lucene-geo-gazetteer","title":"Lucene-Geo-Gazetteer","text":"<p>A command line gazetteer built around the Geonames.org dataset, that uses the Apache Lucene library  to create a searchable gazetteer.</p> <p>homepage: https://github.com/chrismattmann/lucene-geo-gazetteer</p>    version toolchain     <code>20170718</code> <code>system</code>"},{"location":"version-specific/supported-software/#lumpy","title":"LUMPY","text":"<p>A probabilistic framework for structural variant discovery. </p> <p>homepage: https://github.com/arq5x/lumpy-sv</p>    version toolchain     <code>0.2.13</code> <code>foss/2016b</code>   <code>0.3.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#luscus","title":"LUSCUS","text":"<p>Luscus is the program for graphical display and editing of molecular systems.</p> <p>homepage: https://sourceforge.net/projects/luscus/</p>    version toolchain     <code>0.8.6</code> <code>foss/2018b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#lwgrp","title":"lwgrp","text":"<p>The light-weight group library defines data structures and collective operations to group MPI processes as an ordered set.  Such groups are useful as substitutes for MPI communicators when the overhead of communicator creation is too costly.  For example, certain sorting algorithms recursively divide processes into subgroups as the sort algorithm progresses.  These groups may be different with each invocation, so that it is inefficient to create and destroy communicators during the sort routine.</p> <p>homepage: https://github.com/LLNL/lwgrp</p>    version toolchain     <code>1.0.2</code> <code>gompi/2019a</code>, <code>gompi/2020a</code>, <code>iimpi/2019a</code>, <code>iimpi/2020a</code>   <code>1.0.3</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#lxml","title":"lxml","text":"<p>The lxml XML toolkit is a Pythonic binding for the C libraries libxml2 and libxslt.</p> <p>homepage: https://lxml.de/</p>    version versionsuffix toolchain     <code>3.5.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.6.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.6.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.0.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.1.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>4.2.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>4.2.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.2.5</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.2.5</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.3.3</code>  <code>GCCcore/8.2.0</code>   <code>4.4.2</code>  <code>GCCcore/8.3.0</code>   <code>4.5.2</code>  <code>GCCcore/9.3.0</code>   <code>4.6.2</code>  <code>GCCcore/10.2.0</code>   <code>4.6.3</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>4.9.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#lynx","title":"lynx","text":"<p>lynx is an alphanumeric display oriented World-Wide Web Client</p> <p>homepage: http://lynx.browser.org/</p>    version versionsuffix toolchain     <code>2.8.9</code> <code>-develop</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#lz4","title":"lz4","text":"<p>LZ4 is lossless compression algorithm, providing compression speed at 400 MB/s per core.  It features an extremely fast decoder, with speed in multiple GB/s per core.</p> <p>homepage: https://lz4.github.io/lz4/</p>    version toolchain     <code>1.8.2</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>   <code>1.9.0</code> <code>GCCcore/7.3.0</code>   <code>1.9.1</code> <code>GCCcore/8.2.0</code>   <code>1.9.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.9.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>1.9.4</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#lzo","title":"LZO","text":"<p>Portable lossless data compression library</p> <p>homepage: http://www.oberhumer.com/opensource/lzo/</p>    version toolchain     <code>2.09</code> <code>intel/2016b</code>, <code>intel/2017b</code>   <code>2.10</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#m","title":"M","text":"<p>M1QN3 - M4 - MACH - MACS2 - MACSE - maeparser - MAFFT - MAGeCK - magick - Magics - MAGMA - magma - MagresPython - mahotas - MAJIQ - make - makedepend - makedepf90 - makeinfo - Mako - Mamba - manta - mapDamage - Maple - MapSplice - Maq - MariaDB - MariaDB-connector-c - MARS - Mash - MaSuRCA - Mathematica - MathGL - MATIO - MATLAB - MATLAB-Engine - matlab-proxy - matplotlib - matplotlib-inline - MATSim - Maude - mauveAligner - Maven - mawk - MaxBin - MaxQuant - mayavi - maze - MbedTLS - MBROLA - mbuffer - mc - MCL - MCR - mcu - MDAnalysis - MDBM - MDSplus - MDSplus-Java - MDSplus-Python - mdtest - MDTraj - medaka - medImgProc - MedPy - Meep - MEGA - MEGACC - MEGAHIT - Megalodon - MEGAN - Meld - MEM - MEME - memkind - memory-profiler - MEMOTE - memtester - meRanTK - MERCKX - Mercurial - Mesa - Mesa-demos - meshalyzer - meshio - meshtool - Meson - meson-python - Mesquite - MESS - MetaBAT - MetaboAnalystR - metaerg - MetaEuk - MetaGeneAnnotator - Metagenome-Atlas - Metal - MetaMorpheus - MetaPhlAn - MetaPhlAn2 - metaWRAP - Metaxa2 - MethylDackel - methylpy - METIS - mgltools - mhcflurry - mhcnuggets - MicrobeAnnotator - microctools - MiGEC - MIGRATE-N - Miller - mimalloc - MINC - MinCED - Mini-XML - miniasm - minibar - MiniCARD - Miniconda2 - Miniconda3 - minieigen - Minimac4 - minimap2 - Minipolish - MiniSat - minizip - MINPACK - MinPath - MIRA - miRDeep2 - Mish-Cuda - misha - MITgcmutils - MITObim - MitoZ - MiXCR - MixMHC2pred - mkl-dnn - mkl-service - mkl_fft - MLC - MLxtend - mm-common - Mmg - MMSEQ - MMseqs2 - mmtf-cpp - MNE-Python - MOABS - ModelTest-NG - modred - Molcas - mold - Molden - Molekel - molmod - Molpro - MONA - MONAI - mongolite - Mono - Monocle3 - moonjit - MOOSE - mordecai - MoreRONN - mosdepth - Mothur - motif - MotionCor2 - motionSegmentation - MoviePy - MPB - MPC - MPFR - mpi4py - MPICH - MPICH2 - mpifileutils - mpiP - MPJ-Express - mpmath - MrBayes - mrcfile - MRChem - MRCPP - MRIcron - MRtrix - msgpack-c - MSM - MSPC - msprime - mstore - MTL4 - MuJoCo - mujoco-py - multichoose - MultilevelEstimators - MultiNest - MultiQC - Multiwfn - muMerge - MUMmer - MUMPS - muParser - muparserx - MuPeXI - MUSCLE - MuSiC - MUST - MuTect - mutil - MVAPICH2 - mxml - mxmlplus - MXNet - MyCC - mygene - MyMediaLite - mympingpong - Myokit - mypy - MySQL - MySQL-python - mysqlclient</p>"},{"location":"version-specific/supported-software/#m1qn3","title":"M1QN3","text":"<p>A solver of large-scale unconstrained minimization problems</p> <p>homepage: https://who.rocq.inria.fr/Jean-Charles.Gilbert/modulopt/optimization-routines/m1qn3/m1qn3.html</p>    version toolchain     <code>3.3</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#m4","title":"M4","text":"<p>GNU M4 is an implementation of the traditional Unix macro processor. It is  mostly SVR4 compatible although it has some extensions (for example, handling  more than 9 positional parameters to macros). GNU M4 also has built-in  functions for including files, running shell commands, doing arithmetic, etc. </p> <p>homepage: https://www.gnu.org/software/m4/m4.html</p>    version toolchain     <code>1.4.16</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>, <code>system</code>   <code>1.4.17</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.2-binutils-2.25</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/4.9.3-binutils-2.25</code>, <code>GCC/5.1.0-binutils-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/4.9.4</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>GNU/5.1.0-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>1.4.18</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.1.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/5.5.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.1.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/7.4.0</code>, <code>GCCcore/8.1.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/8.4.0</code>, <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>, <code>GCCcore/system</code>, <code>system</code>   <code>1.4.19</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/9.4.0</code>, <code>GCCcore/9.5.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#mach","title":"MACH","text":"<p>MACH 1.0 is a Markov Chain based haplotyper  that can resolve long haplotypes or infer missing genotypes  in samples of unrelated individuals.</p> <p>homepage: http://csg.sph.umich.edu/abecasis/MACH/</p>    version toolchain     <code>1.0.18</code> <code>system</code>"},{"location":"version-specific/supported-software/#macs2","title":"MACS2","text":"<p>Model Based Analysis for ChIP-Seq data</p> <p>homepage: https://github.com/taoliu/MACS</p>    version versionsuffix toolchain     <code>2.1.1.20160309</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.1.2.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.2.1</code> <code>-Python-2.7.15</code> <code>intel/2019a</code>   <code>2.2.5</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.2.7.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#macse","title":"MACSE","text":"<p>MACSE aligns coding NT sequences with respect to their AA translation while allowing NT sequences to contain multiple frameshifts and/or stop codons. MACSE is hence the first automatic solution to align protein-coding gene datasets containing non-functional sequences (pseudogenes) without disrupting the underlying codon structure.</p> <p>homepage: https://bioweb.supagro.inra.fr/macse/index.php</p>    version versionsuffix toolchain     <code>2.06</code> <code>-Java-15</code> <code>system</code>"},{"location":"version-specific/supported-software/#maeparser","title":"maeparser","text":"<p>maeparser is a parser for Schrodinger Maestro files.</p> <p>homepage: https://github.com/schrodinger/maeparser</p>    version toolchain     <code>1.2.2</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>1.3.0</code> <code>gompi/2019b</code>, <code>gompi/2021a</code>, <code>gompi/2022a</code>, <code>iimpi/2020a</code>"},{"location":"version-specific/supported-software/#mafft","title":"MAFFT","text":"<p>MAFFT is a multiple sequence alignment program for unix-like operating systems. It offers a range of multiple alignment methods, L-INS-i (accurate; for alignment of &lt;~200 sequences), FFT-NS-2 (fast; for alignment of &lt;~30,000 sequences), etc.</p> <p>homepage: https://mafft.cbrc.jp/alignment/software/</p>    version versionsuffix toolchain     <code>7.305</code> <code>-with-extensions</code> <code>foss/2016b</code>   <code>7.397</code> <code>-with-extensions</code> <code>intel/2018a</code>   <code>7.427</code> <code>-with-extensions</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>7.429</code> <code>-with-extensions</code> <code>GCC/8.2.0-2.31.1</code>   <code>7.453</code> <code>-with-extensions</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>gompi/2020a</code>, <code>iccifort/2019.5.281</code>, <code>iimpi/2020a</code>   <code>7.470</code> <code>-with-extensions</code> <code>GCC/9.3.0</code>, <code>gompi/2020a</code>   <code>7.471</code> <code>-with-extensions</code> <code>iimpi/2020a</code>   <code>7.475</code> <code>-with-extensions</code> <code>GCC/10.2.0</code>, <code>gompi/2020b</code>   <code>7.487</code> <code>-with-extensions</code> <code>gompi/2021a</code>   <code>7.490</code> <code>-with-extensions</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#mageck","title":"MAGeCK","text":"<p>Model-based Analysis of Genome-wide CRISPR-Cas9 Knockout (MAGeCK) is a computational tool to identify  important genes from the recent genome-scale CRISPR-Cas9 knockout screens (or GeCKO) technology. MAGeCK is developed  by Wei Li and Han Xu from Dr. Xiaole Shirley Liu's lab at Dana-Farber Cancer Institute, and is being actively updated  by Wei Li lab from Children's National Medical Center.</p> <p>homepage: https://sourceforge.net/p/mageck/wiki/Home/</p>    version toolchain     <code>0.5.9.4</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#magick","title":"magick","text":"<p>R bindings to the open-source image processing library ImageMagick</p> <p>homepage: https://cran.r-project.org/web/packages/magick/</p>    version versionsuffix toolchain     <code>2.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#magics","title":"Magics","text":"<p>Magics\u00a0is ECMWF's meteorological plotting software and can be either accessed directly through its Python or\u00a0Fortran interfaces or by using Metview.</p> <p>homepage: https://confluence.ecmwf.int/display/MAGP/</p>    version toolchain     <code>4.13.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#magma","title":"MAGMA","text":"<p>MAGMA is a tool for gene analysis and generalized gene-set analysis of GWAS data. It can be used to analyse both raw genotype data as well as summary SNP p-values from a previous  GWAS or meta-analysis.</p> <p>homepage: https://ctg.cncr.nl/software/magma</p>    version toolchain     <code>1.07b</code> <code>foss/2018b</code>   <code>1.07bb</code> <code>GCC/8.3.0</code>   <code>1.09b</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#magma_1","title":"magma","text":"<p>The MAGMA project aims to develop a dense linear algebra library similar to  LAPACK but for heterogeneous/hybrid architectures, starting with current Multicore+GPU systems.</p> <p>homepage: https://icl.cs.utk.edu/magma/</p>    version versionsuffix toolchain     <code>2.3.0</code>  <code>fosscuda/2017b</code>, <code>intelcuda/2017b</code>   <code>2.3.0</code> <code>-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>2.4.0</code>  <code>fosscuda/2018b</code>   <code>2.5.0</code>  <code>fosscuda/2018b</code>   <code>2.5.1</code>  <code>fosscuda/2019a</code>, <code>fosscuda/2019b</code>   <code>2.5.4</code>  <code>fosscuda/2019a</code>, <code>fosscuda/2019b</code>, <code>fosscuda/2020a</code>, <code>fosscuda/2020b</code>, <code>intelcuda/2019b</code>, <code>intelcuda/2020b</code>   <code>2.6.1</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.6.2</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>   <code>2.6.2</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#magrespython","title":"MagresPython","text":"<p>MagresPython is a Python library for parsing the CCP-NC ab-initio magnetic resonance file format.  This is used in the latest version of the CASTEP and Quantum ESPRESSO (PWSCF) codes. </p> <p>homepage: http://tfgg.me/magres-python</p>    version versionsuffix toolchain     <code>20160329</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#mahotas","title":"mahotas","text":"<p>Mahotas is a computer vision and image processing library for Python</p> <p>homepage: https://mahotas.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.4.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#majiq","title":"MAJIQ","text":"<p>MAJIQ and Voila are two software packages that together detect, quantify, and visualize  local splicing variations (LSV) from RNA-Seq data.</p> <p>homepage: https://majiq.biociphers.org</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#make","title":"make","text":"<p>GNU version of make utility</p> <p>homepage: https://www.gnu.org/software/make/make.html</p>    version toolchain     <code>3.82</code> <code>GCC/4.8.2</code>   <code>4.1</code> <code>GCC/4.9.2</code>   <code>4.2.1</code> <code>GCC/7.3.0-2.30</code>, <code>GCCcore/8.3.0</code>   <code>4.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#makedepend","title":"makedepend","text":"<p>The makedepend package contains a C-preprocessor like utility to determine build-time dependencies.</p> <p>homepage: https://linux.die.net/man/1/makedepend</p>    version toolchain     <code>1.0.5</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>1.0.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.0.7</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#makedepf90","title":"makedepf90","text":"<p>Makedepf90 is a program for automatic creation of  Makefile-style dependency lists for Fortran source code. </p> <p>homepage: https://linux.die.net/man/1/makedepf90</p>    version toolchain     <code>2.8.8</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#makeinfo","title":"makeinfo","text":"<p>makeinfo is part of the Texinfo project, the official documentation format of the GNU project.</p> <p>homepage: https://www.gnu.org/software/texinfo/</p>    version versionsuffix toolchain     <code>6.7</code>  <code>FCC/4.5.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>6.7</code> <code>-minimal</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>6.8</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#mako","title":"Mako","text":"<p>A super-fast templating language that borrows the best ideas from the existing templating languages</p> <p>homepage: https://www.makotemplates.org</p>    version versionsuffix toolchain     <code>1.0.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.0.6</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.0.7</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>, <code>intel/2018a</code>, <code>intelcuda/2017b</code>, <code>iomkl/2018a</code>   <code>1.0.7</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>1.0.7</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.0.7</code> <code>-Python-3.6.6</code> <code>fosscuda/2018b</code>   <code>1.0.8</code>  <code>GCCcore/8.2.0</code>   <code>1.1.0</code>  <code>GCCcore/8.3.0</code>   <code>1.1.2</code>  <code>GCCcore/9.3.0</code>   <code>1.1.3</code>  <code>GCCcore/10.2.0</code>   <code>1.1.4</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.2.0</code>  <code>GCCcore/11.3.0</code>   <code>1.2.4</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#mamba","title":"Mamba","text":"<p>Mamba is a fast, robust, and cross-platform package manager. It runs on Windows, OS X and Linux  (ARM64 and PPC64LE included) and is fully compatible with conda packages and supports most of conda's commands. </p> <p>homepage: https://mamba.readthedocs.io/</p>    version toolchain     <code>4.14.0-0</code> <code>system</code>"},{"location":"version-specific/supported-software/#manta","title":"manta","text":"<p>Manta calls structural variants (SVs) and indels from mapped paired-end sequencing reads. It is optimized for analysis of germline variation in small sets of individuals and  somatic variation in tumor/normal sample pairs. Manta discovers, assembles and  scores large-scale SVs, medium-sized indels and large insertions within a  single efficient workflow.  </p> <p>homepage: https://github.com/Illumina/manta</p>    version versionsuffix toolchain     <code>1.1.1</code>  <code>system</code>   <code>1.6.0</code>  <code>system</code>   <code>1.6.0</code> <code>-Python-2.7.16</code> <code>gompi/2019b</code>   <code>1.6.0</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>, <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#mapdamage","title":"mapDamage","text":"<p>mapDamage2 is a computational framework written in Python and     R, which tracks and quantifies DNA damage patterns among ancient DNA     sequencing reads generated by Next-Generation Sequencing platforms.</p> <p>homepage: https://ginolhac.github.io/mapDamage/</p>    version versionsuffix toolchain     <code>2.2.1</code>  <code>foss/2021b</code>   <code>2.2.1</code> <code>-R-4.0.4</code> <code>foss/2020b</code>   <code>2.2.1</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#maple","title":"Maple","text":"<p>Maple combines the world's most powerful mathematical computation engine with an intuitive,    'clickable' user interface.</p> <p>homepage: http://www.maplesoft.com/products/maple/</p>    version toolchain     <code>15</code> <code>system</code>   <code>2017.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#mapsplice","title":"MapSplice","text":"<p>MapSplice is a software for mapping RNA-seq data to reference genome for splice  junction discovery that depends only on reference genome, and not on any further annotations.</p> <p>homepage: http://www.netlab.uky.edu/p/bioinfo/MapSplice2</p>    version versionsuffix toolchain     <code>2.2.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.2.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#maq","title":"Maq","text":"<p>Maq is a software that builds mapping assemblies from short reads generated by the  next-generation sequencing  machines.</p> <p>homepage: http://maq.sourceforge.net/maq-man.shtml</p>    version toolchain     <code>0.7.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#mariadb","title":"MariaDB","text":"<p>MariaDB is an enhanced, drop-in replacement for MySQL. Included engines: myISAM, Aria, InnoDB, RocksDB, TokuDB, OQGraph, Mroonga.</p> <p>homepage: https://mariadb.org/</p>    version toolchain     <code>10.0.21</code> <code>GNU/4.9.3-2.25</code>   <code>10.1.13</code> <code>intel/2016a</code>   <code>10.1.14</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>10.1.17</code> <code>intel/2016b</code>   <code>10.1.24</code> <code>intel/2017a</code>   <code>10.2.11</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>10.3.7</code> <code>intel/2018a</code>   <code>10.3.10</code> <code>foss/2018b</code>   <code>10.3.14</code> <code>foss/2019a</code>   <code>10.4.13</code> <code>gompi/2019b</code>   <code>10.5.8</code> <code>GCC/10.2.0</code>   <code>10.6.4</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>10.9.3</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#mariadb-connector-c","title":"MariaDB-connector-c","text":"<p>MariaDB Connector/C is used to connect applications developed in C/C++ to MariaDB and MySQL databases.</p> <p>homepage: https://downloads.mariadb.org/connector-c/</p>    version toolchain     <code>2.3.4</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.3.5</code> <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>2.3.7</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2018b</code>   <code>3.1.7</code> <code>GCCcore/9.3.0</code>   <code>3.1.11</code> <code>GCCcore/10.2.0</code>   <code>3.2.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#mars","title":"MARS","text":"<p>improving Multiple circular sequence Alignment using Refined Sequences</p> <p>homepage: https://github.com/lorrainea/MARS</p>    version toolchain     <code>20191101</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#mash","title":"Mash","text":"<p>Fast genome and metagenome distance estimation using MinHash</p> <p>homepage: http://mash.readthedocs.org</p>    version toolchain     <code>2.0</code> <code>foss/2018a</code>   <code>2.1</code> <code>foss/2018b</code>   <code>2.2</code> <code>GCC/9.3.0</code>   <code>2.3</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#masurca","title":"MaSuRCA","text":"<p>MaSuRCA is whole genome assembly software. It combines the efficiency of the de Bruijn graph  and Overlap-Layout-Consensus (OLC) approaches. MaSuRCA can assemble data sets containing  only short reads from Illumina sequencing or a mixture of short reads and long reads  (Sanger, 454, Pacbio and Nanopore).</p> <p>homepage: https://www.genome.umd.edu/masurca.html</p>    version versionsuffix toolchain     <code>3.2.2</code>  <code>foss/2016a</code>   <code>3.2.2</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>   <code>3.2.4</code>  <code>foss/2018a</code>   <code>3.2.5</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>   <code>3.3.1</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>4.0.1</code> <code>-Perl-5.30.2</code> <code>foss/2020a</code>   <code>4.0.9</code> <code>-Perl-5.32.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#mathematica","title":"Mathematica","text":"<p>Mathematica is a computational software program used in many scientific, engineering, mathematical and computing fields.</p> <p>homepage: http://www.wolfram.com/mathematica</p>    version toolchain     <code>9.0.1</code> <code>system</code>   <code>10.0.2</code> <code>system</code>   <code>10.1.0</code> <code>system</code>   <code>10.4.1</code> <code>system</code>   <code>11.0.1</code> <code>system</code>   <code>11.1.1</code> <code>system</code>   <code>11.3.0</code> <code>system</code>   <code>12.0.0</code> <code>system</code>   <code>12.1.1</code> <code>system</code>   <code>13.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#mathgl","title":"MathGL","text":"<p>MathGL is ...  a library for making high-quality scientific graphics under Linux and Windows;  a library for the fast data plotting and data processing of large data arrays;  a library for working in window and console modes and for easy embedding into other programs;  a library with large and growing set of graphics. </p> <p>homepage: http://mathgl.sourceforge.net/doc_en/Main.html</p>    version toolchain     <code>2.4.1</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#matio","title":"MATIO","text":"<p>matio is an C library for reading and writing Matlab MAT files.</p> <p>homepage: http://sourceforge.net/projects/matio/</p>    version toolchain     <code>1.5.9</code> <code>GCCcore/5.4.0</code>   <code>1.5.11</code> <code>foss/2017b</code>   <code>1.5.12</code> <code>GCCcore/6.4.0</code>   <code>1.5.17</code> <code>GCCcore/8.3.0</code>   <code>1.5.19</code> <code>GCCcore/9.3.0</code>   <code>1.5.21</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#matlab","title":"MATLAB","text":"<p>MATLAB is a high-level language and interactive environment  that enables you to perform computationally intensive tasks faster than with  traditional programming languages such as C, C++, and Fortran.</p> <p>homepage: https://www.mathworks.com/products/matlab</p>    version toolchain     <code>2012b</code> <code>system</code>   <code>2013b</code> <code>system</code>   <code>2015a</code> <code>system</code>   <code>2016a</code> <code>system</code>   <code>2017a</code> <code>system</code>   <code>2018b</code> <code>system</code>   <code>2019b</code> <code>system</code>   <code>2020a</code> <code>system</code>   <code>2020b</code> <code>system</code>   <code>2021a</code> <code>system</code>   <code>2021b</code> <code>system</code>"},{"location":"version-specific/supported-software/#matlab-engine","title":"MATLAB-Engine","text":"<p>The MATLAB Engine API for Python provides a package for Python  to call MATLAB as a computational engine.</p> <p>homepage: https://www.mathworks.com/help/matlab/matlab-engine-for-python.html</p>    version versionsuffix toolchain     <code>2018b</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2018b</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2019b</code>  <code>GCCcore/8.3.0</code>   <code>2021a-9.10.1</code>  <code>GCCcore/10.2.0</code>   <code>2021b-9.11.19</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#matlab-proxy","title":"matlab-proxy","text":"<p>A Python package which enables you to launch MATLAB and access it from a web browser.</p> <p>homepage: https://github.com/mathworks/matlab-proxy</p>    version toolchain     <code>0.5.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#matplotlib","title":"matplotlib","text":"<p>matplotlib is a python 2D plotting library which produces publication quality figures in a variety of  hardcopy formats and interactive environments across platforms. matplotlib can be used in python scripts, the python  and ipython shell, web application servers, and six graphical user interface toolkits.</p> <p>homepage: https://matplotlib.org</p>    version versionsuffix toolchain     <code>1.4.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.5.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.5.1</code> <code>-Python-2.7.11-freetype-2.6.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.5.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.5.1</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.5.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.5.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.5.2</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.5.3</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.5.3</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.0.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.0.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.0.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.0.2</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.0.2</code> <code>-Python-2.7.13-Qt-4.8.7</code> <code>intel/2017a</code>   <code>2.0.2</code> <code>-Python-2.7.13-libpng-1.6.29</code> <code>intel/2017a</code>   <code>2.0.2</code> <code>-Python-3.6.1</code> <code>foss/2017a</code>   <code>2.0.2</code> <code>-Python-3.6.1-libpng-1.6.29</code> <code>intel/2017a</code>   <code>2.1.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>2.1.0</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>2.1.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>2.1.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.1.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.2</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.1.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018.02</code>, <code>iomkl/2018a</code>   <code>2.2.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.2.3</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.2.4</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>, <code>intelcuda/2019a</code>   <code>2.2.4</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>2.2.5</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>2.2.5</code> <code>-Python-2.7.18</code> <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021b</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>   <code>3.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.0.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.0.3</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>, <code>intelcuda/2019a</code>   <code>3.1.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>, <code>intelcuda/2019b</code>   <code>3.2.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>, <code>intelcuda/2020a</code>   <code>3.3.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>3.4.2</code>  <code>foss/2021a</code>, <code>gomkl/2021a</code>, <code>intel/2021a</code>   <code>3.4.3</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>3.5.1</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>3.5.2</code>  <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#matplotlib-inline","title":"matplotlib-inline","text":"<p>Matplotlib Inline Back-end for IPython and Jupyter.</p> <p>homepage: https://github.com/ipython/matplotlib-inline</p>    version toolchain     <code>0.1.3</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#matsim","title":"MATSim","text":"<p>MATSim is an open-source framework to implement large-scale agent-based transport simulations.</p> <p>homepage: https://www.matsim.org/</p>    version versionsuffix toolchain     <code>0.8.1</code> <code>-Java-1.8.0_112</code> <code>intel/2016b</code>   <code>14.0</code> <code>-Java-11</code> <code>GCCcore/11.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#maude","title":"Maude","text":"<p>Maude is a high-performance reflective language and system supporting both equational and rewriting  logic specification and programming for a wide range of applications. Maude has been influenced in important ways by  the OBJ3 language, which can be regarded as an equational logic sublanguage. Besides supporting equational  specification and programming, Maude also supports rewriting logic computation. </p> <p>homepage: https://maude.cs.illinois.edu/w/index.php/The_Maude_System</p>    version toolchain     <code>3.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#mauvealigner","title":"mauveAligner","text":"<p>Mauve is a system for constructing multiple genome alignments in the presence of large-scale evolutionary events such as rearrangement and inversion. Multiple genome alignments provide a basis for research into comparative genomics and the study of genome-wide evolutionary dynamics. This version was built without Graphical User Interface. </p> <p>homepage: https://darlinglab.org/mauve/mauve.html</p>    version toolchain     <code>4736</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#maven","title":"Maven","text":"<p>Binary maven install, Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information. </p> <p>homepage: https://maven.apache.org/index.html</p>    version toolchain     <code>3.2.3</code> <code>system</code>   <code>3.3.3</code> <code>system</code>   <code>3.3.9</code> <code>system</code>   <code>3.5.0</code> <code>system</code>   <code>3.5.2</code> <code>system</code>   <code>3.6.0</code> <code>system</code>   <code>3.6.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#mawk","title":"mawk","text":"<p>mawk is an interpreter for the AWK Programming Language.</p> <p>homepage: https://invisible-island.net/mawk/</p>    version toolchain     <code>1.3.4-20141206</code> <code>GCC/4.9.2</code>   <code>1.3.4-20171017</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#maxbin","title":"MaxBin","text":"<p>MaxBin is software for binning assembled metagenomic sequences based on an Expectation-Maximization algorithm.</p> <p>homepage: https://sourceforge.net/projects/maxbin/</p>    version versionsuffix toolchain     <code>2.2.6</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>2.2.7</code>  <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>2.2.7</code> <code>-Perl-5.28.1</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#maxquant","title":"MaxQuant","text":"<p>MaxQuant is a quantitative proteomics software package designed for analyzing large  mass-spectrometric data sets. It is specifically aimed at high-resolution MS data. Several labeling  techniques as well as label-free quantification are supported.</p> <p>homepage: https://maxquant.org/maxquant</p>    version toolchain     <code>1.6.10.43</code> <code>foss/2018b</code>   <code>2.0.3.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#mayavi","title":"mayavi","text":"<p>The Mayavi scientific data 3-dimensional visualizer</p> <p>homepage: http://code.enthought.com/projects/mayavi/</p>    version versionsuffix toolchain     <code>4.4.4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>4.6.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.7.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>4.7.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>4.7.4</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#maze","title":"maze","text":"<p>In a similar manner to dot plots, maze highlights local sequence similarity between two DNA sequences. In particular, maximal exact substring matches are computed with MUMmer3 and visualised.</p> <p>homepage: https://github.com/dellytools/maze</p>    version toolchain     <code>20170124</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#mbedtls","title":"MbedTLS","text":"<p>An open source, portable, easy to use, readable and flexible SSL library.</p> <p>homepage: https://tls.mbed.org/</p>    version toolchain     <code>2.26.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#mbrola","title":"MBROLA","text":"<p>MBROLA is a speech synthesizer based on the concatenation of diphones. It takes a list of phonemes as input, together with prosodic information (duration of phonemes and a piecewise linear description of pitch), and produces speech samples on 16 bits (linear), at the sampling frequency of the diphone database.  MBROLA voices project provides list of MBROLA speech synthesizer voices. It is intended to provide easier collaboration and automatic updates for individual users and packagers. </p> <p>homepage: &lt;['https://github.com/numediart/MBROLA', 'https://github.com/numediart/MBROLA-voices']&gt;</p>    version versionsuffix toolchain     <code>3.3</code> <code>-voices-20200330</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mbuffer","title":"mbuffer","text":"<p>mbuffer is a tool for buffering data streams with a large set of unique features. </p> <p>homepage: https://www.maier-komor.de/mbuffer.html</p>    version toolchain     <code>20191016</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mc","title":"mc","text":"<p>mc-4.6.1: User-friendly file manager and visual shell</p> <p>homepage: https://www.midnight-commander.org/</p>    version toolchain     <code>4.8.13</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#mcl","title":"MCL","text":"<p>The MCL algorithm is short for the Markov Cluster Algorithm, a fast and scalable unsupervised cluster algorithm for graphs (also known as networks) based on simulation of (stochastic) flow in graphs. </p> <p>homepage: http://micans.org/mcl/</p>    version versionsuffix toolchain     <code>02.063</code>  <code>intel/2016b</code>   <code>14.137</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>intel/2016b</code>   <code>14.137</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>14.137</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#mcr","title":"MCR","text":"<p>The MATLAB Runtime is a standalone set of shared libraries  that enables the execution of compiled MATLAB applications  or components on computers that do not have MATLAB installed.</p> <p>homepage: https://www.mathworks.com/products/compiler/mcr/</p>    version versionsuffix toolchain     <code>R2013a</code>  <code>system</code>   <code>R2013b</code>  <code>system</code>   <code>R2014a</code>  <code>system</code>   <code>R2014b</code>  <code>system</code>   <code>R2015a</code>  <code>system</code>   <code>R2015b</code>  <code>system</code>   <code>R2016a</code>  <code>system</code>   <code>R2016b</code>  <code>system</code>   <code>R2018a</code>  <code>system</code>   <code>R2018b</code>  <code>system</code>   <code>R2019a</code>  <code>system</code>   <code>R2019b</code> <code>.8</code> <code>system</code>   <code>R2020a</code> <code>.6</code> <code>system</code>   <code>R2020b</code> <code>.5</code> <code>system</code>   <code>R2021a</code> <code>.0</code> <code>system</code>   <code>R2021a</code> <code>.3</code> <code>system</code>   <code>R2021b</code>  <code>system</code>   <code>R2021b</code> <code>.1</code> <code>system</code>   <code>R2021b</code> <code>.2</code> <code>system</code>   <code>R2022a</code>  <code>system</code>   <code>R2022a</code> <code>.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#mcu","title":"mcu","text":"<p>A package for periodic wavefunction and crystallography analysis.  mcu is designed to support large scale analysis and topological descriptions for periodic wavefunction.</p> <p>homepage: https://hungqpham.com/mcu/</p>    version toolchain     <code>2021-04-06</code> <code>gomkl/2021a</code>"},{"location":"version-specific/supported-software/#mdanalysis","title":"MDAnalysis","text":"<p>MDAnalysis is an object-oriented Python library to analyze trajectories from molecular dynamics (MD) simulations in many popular formats.</p> <p>homepage: https://www.mdanalysis.org/</p>    version versionsuffix toolchain     <code>0.20.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.1.1</code>  <code>foss/2020b</code>   <code>2.0.0</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021b</code>   <code>2.2.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mdbm","title":"MDBM","text":"<p>MDBM is a super-fast memory-mapped key/value store</p> <p>homepage: https://github.com/yahoo/mdbm</p>    version toolchain     <code>4.13.0</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mdsplus","title":"MDSplus","text":"<p>MDSplus is a set of software tools for data acquisition and storage and a methodology  for management of complex scientific data.</p> <p>homepage: https://mdsplus.org/</p>    version versionsuffix toolchain     <code>7.0.67</code> <code>-Java-1.7.0_79-Python-2.7.11</code> <code>foss/2016a</code>   <code>7.46.1</code>  <code>foss/2018a</code>   <code>7.96.8</code>  <code>GCCcore/9.3.0</code>   <code>7.96.12</code>  <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mdsplus-java","title":"MDSplus-Java","text":"<p>MDSplus is a set of software tools for data acquisition and storage and a methodology  for management of complex scientific data.</p> <p>homepage: https://mdsplus.org</p>    version versionsuffix toolchain     <code>7.96.12</code> <code>-Java-13</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mdsplus-python","title":"MDSplus-Python","text":"<p>MDSplus is a set of software tools for data acquisition and storage and a methodology  for management of complex scientific data.</p> <p>homepage: https://mdsplus.org</p>    version versionsuffix toolchain     <code>7.96.12</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#mdtest","title":"mdtest","text":"<p>mdtest is an MPI-coordinated metadata benchmark test that performs   open/stat/close operations on files and directories and then reports the performance.</p> <p>homepage: http://sourceforge.net/projects/mdtest/</p>    version toolchain     <code>1.9.3</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#mdtraj","title":"MDTraj","text":"<p>Read, write and analyze MD trajectories with only a few lines of Python code.</p> <p>homepage: https://mdtraj.org</p>    version versionsuffix toolchain     <code>1.9.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.9.2</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.9.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.9.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.9.5</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>1.9.7</code>  <code>foss/2021a</code>, <code>foss/2022a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#medaka","title":"medaka","text":"<p>medaka is a tool to create a consensus sequence from nanopore sequencing data.</p> <p>homepage: https://github.com/nanoporetech/medaka</p>    version versionsuffix toolchain     <code>0.4.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.11.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.12.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.1.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.1.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.4.3</code>  <code>foss/2020b</code>   <code>1.4.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.5.0</code>  <code>foss/2021a</code>   <code>1.6.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#medimgproc","title":"medImgProc","text":"<p>Motion correction, explicit spatio-temporal regularization of motion tracking, random speckles enhancement, and segmentation.</p> <p>homepage: https://github.com/WeiXuanChan/motionSegmentation</p>    version versionsuffix toolchain     <code>2.5.7</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#medpy","title":"MedPy","text":"<p>MedPy is a library and script collection for medical image processing in Python, providing basic  functionalities for reading, writing and manipulating large images of arbitrary dimensionality. Its main  contributions are n-dimensional versions of popular image filters, a collection of image feature extractors, ready  to be used with scikit-learn, and an exhaustive n-dimensional graph-cut package.</p> <p>homepage: https://pypi.org/project/MedPy/</p>    version versionsuffix toolchain     <code>0.4.0</code>  <code>foss/2020b</code>   <code>0.4.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#meep","title":"Meep","text":"<p>Meep (or MEEP) is a free finite-difference time-domain (FDTD) simulation software package  developed at MIT to model electromagnetic systems.</p> <p>homepage: https://meep.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>1.3</code>  <code>foss/2016a</code>   <code>1.4.3</code>  <code>intel/2020a</code>   <code>1.6.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#mega","title":"MEGA","text":"<p>MEGA-CC (Molecular Evolutionary Genetics Analysis Computational Core) is an integrated suite of tools  for statistics-based comparative analysis of molecular sequence data based on evolutionary principles.</p> <p>homepage: http://www.megasoftware.net/</p>    version toolchain     <code>7.0.20-1</code> <code>system</code>   <code>10.0.5</code> <code>system</code>   <code>11.0.10</code> <code>system</code>"},{"location":"version-specific/supported-software/#megacc","title":"MEGACC","text":"<p>MEGA-Computing Core - Sophisticated and user-friendly software suite for analyzing DNA and   protein sequence data from species and populations.</p> <p>homepage: http://www.megasoftware.net</p>    version toolchain     <code>7.0.18-1</code> <code>system</code>"},{"location":"version-specific/supported-software/#megahit","title":"MEGAHIT","text":"<p>An ultra-fast single-node solution for large and complex  metagenomics assembly via succinct de Bruijn graph</p> <p>homepage: https://github.com/voutcn/megahit</p>    version versionsuffix toolchain     <code>1.1.2</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>1.1.3</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>   <code>1.1.3</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>1.1.4</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.1.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.2.8</code>  <code>GCCcore/8.2.0</code>   <code>1.2.9</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>   <code>1.2.9</code> <code>-Python-2.7.18</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#megalodon","title":"Megalodon","text":"<p>Megalodon is a research command line tool to extract high accuracy modified base and sequence variant calls from raw nanopore reads by anchoring the information rich basecalling neural network output to a reference genome/transriptome.</p> <p>homepage: https://github.com/nanoporetech/megalodon</p>    version versionsuffix toolchain     <code>2.3.5</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.5.0</code>  <code>foss/2021a</code>   <code>2.5.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#megan","title":"MEGAN","text":"<p>MEGAN is a comprehensive toolbox for interactively analyzing microbiome data</p> <p>homepage: http://megan.informatik.uni-tuebingen.de/</p>    version versionsuffix toolchain     <code>6.22.0</code> <code>-Java-17</code> <code>system</code>"},{"location":"version-specific/supported-software/#meld","title":"Meld","text":"<p>Meld is a visual diff and merge tool targeted at developers.   Meld helps you compare files, directories, and version controlled projects.   It provides two- and three-way comparison of both files and directories, and has support   for many popular version control systems.   </p> <p>homepage: https://meldmerge.org/</p>    version versionsuffix toolchain     <code>3.20.1</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#mem","title":"MEM","text":"<p>Marker Enrichment Modeling (MEM) is a tool designed to calculate enrichment scores.</p> <p>homepage: https://github.com/cytolab/mem</p>    version versionsuffix toolchain     <code>20191023</code>  <code>foss/2019b</code>   <code>20191023</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#meme","title":"MEME","text":"<p>The MEME Suite allows you to: * discover motifs using MEME, DREME (DNA only) or  GLAM2 on groups of related DNA or protein sequences, * search sequence databases with motifs using  MAST, FIMO, MCAST or GLAM2SCAN, * compare a motif to all motifs in a database of motifs, * associate  motifs with Gene Ontology terms via their putative target genes, and * analyse motif enrichment  using SpaMo or CentriMo.</p> <p>homepage: https://meme-suite.org/meme/index.html</p>    version versionsuffix toolchain     <code>5.0.4</code> <code>-Perl-5.26.0-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.0.4</code> <code>-Perl-5.26.0-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.1.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>5.1.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>5.4.1</code>  <code>GCC/10.3.0</code>, <code>gompi/2021b</code>   <code>5.4.1</code> <code>-Python-2.7.18</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#memkind","title":"memkind","text":"<p>User Extensible Heap Manager built on top of jemalloc which enables control of memory characteristics  and a partitioning of the heap between kinds of memory. </p> <p>homepage: http://memkind.github.io</p>    version toolchain     <code>1.5.0</code> <code>GCCcore/5.4.0</code>"},{"location":"version-specific/supported-software/#memory-profiler","title":"memory-profiler","text":"<p>memory-profiler is a Python module for monitoring memory consumption of a process  as well as line-by-line analysis of memory consumption for python programs.</p> <p>homepage: https://pypi.org/project/memory-profiler</p>    version toolchain     <code>0.55.0</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#memote","title":"MEMOTE","text":"<p>The genome-scale metabolic model test suite</p> <p>homepage: https://github.com/opencobra/memote</p>    version toolchain     <code>0.13.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#memtester","title":"memtester","text":"<p>A userspace utility for testing the memory subsystem for faults</p> <p>homepage: https://pyropus.ca./software/memtester/</p>    version toolchain     <code>4.5.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#merantk","title":"meRanTK","text":"<p>meRanTK is a versatile high performance toolkit for complete analysis of methylated RNA data.</p> <p>homepage: http://www.icbi.at/index.html</p>    version toolchain     <code>1.1.1b</code> <code>system</code>"},{"location":"version-specific/supported-software/#merckx","title":"MERCKX","text":"<p>Multilingual Entity/Resource Combiner &amp; Knowledge eXtractor</p> <p>homepage: https://github.com/madewild/MERCKX</p>    version versionsuffix toolchain     <code>20170330</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#mercurial","title":"Mercurial","text":"<p>Mercurial is a free, distributed source control management tool. It efficiently handles projects of any size and offers an easy and intuitive interface. </p> <p>homepage: https://www.mercurial-scm.org</p>    version versionsuffix toolchain     <code>3.8.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>5.7.1</code>  <code>GCCcore/10.2.0</code>   <code>5.7.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>5.8</code>  <code>GCCcore/10.3.0</code>   <code>6.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#mesa","title":"Mesa","text":"<p>Mesa is an open-source implementation of the OpenGL specification -  a system for rendering interactive 3D graphics.</p> <p>homepage: https://www.mesa3d.org/</p>    version toolchain     <code>11.1.2</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>11.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>12.0.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>17.0.2</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>17.2.4</code> <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>17.2.5</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>   <code>17.3.6</code> <code>foss/2018a</code>, <code>fosscuda/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>18.1.1</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>19.0.1</code> <code>GCCcore/8.2.0</code>   <code>19.1.7</code> <code>GCCcore/8.3.0</code>   <code>19.2.1</code> <code>GCCcore/8.3.0</code>   <code>20.0.2</code> <code>GCCcore/9.3.0</code>   <code>20.2.1</code> <code>GCCcore/10.2.0</code>   <code>21.1.1</code> <code>GCCcore/10.3.0</code>   <code>21.1.7</code> <code>GCCcore/11.2.0</code>   <code>22.0.3</code> <code>GCCcore/11.3.0</code>   <code>22.2.4</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#mesa-demos","title":"Mesa-demos","text":"<p>Mesa utility and demo programs, including glxinfo and eglinfo.</p> <p>homepage: https://www.mesa3d.org/</p>    version toolchain     <code>8.4.0</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#meshalyzer","title":"meshalyzer","text":"<p>Graphical program for display time dependent data on 3D finite element meshes</p> <p>homepage: https://git.opencarp.org/openCARP/meshalyzer</p>    version versionsuffix toolchain     <code>2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.2</code>  <code>foss/2020b</code>   <code>20200308</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#meshio","title":"meshio","text":"<p>meshio is a tool for reading/writing various mesh formats representing unstructured meshes</p> <p>homepage: https://github.com/nschloe/meshio</p>    version versionsuffix toolchain     <code>1.7.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.0.2</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.0.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#meshtool","title":"meshtool","text":"<p>Meshtool is a comand-line tool written in C++. It is designed to apply various manipulations to volumetric meshes.</p> <p>homepage: https://bitbucket.org/aneic/meshtool</p>    version toolchain     <code>16</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#meson","title":"Meson","text":"<p>Meson is a cross-platform build system designed to be both as fast and as user friendly as possible.</p> <p>homepage: https://mesonbuild.com</p>    version versionsuffix toolchain     <code>0.43.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.46.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>0.48.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.48.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>0.50.0</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>0.51.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.53.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.53.2</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>0.55.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>0.55.3</code>  <code>GCCcore/10.2.0</code>   <code>0.58.0</code>  <code>GCCcore/10.3.0</code>   <code>0.58.2</code>  <code>GCCcore/11.2.0</code>   <code>0.59.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.62.1</code>  <code>GCCcore/11.3.0</code>   <code>0.64.0</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#meson-python","title":"meson-python","text":"<p>Python build backend (PEP 517) for Meson projects</p> <p>homepage: https://github.com/mesonbuild/meson-python</p>    version toolchain     <code>0.11.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#mesquite","title":"Mesquite","text":"<p>Mesh-Quality Improvement Library</p> <p>homepage: https://software.sandia.gov/mesquite/</p>    version toolchain     <code>2.3.0</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/8.3.0</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#mess","title":"MESS","text":"<p>Master Equation System Solver (MESS)</p> <p>homepage: https://github.com/PACChem/MESS</p>    version toolchain     <code>0.1.6</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#metabat","title":"MetaBAT","text":"<p>An efficient tool for accurately reconstructing single genomes from complex microbial communities</p> <p>homepage: https://bitbucket.org/berkeleylab/metabat</p>    version versionsuffix toolchain     <code>2.12.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.14</code>  <code>gompi/2019a</code>   <code>2.15</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>2.15</code> <code>-Python-2.7.18</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#metaboanalystr","title":"MetaboAnalystR","text":"<p>MetaboAnalystR contains the R functions and libraries underlying the popular MetaboAnalyst web  server, including &gt; 500 functions for metabolomic data analysis, visualization, and functional interpretation.</p> <p>homepage: https://www.metaboanalyst.ca</p>    version versionsuffix toolchain     <code>2.0.1-20190827</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#metaerg","title":"metaerg","text":"<p>MetaErg is a stand-alone and fully automated metagenomic and metaproteomic data annotation pipeline.</p> <p>homepage: https://github.com/xiaoli-dong/metaerg</p>    version versionsuffix toolchain     <code>1.2.3</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#metaeuk","title":"MetaEuk","text":"<p>MetaEuk is a modular toolkit designed for large-scale gene discovery and annotation in eukaryotic  metagenomic contigs.</p> <p>homepage: https://metaeuk.soedinglab.org</p>    version toolchain     <code>4</code> <code>GCC/10.2.0</code>   <code>5</code> <code>GCC/10.3.0</code>   <code>6</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#metageneannotator","title":"MetaGeneAnnotator","text":"<p>MetaGeneAnnotator is a gene-finding program for prokaryote and phage.</p> <p>homepage: http://metagene.nig.ac.jp/</p>    version versionsuffix toolchain     <code>20080819</code> <code>-x86-64</code> <code>system</code>"},{"location":"version-specific/supported-software/#metagenome-atlas","title":"Metagenome-Atlas","text":"<p>Metagenome-atlas is a easy-to-use metagenomic pipeline based on snakemake.  It handles all steps from QC, Assembly, Binning, to Annotation.</p> <p>homepage: https://github.com/metagenome-atlas/atlas</p>    version versionsuffix toolchain     <code>2.4.3</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#metal","title":"Metal","text":"<p>Metal - Meta Analysis Helper. The METAL software is designed to facilitate meta-analysis of large  datasets (such as several whole genome scans) in a convenient, rapid and memory efficient manner.</p> <p>homepage: http://csg.sph.umich.edu/abecasis/Metal/</p>    version toolchain     <code>2011-03-25</code> <code>foss/2016a</code>   <code>2020-05-05</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#metamorpheus","title":"MetaMorpheus","text":"<p>MetaMorpheus is a bottom-up proteomics database search software  with integrated post-translational modification (PTM) discovery capability.  This program combines features of Morpheus and G-PTM-D in a single tool. </p> <p>homepage: https://github.com/smith-chem-wisc/MetaMorpheus</p>    version toolchain     <code>0.0.320</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#metaphlan","title":"MetaPhlAn","text":"<p>MetaPhlAn is a computational tool for profiling the composition  of microbial communities from metagenomic shotgun sequencing data </p> <p>homepage: https://github.com/biobakery/MetaPhlAn</p>    version versionsuffix toolchain     <code>3.0.9</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#metaphlan2","title":"MetaPhlAn2","text":"<p>MetaPhlAn is a computational tool for profiling the composition of microbial  communities (Bacteria, Archaea, Eukaryotes and Viruses) from metagenomic shotgun sequencing  data (i.e. not 16S) with species-level. With the newly added StrainPhlAn module, it is now  possible to perform accurate strain-level microbial profiling.</p> <p>homepage: https://bitbucket.org/biobakery/metaphlan2/</p>    version versionsuffix toolchain     <code>2.7.8</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.7.8</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.7.8</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#metawrap","title":"metaWRAP","text":"<p>MetaWRAP aims to be an easy-to-use metagenomic wrapper suite that accomplishes the core tasks of metagenomic analysis from start to finish: read quality control, assembly, visualization, taxonomic profiling, extracting draft genomes (binning), and functional annotation.</p> <p>homepage: https://github.com/bxlab/metaWRAP</p>    version versionsuffix toolchain     <code>1.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.2.2</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>1.3</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#metaxa2","title":"Metaxa2","text":"<p>Metaxa2 -- Identifies Small Subunit (SSU) rRNAs and classifies them taxonomically</p> <p>homepage: https://microbiology.se/software/metaxa2/</p>    version toolchain     <code>2.2</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#methyldackel","title":"MethylDackel","text":"<p>A (mostly) universal methylation extractor for BS-seq experiments.</p> <p>homepage: https://github.com/dpryan79/MethylDackel</p>    version toolchain     <code>0.4.0</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>0.5.0</code> <code>iccifort/2019.5.281</code>   <code>0.6.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#methylpy","title":"methylpy","text":"<p>Bisulfite sequencing data processing and differential methylation analysis.</p> <p>homepage: https://pypi.python.org/pypi/methylpy</p>    version versionsuffix toolchain     <code>1.1.9</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>1.2.9</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#metis","title":"METIS","text":"<p>METIS is a set of serial programs for partitioning graphs, partitioning finite element meshes, and producing fill reducing orderings for sparse matrices. The algorithms implemented in METIS are based on the multilevel recursive-bisection, multilevel k-way, and multi-constraint partitioning schemes.</p> <p>homepage: http://glaros.dtc.umn.edu/gkhome/metis/metis/overview</p>    version versionsuffix toolchain     <code>5.0.2</code>  <code>gimkl/2.11.5</code>   <code>5.1.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2018b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>5.1.0</code> <code>-32bitIDX</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#mgltools","title":"mgltools","text":"<p>The MGLTools software suite can be used for visualization     and analysis of molecular structures and comprises     the Python Molecular Viewer (PMV, a general purpose molecular viewer),     AutoDockTools (ADT, a set of PMV commands specifically developed to support AutoDock users)     and Vision (a visual programming environment). </p> <p>homepage: https://ccsb.scripps.edu/mgltools/</p>    version toolchain     <code>1.5.7</code> <code>system</code>"},{"location":"version-specific/supported-software/#mhcflurry","title":"mhcflurry","text":"<p>MHCflurry implements class I peptide/MHC binding affinity  prediction. By default it supports 112 MHC alleles using ensembles of  allele-specific models. Pan-allele predictors supporting virtually any MHC  allele of known sequence are available for testing (see below). MHCflurry  runs on Python 2.7 and 3.4+ using the keras neural network library. It  exposes command-line and Python library interfaces.</p> <p>homepage: https://github.com/openvax/mhcflurry</p>    version versionsuffix toolchain     <code>1.2.4</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#mhcnuggets","title":"mhcnuggets","text":"<p>MHCnuggets: Neoantigen peptide MHC binding prediction for class I and II.</p> <p>homepage: https://github.com/KarchinLab/mhcnuggets</p>    version versionsuffix toolchain     <code>2.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.3</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#microbeannotator","title":"MicrobeAnnotator","text":"<p>Easy-to-use pipeline for the comprehensive metabolic annotation of microbial genomes.</p> <p>homepage: https://github.com/cruizperez/MicrobeAnnotator</p>    version toolchain     <code>2.0.5</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#microctools","title":"microctools","text":"<p>Various worker functions for microclimc package</p> <p>homepage: https://github.com/ilyamaclean/microctools</p>    version versionsuffix toolchain     <code>0.1.0-20201209</code> <code>-R-4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#migec","title":"MiGEC","text":"<p>MIGEC is a software pipeline that facilitates processing and analysis of   immune repertoire sequencing data generated using molecular barcoding technique</p> <p>homepage: https://milaboratory.com/software/migec/</p>    version versionsuffix toolchain     <code>1.2.8</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>1.2.9</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#migrate-n","title":"MIGRATE-N","text":"<p>Migrate estimates population parameters, effective population sizes and migration rates of n populations, using genetic data.  It  uses a coalescent theory approach taking into account history of  mutations and uncertainty of the genealogy.  </p> <p>homepage: https://peterbeerli.com/migrate-html5/index.html</p>    version toolchain     <code>4.2.8</code> <code>foss/2016a</code>   <code>4.2.14</code> <code>foss/2018a</code>   <code>5.0.4</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#miller","title":"Miller","text":"<p>Miller is like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON</p> <p>homepage: https://miller.readthedocs.io/</p>    version toolchain     <code>6.4.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#mimalloc","title":"mimalloc","text":"<p>mimalloc is a general purpose allocator with excellent performance characteristics.</p> <p>homepage: https://microsoft.github.io/mimalloc/</p>    version toolchain     <code>1.7.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#minc","title":"MINC","text":"<p>Medical Image NetCDF or MINC isn't netCDF.</p> <p>homepage: https://github.com/BIC-MNI/libminc</p>    version toolchain     <code>2.4.03</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#minced","title":"MinCED","text":"<p>Mining CRISPRs in Environmental Datasets</p> <p>homepage: https://github.com/ctSkennerton/minced</p>    version versionsuffix toolchain     <code>0.4.2</code> <code>-Java-11</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#mini-xml","title":"Mini-XML","text":"<p>Mini-XML is a small XML parsing library that you can use to read XML data files or strings in your  application without requiring large non-standard libraries</p> <p>homepage: https://www.msweet.org/mxml</p>    version toolchain     <code>2.9</code> <code>GCCcore/8.2.0</code>   <code>2.12</code> <code>GCCcore/9.3.0</code>   <code>3.2</code> <code>GCCcore/10.3.0</code>   <code>3.3.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#miniasm","title":"miniasm","text":"<p>Miniasm is a very fast OLC-based de novo assembler for noisy long reads. It takes all-vs-all read self-mappings (typically by minimap) as input and outputs an assembly graph in the GFA format. Different from mainstream assemblers, miniasm does not have a consensus step. It simply concatenates pieces of read sequences to generate the final unitig sequences. Thus the per-base error rate is similar to the raw input reads.</p> <p>homepage: https://github.com/lh3/minimap2</p>    version toolchain     <code>0.3-20191007</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#minibar","title":"minibar","text":"<p>Dual barcode and primer demultiplexing for MinION sequenced reads</p> <p>homepage: https://github.com/calacademy-research/minibar</p>    version versionsuffix toolchain     <code>20200326</code> <code>-Python-3.7.4</code> <code>iccifort/2019.5.281</code>   <code>20200326</code> <code>-Python-3.8.2</code> <code>iccifort/2020.1.217</code>"},{"location":"version-specific/supported-software/#minicard","title":"MiniCARD","text":"<p>MiniCARD is a cardinality solver based on MiniSAT [www.minisat.se].  MiniCARD handles cardinality constraints natively, using the same efficient data structures and techniques MiniSAT uses for clauses, giving it much better performance on cardinality constraints than CNF encodings of those constraints passed to a typical SAT solver.  It can read the standard DIMACS CNF format, the OPB pseudo-boolean format (with linear cardinality constraints only), and CNF+, a format that extends CNF to include cardinality constraints.</p> <p>homepage: https://github.com/liffiton/minicard</p>    version toolchain     <code>1.2</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#miniconda2","title":"Miniconda2","text":"<p>Miniconda is a free minimal installer for conda. It is a small,  bootstrap version of Anaconda that includes only conda, Python, the packages they  depend on, and a small number of other useful packages.</p> <p>homepage: https://docs.conda.io/en/latest/miniconda.html</p>    version toolchain     <code>4.3.21</code> <code>system</code>   <code>4.6.14</code> <code>system</code>   <code>4.7.10</code> <code>system</code>"},{"location":"version-specific/supported-software/#miniconda3","title":"Miniconda3","text":"<p>Miniconda is a free minimal installer for conda. It is a small,  bootstrap version of Anaconda that includes only conda, Python, the packages they  depend on, and a small number of other useful packages.</p> <p>homepage: https://docs.conda.io/en/latest/miniconda.html</p>    version toolchain     <code>4.4.10</code> <code>system</code>   <code>4.5.12</code> <code>system</code>   <code>4.6.14</code> <code>system</code>   <code>4.7.10</code> <code>system</code>   <code>4.8.3</code> <code>system</code>   <code>4.9.2</code> <code>system</code>   <code>4.12.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#minieigen","title":"minieigen","text":"<p>A small wrapper for core parts of EIgen, c++ library for linear algebra.</p> <p>homepage: https://launchpad.net/minieigen/</p>    version versionsuffix toolchain     <code>0.5.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.5.3</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.5.3</code> <code>-Python-2.7.12-Boost-1.63.0</code> <code>intel/2016b</code>   <code>0.5.4</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#minimac4","title":"Minimac4","text":"<p>Minimac4 is a latest version in the series of genotype imputation software  - preceded by Minimac3 (2015), Minimac2 (2014), minimac (2012) and MaCH (2010).  Minimac4 is a lower memory and more computationally efficient implementation  of the original algorithms with comparable imputation quality.</p> <p>homepage: https://genome.sph.umich.edu/wiki/Minimac4</p>    version toolchain     <code>1.0.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#minimap2","title":"minimap2","text":"<p>Minimap2 is a fast sequence mapping and alignment program that can find overlaps between long noisy reads, or map long reads or their assemblies to a reference genome optionally with detailed alignment (i.e. CIGAR). At present, it works efficiently with query sequences from a few kilobases to ~100 megabases in length at an error rate ~15%. Minimap2 outputs in the PAF or the SAM format. On limited test data sets, minimap2 is over 20 times faster than most other long-read aligners. It will replace BWA-MEM for long reads and contig alignment.</p> <p>homepage: https://github.com/lh3/minimap2</p>    version toolchain     <code>2.0rc1</code> <code>foss/2016b</code>   <code>2.10</code> <code>foss/2018a</code>   <code>2.11</code> <code>intel/2018a</code>   <code>2.12</code> <code>foss/2018a</code>   <code>2.13</code> <code>foss/2018b</code>   <code>2.17</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.18</code> <code>GCCcore/10.2.0</code>   <code>2.20</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.22</code> <code>GCCcore/11.2.0</code>   <code>2.24</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#minipolish","title":"Minipolish","text":"<p>A tool for Racon polishing of miniasm assemblies</p> <p>homepage: https://github.com/rrwick/Minipolish</p>    version toolchain     <code>0.1.3</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#minisat","title":"MiniSat","text":"<p>MiniSat is a minimalistic, open-source SAT solver, developed to help researchers and developers alike to get started on SAT.</p> <p>homepage: http://minisat.se/</p>    version toolchain     <code>2.2.0</code> <code>GCC/9.3.0</code>   <code>20130925</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#minizip","title":"minizip","text":"<p>Mini zip and unzip based on zlib</p> <p>homepage: https://www.winimage.com/zLibDll/minizip.html</p>    version toolchain     <code>1.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#minpack","title":"MINPACK","text":"<p>Minpack includes software for solving nonlinear equations and  nonlinear least squares problems.  Five algorithmic paths each include  a core subroutine and an easy-to-use driver.  The algorithms proceed  either from an analytic specification of the Jacobian matrix or  directly from the problem functions.  The paths include facilities for  systems of equations with a banded Jacobian matrix, for least squares  problems with a large amount of data, and for checking the consistency  of the Jacobian matrix with the functions. </p> <p>homepage: https://www.netlib.org/minpack/</p>    version toolchain     <code>19961126</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#minpath","title":"MinPath","text":"<p>MinPath (Minimal set of Pathways) is a parsimony approach for biological pathway reconstructions  using protein family predictions, achieving a more conservative, yet more faithful, estimation of the biological  pathways for a query dataset.</p> <p>homepage: https://omics.informatics.indiana.edu/MinPath</p>    version versionsuffix toolchain     <code>1.4</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.4</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>1.6</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#mira","title":"MIRA","text":"<p>MIRA is a whole genome shotgun and EST sequence assembler for Sanger, 454, Solexa (Illumina),  IonTorrent data and PacBio (the latter at the moment only CCS and error-corrected CLR reads).</p> <p>homepage: https://sourceforge.net/p/mira-assembler/wiki/Home/</p>    version versionsuffix toolchain     <code>4.0.2</code>  <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>intel/2017b</code>   <code>4.0.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>4.9.6</code>  <code>intel/2017b</code>   <code>5.0rc2</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#mirdeep2","title":"miRDeep2","text":"<p>miRDeep2 is a completely overhauled tool which discovers microRNA genes by analyzing sequenced RNAs</p> <p>homepage: https://www.mdc-berlin.de/8551903/en/</p>    version versionsuffix toolchain     <code>0.1.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.0.0.8</code>  <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#mish-cuda","title":"Mish-Cuda","text":"<p>Mish-Cuda: Self Regularized Non-Monotonic Activation Function</p> <p>homepage: https://github.com/JunnYu/mish-cuda</p>    version versionsuffix toolchain     <code>20210309</code> <code>-PyTorch-1.9.0</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#misha","title":"misha","text":"<p>The misha package is intended to help users to efficiently analyze genomic data achieved  from various experiments.</p> <p>homepage: https://github.com/tanaylab/misha</p>    version versionsuffix toolchain     <code>4.0.10</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#mitgcmutils","title":"MITgcmutils","text":"<p>A numerical model designed for study of the atmosphere, ocean,  and climate, MITgcm\u2019s flexible non-hydrostatic formulation enables it to  efficiently simulate fluid phenomena over a wide range of scales; its adjoint  capabilities enable it to be applied to sensitivity questions and to parameter  and state estimation problems. By employing fluid equation isomorphisms, a  single dynamical kernel can be used to simulate flow of both the atmosphere  and ocean. The model is developed to perform efficiently on a wide variety of  computational platforms.</p> <p>homepage: https://mitgcm.org/</p>    version toolchain     <code>0.1.2</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mitobim","title":"MITObim","text":"<p>The MITObim procedure (mitochondrial baiting and iterative mapping) represents  a highly efficient approach to assembling novel mitochondrial genomes of non-model organisms  directly from total genomic DNA derived NGS reads.</p> <p>homepage: https://github.com/chrishah/MITObim</p>    version toolchain     <code>1.9.1</code> <code>foss/2018b</code>, <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#mitoz","title":"MitoZ","text":"<p>MitoZ is a Python3-based toolkit which aims to automatically filter pair-end raw data (fastq files),  assemble genome, search for mitogenome sequences from the genome assembly result, annotate mitogenome  (genbank file as result), and mitogenome visualization.</p> <p>homepage: https://github.com/linzhi2013/MitoZ</p>    version versionsuffix toolchain     <code>2.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#mixcr","title":"MiXCR","text":"<p>MiXCR processes big immunome data from raw sequences  to quantitated clonotypes </p> <p>homepage: https://milaboratory.com/software/mixcr/</p>    version versionsuffix toolchain     <code>2.1.9</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>3.0.3</code> <code>-Java-1.8</code> <code>system</code>   <code>3.0.13</code> <code>-Java-1.8</code> <code>system</code>   <code>3.0.13</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#mixmhc2pred","title":"MixMHC2pred","text":"<p>MixMHC2pred is a predictor of HLA class II ligands and epitopes.  It is described in publication Racle, J., et al. Robust prediction of HLA class II  epitopes by deep motif deconvolution of immunopeptidomes</p> <p>homepage: https://github.com/GfellerLab/MixMHC2pred</p>    version toolchain     <code>1.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#mkl-dnn","title":"mkl-dnn","text":"<p>Intel(R) Math Kernel Library for Deep Neural Networks (Intel(R) MKL-DNN)</p> <p>homepage: https://01.org/mkl-dnn</p>    version toolchain     <code>0.11</code> <code>intel/2017b</code>   <code>0.13</code> <code>intel/2018a</code>   <code>0.16</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.17.2</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#mkl-service","title":"mkl-service","text":"<p>Python hooks for Intel(R) Math Kernel Library runtime control settings.</p> <p>homepage: https://github.com/IntelPython/mkl-service</p>    version versionsuffix toolchain     <code>2.0.2</code>  <code>intel/2019a</code>   <code>2.3.0</code>  <code>intel/2020b</code>, <code>intel/2021b</code>   <code>2.3.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#mkl_fft","title":"mkl_fft","text":"<p>NumPy-based Python interface to Intel(R) MKL FFT functionality</p> <p>homepage: https://github.com/IntelPython/mkl_fft</p>    version versionsuffix toolchain     <code>1.0.14</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#mlc","title":"MLC","text":"<p>Intel Memory Latency Checker (Intel MLC) is a tool used to measure memory latencies and b/w,  and how they change with increasing load on the system.</p> <p>homepage: https://software.intel.com/en-us/articles/intelr-memory-latency-checker</p>    version toolchain     <code>3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#mlxtend","title":"MLxtend","text":"<p>Mlxtend (machine learning extensions) is a Python library of useful tools for the day-to-day data  science tasks.</p> <p>homepage: https://rasbt.github.io/mlxtend/</p>    version versionsuffix toolchain     <code>0.17.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#mm-common","title":"mm-common","text":"<p>The mm-common module provides the build infrastructure and utilities shared among the GNOME C++ binding  libraries.</p> <p>homepage: https://gitlab.gnome.org/GNOME/mm-common</p>    version toolchain     <code>1.0.4</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#mmg","title":"Mmg","text":"<p>Mmg is an open source software for simplicial remeshing. It provides 3 applications and 4 libraries: the mmg2d application and the libmmg2d library: adaptation and optimization of a two-dimensional triangulation and generation of a triangulation from a set of points or from given boundary edges the mmgs application and the libmmgs library: adaptation and optimization of a surface triangulation and isovalue discretization the mmg3d application and the libmmg3d library: adaptation and optimization of a tetrahedral mesh and implicit domain meshing the libmmg library gathering the libmmg2d, libmmgs and libmmg3d libraries.</p> <p>homepage: https://www.mmgtools.org/</p>    version toolchain     <code>5.3.9</code> <code>foss/2017b</code>   <code>5.6.0</code> <code>gompi/2021a</code>, <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#mmseq","title":"MMSEQ","text":"<p>The MMSEQ package contains a collection of statistical tools  for analysing RNA-seq expression data. </p> <p>homepage: https://github.com/eturro/mmseq</p>    version versionsuffix toolchain     <code>1.0.8</code> <code>-linux64-static</code> <code>system</code>"},{"location":"version-specific/supported-software/#mmseqs2","title":"MMseqs2","text":"<p>MMseqs2: ultra fast and sensitive search and clustering suite</p> <p>homepage: https://mmseqs.com</p>    version toolchain     <code>1-c7a89</code> <code>foss/2016b</code>   <code>5-9375b</code> <code>intel/2018a</code>   <code>8-fac81</code> <code>intel/2018b</code>   <code>10-6d92c</code> <code>gompi/2019b</code>, <code>iimpi/2019b</code>   <code>11-e1a1c</code> <code>iimpi/2019b</code>   <code>13-45111</code> <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>13-45111-20211006</code> <code>gompi/2020b</code>   <code>13-45111-20211019</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#mmtf-cpp","title":"mmtf-cpp","text":"<p>The Macromolecular Transmission Format (MMTF) is a new compact binary format to  transmit and store biomolecular structures for fast 3D visualization and        analysis. </p> <p>homepage: https://mmtf.rcsb.org/</p>    version toolchain     <code>1.0.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#mne-python","title":"MNE-Python","text":"<p>MNE-Python software is an open-source Python package for exploring, visualizing, and analyzing human neurophysiological data such as MEG, EEG, sEEG, ECoG, and more. It includes modules for data input/output, preprocessing, visualization, source estimation, time-frequency analysis, connectivity analysis, machine learning, and statistics.</p> <p>homepage: https://mne.tools/stable/index.html</p>    version toolchain     <code>0.24.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#moabs","title":"MOABS","text":"<p>MOABS: MOdel based Analysis of Bisulfite Sequencing data</p> <p>homepage: https://github.com/sunnyisgalaxy/moabs</p>    version toolchain     <code>1.3.9.6</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#modeltest-ng","title":"ModelTest-NG","text":"<p>ModelTest-NG is a tool for selecting the best-fit model of evolution for DNA and protein alignments. ModelTest-NG supersedes jModelTest and ProtTest in one single tool, with graphical and command console interfaces. </p> <p>homepage: https://github.com/ddarriba/modeltest</p>    version toolchain     <code>0.1.7</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#modred","title":"modred","text":"<p>Compute modal decompositions and reduced-order models, easily, efficiently, and in parallel.</p> <p>homepage: https://pypi.python.org/pypi/modred/</p>    version versionsuffix toolchain     <code>2.0.2</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#molcas","title":"Molcas","text":"<p>Molcas is an ab initio quantum chemistry software package developed by scientists to be used by scientists. The basic philosophy is is to be able to treat general electronic structures for molecules consisting of atoms from most of the periodic table. As such, the primary focus of the package is on multiconfigurational methods with applications typically connected to the treatment of highly degenerate states.</p> <p>homepage: http://www.molcas.org</p>    version versionsuffix toolchain     <code>8.0-15.06.18</code> <code>_CentOS_6.6_x86_64</code> <code>system</code>   <code>8.2</code> <code>-centos-mkl-par</code> <code>system</code>   <code>8.2</code> <code>-centos-par</code> <code>system</code>"},{"location":"version-specific/supported-software/#mold","title":"mold","text":"<p>mold is a high-performance drop-in replacement for existing Unix linkers.</p> <p>homepage: https://github.com/rui314/mold</p>    version toolchain     <code>0.9.6</code> <code>GCCcore/11.2.0</code>   <code>1.0.0</code> <code>GCCcore/11.2.0</code>   <code>1.2.1</code> <code>GCCcore/11.3.0</code>   <code>1.3.0</code> <code>GCCcore/11.3.0</code>   <code>1.7.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#molden","title":"Molden","text":"<p>Molden is a package for displaying Molecular Density from the  Ab Initio packages GAMESS-UK, GAMESS-US and GAUSSIAN and the Semi-Empirical  packages Mopac/Ampac</p> <p>homepage: https://www.theochem.ru.nl/molden/</p>    version toolchain     <code>5.6</code> <code>foss/2016a</code>   <code>5.7</code> <code>intel/2016b</code>   <code>5.8</code> <code>foss/2018a</code>   <code>6.1</code> <code>GCCcore/8.2.0</code>   <code>6.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>7.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#molekel","title":"Molekel","text":"<p>Molekel is an open-source multi-platform molecular visualization program. </p> <p>homepage: http://ugovaretto.github.io/molekel/wiki/pmwiki.php/Main/HomePage.html</p>    version versionsuffix toolchain     <code>5.4.0</code> <code>-Linux_x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#molmod","title":"molmod","text":"<p>MolMod is a Python library with many compoments that are useful to write molecular modeling programs.</p> <p>homepage: https://molmod.github.io/molmod/</p>    version versionsuffix toolchain     <code>1.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.4.3</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.4.3</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.4.4</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.4.4</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.4.4</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>1.4.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.4.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.4.8</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#molpro","title":"Molpro","text":"<p>Molpro is a complete system of ab initio programs for molecular electronic structure calculations.</p> <p>homepage: https://www.molpro.net</p>    version versionsuffix toolchain     <code>2010.1.23</code> <code>.Linux_x86_64</code> <code>system</code>   <code>2015.1.0</code> <code>.linux_x86_64_intel</code> <code>system</code>   <code>2015.1.3</code> <code>.linux_x86_64_openmp</code> <code>system</code>   <code>2015.1.10</code> <code>.linux_x86_64_openmp</code> <code>system</code>"},{"location":"version-specific/supported-software/#mona","title":"MONA","text":"<p>MONA is a tool that translates formulas to finite-state automata. The formulas may express search patterns, temporal properties of reactive systems, parse tree constraints, etc. MONA analyses the automaton resulting from the compilation and prints out \"valid\" or a counter-example.</p> <p>homepage: https://www.brics.dk/mona/index.html</p>    version toolchain     <code>1.4-18</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#monai","title":"MONAI","text":"<p>MONAI is a PyTorch-based, open-source framework for deep learning in healthcare imaging, part of PyTorch Ecosystem. </p> <p>homepage: https://monai.io/</p>    version versionsuffix toolchain     <code>0.8.0</code>  <code>foss/2021a</code>   <code>0.8.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.0.1</code>  <code>foss/2022a</code>   <code>1.0.1</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mongolite","title":"mongolite","text":"<p>High-performance MongoDB client based on 'mongo-c-driver' and 'jsonlite'.  Includes support for aggregation, indexing, map-reduce, streaming, encryption,  enterprise authentication, and GridFS. The online user manual provides an overview  of the available methods in the package: https://jeroen.github.io/mongolite/.</p> <p>homepage: https://cran.r-project.org/web/packages/mongolite</p>    version versionsuffix toolchain     <code>2.3.0</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>2.3.0</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>2.3.0</code> <code>-R-4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#mono","title":"Mono","text":"<p>An open source, cross-platform, implementation of C# and the CLR that is  binary compatible with Microsoft.NET.</p> <p>homepage: https://www.mono-project.com/</p>    version toolchain     <code>2.10.6</code> <code>intel/2016b</code>   <code>4.6.2.7</code> <code>intel/2016b</code>, <code>system</code>   <code>4.8.0.495</code> <code>intel/2017a</code>   <code>5.4.1.6</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.10.0.160</code> <code>foss/2018a</code>   <code>5.18.1.0</code> <code>foss/2018a</code>   <code>6.4.0.198</code> <code>foss/2018b</code>   <code>6.8.0.105</code> <code>GCCcore/8.3.0</code>   <code>6.12.0.122</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#monocle3","title":"Monocle3","text":"<p>An analysis toolkit for single-cell RNA-seq. </p> <p>homepage: https://cole-trapnell-lab.github.io/monocle3/</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.7.2-R-3.6.0</code> <code>foss/2019a</code>   <code>0.2.3</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#moonjit","title":"moonjit","text":"<p>Moonjit is a Just-In-Time Compiler (JIT) for the Lua programming  language. Lua is a powerful, dynamic and light-weight programming language. It may be embedded or used as a general-purpose, stand-alone language.</p> <p>homepage: https://github.com/moonjit/moonjit</p>    version toolchain     <code>2.2.0</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#moose","title":"MOOSE","text":"<p>The Multiphysics Object-Oriented Simulation Environment (MOOSE) is a finite-element, multiphysics framework primarily developed by Idaho National Laboratory</p> <p>homepage: https://mooseframework.inl.gov</p>    version versionsuffix toolchain     <code>2021-05-18</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#mordecai","title":"mordecai","text":"<p>mordecai is a full text geoparsing as a Python library. Extract the place names from a piece of text, resolve them to the correct place, and return their coordinates and structured geographic information.</p> <p>homepage: https://github.com/openeventdata/mordecai</p>    version versionsuffix toolchain     <code>2.0.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#moreronn","title":"MoreRONN","text":"<p>MoreRONN is the spiritual successor of RONN and is useful for surveying  disorder in proteins as well as designing expressible constructs for X-ray crystallography.</p> <p>homepage: https://github.com/varun-ramraj/MoreRONN</p>    version toolchain     <code>4.9</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#mosdepth","title":"mosdepth","text":"<p>Fast BAM/CRAM depth calculation for WGS, exome, or targeted sequencing</p> <p>homepage: https://github.com/brentp/mosdepth</p>    version toolchain     <code>0.2.2</code> <code>intel/2018a</code>   <code>0.2.3</code> <code>intel/2018a</code>   <code>0.2.4</code> <code>foss/2018b</code>   <code>0.3.3</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#mothur","title":"Mothur","text":"<p>Mothur is a single piece of open-source, expandable software  to fill the bioinformatics needs of the microbial ecology community.</p> <p>homepage: https://www.mothur.org/</p>    version versionsuffix toolchain     <code>1.39.5</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.41.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.43.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#motif","title":"motif","text":"<p>Motif refers to both a graphical user interface (GUI) specification and the widget toolkit for building  applications that follow that specification under the X Window System on Unix and other POSIX-compliant systems.  It was the standard toolkit for the Common Desktop Environment and thus for Unix.</p> <p>homepage: https://motif.ics.com/</p>    version toolchain     <code>2.3.5</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.3.7</code> <code>intel/2017a</code>   <code>2.3.8</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#motioncor2","title":"MotionCor2","text":"<p>MotionCor2 correct anisotropic image motion at the single pixel level across the whole frame, suitable for both single particle and tomographic images. Iterative, patch-based motion detection is combined with spatial and temporal constraints and dose weighting.  Cite publication: Shawn Q. Zheng, Eugene Palovcak, Jean-Paul Armache, Yifan Cheng and David A. Agard (2016) Anisotropic Correction of Beam-induced Motion for Improved Single-particle Electron Cryo-microscopy, Nature Methods, submitted. BioArxiv: https://biorxiv.org/content/early/2016/07/04/061960 </p> <p>homepage: https://msg.ucsf.edu/</p>    version toolchain     <code>1.2.6</code> <code>GCCcore/8.2.0</code>   <code>1.3.1</code> <code>GCCcore/8.3.0</code>   <code>1.3.2</code> <code>GCCcore/8.3.0</code>   <code>1.4.2</code> <code>GCCcore/10.2.0</code>   <code>1.4.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.5.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#motionsegmentation","title":"motionSegmentation","text":"<p>Motion correction, explicit spatio-temporal regularization of motion tracking, random speckles enhancement, and segmentation.</p> <p>homepage: https://github.com/WeiXuanChan/motionSegmentation</p>    version versionsuffix toolchain     <code>2.7.9</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#moviepy","title":"MoviePy","text":"<p>MoviePy (full documentation) is a Python library for video editing: cutting, concatenations,  title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects.</p> <p>homepage: https://zulko.github.io/moviepy/</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.0.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#mpb","title":"MPB","text":"<p>MPB is a free and open-source software package for computing  the band structures, or dispersion relations, and electromagnetic  modes of periodic dielectric structures, on both serial  and parallel computers. MPB is an acronym for MIT Photonic Bands.</p> <p>homepage: https://mpb.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>1.6.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#mpc","title":"MPC","text":"<p>Gnu Mpc is a C library for the arithmetic of  complex numbers with arbitrarily high precision and correct  rounding of the result. It extends the principles of the IEEE-754  standard for fixed precision real floating point numbers to  complex numbers, providing well-defined semantics for every  operation. At the same time, speed of operation at high precision  is a major design goal.</p> <p>homepage: http://www.multiprecision.org/</p>    version versionsuffix toolchain     <code>1.0.3</code>  <code>intel/2017a</code>   <code>1.0.3</code> <code>-MPFR-3.1.6</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.1.0</code>  <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.2.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#mpfr","title":"MPFR","text":"<p>The MPFR library is a C library for multiple-precision floating-point  computations with correct rounding. </p> <p>homepage: https://www.mpfr.org</p>    version toolchain     <code>2.4.2</code> <code>system</code>   <code>3.1.4</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>3.1.5</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>3.1.6</code> <code>GCCcore/6.4.0</code>   <code>4.0.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>4.0.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#mpi4py","title":"mpi4py","text":"<p>MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for  the Python programming language, allowing any Python program to exploit multiple processors.</p> <p>homepage: https://bitbucket.org/mpi4py/mpi4py</p>    version versionsuffix toolchain     <code>1.3.1</code> <code>-Python-2.7.11-timed-pingpong</code> <code>intel/2016a</code>   <code>1.3.1</code> <code>-Python-2.7.12-timed-pingpong</code> <code>intel/2016b</code>   <code>2.0.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.0.0</code> <code>-Python-2.7.13-timed-pingpong</code> <code>intel/2017a</code>   <code>3.0.0</code> <code>-Python-2.7.14-timed-pingpong</code> <code>intel/2018a</code>   <code>3.0.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.0.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>3.0.2</code> <code>-timed-pingpong</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>"},{"location":"version-specific/supported-software/#mpich","title":"MPICH","text":"<p>MPICH is a high-performance and widely portable implementation  of the Message Passing Interface (MPI) standard (MPI-1, MPI-2 and MPI-3).</p> <p>homepage: https://www.mpich.org/</p>    version toolchain     <code>3.0.4</code> <code>GCC/4.8.1</code>   <code>3.2</code> <code>GCC/4.9.3-2.25</code>, <code>GCC/7.2.0-2.29</code>   <code>3.2.1</code> <code>GCC/7.2.0-2.29</code>   <code>3.3.2</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>3.4.2</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#mpich2","title":"MPICH2","text":"<p>MPICH v3.x is an open source high-performance MPI 3.0 implementation. It does not support InfiniBand (use MVAPICH2 with InfiniBand devices).</p> <p>homepage: http://www.mpich.org/</p>    version toolchain     <code>1.1</code> <code>GCC/4.8.1</code>"},{"location":"version-specific/supported-software/#mpifileutils","title":"mpifileutils","text":"<p>MPI-Based File Utilities For Distributed Systems </p> <p>homepage: https://hpc.github.io/mpifileutils/</p>    version toolchain     <code>0.9.1</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>0.10</code> <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>0.10.1</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#mpip","title":"mpiP","text":"<p>mpiP is a lightweight profiling library for MPI applications.  Because it  only collects statistical information about MPI functions, mpiP generates  considerably less overhead and much less data than tracing tools.  All the  information captured by mpiP is task-local. It only uses communication during  report generation, typically at the end of the experiment, to merge results  from all of the tasks into one output file. </p> <p>homepage: http://mpip.sourceforge.net/</p>    version toolchain     <code>3.4.1</code> <code>gompi/2019a</code>, <code>iimpi/2019a</code>, <code>iompi/2019.01</code>"},{"location":"version-specific/supported-software/#mpj-express","title":"MPJ-Express","text":"<p>MPJ Express is an open source Java message passing library that allows application   developers to write and execute parallel applications for multicore processors and compute clusters/clouds.</p> <p>homepage: http://mpj-express.org/</p>    version versionsuffix toolchain     <code>0.44</code> <code>-Java-1.8.0_92</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#mpmath","title":"mpmath","text":"<p>mpmath can be used as an arbitrary-precision substitute for Python's float/complex  types and math/cmath modules, but also does much more advanced mathematics. Almost any calculation  can be performed just as well at 10-digit or 1000-digit precision, with either real or complex  numbers, and in many cases mpmath implements efficient algorithms that scale well for extremely  high precision work.</p> <p>homepage: https://mpmath.org/</p>    version versionsuffix toolchain     <code>0.19</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.0.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.0.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.1.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#mrbayes","title":"MrBayes","text":"<p>MrBayes is a program for Bayesian inference and model choice across  a wide range of phylogenetic and evolutionary models.</p> <p>homepage: https://nbisweden.github.io/MrBayes/</p>    version toolchain     <code>3.2.6</code> <code>foss/2016a</code>, <code>foss/2017a</code>, <code>gompi/2020b</code>   <code>3.2.7</code> <code>gompi/2020b</code>, <code>gompic/2019b</code>   <code>3.2.7a</code> <code>foss/2020a</code>, <code>iimpi/2019a</code>"},{"location":"version-specific/supported-software/#mrcfile","title":"mrcfile","text":"<p>mrcfile is a Python implementation of the MRC2014 file format, which is used in  structural biology to store image and volume data. It allows MRC files to be created and opened easily using a very simple API,    which exposes the file\u2019s header and data as numpy arrays. The code runs in      Python 2 and 3 and is fully unit-tested. This library aims to allow users and developers to read and write standard- compliant MRC files in Python as easily as possible, and with no dependencies on any compiled libraries except numpy. You can use it interactively to inspect  files, correct headers and so on, or in scripts and larger software packages to  provide basic MRC file I/O functions. </p> <p>homepage: https://github.com/ccpem/mrcfile</p>    version toolchain     <code>1.3.0</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#mrchem","title":"MRChem","text":"<p>MRChem is a numerical real-space code for molecular electronic structure calculations within the self-consistent field (SCF) approximations of quantum chemistry: Hartree-Fock and Density Functional Theory.</p> <p>homepage: https://mrchem.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.1.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mrcpp","title":"MRCPP","text":"<p>MultiResolution Computation Program Package</p> <p>homepage: https://mrcpp.readthedocs.io</p>    version toolchain     <code>1.3.6</code> <code>foss/2020a</code>   <code>1.4.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mricron","title":"MRIcron","text":"<p>MRIcron allows viewing of medical images. It  includes tools to complement SPM and FSL. Native format is NIFTI  but includes a conversion program (see dcm2nii) for converting DICOM images.  Features layers, ROIs, and volume rendering.  </p> <p>homepage: http://www.mccauslandcenter.sc.edu/mricro/mricron/</p>    version toolchain     <code>1.0.20180614</code> <code>system</code>   <code>20150601</code> <code>system</code>"},{"location":"version-specific/supported-software/#mrtrix","title":"MRtrix","text":"<p>MRtrix provides a set of tools to perform diffusion-weighted MR white-matter tractography in a manner  robust to crossing fibres, using constrained spherical deconvolution (CSD) and probabilistic streamlines.</p> <p>homepage: http://www.brain.org.au/software/index.html#mrtrix</p>    version versionsuffix toolchain     <code>0.3.14</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.3.15</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.0-rc-20191217</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>3.0-rc-20191217</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.0.3</code>  <code>foss/2021a</code>   <code>3.0_RC2</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>3.0_RC3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#msgpack-c","title":"msgpack-c","text":"<p>MessagePack is an efficient binary serialization format, which lets you exchange data among multiple languages like JSON, except that it's faster and smaller.    Small integers are encoded into a single byte while typical short strings        require only one extra byte in addition to the strings themselves.</p> <p>homepage: http://msgpack.org/</p>    version toolchain     <code>3.3.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#msm","title":"MSM","text":"<p>Multimodal Surface Matching with Higher order Clique Reduction</p> <p>homepage: https://github.com/ecr05/MSM_HOCR</p>    version toolchain     <code>1.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#mspc","title":"MSPC","text":"<p>Using combined evidence from replicates to evaluate ChIP-seq peaks</p> <p>homepage: https://genometric.github.io/MSPC/</p>    version toolchain     <code>3.3.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#msprime","title":"msprime","text":"<p>msprime is a coalescent simulator and library for processing tree-based genetic data.</p> <p>homepage: https://msprime.readthedocs.io</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#mstore","title":"mstore","text":"<p>Molecular structure store for testing</p> <p>homepage: https://github.com/grimme-lab/mstore</p>    version toolchain     <code>0.2.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#mtl4","title":"MTL4","text":"<p>The Matrix Template Library 4 incorporates the most modern programming techniques  to provide an easy and intuitive interface to users while enabling optimal performance. The natural  mathematical notation in MTL4 empowers all engineers and scientists to implement their algorithms and  models in minimal time. All technical aspects are encapsulated in the library.</p> <p>homepage: http://www.simunova.com/mtl4</p>    version toolchain     <code>4.0.8878</code> <code>system</code>   <code>4.0.9555</code> <code>system</code>"},{"location":"version-specific/supported-software/#mujoco","title":"MuJoCo","text":"<p>MuJoCo stands for Multi-Joint dynamics with Contact. It is a general purpose physics engine that aims to facilitate research and development in robotics, biomechanics, graphics and animation, machine learning, and other areas which demand fast and accurate simulation of articulated structures interacting with their environment.</p> <p>homepage: https://mujoco.org/</p>    version toolchain     <code>2.1.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#mujoco-py","title":"mujoco-py","text":"<p>MuJoCo is a physics engine for detailed, efficient rigid body simulations with contacts. mujoco-py allows using MuJoCo from Python 3.</p> <p>homepage: https://github.com/openai/mujoco-py</p>    version toolchain     <code>2.1.2.14</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#multichoose","title":"multichoose","text":"<p>generate multiset combinations (n multichoose k).</p> <p>homepage: https://github.com/ekg/multichoose</p>    version toolchain     <code>1.0.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#multilevelestimators","title":"MultilevelEstimators","text":"<p>The Julia module for Multilevel Monte Carlo methods</p> <p>homepage: https://github.com/PieterjanRobbe/MultilevelEstimators.jl</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-Julia-1.7.2</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#multinest","title":"MultiNest","text":"<p>MultiNest is a Bayesian inference tool which calculates the evidence and explores the parameter space  which may contain multiple posterior modes and pronounced (curving) degeneracies in moderately high dimensions.</p> <p>homepage: https://ccpforge.cse.rl.ac.uk/gf/project/multinest/</p>    version toolchain     <code>3.10</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#multiqc","title":"MultiQC","text":"<p>Aggregate results from bioinformatics analyses across many samples into a single   report.   MultiQC searches a given directory for analysis logs and compiles a HTML report. It's a general  use tool, perfect for summarising the output from numerous bioinformatics tools.</p> <p>homepage: https://multiqc.info</p>    version versionsuffix toolchain     <code>0.9</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>1.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.6</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.6</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.7</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.7</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.8</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>1.8</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.9</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.9</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.10.1</code>  <code>foss/2020b</code>   <code>1.11</code>  <code>foss/2021a</code>   <code>1.12</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#multiwfn","title":"Multiwfn","text":"<p>Multiwfn is an extremely powerful program for realizingi  electronic wavefunction analysis, which is a key ingredient of quantum  chemistry. Multiwfn is free, open-source, high-efficient, very user-friendly  and flexible, it supports almost all of the most important wavefunction  analysis methods.</p> <p>homepage: http://sobereva.com/multiwfn/</p>    version toolchain     <code>3.4.1</code> <code>intel/2017b</code>   <code>3.6</code> <code>intel/2019a</code>, <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#mumerge","title":"muMerge","text":"<p>muMerge is a tool for combining bed regions from multiple bed files that overlap.</p> <p>homepage: https://github.com/Dowell-Lab/mumerge</p>    version toolchain     <code>1.1.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#mummer","title":"MUMmer","text":"<p>MUMmer is a system for rapidly aligning entire genomes,  whether in complete or draft form. AMOS makes use of it. </p> <p>homepage: http://mummer.sourceforge.net/</p>    version toolchain     <code>3.23</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016b</code>   <code>4.0.0beta2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>   <code>4.0.0rc1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#mumps","title":"MUMPS","text":"<p>A parallel sparse direct solver</p> <p>homepage: https://graal.ens-lyon.fr/MUMPS/</p>    version versionsuffix toolchain     <code>5.1.2</code> <code>-metis</code> <code>foss/2017b</code>   <code>5.2.1</code> <code>-metis</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019a</code>, <code>intel/2019b</code>, <code>intel/2020a</code>   <code>5.2.1</code> <code>-metis-seq</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>5.3.5</code> <code>-metis</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>5.4.0</code> <code>-metis</code> <code>foss/2021a</code>   <code>5.4.1</code> <code>-metis</code> <code>foss/2021b</code>, <code>intel/2021b</code>   <code>5.5.0</code> <code>-metis</code> <code>foss/2021a</code>   <code>5.5.1</code> <code>-metis</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#muparser","title":"muParser","text":"<p>muParser is an extensible high performance math expression parser library  written in C++. It works by transforming a mathematical expression into  bytecode and precalculating constant parts of the expression. </p> <p>homepage: https://beltoforion.de/article.php?a=muparser</p>    version toolchain     <code>2.2.5</code> <code>GCCcore/6.4.0</code>   <code>2.3.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.3.3</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#muparserx","title":"muparserx","text":"<p>A C++ Library for Parsing Expressions with Strings, Complex Numbers, Vectors, Matrices and more.</p> <p>homepage: https://beltoforion.de/en/muparserx/</p>    version toolchain     <code>4.0.8</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#mupexi","title":"MuPeXI","text":"<p>MuPeXI: Mutant Peptide eXtractor and Informer. Given a list of somatic mutations (VCF file) as input,  MuPeXI returns a table containing all mutated peptides (neo-peptides) of user-defined lengths,  along with several pieces of information relevant for identifying  which of these neo-peptides are likely to serve as neo-epitopes.</p> <p>homepage: https://github.com/ambj/MuPeXI</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-Perl-5.28.0-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#muscle","title":"MUSCLE","text":"<p>MUSCLE is one of the best-performing multiple alignment programs  according to published benchmark tests, with accuracy and speed that are consistently  better than CLUSTALW. MUSCLE can align hundreds of sequences in seconds. Most users  learn everything they need to know about MUSCLE in a few minutes-only a handful of  command-line options are needed to perform common alignment tasks.</p> <p>homepage: https://drive5.com/muscle/</p>    version versionsuffix toolchain     <code>3.8.31</code>  <code>GCC/7.3.0-2.30</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2016a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>3.8.31</code> <code>-i86linux64</code> <code>system</code>   <code>3.8.1551</code>  <code>GCC/10.2.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>   <code>5.0.1428</code>  <code>GCCcore/10.3.0</code>   <code>5.1</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#music","title":"MuSiC","text":"<p>Multi-subject Single Cell deconvolution (MuSiC) is a deconvolution method that utilizes  cross-subject scRNA-seq to estimate cell type proportions in bulk RNA-seq data.</p> <p>homepage: https://github.com/xuranw/MuSiC</p>    version versionsuffix toolchain     <code>1.6.2</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#must","title":"MUST","text":"<p>MUST detects usage errors of the Message Passing Interface (MPI) and reports them to the user.  As MPI calls are complex and usage errors common, this functionality is extremely helpful for application developers  that want to develop correct MPI applications.  This includes errors that already manifest \u2013 segmentation faults or incorrect results \u2013 as well as many errors  that are not visible to the application developer or do not manifest on a certain system or MPI implementation.</p> <p>homepage: https://hpc.rwth-aachen.de/must/</p>    version versionsuffix toolchain     <code>1.6</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.7.2</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#mutect","title":"MuTect","text":"<p>MuTect is a method developed at the Broad Institute for the reliable  and accurate identification of somatic point mutations in next generation sequencing  data of cancer genomes. </p> <p>homepage: http://www.broadinstitute.org/cancer/cga/mutect</p>    version versionsuffix toolchain     <code>1.1.4</code> <code>-Java-1.7.0_76</code> <code>system</code>   <code>1.1.4</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>1.1.7</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#mutil","title":"mutil","text":"<p>Mutil is a set of standard utilities that have been parallelized to maximize performance on  modern file systems. These currently include multi-threaded drop-in replacements for cp and md5sum from GNU coreutils, which have achieved 10/30x rates on one/many nodes. </p> <p>homepage: http://people.nas.nasa.gov/~kolano/projects/mutil.html</p>    version toolchain     <code>1.822.3</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#mvapich2","title":"MVAPICH2","text":"<p>This is an MPI 3.0 implementation.  It is based on MPICH2 and MVICH.</p> <p>homepage: http://mvapich.cse.ohio-state.edu/overview/mvapich2/</p>    version toolchain     <code>2.0.1</code> <code>GCC/4.8.4</code>   <code>2.1</code> <code>GCC/4.9.3-2.25</code>   <code>2.2b</code> <code>GCC/4.9.3-2.25</code>"},{"location":"version-specific/supported-software/#mxml","title":"mxml","text":"<p>Mini-XML is a tiny XML library that you can use to read and write XML and  XML-like data files in your application without requiring large non-standard  libraries. </p> <p>homepage: https://github.com/michaelrsweet/mxml</p>    version toolchain     <code>3.2</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#mxmlplus","title":"mxmlplus","text":"<p>Mxml is a pure C library (yet having an object oriented layout) that is meant to help developers  implementing XML file interpretation in their projects.</p> <p>homepage: http://mxml.sourceforge.net</p>    version toolchain     <code>0.9.2</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#mxnet","title":"MXNet","text":"<p>Flexible and Efficient Library for Deep Learning</p> <p>homepage: http://mxnet.io/</p>    version versionsuffix toolchain     <code>0.9.3</code> <code>-Python-2.7.12-R-3.3.3</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#mycc","title":"MyCC","text":"<p>MyCC is built and delivered as a tailored solution for metagenomics sequencesclassfication.</p> <p>homepage: https://sourceforge.net/projects/sb2nhri/files/MyCC/</p>    version versionsuffix toolchain     <code>2017-03-01</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#mygene","title":"mygene","text":"<p>Python Client for MyGene.Info services.</p> <p>homepage: https://github.com/biothings/mygene.py</p>    version toolchain     <code>3.1.0</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#mymedialite","title":"MyMediaLite","text":"<p>MyMediaLite is a lightweight, multi-purpose library of recommender system algorithms.</p> <p>homepage: http://www.ismll.uni-hildesheim.de/mymedialite/</p>    version toolchain     <code>3.10</code> <code>intel/2016b</code>   <code>3.11</code> <code>intel/2016b</code>   <code>3.12</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#mympingpong","title":"mympingpong","text":"<p>A mpi4py based random pair pingpong network stress test.</p> <p>homepage: https://github.com/hpcugent/mympingpong</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.7.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.8.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.8.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>0.8.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#myokit","title":"Myokit","text":"<p>Myokit is an open-source Python-based toolkit that facilitates modeling and simulation of cardiac cellular electrophysiology.</p> <p>homepage: http://myokit.org</p>    version toolchain     <code>1.32.0</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#mypy","title":"mypy","text":"<p>Optional static typing for Python</p> <p>homepage: http://www.mypy-lang.org/</p>    version toolchain     <code>0.4.5</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#mysql","title":"MySQL","text":"<p>MySQL is one of the world's most widely used open-source  relational database management system (RDBMS).</p> <p>homepage: http://www.mysql.com/</p>    version versionsuffix toolchain     <code>5.6.26</code> <code>-clientonly</code> <code>GNU/4.9.3-2.25</code>   <code>5.7.21</code> <code>-clientonly</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#mysql-python","title":"MySQL-python","text":"<p>MySQL database connector for Python</p> <p>homepage: https://github.com/farcepest/MySQLdb1</p>    version versionsuffix toolchain     <code>1.2.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.2.5</code> <code>-Python-2.7.11-MariaDB-10.1.14</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#mysqlclient","title":"mysqlclient","text":"<p>Python interface to MySQL</p> <p>homepage: https://github.com/PyMySQL/mysqlclient-python</p>    version versionsuffix toolchain     <code>1.3.7</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#n","title":"N","text":"<p>n2v - NAG - NAGfor - NAMD - namedlist - nano - NanoComp - nanocompore - NanoFilt - nanofilt - nanoget - NanoLyse - nanomath - nanomax-analysis-utils - nanonet - NanoPlot - nanopolish - NanopolishComp - napari - NASM - nauty - NBO - NCBI-Toolkit - ncbi-vdb - NCCL - NCCL-tests - ncdf4 - ncdu - NCIPLOT - NCL - ncl - NCO - ncompress - ncurses - ncview - nd2reader - ne - NECI - NEdit - Nek5000 - Nektar++ - neon - neptune-client - Net-core - netCDF - netCDF-C++ - netCDF-C++4 - netCDF-Fortran - netcdf4-python - netloc - NetLogo - netMHC - netMHCIIpan - netMHCpan - NetPIPE - NetPyNE - nettle - networkTools - networkx - NeuroKit - NEURON - NewHybrids - Nextflow - NextGenMap - nf-core-mag - NFFT - nghttp2 - nghttp3 - NGLess - nglview - NGS - NGS-Python - NGSadmix - NGSpeciesID - ngspice - ngtcp2 - NiBabel - NIfTI - nifti2dicom - Nilearn - Nim - NIMBLE - Ninja - Nipype - NLMpy - nlohmann_json - NLopt - NLTK - nnU-Net - Node-RED - nodejs - Normaliz - nose-parameterized - novoalign - NOVOPlasty - npstat - NRGLjubljana - Nsight-Compute - Nsight-Systems - NSPR - NSS - nsync - ntCard - ntEdit - ntHits - NTL - NTPoly - num2words - numactl - numba - numdiff - numexpr - numpy - NVHPC - NVSHMEM - nvtop - NWChem - NxTrim</p>"},{"location":"version-specific/supported-software/#n2v","title":"n2v","text":"<p>Noise2Void - Learning Denoising from Single Noisy Images The field of image denoising is currently dominated by discriminative deep       learning methods that are trained on pairs of noisy input and clean target       images. Recently it has been shown that such methods can also be trained without clean targets. Instead, independent pairs of noisy images can be used, in an     approach known as NOISE2NOISE (N2N). Here, we introduce NOISE2VOID (N2V), a      training scheme that takes this idea one step further. It does not require noisy image pairs, nor clean target images. Consequently, N2V allows us to train       directly on the body of data to be denoised and can therefore be applied when    other methods cannot. Especially interesting is the application to biomedical    image data, where the acquisition of training targets, clean or noisy, is        frequently not possible. We compare the performance of N2V to approaches that    have either clean target images and/or noisy image pairs available. Intuitively, N2V cannot be expected to outperform methods that have more information          available during training. Still, we observe that the denoising performance of   NOISE2VOID drops in moderation and compares favorably to training-free denoising methods.</p> <p>homepage: https://github.com/juglab/n2v</p>    version versionsuffix toolchain     <code>0.3.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nag","title":"NAG","text":"<p>The worlds largest collection of robust, documented, tested and maintained numerical algorithms.</p> <p>homepage: http://www.nag.co.uk</p>    version toolchain     <code>24</code> <code>PGI/17.4-GCC-6.4.0-2.28</code>   <code>26</code> <code>GCCcore/6.4.0</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#nagfor","title":"NAGfor","text":"<p>The checking compiler for improved code portability and detailed error reporting.</p> <p>homepage: http://www.nag.co.uk</p>    version toolchain     <code>6.2.14</code> <code>system</code>"},{"location":"version-specific/supported-software/#namd","title":"NAMD","text":"<p>NAMD is a parallel molecular dynamics code designed for high-performance simulation of  large biomolecular systems.</p> <p>homepage: https://www.ks.uiuc.edu/Research/namd/</p>    version versionsuffix toolchain     <code>2.11</code> <code>-mpi</code> <code>intel/2016a</code>   <code>2.12</code> <code>-CUDA-8.0.61</code> <code>foss/2016b</code>   <code>2.12</code> <code>-mpi</code> <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.13</code>  <code>fosscuda/2018b</code>   <code>2.13</code> <code>-mpi</code> <code>foss/2018b</code>, <code>foss/2019b</code>, <code>intel/2018b</code>   <code>2.14</code>  <code>fosscuda/2019b</code>   <code>2.14</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.14</code> <code>-mpi</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#namedlist","title":"namedlist","text":"<p>A Python object, similar to namedtuple, but for lists.</p> <p>homepage: https://gitlab.com/ericvsmith/namedlist</p>    version toolchain     <code>1.8</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#nano","title":"nano","text":"<p>a simple editor, inspired by Pico</p> <p>homepage: https://www.nano-editor.org/</p>    version toolchain     <code>6.4</code> <code>GCCcore/11.3.0</code>   <code>7.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#nanocomp","title":"NanoComp","text":"<p>Comparing runs of Oxford Nanopore sequencing data and alignments</p> <p>homepage: https://github.com/wdecoster/NanoComp</p>    version versionsuffix toolchain     <code>1.10.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.13.1</code>  <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#nanocompore","title":"nanocompore","text":"<p>Nanocompore identifies differences in ONT nanopore sequencing raw signal corresponding to RNA modifications by comparing 2 samples</p> <p>homepage: https://nanocompore.rna.rocks/</p>    version versionsuffix toolchain     <code>1.0.0rc3-2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#nanofilt","title":"NanoFilt","text":"<p>Filtering and trimming of long read sequencing data.</p> <p>homepage: https://github.com/wdecoster/nanofilt</p>    version versionsuffix toolchain     <code>2.6.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>2.8.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#nanofilt_1","title":"nanofilt","text":"<p>Filtering and trimming of long read sequencing data.</p> <p>homepage: https://github.com/wdecoster/nanofilt</p>    version versionsuffix toolchain     <code>2.5.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.6.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.6.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#nanoget","title":"nanoget","text":"<p>Functions to extract information from Oxford Nanopore sequencing data and alignments</p> <p>homepage: https://github.com/wdecoster/nanoget</p>    version versionsuffix toolchain     <code>1.12.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.15.0</code>  <code>intel/2020b</code>   <code>1.18.1</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nanolyse","title":"NanoLyse","text":"<p>Remove reads mapping to the lambda phage genome from a fastq file.</p> <p>homepage: https://github.com/wdecoster/nanolyse</p>    version toolchain     <code>1.2.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nanomath","title":"nanomath","text":"<p>A few simple math function for other Oxford Nanopore processing scripts</p> <p>homepage: https://github.com/wdecoster/nanomath</p>    version versionsuffix toolchain     <code>0.23.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.2.0</code>  <code>intel/2020b</code>   <code>1.2.1</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nanomax-analysis-utils","title":"nanomax-analysis-utils","text":"<p>A set of tools for handling and analysing data at the NanoMAX beamline.</p> <p>homepage: https://github.com/maxiv-science/nanomax-analysis-utils</p>    version versionsuffix toolchain     <code>0.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.4.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#nanonet","title":"nanonet","text":"<p>Nanonet provides recurrent neural network basecalling for Oxford Nanopore MinION data.</p> <p>homepage: https://github.com/nanoporetech/nanonet</p>    version versionsuffix toolchain     <code>2.0.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#nanoplot","title":"NanoPlot","text":"<p>Plotting suite for long read sequencing data and alignments</p> <p>homepage: https://github.com/wdecoster/NanoPlot</p>    version versionsuffix toolchain     <code>1.28.4</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.33.0</code>  <code>foss/2021a</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#nanopolish","title":"nanopolish","text":"<p>Software package for signal-level analysis of Oxford Nanopore sequencing data.</p> <p>homepage: https://github.com/jts/nanopolish</p>    version versionsuffix toolchain     <code>0.9.2</code>  <code>intel/2018a</code>   <code>0.10.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.13.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.13.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.13.3</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#nanopolishcomp","title":"NanopolishComp","text":"<p>NanopolishComp is a Python3 package for downstream analyses of Nanopolish output files</p> <p>homepage: https://adrienleger.com/NanopolishComp/</p>    version versionsuffix toolchain     <code>0.6.11</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#napari","title":"napari","text":"<p>napari is a fast, interactive, multi-dimensional image viewer for Python. It's   designed for browsing, annotating, and analyzing large multi-dimensional images. It's built on top of Qt (for the GUI), vispy (for performant GPU-based           rendering), and the scientific Python stack (numpy, scipy).</p> <p>homepage: https://napari.org/</p>    version toolchain     <code>0.4.15</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#nasm","title":"NASM","text":"<p>NASM: General-purpose x86 assembler</p> <p>homepage: https://www.nasm.us/</p>    version toolchain     <code>2.11.08</code> <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>2.12.01</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.12.02</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>system</code>   <code>2.13.01</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>2.13.03</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.14.02</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.15.05</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#nauty","title":"nauty","text":"<p>nauty and Traces are programs for computing automorphism groups of graphs and digraphs. They can also produce a canonical label.</p> <p>homepage: https://pallini.di.uniroma1.it/</p>    version toolchain     <code>2.6r12</code> <code>GCC/8.2.0-2.31.1</code>   <code>2.7rc2</code> <code>GCC/8.2.0-2.31.1</code>   <code>2.7rc5</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#nbo","title":"NBO","text":"<p>The Natural Bond Orbital (NBO) program is a discovery tool for chemical insights from complex wavefunctions. </p> <p>homepage: http://nbo.chem.wisc.edu/</p>    version toolchain     <code>1.1</code> <code>intel/2016a</code>   <code>7.0</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#ncbi-toolkit","title":"NCBI-Toolkit","text":"<p>The NCBI Toolkit is a collection of utilities developed for the   production and distribution of GenBank, Entrez, BLAST, and related services   by the National Center for Biotechnology Information.</p> <p>homepage: http://ncbi.github.io/cxx-toolkit/</p>    version toolchain     <code>18.0.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#ncbi-vdb","title":"ncbi-vdb","text":"<p>The SRA Toolkit and SDK from NCBI is a collection of tools and libraries for  using data in the INSDC Sequence Read Archives.</p> <p>homepage: https://github.com/ncbi/ncbi-vdb</p>    version toolchain     <code>2.5.8-1</code> <code>foss/2016b</code>, <code>intel/2016a</code>   <code>2.7.0</code> <code>foss/2016b</code>   <code>2.8.2</code> <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.9.1-1</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.9.3</code> <code>foss/2018b</code>   <code>2.10.4</code> <code>gompi/2019b</code>   <code>2.10.7</code> <code>gompi/2020a</code>   <code>2.10.9</code> <code>gompi/2020b</code>, <code>gompi/2021a</code>   <code>2.11.2</code> <code>gompi/2021b</code>   <code>3.0.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#nccl","title":"NCCL","text":"<p>The NVIDIA Collective Communications Library (NCCL) implements multi-GPU and multi-node collective communication primitives that are performance optimized for NVIDIA GPUs.</p> <p>homepage: https://developer.nvidia.com/nccl</p>    version versionsuffix toolchain     <code>2.1.4</code> <code>-CUDA-9.0.176</code> <code>system</code>   <code>2.2.13</code> <code>-CUDA-9.2.148.1</code> <code>system</code>   <code>2.3.7</code>  <code>fosscuda/2018b</code>   <code>2.4.2</code>  <code>gcccuda/2019a</code>   <code>2.4.8</code>  <code>gcccuda/2019b</code>   <code>2.8.3</code> <code>-CUDA-11.0.2</code> <code>GCCcore/9.3.0</code>, <code>system</code>   <code>2.8.3</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code>, <code>system</code>   <code>2.9.9</code> <code>-CUDA-11.3.1</code> <code>system</code>   <code>2.10.3</code> <code>-CUDA-11.3.1</code> <code>GCCcore/10.3.0</code>   <code>2.10.3</code> <code>-CUDA-11.4.1</code> <code>GCCcore/11.2.0</code>   <code>2.11.4</code>  <code>gcccuda/2019b</code>   <code>2.12.12</code> <code>-CUDA-11.7.0</code> <code>GCCcore/11.3.0</code>   <code>2.16.2</code> <code>-CUDA-12.0.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#nccl-tests","title":"NCCL-tests","text":"<p>Tests check both the performance and the correctness of NCCL operations.</p> <p>homepage: https://github.com/NVIDIA/nccl-tests</p>    version versionsuffix toolchain     <code>2.0.0</code>  <code>gompic/2019b</code>   <code>2.13.6</code> <code>-CUDA-11.7.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#ncdf4","title":"ncdf4","text":"<p>ncdf4: Interface to Unidata netCDF (version 4 or earlier) format data files</p> <p>homepage: https://cran.r-project.org/web/packages/ncdf4</p>    version versionsuffix toolchain     <code>1.16</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>1.16</code> <code>-R-3.4.3</code> <code>intel/2017b</code>   <code>1.16</code> <code>-R-3.4.4</code> <code>intel/2018a</code>   <code>1.16.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.16.1</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>1.17</code>  <code>foss/2019b</code>   <code>1.17</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>1.17</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>1.17</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ncdu","title":"ncdu","text":"<p>Ncdu is a disk usage analyzer with an ncurses interface. It is designed to find space hogs on a  remote server where you don't have an entire graphical setup available, but it is a useful tool even on regular  desktop systems. Ncdu aims to be fast, simple and easy to use, and should be able to run in any minimal POSIX-like  environment with ncurses installed.</p> <p>homepage: https://dev.yorhel.nl/ncdu</p>    version toolchain     <code>1.13</code> <code>GCCcore/7.3.0</code>   <code>1.14</code> <code>GCCcore/7.3.0</code>   <code>1.15.1</code> <code>GCCcore/9.3.0</code>   <code>1.16</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>1.17</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#nciplot","title":"NCIPLOT","text":"<p>NCIPLOT is a program for revealing non covalent interactions  based on the reduced density gradient. </p> <p>homepage: https://www.lct.jussieu.fr/pagesperso/contrera/index-nci.html</p>    version toolchain     <code>4.0-20190718</code> <code>iccifort/2019.5.281</code>   <code>4.0-20200106</code> <code>iccifort/2019.5.281</code>   <code>4.0-20200624</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#ncl","title":"NCL","text":"<p>NCL is an interpreted language designed specifically for scientific data analysis and visualization.</p> <p>homepage: https://www.ncl.ucar.edu</p>    version toolchain     <code>6.4.0</code> <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>6.5.0</code> <code>intel/2018a</code>   <code>6.6.2</code> <code>foss/2018b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>intel/2018b</code>, <code>intel/2019b</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#ncl_1","title":"ncl","text":"<p>The NEXUS Class Library is a C++ library for parsing NEXUS files.</p> <p>homepage: http://ncl.sourceforge.net/</p>    version toolchain     <code>2.1.18</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#nco","title":"NCO","text":"<p>The NCO toolkit manipulates and analyzes data stored in netCDF-accessible formats,  including DAP, HDF4, and HDF5.</p> <p>homepage: https://github.com/nco/nco</p>    version toolchain     <code>4.6.0</code> <code>foss/2016a</code>   <code>4.6.6</code> <code>intel/2017a</code>   <code>4.7.0</code> <code>intel/2017b</code>   <code>4.7.1</code> <code>intel/2017b</code>   <code>4.7.4</code> <code>foss/2017b</code>   <code>4.7.6</code> <code>intel/2018a</code>   <code>4.7.9</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.8.1</code> <code>foss/2019a</code>   <code>4.9.3</code> <code>foss/2019b</code>   <code>4.9.7</code> <code>foss/2020a</code>, <code>foss/2020b</code>   <code>5.0.1</code> <code>foss/2021a</code>   <code>5.0.3</code> <code>foss/2021b</code>, <code>intel/2021b</code>   <code>5.1.0</code> <code>foss/2022a</code>   <code>5.1.3</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ncompress","title":"ncompress","text":"<p>Compress is a fast, simple LZW file compressor. Compress does not have the  highest compression rate, but it is one of the fastest programs to compress  data. Compress is the defacto standard in the UNIX community for compressing  files. </p> <p>homepage: http://ncompress.sourceforge.net/</p>    version toolchain     <code>4.2.4.4</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#ncurses","title":"ncurses","text":"<p>The Ncurses (new curses) library is a free software emulation of curses in  System V Release 4.0, and more. It uses Terminfo format, supports pads and  color and multiple highlights and forms characters and function-key mapping,  and has all the other SYSV-curses enhancements over BSD Curses. </p> <p>homepage: https://www.gnu.org/software/ncurses/</p>    version toolchain     <code>5.9</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>, <code>GCC/4.8.3</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GNU/4.9.3-2.25</code>, <code>gimkl/2.11.5</code>, <code>system</code>   <code>6.0</code> <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>6.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>system</code>   <code>6.2</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>   <code>6.3</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#ncview","title":"ncview","text":"<p>Ncview is a visual browser for netCDF format files.  Typically you would use ncview to get a quick and easy, push-button  look at your netCDF files. You can view simple movies of the data,  view along various dimensions, take a look at the actual data values,  change color maps, invert the data, etc.</p> <p>homepage: http://meteora.ucsd.edu/~pierce/ncview_home_page.html</p>    version toolchain     <code>2.1.7</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>foss/2019b</code>, <code>gompi/2019a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2019b</code>, <code>iomkl/2018b</code>   <code>2.1.8</code> <code>gompi/2020a</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#nd2reader","title":"nd2reader","text":"<p>nd2reader is a pure-Python package that reads images produced by NIS Elements 4.0+.</p> <p>homepage: https://www.lighthacking.nl/nd2reader/</p>    version versionsuffix toolchain     <code>3.0.6</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#ne","title":"ne","text":"<p>ne is a free (GPL'd) text editor based on the POSIX standard that runs (we hope) on almost any UN*X machine. ne is easy to use for the beginner, but powerful and fully configurable for the wizard, and most sparing in its resource usage.</p> <p>homepage: http://ne.di.unimi.it/</p>    version toolchain     <code>3.0.1</code> <code>gimkl/2017a</code>"},{"location":"version-specific/supported-software/#neci","title":"NECI","text":"<p>Standalone NECI codebase designed for FCIQMC and other stochastic quantum chemistry methods.</p> <p>homepage: https://github.com/ghb24/NECI_STABLE</p>    version toolchain     <code>20220711</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#nedit","title":"NEdit","text":"<p>NEdit is a multi-purpose text editor for the X Window System,  which combines a standard, easy to use, graphical user interface with the thorough  functionality and stability required by users who edit text eight hours a day.</p> <p>homepage: http://www.nedit.org</p>    version versionsuffix toolchain     <code>5.5</code> <code>-Linux-x86</code> <code>system</code>"},{"location":"version-specific/supported-software/#nek5000","title":"Nek5000","text":"<p>a fast and scalable high-order solver for computational fluid dynamics</p> <p>homepage: https://nek5000.mcs.anl.gov/</p>    version toolchain     <code>17.0</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#nektar","title":"Nektar++","text":"<p>Nektar++ is a tensor product based finite element package designed to allow one to construct efficient classical low polynomial order h-type solvers (where h is the size of the finite element) as well as higher p-order piecewise polynomial order solvers.</p> <p>homepage: https://www.nektar.info</p>    version toolchain     <code>5.0.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#neon","title":"neon","text":"<p>neon is an HTTP/1.1 and WebDAV client library, with a C interface. </p> <p>homepage: https://github.com/notroj/neon</p>    version toolchain     <code>0.31.2</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#neptune-client","title":"neptune-client","text":"<p>Neptune is an experiment tracking hub that brings organization and collaboration to your data science team. </p> <p>homepage: https://docs.neptune.ai</p>    version versionsuffix toolchain     <code>0.4.129</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.10.5</code>  <code>foss/2020b</code>   <code>0.16.2</code>  <code>foss/2021a</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#net-core","title":"Net-core","text":"<p>.NET Core is a free and open-source managed computer software framework for the Windows,  Linux, and macOS operating systems .NET Core fully supports C# and F# and partially supports Visual Basic</p> <p>homepage: https://dotnet.microsoft.com/</p>    version toolchain     <code>2.1.8</code> <code>system</code>   <code>2.2.5</code> <code>system</code>   <code>3.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#netcdf","title":"netCDF","text":"<p>NetCDF (network Common Data Form) is a set of software libraries  and machine-independent data formats that support the creation, access, and sharing of array-oriented  scientific data.</p> <p>homepage: https://www.unidata.ucar.edu/software/netcdf/</p>    version versionsuffix toolchain     <code>4.3.3.1</code>  <code>foss/2016a</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>   <code>4.4.0</code>  <code>foss/2016a</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>4.4.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>4.4.1.1</code>  <code>foss/2016b</code>, <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>4.4.1.1</code> <code>-HDF5-1.10.1</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>4.4.1.1</code> <code>-HDF5-1.8.18</code> <code>intel/2017a</code>   <code>4.4.1.1</code> <code>-HDF5-1.8.19</code> <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.5.0</code>  <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>, <code>intel/2018.01</code>   <code>4.6.0</code>  <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>4.6.1</code>  <code>PGI/18.4-GCC-6.4.0-2.28</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>4.6.2</code>  <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>4.7.1</code>  <code>gompi/2019b</code>, <code>gompic/2019b</code>, <code>iimpi/2019b</code>, <code>iimpic/2019b</code>   <code>4.7.4</code>  <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompic/2020a</code>, <code>gompic/2020b</code>, <code>iimpi/2020a</code>, <code>iimpi/2020b</code>, <code>iimpic/2020b</code>   <code>4.8.0</code>  <code>gompi/2021a</code>, <code>iimpi/2021a</code>   <code>4.8.1</code>  <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>4.9.0</code>  <code>gompi/2022a</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#netcdf-c","title":"netCDF-C++","text":"<p>NetCDF (network Common Data Form) is a set of software libraries   and machine-independent data formats that support the creation, access, and sharing of array-oriented   scientific data.</p> <p>homepage: http://www.unidata.ucar.edu/software/netcdf/</p>    version toolchain     <code>4.2</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#netcdf-c4","title":"netCDF-C++4","text":"<p>NetCDF (network Common Data Form) is a set of software libraries  and machine-independent data formats that support the creation, access, and sharing of array-oriented  scientific data.</p> <p>homepage: https://www.unidata.ucar.edu/software/netcdf/</p>    version versionsuffix toolchain     <code>4.3.0</code>  <code>foss/2018b</code>, <code>gompi/2019a</code>, <code>iimpi/2019a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>4.3.0</code> <code>-HDF5-1.8.18</code> <code>intel/2017a</code>   <code>4.3.0</code> <code>-HDF5-1.8.19</code> <code>intel/2017b</code>   <code>4.3.1</code>  <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompi/2022a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>, <code>iimpi/2021b</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#netcdf-fortran","title":"netCDF-Fortran","text":"<p>NetCDF (network Common Data Form) is a set of software libraries  and machine-independent data formats that support the creation, access, and sharing of array-oriented  scientific data.</p> <p>homepage: https://www.unidata.ucar.edu/software/netcdf/</p>    version versionsuffix toolchain     <code>4.4.1</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.4.2</code>  <code>intel/2016.02-GCC-4.9</code>   <code>4.4.3</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.4.4</code>  <code>PGI/18.4-GCC-6.4.0-2.28</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intelcuda/2017b</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>iomkl/2018b</code>   <code>4.4.4</code> <code>-HDF5-1.8.18</code> <code>intel/2017a</code>   <code>4.4.4</code> <code>-HDF5-1.8.19</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>4.4.5</code>  <code>gompi/2019a</code>, <code>iimpi/2019a</code>   <code>4.5.2</code>  <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompic/2019b</code>, <code>gompic/2020a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iimpic/2019b</code>   <code>4.5.3</code>  <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>, <code>iimpi/2021b</code>   <code>4.6.0</code>  <code>gompi/2022a</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#netcdf4-python","title":"netcdf4-python","text":"<p>Python/numpy interface to netCDF.</p> <p>homepage: https://unidata.github.io/netcdf4-python/</p>    version versionsuffix toolchain     <code>1.2.9</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.3.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.3.1</code> <code>-Python-3.6.3-HDF5-1.8.19</code> <code>intel/2017b</code>   <code>1.4.0</code> <code>-Python-3.6.2-HDF5-1.8.19</code> <code>foss/2017b</code>   <code>1.4.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.4.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.4.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.4.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.4.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.5.2</code>  <code>intel/2019a</code>   <code>1.5.3</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>1.5.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.5.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.5.5.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>1.5.7</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021b</code>   <code>1.6.1</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#netloc","title":"netloc","text":"<p>The Portable Network Locality (netloc) software package provides  network topology discovery tools, and an abstract representation of those networks  topologies for a range of network types and configurations.  It is provided as a companion to the Portable Hardware Locality (hwloc) package.</p> <p>homepage: http://www.open-mpi.org/software/netloc</p>    version toolchain     <code>0.5</code> <code>GCC/4.8.3</code>"},{"location":"version-specific/supported-software/#netlogo","title":"NetLogo","text":"<p>NetLogo is a multi-agent programmable modeling environment. It is used by tens of thousands of students, teachers and researchers worldwide. It also powers HubNet participatory simulations. It is authored by Uri Wilensky and developed at the CCL.</p> <p>homepage: https://ccl.northwestern.edu/netlogo/</p>    version versionsuffix toolchain     <code>5.3.1</code> <code>-64</code> <code>system</code>   <code>6.0.4</code> <code>-64</code> <code>system</code>   <code>6.2.0</code> <code>-64</code> <code>system</code>"},{"location":"version-specific/supported-software/#netmhc","title":"netMHC","text":"<p>NetMHC 4.0 software  predicts binding of peptides to a number of different  HLA alleles  using artificial neural networks (ANN). </p> <p>homepage: http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?netMHC</p>    version toolchain     <code>4.0a</code> <code>system</code>"},{"location":"version-specific/supported-software/#netmhciipan","title":"netMHCIIpan","text":"<p>NetMHCIIpan 3.2 server predicts binding of peptides to MHC  class II molecules. The predictions are available for the three human MHC  class II isotypes HLA-DR, HLA-DP and HLA-DQ, as well as mouse molecules (H-2).</p> <p>homepage: https://www.cbs.dtu.dk/services/NetMHCIIpan/</p>    version toolchain     <code>3.2</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#netmhcpan","title":"netMHCpan","text":"<p>The NetMHCpan software predicts  binding of peptides  to any known MHC  molecule using artificial neural networks (ANNs). </p> <p>homepage: http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?netMHCpan</p>    version toolchain     <code>4.0a</code> <code>system</code>"},{"location":"version-specific/supported-software/#netpipe","title":"NetPIPE","text":"<p>NetPIPE is a protocol independent communication performance benchmark that visually represents  the network performance under a variety of conditions.</p> <p>homepage: https://netpipe.cs.ksu.edu/</p>    version toolchain     <code>5.1</code> <code>intel/2018a</code>   <code>5.1.4</code> <code>gompi/2020b</code>, <code>iimpi/2020b</code>"},{"location":"version-specific/supported-software/#netpyne","title":"NetPyNE","text":"<p>NetPyNE is an open-source Python package to facilitate the development, parallel simulation, analysis, and optimization of biological neuronal networks using the NEURON simulator.</p> <p>homepage: http://www.netpyne.org</p>    version toolchain     <code>1.0.2.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#nettle","title":"nettle","text":"<p>Nettle is a cryptographic library that is designed to fit easily  in more or less any context: In crypto toolkits for object-oriented  languages (C++, Python, Pike, ...), in applications like LSH or GNUPG,  or even in kernel space.</p> <p>homepage: https://www.lysator.liu.se/~nisse/nettle/</p>    version toolchain     <code>3.1.1</code> <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.2</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>3.4</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018a</code>   <code>3.4.1</code> <code>GCCcore/8.2.0</code>   <code>3.5.1</code> <code>GCCcore/8.3.0</code>   <code>3.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.7.2</code> <code>GCCcore/10.3.0</code>   <code>3.7.3</code> <code>GCCcore/11.2.0</code>   <code>3.8</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#networktools","title":"networkTools","text":"<p>Dynamical Network Analysis is a method of characterizing allosteric signalling through biomolecular complexes.</p> <p>homepage: http://faculty.scs.illinois.edu/schulten/software/networkTools/</p>    version toolchain     <code>2</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#networkx","title":"networkx","text":"<p>NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.</p> <p>homepage: https://pypi.python.org/pypi/networkx</p>    version versionsuffix toolchain     <code>1.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.11</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.11</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.11</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>2.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2018b</code>   <code>2.2</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>2.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.3</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.4</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>, <code>intelcuda/2019b</code>   <code>2.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>   <code>2.5</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>2.5.1</code>  <code>foss/2021a</code>   <code>2.6.2</code>  <code>foss/2020b</code>   <code>2.6.3</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021b</code>   <code>2.8.4</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#neurokit","title":"NeuroKit","text":"<p>NeuroKit is a Python module that provides high-level integrative functions with good and  flexible defaults, allowing users to focus on what\u2019s important.</p> <p>homepage: https://neurokit.readthedocs.io</p>    version versionsuffix toolchain     <code>0.2.7</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#neuron","title":"NEURON","text":"<p>Empirically-based simulations of neurons and networks of neurons.</p> <p>homepage: https://www.neuron.yale.edu/neuron</p>    version versionsuffix toolchain     <code>7.4</code>  <code>intel/2016b</code>   <code>7.6.5</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>7.8.2</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#newhybrids","title":"NewHybrids","text":"<p>This implements a Gibbs sampler to estimate the posterior probability that genetically sampled individuals fall into each of a set of user-defined hybrid categories.</p> <p>homepage: https://ib.berkeley.edu/labs/slatkin/eriq/software/software.htm#NewHybs</p>    version toolchain     <code>1.1_Beta3</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#nextflow","title":"Nextflow","text":"<p>Nextflow is a reactive workflow framework and a programming DSL   that eases writing computational pipelines with complex data</p> <p>homepage: https://www.nextflow.io/</p>    version toolchain     <code>19.04.0</code> <code>system</code>   <code>19.07.0</code> <code>system</code>   <code>19.12.0</code> <code>system</code>   <code>20.01.0</code> <code>system</code>   <code>20.04.1</code> <code>system</code>   <code>20.10.0</code> <code>system</code>   <code>21.03.0</code> <code>system</code>   <code>21.08.0</code> <code>system</code>   <code>21.10.6</code> <code>system</code>   <code>22.04.0</code> <code>system</code>   <code>22.10.0</code> <code>system</code>   <code>22.10.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#nextgenmap","title":"NextGenMap","text":"<p>NextGenMap is a flexible highly sensitive short read mapping tool that  handles much higher mismatch rates than comparable algorithms while still outperforming  them in terms of runtime.</p> <p>homepage: http://cibiv.github.io/NextGenMap/</p>    version toolchain     <code>0.5.5</code> <code>GCC/11.2.0</code>, <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#nf-core-mag","title":"nf-core-mag","text":"<p>The Nextflow pipeline 'mag' ported to EasyBuild/EESSI.</p> <p>homepage: https://nf-co.re/mag</p>    version toolchain     <code>20221110</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nfft","title":"NFFT","text":"<p>The NFFT (nonequispaced fast Fourier transform or nonuniform fast Fourier transform) is a C subroutine  library for computing the nonequispaced discrete Fourier transform (NDFT) and its generalisations in one or more  dimensions, of arbitrary input size, and of complex data.</p> <p>homepage: https://www-user.tu-chemnitz.de/~potts/nfft/</p>    version toolchain     <code>3.1.3</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>3.5.1</code> <code>foss/2018b</code>, <code>foss/2019a</code>   <code>3.5.2</code> <code>foss/2020a</code>, <code>foss/2021a</code>, <code>foss/2021b</code>   <code>3.5.3</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#nghttp2","title":"nghttp2","text":"<p>This is an implementation of the Hypertext Transfer Protocol version 2 in C.  The framing layer of HTTP/2 is implemented as a reusable C library.  On top of that, we have implemented an HTTP/2 client, server and proxy.  We have also developed load test and benchmarking tools for HTTP/2.  An HPACK encoder and decoder are available as a public API.</p> <p>homepage: https://github.com/nghttp2/nghttp2</p>    version toolchain     <code>1.48.0</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#nghttp3","title":"nghttp3","text":"<p>nghttp3 is an implementation of RFC 9114 HTTP/3  mapping over QUIC and RFC 9204 QPACK in C. It does not depend on any particular QUIC transport implementation.</p> <p>homepage: https://github.com/ngtcp2/nghttp3</p>    version toolchain     <code>0.6.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ngless","title":"NGLess","text":"<p>NGLess is a domain-specific language for NGS (next-generation sequencing data) processing.</p> <p>homepage: https://ngless.embl.de/</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-static-Linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#nglview","title":"nglview","text":"<p>IPython widget to interactively view molecular structures and trajectories.</p> <p>homepage: https://github.com/arose/nglview</p>    version versionsuffix toolchain     <code>2.7.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>2.7.7</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>3.0.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ngs","title":"NGS","text":"<p>NGS is a new, domain-specific API for accessing reads, alignments and pileups produced from  Next Generation Sequencing.</p> <p>homepage: https://github.com/ncbi/ngs</p>    version versionsuffix toolchain     <code>1.2.3</code>  <code>foss/2016b</code>, <code>intel/2016a</code>   <code>1.2.5</code>  <code>foss/2016b</code>   <code>1.3.0</code>  <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>2.9.1</code> <code>-Java-1.8.0_162</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.9.3</code> <code>-Java-1.8</code> <code>foss/2018b</code>   <code>2.10.0</code> <code>-Java-1.8</code> <code>GCCcore/8.2.0</code>   <code>2.10.0</code> <code>-Java-11</code> <code>GCCcore/8.2.0</code>   <code>2.10.4</code> <code>-Java-11</code> <code>GCCcore/8.3.0</code>   <code>2.10.5</code>  <code>GCCcore/9.3.0</code>   <code>2.10.9</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.11.2</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#ngs-python","title":"NGS-Python","text":"<p>NGS is a new, domain-specific API for accessing reads, alignments and pileups produced from  Next Generation Sequencing.</p> <p>homepage: https://github.com/ncbi/ngs</p>    version versionsuffix toolchain     <code>1.2.3</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.9.3</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.10.4</code> <code>-Python-2.7.16</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#ngsadmix","title":"NGSadmix","text":"<p>NGSadmix is a tool for finding admixture proportions  from NGS data, based on genotype likelihoods.</p> <p>homepage: http://www.popgen.dk/software/index.php/NgsAdmix</p>    version toolchain     <code>32</code> <code>GCC/7.3.0-2.30</code>"},{"location":"version-specific/supported-software/#ngspeciesid","title":"NGSpeciesID","text":"<p>NGSpeciesID is a tool for clustering and consensus forming of targeted ONT reads.</p> <p>homepage: https://github.com/ksahlin/NGSpeciesID</p>    version versionsuffix toolchain     <code>0.1.1.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.1.2.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ngspice","title":"ngspice","text":"<p>Ngspice is a mixed-level/mixed-signal circuit simulator. Its code  is based on three open source software packages: Spice3f5, Cider1b1  and Xspice. </p> <p>homepage: https://ngspice.sourceforge.net</p>    version toolchain     <code>31</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#ngtcp2","title":"ngtcp2","text":"<p>'Call it TCP/2. One More Time.'  ngtcp2 project is an effort to implement RFC9000 QUIC protocol.</p> <p>homepage: https://github.com/ngtcp2/ngtcp2</p>    version toolchain     <code>0.7.0</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#nibabel","title":"NiBabel","text":"<p>NiBabel provides read/write access to some common medical and neuroimaging file formats,  including: ANALYZE (plain, SPM99, SPM2 and later), GIFTI, NIfTI1, NIfTI2, MINC1, MINC2, MGH and ECAT  as well as Philips PAR/REC. We can read and write Freesurfer geometry, and read Freesurfer morphometry and  annotation files. There is some very limited support for DICOM. NiBabel is the successor of PyNIfTI.</p> <p>homepage: https://nipy.github.io/nibabel</p>    version versionsuffix toolchain     <code>2.0.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.0.2</code> <code>-Python-2.7.11-freetype-2.6.3</code> <code>intel/2016a</code>   <code>2.1.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2.2.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>2.3.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.3.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.3.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.4.0</code>  <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.5.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>3.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.2.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>fosscuda/2020b</code>   <code>3.2.2</code>  <code>foss/2021b</code>   <code>4.0.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#nifti","title":"NIfTI","text":"<p>Niftilib is a set of i/o libraries for reading and writing files in the nifti-1 data format.</p> <p>homepage: http://niftilib.sourceforge.net/</p>    version toolchain     <code>2.0.0</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#nifti2dicom","title":"nifti2dicom","text":"<p>Nifti2Dicom is a conversion tool that converts 3D NIfTI files (and other formats supported by ITK, including Analyze, MetaImage Nrrd and VTK) to DICOM. Unlike other conversion tools, it can import a DICOM file that is used to import the patient and study DICOM tags, and allows you to edit the accession number and other DICOM tags, in order to create a valid DICOM that can be imported in a PACS.</p> <p>homepage: https://github.com/biolab-unige/nifti2dicom</p>    version toolchain     <code>0.4.11</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#nilearn","title":"Nilearn","text":"<p>Nilearn is a Python module for fast and easy statistical learning on NeuroImaging data.</p> <p>homepage: https://nilearn.github.io/</p>    version versionsuffix toolchain     <code>0.5.2</code>  <code>foss/2019a</code>, <code>intel/2019a</code>   <code>0.5.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.5.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.7.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.7.1</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#nim","title":"Nim","text":"<p>Nim is a systems and applications programming language.</p> <p>homepage: https://nim-lang.org/</p>    version toolchain     <code>0.18.0</code> <code>GCCcore/6.4.0</code>   <code>0.19.2</code> <code>GCCcore/7.3.0</code>   <code>1.0.0</code> <code>GCCcore/8.3.0</code>   <code>1.4.6</code> <code>GCCcore/10.2.0</code>   <code>1.4.8</code> <code>GCCcore/10.3.0</code>   <code>1.6.6</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#nimble","title":"NIMBLE","text":"<p>NIMBLE is a system for building and sharing analysis methods for statistical models,  especially for hierarchical models and computationally-intensive methods.</p> <p>homepage: https://r-nimble.org</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#ninja","title":"Ninja","text":"<p>Ninja is a small build system with a focus on speed.</p> <p>homepage: https://ninja-build.org/</p>    version toolchain     <code>1.8.2</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.9.0</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2018b</code>   <code>1.10.0</code> <code>GCCcore/9.3.0</code>   <code>1.10.1</code> <code>GCCcore/10.2.0</code>   <code>1.10.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>1.11.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#nipype","title":"Nipype","text":"<p>Nipype is a Python project that provides a uniform interface to existing neuroimaging software and  facilitates interaction between these packages within a single workflow.</p> <p>homepage: https://nipype.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.1.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.4.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>1.8.5</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#nlmpy","title":"NLMpy","text":"<p>NLMpy is a Python package for the creation of neutral landscape models that are widely used  in the modelling of ecological patterns and processes across landscapes.</p> <p>homepage: https://pypi.org/project/nlmpy</p>    version versionsuffix toolchain     <code>0.1.5</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#nlohmann_json","title":"nlohmann_json","text":"<p>JSON for Modern C++</p> <p>homepage: https://github.com/nlohmann/json</p>    version toolchain     <code>3.10.0</code> <code>GCCcore/10.3.0</code>   <code>3.10.4</code> <code>GCCcore/11.2.0</code>   <code>3.10.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#nlopt","title":"NLopt","text":"<p>NLopt is a free/open-source library for nonlinear optimization,  providing a common interface for a number of different free optimization routines  available online as well as original implementations of various other algorithms. </p> <p>homepage: http://ab-initio.mit.edu/wiki/index.php/NLopt</p>    version toolchain     <code>2.4.2</code> <code>GCC/5.4.0-2.26</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>2.6.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.6.2</code> <code>GCCcore/10.2.0</code>   <code>2.7.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.7.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#nltk","title":"NLTK","text":"<p>NLTK is a leading platform for building Python programs to work with human language data.</p> <p>homepage: https://www.nltk.org/</p>    version versionsuffix toolchain     <code>3.2.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.2.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>3.6.7</code>  <code>foss/2021a</code>   <code>3.7</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#nnu-net","title":"nnU-Net","text":"<p>nnU-Net is the first segmentation method that is designed to deal with the dataset diversity found  in the domain It condenses and automates the keys decisions for designing a successful segmentation pipeline for  any given dataset.</p> <p>homepage: https://github.com/MIC-DKFZ/nnUNet</p>    version toolchain     <code>1.7.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#node-red","title":"Node-RED","text":"<p>Node-RED is a programming tool for wiring together hardware devices, APIs and online services  in new and interesting ways.</p> <p>homepage: http://nodered.org</p>    version toolchain     <code>0.16.2</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#nodejs","title":"nodejs","text":"<p>Node.js is a platform built on Chrome's JavaScript runtime   for easily building fast, scalable network applications. Node.js uses an   event-driven, non-blocking I/O model that makes it lightweight and efficient,   perfect for data-intensive real-time applications that run across distributed devices.</p> <p>homepage: http://nodejs.org</p>    version toolchain     <code>4.4.7</code> <code>foss/2016a</code>   <code>6.10.3</code> <code>foss/2017a</code>   <code>8.9.4</code> <code>foss/2017a</code>   <code>10.15.1</code> <code>foss/2018b</code>   <code>10.15.3</code> <code>GCCcore/8.2.0</code>   <code>12.16.1</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>12.19.0</code> <code>GCCcore/10.2.0</code>   <code>14.17.0</code> <code>GCCcore/10.3.0</code>   <code>14.17.2</code> <code>GCCcore/10.3.0</code>   <code>14.17.6</code> <code>GCCcore/11.2.0</code>   <code>16.15.1</code> <code>GCCcore/11.3.0</code>   <code>18.12.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#normaliz","title":"Normaliz","text":"<p>Normaliz is a open source tool for computations in affine monoids, vector configurations, rational polyhedra and rational cones. Normaliz now computes rational and algebraic polyhedra, i.e., polyhedra defined over real algebraic extensions of QQ.</p> <p>homepage: https://www.normaliz.uni-osnabrueck.de/</p>    version toolchain     <code>3.6.3</code> <code>intel/2018b</code>   <code>3.7.4</code> <code>gompi/2019a</code>   <code>3.8.4</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#nose-parameterized","title":"nose-parameterized","text":"<p>Parameterized testing with any Python test framework.</p> <p>homepage:     version versionsuffix toolchain     <code>0.5.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.5.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.5.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.6.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#novoalign","title":"novoalign","text":"<p>NovoCraft is a software bundle.  NovoAlign:  Market\u2019s leading aligner with fully packed features designed for mapping  of short reads onto a reference genome from Illumina, Ion Torrent, 454,  and Color Spance NGS platforms.  NovoAlignCS:  Leading aligner packed with features designed to fully support reads from  ABI SOLiD Color Space.  NovoSort:  Custom designed multi-threaded sort/merge tools for BAM files.  NovoMethyl:  It can analyse a set of alignments to identify methylated cytosine\u2019s.  WARNING!  You can only use the sofware without a license (with some features disabled)  if you are a non-profit organisation and use is for your own research or for  use by students as part of their course. A license is required for use where  these programs are part of a service where a third party is billed.</p> <p>homepage: http://www.novocraft.com/</p>    version versionsuffix toolchain     <code>3.09.00</code>  <code>system</code>   <code>3.09.01</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#novoplasty","title":"NOVOPlasty","text":"<p>NOVOPlasty is a de novo assembler and heteroplasmy/variance caller for short circular genomes.</p> <p>homepage: https://github.com/ndierckx/NOVOPlasty</p>    version toolchain     <code>3.7</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#npstat","title":"npstat","text":"<p>npstat implements some population genetics tests and estimators that can be applied  to pooled sequences from Next Generation Sequencing experiments.</p> <p>homepage: https://code.google.com/archive/p/npstat/</p>    version toolchain     <code>0.99</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#nrgljubljana","title":"NRGLjubljana","text":"<p>NRG Ljubljana is an efficient implementation of the numerical renormalization group (NRG)   technique for solving quantum impurity problems that arise as simplified models of   magnetic impurities and as effective models in the dynamical mean field theory (DMFT)   approach to bulk correlated materials. </p> <p>homepage: http://nrgljubljana.ijs.si/</p>    version toolchain     <code>2.4.3.23</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#nsight-compute","title":"Nsight-Compute","text":"<p>NVIDIA\u00ae Nsight\u2122 Compute is an interactive kernel profiler for CUDA applications. It provides detailed performance metrics and API debugging via a user interface and a command line tool. In addition, its baseline feature allows users to compare results within the tool. Nsight Compute provides a customizable and data-driven user interface and fast metric collection, which can be extended with rules-based analysis scripts for post-processing results. The rules-based guided analysis helps isolate and fix memory throughput, compute, and occupancy inefficiencies in the target application.</p> <p>homepage: https://developer.nvidia.com/nsight-compute</p>    version toolchain     <code>2020.3.0</code> <code>system</code>   <code>2021.2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#nsight-systems","title":"Nsight-Systems","text":"<p>NVIDIA\u00ae Nsight\u2122 Systems is a system-wide performance analysis tool designed to visualize an application\u2019s algorithm, help you select the largest opportunities to optimize, and tune to scale efficiently across any quantity of CPUs and GPUs in your computer; from laptops to DGX servers.</p> <p>homepage: https://developer.nvidia.com/nsight-compute</p>    version toolchain     <code>2020.5.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#nspr","title":"NSPR","text":"<p>Netscape Portable Runtime (NSPR) provides a platform-neutral API for system level  and libc-like functions.</p> <p>homepage: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR</p>    version toolchain     <code>4.20</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>4.21</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>4.25</code> <code>GCCcore/9.3.0</code>   <code>4.29</code> <code>GCCcore/10.2.0</code>   <code>4.30</code> <code>GCCcore/10.3.0</code>   <code>4.32</code> <code>GCCcore/11.2.0</code>   <code>4.34</code> <code>GCCcore/11.3.0</code>   <code>4.35</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#nss","title":"NSS","text":"<p>Network Security Services (NSS) is a set of libraries designed to support cross-platform development  of security-enabled client and server applications.</p> <p>homepage: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS</p>    version toolchain     <code>3.39</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>3.42.1</code> <code>GCCcore/8.2.0</code>   <code>3.45</code> <code>GCCcore/8.3.0</code>   <code>3.51</code> <code>GCCcore/9.3.0</code>   <code>3.57</code> <code>GCCcore/10.2.0</code>   <code>3.65</code> <code>GCCcore/10.3.0</code>   <code>3.69</code> <code>GCCcore/11.2.0</code>   <code>3.79</code> <code>GCCcore/11.3.0</code>   <code>3.85</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#nsync","title":"nsync","text":"<p>nsync is a C library that exports various synchronization primitives, such as mutexes</p> <p>homepage: https://github.com/google/nsync</p>    version toolchain     <code>1.24.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.25.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ntcard","title":"ntCard","text":"<p>ntCard is a streaming algorithm for estimating the frequencies of k-mers in genomics datasets.</p> <p>homepage: https://www.bcgsc.ca/resources/software/ntcard</p>    version toolchain     <code>1.2.1</code> <code>GCC/11.2.0</code>, <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#ntedit","title":"ntEdit","text":"<p>ntEdit is a fast and scalable genomics application for polishing genome assembly drafts.</p> <p>homepage: https://github.com/bcgsc/ntEdit</p>    version toolchain     <code>1.3.1</code> <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>"},{"location":"version-specific/supported-software/#nthits","title":"ntHits","text":"<p>ntHits is a method for identifying repeats in high-throughput DNA sequencing data.</p> <p>homepage: https://github.com/bcgsc/ntHits</p>    version toolchain     <code>0.0.1</code> <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>"},{"location":"version-specific/supported-software/#ntl","title":"NTL","text":"<p>NTL is a high-performance, portable C++ library providing data structures and algorithms for manipulating signed, arbitrary length integers, and for vectors, matrices, and polynomials over the integers and over finite fields.</p> <p>homepage: https://shoup.net/ntl/</p>    version toolchain     <code>11.3.4</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#ntpoly","title":"NTPoly","text":"<p>is a massively parallel library for computing the functions of sparse, symmetric matrices based on  polynomial expansions. For sufficiently sparse matrices, most of the matrix functions  in NTPoly can be computed in linear time.</p> <p>homepage: https://github.com/william-dawson/NTPoly</p>    version toolchain     <code>2.5.1</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2.7.0</code> <code>foss/2021a</code>, <code>intel/2021a</code>   <code>2.7.1</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#num2words","title":"num2words","text":"<p>Modules to convert numbers to words. 42 --&gt; forty-two</p> <p>homepage: https://github.com/savoirfairelinux/num2words</p>    version toolchain     <code>0.5.10</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#numactl","title":"numactl","text":"<p>The numactl program allows you to run your application program on specific cpu's and memory nodes. It does this by supplying a NUMA memory policy to the operating system before running your program. The libnuma library provides convenient ways for you to add NUMA memory policies into your own program.</p> <p>homepage: http://oss.sgi.com/projects/libnuma/</p>    version toolchain     <code>2.0.9</code> <code>GCC/4.8.3</code>   <code>2.0.10</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>   <code>2.0.11</code> <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/5.2.0</code>, <code>GCC/5.3.0-2.26</code>, <code>GCC/5.4.0-2.26</code>, <code>GCC/6.1.0-2.27</code>, <code>GCC/6.2.0-2.27</code>, <code>GCC/6.3.0-2.27</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>iccifort/2016.3.210-GCC-4.9.3-2.25</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>2.0.12</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.0.13</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.0.14</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>2.0.16</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#numba","title":"numba","text":"<p>Numba is an Open Source NumPy-aware optimizing compiler for Python sponsored by Continuum Analytics, Inc. It uses the remarkable LLVM compiler infrastructure to compile Python syntax to machine code.</p> <p>homepage: https://numba.pydata.org/</p>    version versionsuffix toolchain     <code>0.24.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.24.0</code> <code>-Python-3.5.1</code> <code>intel/2016a</code>   <code>0.26.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.32.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.37.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>0.37.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.39.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.43.1</code>  <code>intel/2019a</code>   <code>0.46.0</code>  <code>foss/2019a</code>   <code>0.47.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.50.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>0.50.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.52.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>0.52.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.53.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>fosscuda/2020b</code>   <code>0.54.1</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>0.54.1</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#numdiff","title":"numdiff","text":"<p>Numdiff (which I will also write numdiff) is a little program that can be used to compare putatively  similar files line by line and field by field, ignoring small numeric differences or/and different numeric formats.  Equivalently, Numdiff is a program with the capability to appropriately compare files containing numerical fields  (and not only).</p> <p>homepage: https://www.nongnu.org/numdiff/</p>    version toolchain     <code>5.9.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#numexpr","title":"numexpr","text":"<p>The numexpr package evaluates multiple-operator array expressions many times faster than NumPy can.  It accepts the expression as a string, analyzes it, rewrites it more efficiently, and compiles it on the fly into  code for its internal virtual machine (VM). Due to its integrated just-in-time (JIT) compiler, it does not require a  compiler at runtime.</p> <p>homepage: https://numexpr.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>2.5.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.6.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.6.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>2.6.4</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>2.6.4</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.6.4</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>2.6.4</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.6.4</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>2.6.4</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.6.5</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.6.5</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.7.0</code>  <code>intel/2019a</code>   <code>2.7.1</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>2.7.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.7.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>2.8.1</code>  <code>foss/2021a</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#numpy","title":"numpy","text":"<p>NumPy is the fundamental package for scientific computing with Python. It contains among other things:  a powerful N-dimensional array object, sophisticated (broadcasting) functions, tools for integrating C/C++ and Fortran  code, useful linear algebra, Fourier transform, and random number capabilities. Besides its obvious scientific uses,  NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be   defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.</p> <p>homepage: http://www.numpy.org</p>    version versionsuffix toolchain     <code>1.8.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.9.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.10.4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.11.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.12.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.13.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.13.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#nvhpc","title":"NVHPC","text":"<p>C, C++ and Fortran compilers included with the NVIDIA HPC SDK (previously: PGI)</p> <p>homepage: https://developer.nvidia.com/hpc-sdk/</p>    version toolchain     <code>20.7</code> <code>system</code>   <code>20.9</code> <code>system</code>   <code>20.11</code> <code>system</code>   <code>21.2</code> <code>system</code>   <code>21.3</code> <code>system</code>   <code>21.5</code> <code>system</code>   <code>21.7</code> <code>system</code>   <code>21.9</code> <code>system</code>   <code>21.11</code> <code>system</code>"},{"location":"version-specific/supported-software/#nvshmem","title":"NVSHMEM","text":"<p>NVSHMEM is a parallel programming interface based on OpenSHMEM that provides  efficient and scalable communication for NVIDIA GPU clusters. NVSHMEM creates a  global address space for data that spans the memory of multiple GPUs and can be  accessed with fine-grained GPU-initiated operations, CPU-initiated operations,  and operations on CUDA streams. </p> <p>homepage: https://developer.nvidia.com/nvshmem</p>    version versionsuffix toolchain     <code>2.4.1</code> <code>-CUDA-11.4.1</code> <code>gompi/2021b</code>   <code>2.5.0</code> <code>-CUDA-11.7.0</code> <code>gompi/2022a</code>   <code>2.7.0</code> <code>-CUDA-11.7.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#nvtop","title":"nvtop","text":"<p>htop-like GPU usage monitor</p> <p>homepage: https://github.com/Syllo/nvtop</p>    version toolchain     <code>1.0.0</code> <code>fosscuda/2018b</code>   <code>1.1.0</code> <code>fosscuda/2019b</code>   <code>1.2.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.2.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.0.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#nwchem","title":"NWChem","text":"<p>NWChem aims to provide its users with computational chemistry tools that are scalable both in  their ability to treat large scientific computational chemistry problems efficiently, and in their use of available  parallel computing resources from high-performance parallel supercomputers to conventional workstation clusters.  NWChem software can handle: biomolecules, nanostructures, and solid-state; from quantum to classical, and all  combinations; Gaussian basis functions or plane-waves; scaling from one to thousands of processors; properties  and relativity.</p> <p>homepage: https://www.nwchem-sw.org</p>    version versionsuffix toolchain     <code>6.6.revision27746</code> <code>-2015-10-20-Python-2.7.12</code> <code>iomkl/2017a</code>   <code>6.6.revision27746</code> <code>-2015-10-20-patches-20170814-Python-2.7.13</code> <code>intel/2017a</code>   <code>6.8.revision47</code> <code>-2017-12-14-Python-2.7.14</code> <code>intel/2017b</code>, <code>intel/2018a</code>   <code>7.0.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>7.0.2</code>  <code>intel/2021a</code>, <code>intel/2022a</code>   <code>7.0.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#nxtrim","title":"NxTrim","text":"<p>NxTrim is a software to remove Nextera Mate Pair junction adapters and categorise reads according to the orientation implied by the adapter location.</p> <p>homepage: https://github.com/sequencing/NxTrim</p>    version toolchain     <code>0.4.3</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#o","title":"O","text":"<p>Oases - OBITools - OBITools3 - OCaml - occt - oceanspy - OCNet - Octave - Octopus-vcf - OGDF - olaFlow - olego - OMA - OmegaFold - onedrive - ONNX - ONNX-Runtime - ont-fast5-api - ont-remora - OOMPA - OPARI2 - Open-Data-Cube-Core - OpenAI-Gym - OpenBabel - OpenBLAS - openCARP - OpenCensus-python - OpenCoarrays - OpenColorIO - OpenCV - OpenEXR - OpenFace - OpenFAST - OpenFOAM - OpenFOAM-Extend - OpenFold - OpenForceField - OpenImageIO - OpenJPEG - OpenKIM-API - openkim-models - OpenMM - OpenMM-PLUMED - OpenMMTools - OpenMolcas - OpenMPI - OpenMS - OpenNLP - OpenPGM - OpenPIV - openpyxl - OpenRefine - OpenSceneGraph - OpenSees - OpenSlide - openslide-python - OpenSSL - OpenStackClient - OPERA - OPERA-MS - OptiType - OptiX - Optuna - OR-Tools - ORCA - ORFfinder - OrfM - OrthoFinder - OrthoMCL - Osi - OSPRay - OSU-Micro-Benchmarks - OTF2 - OVITO - ownCloud - oxford_asl</p>"},{"location":"version-specific/supported-software/#oases","title":"Oases","text":"<p>Oases is a de novo transcriptome assembler designed to produce transcripts from  short read sequencing technologies, such as Illumina, SOLiD, or 454 in the absence of any genomic assembly.</p> <p>homepage: http://www.ebi.ac.uk/~zerbino/oases/</p>    version versionsuffix toolchain     <code>0.2.08</code>  <code>foss/2016b</code>   <code>0.2.08</code> <code>-kmer_101</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#obitools","title":"OBITools","text":"<p>The OBITools programs aims to help you to manipulate various data and sequence files in a  convenient way using the Unix command line interface. They follow the standard Unix interface for command line  program, allowing to chain a set of commands using the pipe mecanism.</p> <p>homepage: http://www.grenoble.prabi.fr/trac/OBITools</p>    version versionsuffix toolchain     <code>1.2.9</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.2.13</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#obitools3","title":"OBITools3","text":"<p>A package for the management of analyses and data in DNA metabarcoding.</p> <p>homepage: https://metabarcoding.org/obitools3</p>    version toolchain     <code>3.0.1b8</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#ocaml","title":"OCaml","text":"<p>OCaml is a general purpose industrial-strength programming language  with an emphasis on expressiveness and safety. Developed for more than 20 years at Inria  it benefits from one of the most advanced type systems and supports functional,  imperative and object-oriented styles of programming.</p> <p>homepage: http://ocaml.org/</p>    version toolchain     <code>4.02.3</code> <code>foss/2016a</code>   <code>4.07.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#occt","title":"occt","text":"<p>Open CASCADE Technology (OCCT) is an object-oriented C++ class library designed for rapid production of sophisticated domain-specific CAD/CAM/CAE applications.</p> <p>homepage: https://www.opencascade.com/</p>    version toolchain     <code>7.3.0p4</code> <code>foss/2019b</code>   <code>7.5.0p1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#oceanspy","title":"oceanspy","text":"<p>OceanSpy - A Python package to facilitate ocean model data analysis  and visualization.</p> <p>homepage: https://github.com/hainegroup/oceanspy</p>    version toolchain     <code>0.2.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#ocnet","title":"OCNet","text":"<p>Generate and analyze Optimal Channel Networks (OCNs): oriented spanning trees reproducing all scaling features characteristic of real, natural river networks. As such, they can be used in a variety of numerical experiments in the fields of hydrology, ecology and epidemiology.</p> <p>homepage: https://cran.r-project.org/web/packages/OCNet</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#octave","title":"Octave","text":"<p>GNU Octave is a high-level interpreted language, primarily intended for numerical computations.</p> <p>homepage: https://www.gnu.org/software/octave/</p>    version versionsuffix toolchain     <code>4.0.0</code>  <code>foss/2016a</code>   <code>4.0.3</code>  <code>intel/2016b</code>   <code>4.2.1</code>  <code>foss/2018a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>4.2.1</code> <code>-mt</code> <code>intel/2017a</code>   <code>4.2.2</code>  <code>foss/2018a</code>   <code>4.4.1</code>  <code>foss/2018b</code>   <code>5.1.0</code>  <code>foss/2019a</code>, <code>foss/2019b</code>   <code>6.2.0</code>  <code>foss/2020b</code>   <code>7.1.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#octopus-vcf","title":"Octopus-vcf","text":"<p>Octopus is a mapping-based variant caller that implements several calling models within  a unified haplotype-aware framework. Octopus takes inspiration from particle filtering by constructing a  tree of haplotypes and dynamically pruning and extending the tree based on haplotype posterior probabilities  in a sequential manner. This allows octopus to implicitly consider all possible haplotypes at a given loci in  reasonable time.</p> <p>homepage: https://github.com/luntergroup/octopus</p>    version toolchain     <code>0.7.1</code> <code>foss/2020b</code>   <code>0.7.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ogdf","title":"OGDF","text":"<p>OGDF is a self-contained C++ library for graph algorithms, in particular for (but not restricted to) automatic graph drawing. It offers sophisticated algorithms and data structures to use within your own applications or scientific projects.</p> <p>homepage: https://ogdf.uos.de/</p>    version toolchain     <code>dogwood-202202</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#olaflow","title":"olaFlow","text":"<p>olaFlow CFD Suite is a free and open source project committed to bringing the latest advances for the simulation of wave dynamics to the OpenFOAM\u00ae and FOAM-extend communities.</p> <p>homepage: https://olaflow.github.io/</p>    version toolchain     <code>20210820</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#olego","title":"olego","text":"<p>OLego is a program specifically designed for de novo spliced mapping of mRNA-seq reads. OLego adopts a seed-and-extend scheme, and does not rely on a separate external mapper.</p> <p>homepage: https://github.com/chaolinzhanglab/olego</p>    version toolchain     <code>1.1.9</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#oma","title":"OMA","text":"<p>The OMA ('Orthologous MAtrix') project is a method and database for the inference   of orthologs among complete genomes</p> <p>homepage: https://omabrowser.org/standalone/</p>    version toolchain     <code>2.1.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#omegafold","title":"OmegaFold","text":"<p>OmegaFold: High-resolution de novo Structure Prediction from Primary Sequence</p> <p>homepage: https://github.com/HeliXonProtein/OmegaFold</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#onedrive","title":"onedrive","text":"<p>A free Microsoft OneDrive Client which supports OneDrive Personal, OneDrive for Business, OneDrive for Office365 and SharePoint.</p> <p>homepage: https://abraunegg.github.io/</p>    version toolchain     <code>2.4.11</code> <code>GCCcore/10.2.0</code>   <code>2.4.21</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#onnx","title":"ONNX","text":"<p>Open Neural Network Exchange (ONNX) is an open ecosystem that empowers AI developers to choose the right tools as their project evolves. ONNX provides an open source format for AI models, both deep learning and traditional ML. It defines an extensible computation graph model, as well as definitions of built-in operators and standard data types. Currently we focus on the capabilities needed for inferencing (scoring).</p> <p>homepage: https://onnx.ai/</p>    version toolchain     <code>1.11.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#onnx-runtime","title":"ONNX-Runtime","text":"<p>ONNX Runtime inference can enable faster customer experiences and lower costs, supporting models from deep learning frameworks such as PyTorch and TensorFlow/Keras as well as classical machine learning libraries such as scikit-learn, LightGBM, XGBoost, etc. ONNX Runtime is compatible with different hardware, drivers, and operating systems, and provides optimal performance by leveraging hardware accelerators where applicable alongside graph optimizations and transforms.</p> <p>homepage: https://onnxruntime.ai/</p>    version versionsuffix toolchain     <code>1.10.0</code>  <code>foss/2021a</code>   <code>1.10.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#ont-fast5-api","title":"ont-fast5-api","text":"<p>ont_fast5_api is a simple interface to HDF5 files of the Oxford Nanopore .fast5 file format.</p> <p>homepage: https://github.com/nanoporetech/ont_fast5_api</p>    version versionsuffix toolchain     <code>3.3.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>3.3.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>4.0.0</code>  <code>foss/2021a</code>   <code>4.0.2</code>  <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ont-remora","title":"ont-remora","text":"<p>Methylation/modified base calling separated from basecalling. Remora primarily provides an API to call modified bases for basecaller programs such as Bonito. Remora also provides the tools to prepare datasets, train modified base models and run simple inference.</p> <p>homepage: https://github.com/nanoporetech/remora</p>    version versionsuffix toolchain     <code>0.1.2</code>  <code>foss/2021a</code>   <code>0.1.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.0.0</code>  <code>foss/2021a</code>   <code>1.0.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#oompa","title":"OOMPA","text":"<p>OOMPA is a suite of R packages for the analysis of gene expression (RNA), proteomics profiling,  and other high throughput molecular biology data.</p> <p>homepage: https://r-forge.r-project.org/projects/oompa</p>    version versionsuffix toolchain     <code>3.1.2</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#opari2","title":"OPARI2","text":"<p>OPARI2, the successor of Forschungszentrum Juelich's OPARI, is a  source-to-source instrumentation tool for OpenMP and hybrid codes.  It surrounds OpenMP directives and runtime library calls with calls  to the POMP2 measurement interface. </p> <p>homepage: https://www.score-p.org</p>    version toolchain     <code>2.0</code> <code>foss/2016a</code>   <code>2.0.5</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.0.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#open-data-cube-core","title":"Open-Data-Cube-Core","text":"<p>The Open Data Cube Core provides an integrated gridded data analysis environment for decades of analysis ready earth observation satellite and related data from multiple satellite and other acquisition systems.</p> <p>homepage: https://github.com/opendatacube/datacube-core</p>    version versionsuffix toolchain     <code>1.8.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#openai-gym","title":"OpenAI-Gym","text":"<p>A toolkit for developing and comparing reinforcement learning algorithms.</p> <p>homepage: https://gym.openai.com</p>    version versionsuffix toolchain     <code>0.17.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.21.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#openbabel","title":"OpenBabel","text":"<p>Open Babel is a chemical toolbox designed to speak the many  languages of chemical data. It's an open, collaborative project allowing anyone  to search, convert, analyze, or store data from molecular modeling, chemistry,  solid-state materials, biochemistry, or related areas.</p> <p>homepage: https://openbabel.org</p>    version versionsuffix toolchain     <code>2.3.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.4.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.4.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>2.4.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.4.1</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>3.0.0</code> <code>-Python-3.7.4</code> <code>gompi/2019b</code>   <code>3.1.1</code>  <code>gompi/2021a</code>, <code>gompi/2022a</code>   <code>3.1.1</code> <code>-Python-3.7.4</code> <code>gompi/2019b</code>   <code>3.1.1</code> <code>-Python-3.8.2</code> <code>iimpi/2020a</code>"},{"location":"version-specific/supported-software/#openblas","title":"OpenBLAS","text":"<p>OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.</p> <p>homepage: https://xianyi.github.com/OpenBLAS/</p>    version versionsuffix toolchain     <code>0.2.9</code> <code>-LAPACK-3.5.0</code> <code>GCC/4.8.3</code>   <code>0.2.12</code> <code>-LAPACK-3.5.0</code> <code>GCC/4.9.2</code>   <code>0.2.13</code> <code>-LAPACK-3.5.0</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>0.2.14</code> <code>-LAPACK-3.5.0</code> <code>GNU/4.9.2-2.25</code>, <code>GNU/4.9.3-2.25</code>   <code>0.2.15</code> <code>-LAPACK-3.6.0</code> <code>GCC/4.9.3-2.25</code>   <code>0.2.18</code> <code>-LAPACK-3.6.0</code> <code>GCC/4.9.4-2.25</code>, <code>GCC/5.3.0-2.26</code>, <code>GCC/5.4.0-2.26</code>   <code>0.2.18</code> <code>-LAPACK-3.6.1</code> <code>GCC/5.4.0-2.26</code>, <code>gompi/2016.07</code>   <code>0.2.19</code> <code>-LAPACK-3.6.1</code> <code>gompi/2016.09</code>   <code>0.2.19</code> <code>-LAPACK-3.7.0</code> <code>GCC/5.4.0-2.26</code>, <code>GCC/6.3.0-2.27</code>   <code>0.2.20</code>  <code>GCC/5.4.0-2.26</code>, <code>GCC/6.4.0-2.28</code>, <code>GCC/7.2.0-2.29</code>   <code>0.3.0</code>  <code>GCC/6.4.0-2.28</code>, <code>GCC/7.3.0-2.30</code>   <code>0.3.1</code>  <code>GCC/7.3.0-2.30</code>   <code>0.3.3</code>  <code>GCC/8.2.0-2.31.1</code>   <code>0.3.4</code>  <code>GCC/8.2.0-2.31.1</code>   <code>0.3.5</code>  <code>GCC/8.2.0-2.31.1</code>   <code>0.3.6</code>  <code>GCC/8.3.0-2.32</code>   <code>0.3.7</code>  <code>GCC/8.3.0</code>   <code>0.3.8</code>  <code>GCC/9.2.0</code>   <code>0.3.9</code>  <code>GCC/9.3.0</code>   <code>0.3.12</code>  <code>GCC/10.2.0</code>   <code>0.3.15</code>  <code>GCC/10.3.0</code>   <code>0.3.17</code>  <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>0.3.18</code>  <code>GCC/11.2.0</code>   <code>0.3.20</code>  <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>   <code>0.3.21</code>  <code>GCC/12.2.0</code>"},{"location":"version-specific/supported-software/#opencarp","title":"openCARP","text":"<p>openCARP is an open cardiac electrophysiology simulator for in-silico experiments.</p> <p>homepage: https://opencarp.org</p>    version versionsuffix toolchain     <code>3.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>6.0</code>  <code>foss/2020b</code>   <code>8.2</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#opencensus-python","title":"OpenCensus-python","text":"<p>OpenCensus for Python. OpenCensus provides a framework to measure a server's resource usage and collect performance stats. This repository contains Python related utilities and supporting software needed by OpenCensus.</p> <p>homepage: https://opencensus.io/</p>    version toolchain     <code>0.8.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#opencoarrays","title":"OpenCoarrays","text":"<p>OpenCoarrays is an open-source software project that supports the coarray Fortran (CAF) parallel programming features of the Fortran 2008 standard and several features proposed for Fortran 2015 in the draft Technical Specification TS 18508 Additional Parallel Features in Fortran.</p> <p>homepage: https://github.com/sourceryinstitute/opencoarrays</p>    version toolchain     <code>1.9.0</code> <code>gompi/2017a</code>   <code>2.2.0</code> <code>gompi/2018b</code>   <code>2.8.0</code> <code>gompi/2019b</code>   <code>2.9.2</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#opencolorio","title":"OpenColorIO","text":"<p>OpenColorIO (OCIO) is a complete color management solution geared towards motion picture production  with an emphasis on visual effects and computer animation.</p> <p>homepage: http://opencolorio.org/</p>    version toolchain     <code>1.1.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#opencv","title":"OpenCV","text":"<p>OpenCV (Open Source Computer Vision Library) is an open source computer vision  and machine learning software library. OpenCV was built to provide  a common infrastructure for computer vision applications and to accelerate  the use of machine perception in the commercial products.  Includes extra modules for OpenCV from the contrib repository.</p> <p>homepage: https://opencv.org/</p>    version versionsuffix toolchain     <code>2.4.12</code>  <code>intel/2016a</code>   <code>3.1.0</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>3.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.3.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.3.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.3.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.4.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.4.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.4.1</code> <code>-Python-3.6.4-contrib</code> <code>foss/2018a</code>   <code>3.4.5</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.4.7</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>3.4.7</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>4.0.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.0.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>4.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>4.2.0</code> <code>-Python-3.8.2-contrib</code> <code>foss/2020a</code>   <code>4.5.1</code> <code>-contrib</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4.5.3</code> <code>-CUDA-11.3.1-contrib</code> <code>foss/2021a</code>   <code>4.5.3</code> <code>-contrib</code> <code>foss/2021a</code>   <code>4.5.5</code> <code>-CUDA-11.4.1-contrib</code> <code>foss/2021b</code>   <code>4.5.5</code> <code>-contrib</code> <code>foss/2021b</code>   <code>4.6.0</code> <code>-CUDA-11.7.0-contrib</code> <code>foss/2022a</code>   <code>4.6.0</code> <code>-contrib</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#openexr","title":"OpenEXR","text":"<p>OpenEXR is a high dynamic-range (HDR) image file format developed by Industrial Light &amp; Magic  for use in computer imaging applications</p> <p>homepage: https://www.openexr.com/</p>    version toolchain     <code>2.2.0</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2.3.0</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.4.0</code> <code>GCCcore/8.3.0</code>   <code>2.4.1</code> <code>GCCcore/9.3.0</code>   <code>2.5.5</code> <code>GCCcore/10.2.0</code>   <code>3.0.1</code> <code>GCCcore/10.3.0</code>   <code>3.1.1</code> <code>GCCcore/11.2.0</code>   <code>3.1.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#openface","title":"OpenFace","text":"<p>OpenFace \u2013 a state-of-the art tool intended for facial landmark detection, head pose estimation, facial action unit recognition, and eye-gaze estimation.</p> <p>homepage: https://github.com/TadasBaltrusaitis/OpenFace</p>    version versionsuffix toolchain     <code>2.2.0</code>  <code>foss/2021a</code>   <code>2.2.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#openfast","title":"OpenFAST","text":"<p>OpenFAST is a wind turbine simulation tool which builds on FAST v8. FAST.Farm extends the capability of OpenFAST to simulate multi-turbine wind farms</p> <p>homepage: http://openfast.readthedocs.io/</p>    version toolchain     <code>3.0.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#openfoam","title":"OpenFOAM","text":"<p>OpenFOAM is a free, open source CFD software package.  OpenFOAM has an extensive range of features to solve anything from complex fluid flows  involving chemical reactions, turbulence and heat transfer,  to solid dynamics and electromagnetics.</p> <p>homepage: https://www.openfoam.com/</p>    version versionsuffix toolchain     <code>2.2.2</code>  <code>intel/2016a</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>2.2.x</code>  <code>intel/2019a</code>   <code>2.3.1</code>  <code>intel/2017a</code>, <code>intel/2019b</code>   <code>2.4.0</code>  <code>intel/2017a</code>, <code>intel/2019a</code>   <code>3.0.0</code>  <code>foss/2016a</code>   <code>3.0.1</code>  <code>intel/2016b</code>, <code>intel/2018a</code>   <code>4.0</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.1</code>  <code>foss/2016b</code>, <code>intel/2017a</code>   <code>4.x-20170904</code>  <code>intel/2016b</code>   <code>5.0</code>  <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>5.0-20180108</code>  <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>6</code>  <code>foss/2018b</code>, <code>foss/2019b</code>, <code>intel/2018a</code>   <code>7</code>  <code>foss/2019b</code>   <code>7</code> <code>-20200508</code> <code>foss/2019b</code>   <code>8</code>  <code>foss/2020a</code>, <code>foss/2020b</code>   <code>8</code> <code>-20210316</code> <code>foss/2020b</code>   <code>9</code>  <code>foss/2021a</code>, <code>intel/2021a</code>   <code>10</code>  <code>foss/2022a</code>   <code>v1606+</code>  <code>foss/2018b</code>   <code>v1612+</code>  <code>foss/2018b</code>   <code>v1712</code>  <code>foss/2017b</code>, <code>intel/2017b</code>   <code>v1806</code>  <code>foss/2018b</code>   <code>v1812</code>  <code>foss/2018b</code>   <code>v1906</code>  <code>foss/2019b</code>   <code>v1912</code>  <code>foss/2019b</code>, <code>intel/2019b</code>   <code>v2006</code>  <code>foss/2020a</code>, <code>intel/2020a</code>   <code>v2012</code>  <code>foss/2020a</code>   <code>v2106</code>  <code>foss/2021a</code>   <code>v2112</code>  <code>foss/2021b</code>   <code>v2206</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#openfoam-extend","title":"OpenFOAM-Extend","text":"<p>OpenFOAM is a free, open source CFD software package. OpenFOAM has an extensive range of features to solve anything from complex fluid flows involving chemical reactions, turbulence and heat transfer, to solid dynamics and electromagnetics.</p> <p>homepage: http://www.extend-project.de/</p>    version versionsuffix toolchain     <code>3.1</code>  <code>gimkl/2.11.5</code>   <code>3.2</code>  <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>4.0</code>  <code>intel/2017a</code>   <code>4.0</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>4.1-20191120</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>4.1-20200408</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#openfold","title":"OpenFold","text":"<p>A faithful PyTorch reproduction of DeepMind's AlphaFold 2</p> <p>homepage: https://github.com/aqlaboratory/openfold</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.0.1</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#openforcefield","title":"OpenForceField","text":"<p>Simulation and Parameter Estimation in Geophysics  - A python package for simulation and gradient based parameter estimation in the context of geophysical applications.</p> <p>homepage: https://github.com/openforcefield/openforcefield/releases</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#openimageio","title":"OpenImageIO","text":"<p>OpenImageIO is a library for reading and writing images, and a bunch of related classes, utilities,  and applications.</p> <p>homepage: https://openimageio.org/</p>    version toolchain     <code>1.6.17</code> <code>intel/2016b</code>   <code>1.7.17</code> <code>intel/2017a</code>   <code>1.8.16</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.0.12</code> <code>gompi/2019b</code>, <code>iimpi/2019b</code>   <code>2.1.12.0</code> <code>gompi/2020a</code>, <code>iimpi/2020a</code>   <code>2.3.17.0</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#openjpeg","title":"OpenJPEG","text":"<p>OpenJPEG is an open-source JPEG 2000 codec written in  C language. It has been developed in order to promote the use of JPEG 2000,  a still-image compression standard from the Joint Photographic Experts Group  (JPEG). Since may 2015, it is officially recognized by ISO/IEC and ITU-T as  a JPEG 2000 Reference Software.</p> <p>homepage: https://www.openjpeg.org/</p>    version toolchain     <code>2.1</code> <code>GCCcore/6.4.0</code>   <code>2.3.0</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.3.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2.4.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.5.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#openkim-api","title":"OpenKIM-API","text":"<p>Open Knowledgebase of Interatomic Models.  OpenKIM is an API and a collection of interatomic models (potentials) for atomistic simulations.  It is a library that can be used by simulation programs to get access to the models in the OpenKIM database.  This EasyBuild only installs the API, the models have to be installed by the user by running     kim-api-collections-management install user MODELNAME or     kim-api-collections-management install user OpenKIM to install them all.  </p> <p>homepage: https://openkim.org/</p>    version toolchain     <code>1.9.2</code> <code>foss/2016b</code>, <code>foss/2017b</code>   <code>1.9.7</code> <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>"},{"location":"version-specific/supported-software/#openkim-models","title":"openkim-models","text":"<p>Open Knowledgebase of Interatomic Models.  OpenKIM is an API and a collection of interatomic models (potentials) for atomistic simulations.  It is a library that can be used by simulation programs to get access to the models in the OpenKIM database.  This EasyBuild installs the models.  The API itself is in the kim-api package.  </p> <p>homepage: https://openkim.org/</p>    version toolchain     <code>20190725</code> <code>GCCcore/10.2.0</code>, <code>foss/2019a</code>, <code>foss/2019b</code>, <code>intel/2019a</code>, <code>intel/2019b</code>   <code>20210128</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#openmm","title":"OpenMM","text":"<p>OpenMM is a toolkit for molecular simulation.</p> <p>homepage: https://openmm.org</p>    version versionsuffix toolchain     <code>7.1.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>7.4.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>7.4.2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>7.5.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>7.5.0</code> <code>-Python-3.8.2</code> <code>fosscuda/2020a</code>, <code>intel/2020a</code>   <code>7.5.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>7.5.1</code> <code>-DeepMind-patch</code> <code>foss/2021a</code>   <code>7.7.0</code>  <code>foss/2021a</code>, <code>foss/2022a</code>   <code>7.7.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#openmm-plumed","title":"OpenMM-PLUMED","text":"<p>This project provides a connection between OpenMM and PLUMED. It allows you to bias or analyze an OpenMM simulation based on collective variables.</p> <p>homepage: https://github.com/openmm/openmm-plumed/</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#openmmtools","title":"OpenMMTools","text":"<p>A batteries-included toolkit for the GPU-accelerated OpenMM molecular simulation engine. openmmtools is a Python library layer that sits on top of OpenMM to provide access to a variety of useful tools  for building full-featured molecular simulation packages. </p> <p>homepage: https://github.com/choderalab/openmmtools</p>    version versionsuffix toolchain     <code>0.20.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#openmolcas","title":"OpenMolcas","text":"<p>OpenMolcas is a quantum chemistry software package.</p> <p>homepage: https://gitlab.com/Molcas/OpenMolcas</p>    version versionsuffix toolchain     <code>18.09</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>20.10</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>20.10</code> <code>-Python-3.8.2-noGA</code> <code>intel/2020a</code>   <code>21.06</code>  <code>intel/2021a</code>   <code>22.06</code>  <code>intel/2022a</code>   <code>22.10</code>  <code>intel/2022a</code>   <code>22.10</code> <code>-noGA</code> <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#openmpi","title":"OpenMPI","text":"<p>The Open MPI Project is an open source MPI implementation.</p> <p>homepage: http://www.open-mpi.org/</p>    version versionsuffix toolchain     <code>1.6.5</code>  <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>, <code>GCC/4.8.3</code>   <code>1.6.5</code> <code>-no-OFED</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>   <code>1.7.3</code>  <code>GCC/4.8.2</code>   <code>1.8.1</code>  <code>GCC/4.8.3</code>   <code>1.8.3</code>  <code>GCC/4.9.2</code>   <code>1.8.4</code>  <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>1.8.5</code>  <code>GNU/4.9.2-2.25</code>   <code>1.8.6</code>  <code>GNU/4.9.3-2.25</code>   <code>1.8.8</code>  <code>GNU/4.9.3-2.25</code>   <code>1.10.1</code>  <code>GCC/4.9.3-2.25</code>   <code>1.10.2</code>  <code>GCC/4.9.3-2.25</code>, <code>GCC/5.3.0-2.26</code>, <code>GCC/6.1.0-2.27</code>, <code>PGI/16.3-GCC-4.9.3-2.25</code>, <code>PGI/16.4-GCC-5.3.0-2.26</code>   <code>1.10.3</code>  <code>GCC/5.4.0-2.26</code>, <code>GCC/6.1.0-2.27</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>   <code>1.10.4</code>  <code>PGI/16.7-GCC-5.4.0-2.26</code>, <code>iccifort/2016.3.210-GCC-4.9.3-2.25</code>   <code>2.0.0</code>  <code>GCC/5.2.0</code>   <code>2.0.1</code>  <code>GCC/6.2.0-2.27</code>, <code>iccifort/2017.1.132-GCC-5.4.0-2.26</code>   <code>2.0.2</code>  <code>GCC/6.3.0-2.27</code>, <code>iccifort/2017.1.132-GCC-6.3.0-2.27</code>   <code>2.0.2</code> <code>-opa</code> <code>GCC/6.3.0-2.27</code>   <code>2.1.0</code>  <code>GCC/6.3.0-2.28</code>   <code>2.1.1</code>  <code>GCC/6.4.0-2.28</code>, <code>gcccuda/2017b</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>   <code>2.1.2</code>  <code>GCC/6.4.0-2.28</code>, <code>gcccuda/2018a</code>, <code>iccifort/2018.1.163-GCC-6.4.0-2.28</code>   <code>2.1.3</code>  <code>iccifort/2018.2.199-GCC-6.4.0-2.28</code>   <code>3.0.0</code>  <code>GCC/7.2.0-2.29</code>   <code>3.1.0</code>  <code>GCC/7.3.0-2.30</code>   <code>3.1.1</code>  <code>GCC/7.3.0-2.30</code>, <code>gcccuda/2018b</code>, <code>iccifort/2018.3.222-GCC-7.3.0-2.30</code>   <code>3.1.2</code>  <code>GCC/8.2.0-2.31.1</code>   <code>3.1.3</code>  <code>GCC/8.2.0-2.31.1</code>, <code>gcccuda/2019a</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>3.1.4</code>  <code>GCC/8.3.0</code>, <code>GCC/8.3.0-2.32</code>, <code>gcccuda/2019b</code>, <code>iccifort/2019.5.281</code>   <code>4.0.0</code>  <code>GCC/8.2.0-2.31.1</code>   <code>4.0.0</code> <code>-hpcx</code> <code>GCC/8.2.0-2.31.1</code>   <code>4.0.1</code>  <code>GCC/8.3.0-2.32</code>   <code>4.0.2</code>  <code>GCC/9.2.0-2.32</code>   <code>4.0.3</code>  <code>GCC/9.3.0</code>, <code>gcccuda/2020a</code>, <code>iccifort/2020.1.217</code>, <code>iccifortcuda/2020a</code>   <code>4.0.5</code>  <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>, <code>gcccuda/2020b</code>, <code>iccifort/2020.4.304</code>   <code>4.0.5</code> <code>-CUDA-11.2.1</code> <code>NVHPC/21.2</code>   <code>4.0.6</code>  <code>GCC/10.3.0</code>   <code>4.0.7</code>  <code>GCC/10.3.0</code>   <code>4.1.0</code>  <code>GCC/10.2.0</code>   <code>4.1.1</code>  <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>intel-compilers/2021.2.0</code>   <code>4.1.2</code>  <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>   <code>4.1.4</code>  <code>GCC/11.3.0</code>, <code>GCC/12.2.0</code>   <code>system</code>  <code>GCC/system-2.29</code>"},{"location":"version-specific/supported-software/#openms","title":"OpenMS","text":"<p>As part of the deNBI Center for integrative Bioinformatics, OpenMS offers an open-source software  C++ library (+ python bindings) for LC/MS data management and analyses. It provides an infrastructure  for the rapid development of mass spectrometry related software as well as a rich toolset built on top of it.</p> <p>homepage: https://www.openms.de/</p>    version toolchain     <code>2.4.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#opennlp","title":"OpenNLP","text":"<p>The Apache OpenNLP library is a machine learning based toolkit for the processing of  natural language text.</p> <p>homepage: https://opennlp.apache.org/</p>    version toolchain     <code>1.8.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#openpgm","title":"OpenPGM","text":"<p>OpenPGM is an open source implementation of the Pragmatic General Multicast (PGM)  specification in RFC 3208 available at www.ietf.org. PGM is a reliable and scalable multicast protocol  that enables receivers to detect loss, request retransmission of lost data, or notify an application  of unrecoverable loss. PGM is a receiver-reliable protocol, which means the receiver is responsible  for ensuring all data is received, absolving the sender of reception responsibility.</p> <p>homepage: http://code.google.com/p/openpgm/</p>    version toolchain     <code>5.2.122</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#openpiv","title":"OpenPIV","text":"<p>OpenPIV is an open source Particle Image Velocimetry analysis software</p> <p>homepage: http://www.openpiv.net</p>    version versionsuffix toolchain     <code>0.21.8</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#openpyxl","title":"openpyxl","text":"<p>A Python library to read/write Excel 2010 xlsx/xlsm files</p> <p>homepage: https://openpyxl.readthedocs.io</p>    version versionsuffix toolchain     <code>2.6.2</code>  <code>GCCcore/8.2.0</code>   <code>2.6.4</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>   <code>3.0.3</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>3.0.7</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.0.9</code>  <code>GCCcore/11.2.0</code>   <code>3.0.10</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#openrefine","title":"OpenRefine","text":"<p>OpenRefine is a power tool that allows you to load data, understand it, clean it up, reconcile it,  and augment it with data coming from the web.</p> <p>homepage: https://github.com/OpenRefine/OpenRefine</p>    version versionsuffix toolchain     <code>2.7</code> <code>-Java-1.8.0_144</code> <code>system</code>   <code>3.4.1</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#openscenegraph","title":"OpenSceneGraph","text":"<p>The OpenSceneGraph is an open source high performance 3D graphics toolkit,  used by application developers in fields such as visual simulation, games, virtual reality,  scientific visualization and modelling. Written entirely in Standard C++ and OpenGL it runs  on all Windows platforms, OSX, GNU/Linux, IRIX, Solaris, HP-Ux, AIX and FreeBSD operating  systems. The OpenSceneGraph is now well established as the world leading scene graph  technology, used widely in the vis-sim, space, scientific, oil-gas, games and virtual  reality industries.</p> <p>homepage: http://www.openscenegraph.org/</p>    version toolchain     <code>3.6.5</code> <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#opensees","title":"OpenSees","text":"<p>Open System for Earthquake Engineering Simulation</p> <p>homepage: https://opensees.berkeley.edu/index.php</p>    version versionsuffix toolchain     <code>3.2.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>3.2.0</code> <code>-Python-3.8.2-parallel</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#openslide","title":"OpenSlide","text":"<p>OpenSlide is a C library that provides a simple interface to read whole-slide images (also known as virtual slides).</p> <p>homepage: https://openslide.org/</p>    version versionsuffix toolchain     <code>3.4.1</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/8.2.0</code>   <code>3.4.1</code> <code>-largefiles</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#openslide-python","title":"openslide-python","text":"<p>OpenSlide Python is a Python interface to the OpenSlide library.</p> <p>homepage: https://github.com/openslide/openslide-python</p>    version toolchain     <code>1.1.1</code> <code>GCCcore/8.2.0</code>   <code>1.1.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.2.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#openssl","title":"OpenSSL","text":"<p>The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured,  and Open Source toolchain implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1)   protocols as well as a full-strength general purpose cryptography library. </p> <p>homepage: https://www.openssl.org/</p>    version toolchain     <code>1.0</code> <code>system</code>   <code>1.0.1f</code> <code>GCC/4.8.2</code>   <code>1.0.1k</code> <code>GCC/4.9.2</code>   <code>1.0.1s</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.0.2g</code> <code>GCCcore/4.9.3</code>   <code>1.0.2h</code> <code>foss/2016.04</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>1.1</code> <code>system</code>   <code>1.1.0c</code> <code>GCC/5.4.0-2.26</code>   <code>1.1.0e</code> <code>intel/2016b</code>   <code>1.1.0h</code> <code>GCCcore/7.3.0</code>   <code>1.1.1b</code> <code>GCCcore/8.2.0</code>   <code>1.1.1d</code> <code>GCCcore/8.3.0</code>   <code>1.1.1e</code> <code>GCCcore/9.3.0</code>   <code>1.1.1h</code> <code>GCCcore/10.2.0</code>   <code>1.1.1k</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.1.1n</code> <code>GCCcore/11.3.0</code>   <code>1.1.1q</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#openstackclient","title":"OpenStackClient","text":"<p>OpenStackClient (aka OSC) is a command-line client for OpenStack that brings the command set for Compute, Identity, Image, Network, Object Store and Block        Storage APIs together in a single shell with a uniform command structure.</p> <p>homepage: https://docs.openstack.org/python-openstackclient/latest/</p>    version toolchain     <code>5.5.0</code> <code>GCCcore/10.2.0</code>   <code>5.8.0</code> <code>GCCcore/11.2.0</code>   <code>6.0.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#opera","title":"OPERA","text":"<p>An optimal genome scaffolding program</p> <p>homepage: https://sourceforge.net/projects/operasf</p>    version versionsuffix toolchain     <code>2.0.6</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#opera-ms","title":"OPERA-MS","text":"<p>OPERA-MS is a hybrid metagenomic assembler which combines the  advantages of short and long-read technologies to provide high quality  assemblies, addressing issues of low contiguity for short-read only assemblies,  and low base-pair quality for long-read only assemblies.</p> <p>homepage: https://github.com/CSB5/OPERA-MS</p>    version versionsuffix toolchain     <code>0.9.0-20200802</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#optitype","title":"OptiType","text":"<p>OptiType is a novel HLA genotyping algorithm based on integer linear programming,  capable of producing accurate 4-digit HLA genotyping predictions from NGS data  by simultaneously selecting all major and minor HLA Class I alleles. </p> <p>homepage: https://github.com/FRED-2/OptiType</p>    version versionsuffix toolchain     <code>1.3.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.3.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#optix","title":"OptiX","text":"<p>OptiX is NVIDIA SDK for easy ray tracing performance.  It provides a simple framework for accessing the GPU\u2019s massive ray tracing  power using state-of-the-art GPU algorithms.</p> <p>homepage: https://developer.nvidia.com/optix</p>    version toolchain     <code>3.8.0</code> <code>GNU/4.9.3-2.25</code>   <code>3.9.0</code> <code>GNU/4.9.3-2.25</code>   <code>6.5.0</code> <code>system</code>   <code>7.2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#optuna","title":"Optuna","text":"<p>Optuna is an automatic hyperparameter optimization software framework, particularly designed for machine learning. It features an imperative, define-by-run style user API. Thanks to our define-by-run API, the code written with Optuna enjoys high modularity, and the user of Optuna can dynamically construct the search spaces for the hyperparameters.</p> <p>homepage: https://optuna.org/</p>    version toolchain     <code>2.9.1</code> <code>foss/2021a</code>   <code>2.10.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#or-tools","title":"OR-Tools","text":"<p>Google Optimization Tools (a.k.a., OR-Tools) is an open-source, fast and portable software suite for solving combinatorial optimization problems.</p> <p>homepage: https://developers.google.com/optimization/</p>    version versionsuffix toolchain     <code>7.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#orca","title":"ORCA","text":"<p>ORCA is a flexible, efficient and easy-to-use general purpose tool for quantum chemistry with specific emphasis on spectroscopic properties of open-shell molecules. It features a wide variety of standard quantum chemical methods ranging from semiempirical methods to DFT to single- and multireference correlated ab initio methods. It can also treat environmental and relativistic effects.</p> <p>homepage: https://orcaforum.kofo.mpg.de</p>    version versionsuffix toolchain     <code>3_0_2-linux_x86-64</code> <code>-OpenMPI-1.8.1</code> <code>system</code>   <code>4.0.0.2</code> <code>-OpenMPI-2.0.2</code> <code>system</code>   <code>4.0.1</code> <code>-OpenMPI-2.0.2</code> <code>system</code>   <code>4.1.0</code> <code>-OpenMPI-3.1.3</code> <code>system</code>   <code>4.2.0</code>  <code>gompi/2019b</code>   <code>4.2.1</code>  <code>gompi/2019b</code>   <code>5.0.0</code>  <code>gompi/2021a</code>   <code>5.0.0</code> <code>-static</code> <code>gompi/2021a</code>   <code>5.0.1</code>  <code>gompi/2021a</code>   <code>5.0.1</code> <code>-static</code> <code>gompi/2021a</code>   <code>5.0.2</code>  <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>5.0.2</code> <code>-static</code> <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>5.0.3</code>  <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#orffinder","title":"ORFfinder","text":"<p>ORF finder searches for open reading frames (ORFs) in the  DNA sequence you enter. The program returns the range of each ORF,  along with its protein translation. Use ORF finder to search newly  sequenced DNA for potential protein encoding segments, verify  predicted protein using newly developed SMART BLAST or regular BLASTP.</p> <p>homepage: https://www.ncbi.nlm.nih.gov/orffinder/</p>    version toolchain     <code>0.4.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#orfm","title":"OrfM","text":"<p>A simple and not slow open reading frame (ORF) caller.</p> <p>homepage: https://github.com/wwood/OrfM</p>    version toolchain     <code>0.6.1</code> <code>foss/2016b</code>   <code>0.7.1</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#orthofinder","title":"OrthoFinder","text":"<p>OrthoFinder is a fast, accurate and comprehensive platform for comparative genomics</p> <p>homepage: https://github.com/davidemms/OrthoFinder</p>    version versionsuffix toolchain     <code>2.2.7</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.3.3</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>2.3.8</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>2.3.11</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>2.5.2</code>  <code>foss/2020b</code>   <code>2.5.4</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#orthomcl","title":"OrthoMCL","text":"<p>OrthoMCL is a genome-scale algorithm for grouping orthologous protein sequences.</p> <p>homepage: http://orthomcl.org/</p>    version versionsuffix toolchain     <code>1.4</code> <code>-Perl-5.24.0</code> <code>intel/2016b</code>   <code>2.0.9</code> <code>-Perl-5.24.0</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#osi","title":"Osi","text":"<p>Osi (Open Solver Interface) provides an abstract base class to a generic linear programming (LP) solver, along with derived classes for specific solvers. Many applications may be able to use the Osi to insulate themselves from a specific LP solver. That is, programs written to the OSI standard may be linked to any solver with an OSI interface and should produce correct results. The OSI has been significantly extended compared to its first incarnation. Currently, the OSI supports linear programming solvers and has rudimentary support for integer programming.</p> <p>homepage: https://github.com/coin-or/Osi</p>    version toolchain     <code>0.108.5</code> <code>GCCcore/7.3.0</code>, <code>foss/2018b</code>   <code>0.108.6</code> <code>GCC/10.3.0</code>, <code>GCCcore/10.2.0</code>   <code>0.108.7</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#ospray","title":"OSPRay","text":"<p>Open, Scalable, and Portable Ray Tracing Engine</p> <p>homepage: https://www.ospray.org</p>    version toolchain     <code>2.5.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#osu-micro-benchmarks","title":"OSU-Micro-Benchmarks","text":"<p>OSU Micro-Benchmarks</p> <p>homepage: https://mvapich.cse.ohio-state.edu/benchmarks/</p>    version versionsuffix toolchain     <code>5.3.2</code>  <code>foss/2016a</code>, <code>foss/2017a</code>   <code>5.6.2</code>  <code>gompi/2019a</code>   <code>5.6.3</code>  <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompic/2019b</code>, <code>gompic/2020a</code>, <code>iimpi/2019a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iimpi/2020b</code>, <code>iimpic/2019b</code>, <code>iimpic/2020a</code>   <code>5.7</code>  <code>gompi/2020b</code>, <code>gompic/2020b</code>, <code>iimpi/2020b</code>   <code>5.7.1</code>  <code>ffmpi/4.5.0</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>iimpi/2021a</code>, <code>iompi/2021a</code>   <code>5.7.1</code> <code>-CUDA-11.3.1</code> <code>gompi/2021a</code>   <code>5.8</code>  <code>iimpi/2021b</code>   <code>5.9</code>  <code>gompi/2022.05</code>, <code>gompi/2022a</code>   <code>5.9</code> <code>-CUDA-11.3.1</code> <code>gompi/2021a</code>   <code>5.9</code> <code>-CUDA-11.4.1</code> <code>gompi/2021b</code>   <code>5.9</code> <code>-CUDA-11.7.0</code> <code>gompi/2022a</code>   <code>6.2</code>  <code>gompi/2022.10</code>, <code>gompi/2022b</code>"},{"location":"version-specific/supported-software/#otf2","title":"OTF2","text":"<p>The Open Trace Format 2 is a highly scalable, memory efficient event trace  data format plus support library. It is the new standard trace format for  Scalasca, Vampir, and TAU and is open for other tools.  </p> <p>homepage: https://www.score-p.org</p>    version toolchain     <code>2.0</code> <code>foss/2016a</code>, <code>foss/2017a</code>   <code>2.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>3.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ovito","title":"OVITO","text":"<p>OVITO is a scientific visualization and data analysis solution for atomistic and other particle-based models. It helps scientists gain meaningful and quick insights from numerical simulation results.</p> <p>homepage: https://www.ovito.org</p>    version versionsuffix toolchain     <code>3.7.11</code> <code>-basic</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#owncloud","title":"ownCloud","text":"<p>The ownCloud Desktop Client is a tool to synchronize files from ownCloud Server with your computer.</p> <p>homepage: https://github.com/owncloud/client</p>    version toolchain     <code>2.4.3</code> <code>foss/2018b</code>   <code>2.5.4</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#oxford_asl","title":"oxford_asl","text":"<p>A command line tool for quantification of perfusion from ASL data</p> <p>homepage: https://github.com/ibme-qubic/oxford_asl</p>    version versionsuffix toolchain     <code>3.9.6</code> <code>-centos7-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#p","title":"P","text":"<p>p11-kit - p4-phylogenetics - p4est - p4vasp - p7zip - packmol - pagmo - pairsnp - PAL2NAL - paladin - PAML - panaroo - pandapower - pandas - pandas-datareader - PANDAseq - Pandoc - Panedr - Pango - pangolin - panito - PAPI - parallel - parallel-fastq-dump - ParallelIO - parameterized - parasail - Paraver - ParaView - Parcels - PARI-GP - ParmEd - ParMETIS - ParMGridGen - PartitionFinder - pasta - PaStiX - patch - patchelf - path.py - PAUP - pauvre - pbbam - pbcopper - pbdagcon - pbmm2 - pbs_python - PBSuite - PCAngsd - PCC - PCL - PCMSolver - PCRaster - PCRE - PCRE2 - PDT - PEAR - PennCNV - PEPT - Percolator - Perl - perl-app-cpanminus - Perl4-CoreLibs - PEST++ - PETSc - petsc4py - pfind - pftoolsV3 - pFUnit - PGDSpider - PGI - PHANOTATE - Phantompeakqualtools - PHASE - PHAST - PheWAS - PhiPack - PHLAT - phonemizer - phono3py - phonopy - photontorch - phototonic - PHYLIP - PhyloBayes-MPI - phylokit - phylonaut - PhyloPhlAn - PhyML - phyx - picard - pigz - PIL - PileOMeth - Pillow - Pillow-SIMD - Pilon - PIMS - Pindel - Pingouin - Pint - pip - PIPITS - pIRS - Pisces - piSvM - piSvM-JSC - pixman - pizzly - pkg-config - pkgconf - pkgconfig - plantcv - PlaScope - PlasmaPy - PLAST - Platanus - Platypus - plc - PLINK - plinkQC - PLINKSEQ - Ploticus - plotly - plotly-orca - plotly.py - PLplot - PLUMED - PLY - PMIx - pmx - PnetCDF - pocl - poetry - polars - polymake - pomkl - pompi - poppler - popscle - popt - Porechop - porefoam - poretools - Portcullis - Postgres-XL - PostgreSQL - POT - POV-Ray - PPanGGOLiN - PPfold - ppl - pplacer - pplpy - PRANK - PRC - preCICE - PREQUAL - preseq - presto - pretty-yaml - Primer3 - PRINSEQ - printproto - PRISMS-PF - ProbABEL - prodigal - ProFit - PROJ - ProjectQ - prokka - prompt-toolkit - proovread - propy - Proteinortho - ProtHint - protobuf - protobuf-python - protozero - PRSice - pscom - PSI - PSI4 - PsiCLASS - PSIPRED - psmc - psmpi - psmpi2 - PSolver - PSORTb - psrecord - pstoedit - psutil - psycopg2 - ptemcee - PTESFinder - pubtcrs - pugixml - pullseq - PuLP - purge_dups - py - py-aiger - py-aiger-bdd - py-cpuinfo - pyABC - PyAMG - PyAPS3 - pybedtools - PyBerny - pyBigWig - pybind11 - PyCairo - PyCalib - pyccel - PyCharm - PyCheMPS2 - PyCifRW - PyClone - pycma - pycocotools - pycodestyle - PyCogent - pycoQC - PyCUDA - PycURL - PyDamage - pydantic - PyDatastream - pydicom - pydlpoly - pydot - pyEGA3 - pyenchant - PyEVTK - pyFAI - pyfaidx - pyfasta - PyFFmpeg - pyFFTW - pyfits - PyFMI - PyFoam - PyFR - PyFrag - pygccxml - pyGenomeTracks - PyGEOS - pyGIMLi - Pygments - pygmo - PyGObject - pygraphviz - pygrib - PyGTK - PyGTS - PyGWAS - pyhdf - PyImageJ - pyiron - Pyke3 - pylift - Pylint - pymatgen - pymatgen-db - pymbar - PyMC3 - pymca - pymemcache - PyMOL - PyNAST - pyobjcryst - PyOD - Pyomo - PyOpenCL - PyOpenGL - pyparsing - pyplusplus - PYPOWER - pyproj - PyPSA - pyqstem - PyQt - PyQt5 - PyQtGraph - pyradiomics - PyRe - PyRETIS - pyringe - pyro-api - pyro-ppl - Pyro4 - PyRosetta - Pysam - pysamstats - PySAT - pyScaf - pySCENIC - PySCF - pysheds - pyshp - PySide2 - pysndfx - Pysolar - pyspoa - pysqlite - PyStan - pysteps - pystran - PyTables - pytest - pytest-benchmark - pytest-xdist - PYTHIA - Python - python-docx - python-hl7 - python-igraph - python-irodsclient - python-isal - python-Levenshtein - python-libsbml - python-parasail - python-telegram-bot - python-weka-wrapper3 - pythran - PyTorch - PyTorch-Geometric - PyTorch-Lightning - PyTorch3D - PyVCF - pyWannier90 - PyWavelets - PyYAML - PyZMQ</p>"},{"location":"version-specific/supported-software/#p11-kit","title":"p11-kit","text":"<p>Provides a way to load and enumerate PKCS#11 modules.  Provides a standard configuration setup for installing  PKCS#11 modules in such a way that they're discoverable.  Also solves problems with coordinating the use of PKCS#11  by different components or libraries living in the same process.</p> <p>homepage: https://p11-glue.freedesktop.org/p11-kit.html</p>    version toolchain     <code>0.23.2</code> <code>GCCcore/5.4.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.24.0</code> <code>GCCcore/10.3.0</code>   <code>0.24.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#p4-phylogenetics","title":"p4-phylogenetics","text":"<p>A Python phyloinformatic toolkit, and an implementation of tree-heterogeneous models of evolution.</p> <p>homepage: http://p4.nhm.ac.uk/</p>    version versionsuffix toolchain     <code>1.4-20210322</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#p4est","title":"p4est","text":"<p>p4est is a C library to manage a collection (a forest) of multiple connected adaptive quadtrees or octrees in parallel.</p> <p>homepage: https://www.p4est.org</p>    version toolchain     <code>2.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.8</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#p4vasp","title":"p4vasp","text":"<p>Visualization suite for VASP</p> <p>homepage: http://www.p4vasp.at/</p>    version versionsuffix toolchain     <code>0.3.29</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.3.30</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>, <code>intel/2018a</code>   <code>0.3.30</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#p7zip","title":"p7zip","text":"<p>p7zip is a quick port of 7z.exe and 7za.exe (command line version of 7zip) for Unix.  7-Zip is a file archiver with highest compression ratio.</p> <p>homepage: http://p7zip.sourceforge.net/</p>    version toolchain     <code>9.38.1</code> <code>GCC/4.9.2</code>, <code>system</code>   <code>16.02</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>intel/2018a</code>   <code>17.03</code> <code>GCCcore/10.2.0</code>   <code>17.04</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#packmol","title":"packmol","text":"<p>Packing Optimization for Molecular Dynamics Simulations</p> <p>homepage: http://m3g.iqm.unicamp.br/packmol</p>    version toolchain     <code>16.103</code> <code>intel/2016a</code>   <code>18.013</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>20.2.2</code> <code>GCC/10.2.0</code>   <code>v20.2.2</code> <code>iccifort/2020.1.217</code>"},{"location":"version-specific/supported-software/#pagmo","title":"pagmo","text":"<p>pagmo is a C++ scientific library for massively parallel optimization.</p> <p>homepage: https://esa.github.io/pagmo2</p>    version toolchain     <code>2.17.0</code> <code>foss/2020b</code>   <code>2.18.0</code> <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pairsnp","title":"pairsnp","text":"<p>A set of scripts for very quickly obtaining pairwise SNP distance matrices from multiple sequence alignments  using sparse matrix libraries to improve performance. </p> <p>homepage: https://github.com/gtonkinhill/pairsnp</p>    version toolchain     <code>0.0.7</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pal2nal","title":"PAL2NAL","text":"<p>PAL2NAL is a program that converts a multiple sequence alignment of proteins and  the corresponding DNA (or mRNA) sequences into a codon alignment. The program automatically  assigns the corresponding codon sequence even if the input DNA sequence has mismatches with the  input protein sequence, or contains UTRs, polyA tails. It can also deal with frame shifts in the  input alignment, which is suitable for the analysis of pseudogenes. The resulting codon alignment  can further be subjected to the calculation of synonymous (d_S) and non-synonymous (d_N) subs-  titution rates. </p> <p>homepage: http://www.bork.embl.de/pal2nal/</p>    version toolchain     <code>14</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#paladin","title":"paladin","text":"<p>Protein ALignment And Detection INterface  PALADIN is a protein sequence alignment tool designed for the accurate functional characterization of metagenomes. </p> <p>homepage: https://github.com/ToniWestbrook/paladin</p>    version toolchain     <code>1.4.6</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#paml","title":"PAML","text":"<p>PAML is a package of programs for phylogenetic   analyses of DNA or protein sequences using maximum likelihood.</p> <p>homepage: http://abacus.gene.ucl.ac.uk/software/paml.html</p>    version toolchain     <code>4.9i</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>   <code>4.9j</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#panaroo","title":"panaroo","text":"<p>A pangenome analysis pipeline.</p> <p>homepage: https://gtonkinhill.github.io/panaroo/</p>    version toolchain     <code>1.2.8</code> <code>foss/2020b</code>   <code>1.2.9</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pandapower","title":"pandapower","text":"<p>An easy to use open source tool for power system modeling, analysis and optimization with a high degree of automation</p> <p>homepage: http://www.pandapower.org/</p>    version toolchain     <code>2.7.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pandas","title":"pandas","text":"<p>pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures  and data analysis tools for the Python programming language.</p> <p>homepage: https://pypi.python.org/pypi/pandas/</p>    version versionsuffix toolchain     <code>0.18.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.18.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.18.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.18.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.19.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.19.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.19.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.19.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.20.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.21.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.21.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.1.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#pandas-datareader","title":"pandas-datareader","text":"<p>Up to date remote data access for pandas, works for multiple versions of pandas.</p> <p>homepage: https://pypi.org/project/pandas-datareader</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pandaseq","title":"PANDAseq","text":"<p>PANDASEQ is a program to align Illumina reads, optionally with PCR primers embedded     in the sequence, and reconstruct an overlapping sequence.</p> <p>homepage: https://github.com/neufeld/pandaseq</p>    version toolchain     <code>2.10</code> <code>GCC/5.4.0-2.26</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>   <code>2.11</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pandoc","title":"Pandoc","text":"<p>If you need to convert files from one markup format into another, pandoc is your swiss-army knife</p> <p>homepage: http://pandoc.org</p>    version toolchain     <code>2.1.3</code> <code>system</code>   <code>2.5</code> <code>system</code>   <code>2.10</code> <code>system</code>   <code>2.13</code> <code>system</code>"},{"location":"version-specific/supported-software/#panedr","title":"Panedr","text":"<p>Panedr uses the Pyedr library to read a Gromacs EDR binary energy XDR file and returns its contents as a pandas dataframe.</p> <p>homepage: https://github.com/MDAnalysis/panedr</p>    version toolchain     <code>0.7.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pango","title":"Pango","text":"<p>Pango is a library for laying out and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed, though most of the work on Pango so far has been done in the context of the GTK+ widget toolkit. Pango forms the core of text and font handling for GTK+-2.x.</p> <p>homepage: https://www.pango.org/</p>    version toolchain     <code>1.39.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.40.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.40.3</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.40.5</code> <code>intel/2017a</code>   <code>1.40.12</code> <code>intel/2017a</code>   <code>1.40.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.41.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.41.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.42.4</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.43.0</code> <code>GCCcore/8.2.0</code>   <code>1.44.7</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.47.0</code> <code>GCCcore/10.2.0</code>   <code>1.48.5</code> <code>GCCcore/10.3.0</code>   <code>1.48.8</code> <code>GCCcore/11.2.0</code>   <code>1.50.7</code> <code>GCCcore/11.3.0</code>   <code>1.50.12</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pangolin","title":"pangolin","text":"<p>Software package for assigning SARS-CoV-2 genome sequences to global lineages. This module also contains the faToVcf tool</p> <p>homepage: https://cov-lineages.org/pangolin.html</p>    version versionsuffix toolchain     <code>3.1.11</code>  <code>foss/2020b</code>   <code>3.1.16</code> <code>-pangoLEARN-2021-10-18</code> <code>foss/2021b</code>   <code>3.1.16</code> <code>-pangoLEARN-2021-11-25</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#panito","title":"panito","text":"<p>Calculate genome wide average nucleotide identity (gwANI) for a multiFASTA alignment.</p> <p>homepage: https://github.com/sanger-pathogens/panito</p>    version toolchain     <code>0.0.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#papi","title":"PAPI","text":"<p>PAPI provides the tool designer and application engineer with a consistent  interface and methodology for use of the performance counter hardware found  in most major microprocessors. PAPI enables software engineers to see, in near  real time, the relation between software performance and processor events.  In addition Component PAPI provides access to a collection of components  that expose performance measurement opportunites across the hardware and  software stack. </p> <p>homepage: https://icl.cs.utk.edu/projects/papi/</p>    version toolchain     <code>5.4.3</code> <code>foss/2016a</code>   <code>5.5.1</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>5.6.0</code> <code>GCCcore/6.4.0</code>   <code>5.7.0</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>6.0.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>6.0.0.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#parallel","title":"parallel","text":"<p>parallel: Build and execute shell commands in parallel</p> <p>homepage: https://savannah.gnu.org/projects/parallel/</p>    version toolchain     <code>20141122</code> <code>GCC/4.9.2</code>   <code>20150322</code> <code>GCC/4.9.2</code>   <code>20150822</code> <code>GCC/4.9.2</code>   <code>20160622</code> <code>foss/2016a</code>   <code>20170822</code> <code>intel/2017a</code>   <code>20171022</code> <code>intel/2017b</code>   <code>20171122</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>20180422</code> <code>intel/2018a</code>   <code>20180822</code> <code>foss/2018b</code>   <code>20181222</code> <code>intel/2018b</code>   <code>20190222</code> <code>GCCcore/7.3.0</code>   <code>20190622</code> <code>GCCcore/8.2.0</code>   <code>20190922</code> <code>GCCcore/8.3.0</code>   <code>20200422</code> <code>GCCcore/9.3.0</code>   <code>20200522</code> <code>GCCcore/9.3.0</code>   <code>20210322</code> <code>GCCcore/10.2.0</code>   <code>20210622</code> <code>GCCcore/10.3.0</code>   <code>20210722</code> <code>GCCcore/11.2.0</code>   <code>20220722</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#parallel-fastq-dump","title":"parallel-fastq-dump","text":"<p>parallel fastq-dump wrapper</p> <p>homepage: https://github.com/rvalieris/parallel-fastq-dump</p>    version versionsuffix toolchain     <code>0.6.5</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>0.6.6</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>0.6.7</code>  <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#parallelio","title":"ParallelIO","text":"<p>A high-level Parallel I/O Library for structured grid applications</p> <p>homepage: https://github.com/NCAR/ParallelIO</p>    version toolchain     <code>2.2.2a</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#parameterized","title":"parameterized","text":"<p>Parameterized testing with any Python test framework </p> <p>homepage: https://github.com/wolever/parameterized</p>    version toolchain     <code>0.8.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#parasail","title":"parasail","text":"<p>parasail is a SIMD C (C99) library containing implementations  of the Smith-Waterman (local), Needleman-Wunsch (global), and semi-global  pairwise sequence alignment algorithms. </p> <p>homepage: https://github.com/jeffdaily/parasail</p>    version toolchain     <code>2.2</code> <code>intel/2018a</code>   <code>2.4</code> <code>foss/2018b</code>   <code>2.4.1</code> <code>GCC/8.3.0</code>, <code>intel/2019b</code>   <code>2.4.2</code> <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>   <code>2.4.3</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>2.5</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#paraver","title":"Paraver","text":"<p>A very powerful performance visualization and analysis tool based on  traces that can be used to analyse any information that is expressed on its input trace format.  Traces for parallel MPI, OpenMP and other programs can be genereated with Extrae.</p> <p>homepage: https://tools.bsc.es/paraver</p>    version toolchain     <code>4.8.1</code> <code>foss/2019a</code>   <code>4.9.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#paraview","title":"ParaView","text":"<p>ParaView is a scientific parallel visualizer.</p> <p>homepage: https://www.paraview.org</p>    version versionsuffix toolchain     <code>4.4.0</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.4.0</code> <code>-mpi</code> <code>gimkl/2.11.5</code>   <code>5.1.2</code> <code>-mpi</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>5.2.0</code> <code>-mpi</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>5.3.0</code> <code>-mpi</code> <code>foss/2016b</code>   <code>5.4.1</code> <code>-mpi</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>5.5.2</code> <code>-Python-2.7.15-mpi</code> <code>foss/2018b</code>   <code>5.6.2</code> <code>-Python-3.7.4-mpi</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>5.8.0</code> <code>-Python-3.8.2-mpi</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>5.8.1</code> <code>-mpi</code> <code>foss/2020b</code>   <code>5.9.1</code> <code>-mpi</code> <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021a</code>   <code>5.10.1</code> <code>-mpi</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#parcels","title":"Parcels","text":"<p>Parcels (Probably A Really Computationally Efficient Lagrangian Simulator) is a set of Python classes and methods to create customisable particle tracking simulations using output from Ocean Circulation models. Parcels can be used to track passive and active particulates such as water, plankton, plastic and fish.</p> <p>homepage: http://www.oceanparcels.org/</p>    version toolchain     <code>2.4.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pari-gp","title":"PARI-GP","text":"<p>PARI/GP is a widely used computer algebra system designed for fast computations in number theory  (factorizations, algebraic  number theory, elliptic curves...), but also contains a large number of other useful  functions to compute with mathematical entities such as matrices, polynomials, power series, algebraic numbers etc.,  and a lot of transcendental functions. PARI is  also available as a C library to allow for faster computations. </p> <p>homepage: http://pari.math.u-bordeaux.fr</p>    version toolchain     <code>2.7.6</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#parmed","title":"ParmEd","text":"<p>ParmEd is a general tool for aiding in investigations of biomolecular systems using popular  molecular simulation packages, like Amber, CHARMM, and OpenMM written in Python.</p> <p>homepage: https://parmed.github.io/ParmEd</p>    version versionsuffix toolchain     <code>2.7.3</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.2.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>3.2.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#parmetis","title":"ParMETIS","text":"<p>ParMETIS is an MPI-based parallel library that implements a variety of algorithms for partitioning  unstructured graphs, meshes, and for computing fill-reducing orderings of sparse matrices. ParMETIS extends the  functionality provided by METIS and includes routines that are especially suited for parallel AMR computations and  large scale numerical simulations. The algorithms implemented in ParMETIS are based on the parallel multilevel k-way  graph-partitioning, adaptive repartitioning, and parallel multi-constrained partitioning schemes.</p> <p>homepage: http://glaros.dtc.umn.edu/gkhome/metis/parmetis/overview</p>    version toolchain     <code>4.0.3</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>gimkl/2.11.5</code>, <code>gompi/2019a</code>, <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>gompi/2022a</code>, <code>iimpi/2019a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>, <code>iimpi/2021b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#parmgridgen","title":"ParMGridGen","text":"<p>ParMGridGen is an MPI-based parallel library that is based on the serial package MGridGen,  that implements (serial) algorithms for obtaining a sequence of successive coarse grids that are well-suited  for geometric multigrid methods.</p> <p>homepage: http://www-users.cs.umn.edu/~moulitsa/software.html</p>    version toolchain     <code>1.0</code> <code>gimkl/2.11.5</code>, <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>intel/2016a</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#partitionfinder","title":"PartitionFinder","text":"<p>PartitionFinder 2 is a Python program for simultaneously choosing partitioning schemes and models of molecular evolution for phylogenetic analyses of DNA, protein, and morphological data. You can PartitionFinder 2 before running a phylogenetic analysis, in order to decide how to divide up your sequence data into separate blocks before analysis, and to simultaneously perform model selection on each of those blocks.</p> <p>homepage: https://www.robertlanfear.com/partitionfinder</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#pasta","title":"pasta","text":"<p>PASTA (Practical Alignment using SATe and Transitivity)</p> <p>homepage: https://github.com/smirarab/pasta</p>    version versionsuffix toolchain     <code>1.8.5</code> <code>-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#pastix","title":"PaStiX","text":"<p>PaStiX (Parallel Sparse matriX package) is a scientific library that provides a high performance  parallel solver for very large sparse linear systems based on direct methods.</p> <p>homepage: http://pastix.gforge.inria.fr/</p>    version toolchain     <code>5.2.3</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#patch","title":"patch","text":"<p>Patch takes a patch file containing a difference listing produced by the diff program  and applies those differences to one or more original files, producing patched versions.</p> <p>homepage: https://savannah.gnu.org/projects/patch</p>    version toolchain     <code>2.7.6</code> <code>system</code>"},{"location":"version-specific/supported-software/#patchelf","title":"patchelf","text":"<p>PatchELF is a small utility to modify the dynamic linker and RPATH of ELF executables.</p> <p>homepage: http://nixos.org/patchelf.html</p>    version toolchain     <code>0.8</code> <code>GNU/4.9.3-2.25</code>   <code>0.9</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>   <code>0.10</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/8.3.0</code>   <code>0.12</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.13</code> <code>GCCcore/11.2.0</code>   <code>0.15.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pathpy","title":"path.py","text":"<p>path.py is a Python library implementing path objects as first-class entities,  allowing common operations on files to be invoked on those path objects directly.</p> <p>homepage: https://github.com/jaraco/path.py</p>    version versionsuffix toolchain     <code>8.2.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>8.2.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>8.2.1</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>8.2.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>10.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#paup","title":"PAUP","text":"<p>PAUP (Phylogenetic Analysis Using Parsimony and other methods) is a computational phylogenetics program for inferring evolutionary trees.</p> <p>homepage: https://paup.phylosolutions.com/</p>    version versionsuffix toolchain     <code>4.0a166</code> <code>-centos64</code> <code>system</code>   <code>4.0a168</code> <code>-centos64</code> <code>system</code>"},{"location":"version-specific/supported-software/#pauvre","title":"pauvre","text":"<p>Tools for plotting Oxford Nanopore and other long-read data</p> <p>homepage: https://github.com/conchoecia/pauvre</p>    version versionsuffix toolchain     <code>0.2.3</code>  <code>foss/2021a</code>   <code>0.1923</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>0.1924</code>  <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#pbbam","title":"pbbam","text":"<p>The pbbam software package provides components to create, query, &amp; edit PacBio BAM files  and associated indices.</p> <p>homepage: http://pbbam.readthedocs.io/</p>    version toolchain     <code>1.0.6</code> <code>gompi/2019a</code>   <code>20170508</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pbcopper","title":"pbcopper","text":"<p>The pbcopper library provides a suite of data structures, algorithms,  and utilities for C++ applications.</p> <p>homepage: https://github.com/PacificBiosciences/pbcopper</p>    version toolchain     <code>1.3.0</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#pbdagcon","title":"pbdagcon","text":"<p>pbdagcon is a tool that implements DAGCon (Directed Acyclic Graph Consensus) which is a sequence  consensus algorithm based on using directed acyclic graphs to encode multiple sequence alignment.</p> <p>homepage: https://github.com/PacificBiosciences/pbdagcon</p>    version toolchain     <code>20170330</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pbmm2","title":"pbmm2","text":"<p>A minimap2 frontend for PacBio native data formats</p> <p>homepage: https://github.com/PacificBiosciences/pbmm2</p>    version toolchain     <code>1.1.0</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#pbs_python","title":"pbs_python","text":"<p>The pbs_python package is a wrapper class for the Torque C library. With this package you now can  write utilities/extensions in Python instead of C. We developed this package because we want to replace xpbsmon by  an ascii version named pbsmon. PBSQuery is also included in this package. This is a python module build on top of  the pbs python module to simplify querying the batch server, eg: how many jobs, how many nodes, ...</p> <p>homepage: https://oss.trac.surfsara.nl/pbs_python</p>    version versionsuffix toolchain     <code>4.6.0</code>  <code>system</code>   <code>4.6.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>4.6.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.6.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pbsuite","title":"PBSuite","text":"<p>PBJelly is a highly automated pipeline that aligns long sequencing reads (such as PacBio RS reads or  long 454 reads in fasta format) to high-confidence draft assembles.</p> <p>homepage: https://sourceforge.net/p/pb-jelly/wiki/Home/</p>    version versionsuffix toolchain     <code>15.8.24</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#pcangsd","title":"PCAngsd","text":"<p>PCAngsd, which estimates the covariance matrix for low depth  NGS data in an iterative procedure based on genotype likelihoods and is able  to perform multiple population genetic analyses in heterogeneous populations.</p> <p>homepage: http://www.popgen.dk/software/index.php/PCAngsd</p>    version versionsuffix toolchain     <code>0.97</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#pcc","title":"PCC","text":"<p>The compiler is based on the original Portable C Compiler by S. C. Johnson,  written in the late 70's. About 50% of the frontend code and 80% of the backend code has been modified.</p> <p>homepage: http://pcc.ludd.ltu.se/</p>    version toolchain     <code>20131024</code> <code>system</code>"},{"location":"version-specific/supported-software/#pcl","title":"PCL","text":"<p>The Point Cloud Library (PCL) is a standalone, large scale, open project for 2D/3D image and  point cloud processing.</p> <p>homepage: http://pointclouds.org/</p>    version versionsuffix toolchain     <code>1.7.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.8.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pcmsolver","title":"PCMSolver","text":"<p>An API for the Polarizable Continuum Model.</p> <p>homepage: https://pcmsolver.readthedocs.org</p>    version versionsuffix toolchain     <code>1.1.4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.2.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.2.3</code> <code>-Python-3.7.2</code> <code>gompi/2019a</code>   <code>1.2.3</code> <code>-Python-3.7.4</code> <code>iimpi/2019b</code>   <code>20160205</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#pcraster","title":"PCRaster","text":"<p>PCRaster Is a collection of software targeted at the development  and deployment of spatio-temporal environmental models.</p> <p>homepage: http://pcraster.geo.uu.nl/</p>    version versionsuffix toolchain     <code>4.1.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pcre","title":"PCRE","text":"<p>The PCRE library is a set of functions that implement regular expression  pattern matching using the same syntax and semantics as Perl 5. </p> <p>homepage: https://www.pcre.org/</p>    version toolchain     <code>8.38</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>8.39</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>8.40</code> <code>GCCcore/6.3.0</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>8.41</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>8.42</code> <code>GCCcore/6.4.0</code>   <code>8.43</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>8.44</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>8.45</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pcre2","title":"PCRE2","text":"<p>The PCRE library is a set of functions that implement regular expression pattern matching using the same syntax  and semantics as Perl 5. </p> <p>homepage: https://www.pcre.org/</p>    version toolchain     <code>10.21</code> <code>foss/2016a</code>   <code>10.31</code> <code>foss/2018b</code>   <code>10.33</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>10.34</code> <code>GCCcore/9.3.0</code>   <code>10.35</code> <code>GCCcore/10.2.0</code>   <code>10.36</code> <code>GCCcore/10.3.0</code>   <code>10.37</code> <code>GCCcore/11.2.0</code>   <code>10.40</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pdt","title":"PDT","text":"<p>Program Database Toolkit (PDT) is a framework for analyzing source code  written in several programming languages and for making rich program  knowledge accessible to developers of static and dynamic analysis tools.  PDT implements a standard program representation, the program database  (PDB), that can be accessed in a uniform way through a class library  supporting common PDB operations. </p> <p>homepage: https://www.cs.uoregon.edu/research/pdt/</p>    version toolchain     <code>3.22</code> <code>foss/2016a</code>   <code>3.25</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.25.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#pear","title":"PEAR","text":"<p>PEAR is an ultrafast, memory-efficient and highly accurate pair-end read merger.   It is fully parallelized and can run with as low as just a few kilobytes of memory.</p> <p>homepage: http://sco.h-its.org/exelixis/web/software/pear/</p>    version toolchain     <code>0.9.8</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.9.10</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>   <code>0.9.11</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#penncnv","title":"PennCNV","text":"<p>A free software tool for Copy Number Variation (CNV) detection from SNP genotyping arrays. Currently  it can handle signal intensity data from Illumina and Affymetrix arrays. With appropriate preparation of file format,  it can also handle other types of SNP arrays and oligonucleotide arrays.</p> <p>homepage: https://penncnv.openbioinformatics.org/</p>    version toolchain     <code>1.0.5</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pept","title":"PEPT","text":"<p>A Python library that integrates all the tools necessary to perform research using Positron Emission  Particle Tracking (PEPT). The library includes algorithms for the location, identification and tracking of particles,  in addition to tools for visualisation and analysis, and utilities allowing the realistic simulation of PEPT data.</p> <p>homepage: https://pept.readthedocs.io/en/latest/</p>    version toolchain     <code>0.4.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#percolator","title":"Percolator","text":"<p>Semi-supervised learning for peptide identification from shotgun proteomics datasets</p> <p>homepage: https://github.com/percolator/percolator</p>    version toolchain     <code>3.4</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#perl","title":"Perl","text":"<p>Larry Wall's Practical Extraction and Report Language</p> <p>homepage: https://www.perl.org/</p>    version versionsuffix toolchain     <code>5.20.1</code> <code>-bare</code> <code>GCC/4.8.2</code>, <code>GCC/4.9.2</code>   <code>5.20.2</code> <code>-bare</code> <code>GCC/4.9.2</code>   <code>5.20.3</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.22.0</code> <code>-bare</code> <code>GCC/4.9.2</code>   <code>5.22.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>   <code>5.22.1</code> <code>-bare</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.22.2</code>  <code>intel/2016a</code>   <code>5.24.0</code>  <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>5.24.0</code> <code>-bare</code> <code>foss/2016b</code>   <code>5.24.1</code>  <code>GCCcore/6.3.0</code>, <code>foss/2017a</code>, <code>intel/2017a</code>   <code>5.26.0</code>  <code>GCCcore/6.4.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>, <code>intel/2018.01</code>   <code>5.26.1</code>  <code>GCCcore/6.4.0</code>, <code>foss/2018a</code>   <code>5.26.1</code> <code>-bare</code> <code>foss/2018a</code>   <code>5.28.0</code>  <code>GCCcore/7.3.0</code>   <code>5.28.1</code>  <code>GCCcore/8.2.0</code>   <code>5.30.0</code>  <code>GCCcore/8.3.0</code>   <code>5.30.0</code> <code>-minimal</code> <code>GCCcore/8.3.0</code>   <code>5.30.2</code>  <code>GCCcore/9.3.0</code>   <code>5.30.2</code> <code>-minimal</code> <code>GCCcore/9.3.0</code>   <code>5.32.0</code>  <code>GCCcore/10.2.0</code>   <code>5.32.0</code> <code>-minimal</code> <code>GCCcore/10.2.0</code>   <code>5.32.1</code>  <code>FCC/4.5.0</code>, <code>GCCcore/10.3.0</code>   <code>5.32.1</code> <code>-minimal</code> <code>GCCcore/10.3.0</code>   <code>5.34.0</code>  <code>GCCcore/11.2.0</code>   <code>5.34.0</code> <code>-minimal</code> <code>GCCcore/11.2.0</code>   <code>5.34.1</code>  <code>GCCcore/11.3.0</code>   <code>5.34.1</code> <code>-minimal</code> <code>GCCcore/11.3.0</code>   <code>5.36.0</code>  <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#perl-app-cpanminus","title":"perl-app-cpanminus","text":"<p>cpanm - get, unpack build and install modules from CPAN </p> <p>homepage: https://github.com/miyagawa/cpanminus</p>    version toolchain     <code>1.7039</code> <code>system</code>"},{"location":"version-specific/supported-software/#perl4-corelibs","title":"Perl4-CoreLibs","text":"<p>Libraries historically supplied with Perl 4</p> <p>homepage: https://metacpan.org/pod/Perl4::CoreLibs</p>    version versionsuffix toolchain     <code>0.003</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pest","title":"PEST++","text":"<p>PEST++ is a software suite aimed at supporting  complex numerical models in the decision-support context.  Much focus has been devoted to supporting environmental models  (groundwater, surface water, etc) but these tools are readily  applicable to any computer model. </p> <p>homepage: https://github.com/usgs/pestpp</p>    version toolchain     <code>5.0.5</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#petsc","title":"PETSc","text":"<p>PETSc, pronounced PET-see (the S is silent), is a suite of data structures and routines for the  scalable (parallel) solution of scientific applications modeled by partial differential equations.</p> <p>homepage: http://www.mcs.anl.gov/petsc</p>    version versionsuffix toolchain     <code>3.7.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.7.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.7.5</code> <code>-downloaded-deps</code> <code>intel/2016b</code>   <code>3.8.3</code> <code>-downloaded-deps</code> <code>foss/2017b</code>   <code>3.9.1</code> <code>-downloaded-deps</code> <code>foss/2018a</code>   <code>3.9.3</code>  <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.11.0</code> <code>-downloaded-deps</code> <code>foss/2018b</code>   <code>3.11.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.12.4</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>3.12.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.12.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>3.14.4</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>3.15.1</code>  <code>foss/2021a</code>   <code>3.17.4</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#petsc4py","title":"petsc4py","text":"<p>petsc4py are Python bindings for PETSc, the Portable, Extensible Toolchain for Scientific Computation.</p> <p>homepage: https://bitbucket.org/petsc/petsc4py</p>    version versionsuffix toolchain     <code>3.9.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>3.12.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.15.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pfind","title":"pfind","text":"<p>Drop-in replacement for find, implemented for using parallel access and MPI.</p> <p>homepage: https://github.com/VI4IO/pfind</p>    version toolchain     <code>20220613</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#pftoolsv3","title":"pftoolsV3","text":"<p>A suite of tools to build and search generalized profiles (protein and DNA).</p> <p>homepage: https://github.com/sib-swiss/pftools3</p>    version toolchain     <code>3.2.11</code> <code>GCCcore/10.3.0</code>, <code>foss/2021a</code>   <code>3.2.12</code> <code>GCCcore/11.2.0</code>   <code>20160324</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pfunit","title":"pFUnit","text":"<p>pFUnit is a unit testing framework enabling JUnit-like testing of serial  and MPI-parallel software written in Fortran.</p> <p>homepage: https://github.com/Goddard-Fortran-Ecosystem/pFUnit</p>    version toolchain     <code>3.2.9</code> <code>gompi/2018b</code>   <code>4.2.0</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#pgdspider","title":"PGDSpider","text":"<p>An automated data conversion tool for connecting population genetics and genomics programs</p> <p>homepage: http://cmpg.unibe.ch/software/PGDSpider/</p>    version versionsuffix toolchain     <code>2.1.0.3</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#pgi","title":"PGI","text":"<p>C, C++ and Fortran compilers from The Portland Group - PGI</p> <p>homepage: https://www.pgroup.com/</p>    version versionsuffix toolchain     <code>15.7</code> <code>-GNU-4.9.2-2.25</code> <code>system</code>   <code>15.7</code> <code>-GNU-4.9.3-2.25</code> <code>system</code>   <code>15.10</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>16.1</code> <code>-CDK-GCC-4.9.2-2.25</code> <code>system</code>   <code>16.3</code> <code>-GCC-4.9.3-2.25</code> <code>system</code>   <code>16.4</code> <code>-GCC-5.3.0-2.26</code> <code>system</code>   <code>16.7</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>16.10</code> <code>-GCC-5.4.0-2.26</code> <code>system</code>   <code>17.1</code> <code>-GCC-6.3.0-2.27</code> <code>system</code>   <code>17.3</code> <code>-GCC-6.3.0-2.28</code> <code>system</code>   <code>17.4</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>17.10</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>18.1</code> <code>-GCC-7.2.0-2.29</code> <code>system</code>   <code>18.4</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>18.7</code> <code>-GCC-7.3.0-2.30</code> <code>system</code>   <code>18.10</code> <code>-GCC-6.4.0-2.28</code> <code>system</code>   <code>19.1</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>19.4</code> <code>-GCC-8.2.0-2.31.1</code> <code>system</code>   <code>19.7</code> <code>-GCC-8.3.0-2.32</code> <code>system</code>   <code>19.10</code> <code>-GCC-8.3.0-2.32</code> <code>system</code>"},{"location":"version-specific/supported-software/#phanotate","title":"PHANOTATE","text":"<p>PHANOTATE: a tool to annotate phage genomes</p> <p>homepage: https://github.com/deprekate/PHANOTATE</p>    version toolchain     <code>20190724</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#phantompeakqualtools","title":"Phantompeakqualtools","text":"<p>It computes informative enrichment and quality measures for ChIP-seq/DNase-seq/FAIRE-seq/MNase-seq data.</p> <p>homepage: https://github.com/kundajelab/phantompeakqualtools</p>    version toolchain     <code>1.2.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#phase","title":"PHASE","text":"<p>The program PHASE implements a Bayesian statistical  method for reconstructing haplotypes from population genotype data. Documentation: http://stephenslab.uchicago.edu/assets/software/phase/instruct2.1.pdf</p> <p>homepage: http://stephenslab.uchicago.edu/phase/download.html</p>    version toolchain     <code>2.1.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#phast","title":"PHAST","text":"<p>PHAST is a freely available software package for comparative and evolutionary genomics.</p> <p>homepage: http://compgen.cshl.edu/phast/</p>    version toolchain     <code>1.4</code> <code>intel/2017a</code>   <code>1.5</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#phewas","title":"PheWAS","text":"<p>Provides an accessible R interface to the phenome wide association study.</p> <p>homepage: https://www.vumc.org/cpm/center-precision-medicine-blog/phewas-r-package</p>    version versionsuffix toolchain     <code>0.12</code> <code>-R-3.3.3</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.99.5-2</code> <code>-R-3.6.0</code> <code>foss/2019a</code>, <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#phipack","title":"PhiPack","text":"<p>The PhiPack software package implements (in C) a few tests for recombination and can produce refined incompatibility matrices as well.</p> <p>homepage: http://www.maths.otago.ac.nz/~dbryant/software.html</p>    version toolchain     <code>2016.06.14</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#phlat","title":"PHLAT","text":"<p>PHLAT is a bioinformatics algorithm that offers HLA typing at four-digit resolution (or higher)  using genome-wide transcriptome and exome sequencing data over a wide range of read lengths and sequencing depths.</p> <p>homepage: https://sites.google.com/site/phlatfortype/</p>    version versionsuffix toolchain     <code>1.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#phonemizer","title":"phonemizer","text":"<p>The phonemizer allows simple phonemization of words and texts in many languages. Provides both the phonemize command-line tool and the Python function phonemizer.phonemize. It is using four backends: espeak, espeak-mbrola, festival and segments. </p> <p>homepage: https://github.com/bootphon/phonemizer</p>    version versionsuffix toolchain     <code>2.2.1</code> <code>-Python-3.8.2</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#phono3py","title":"phono3py","text":"<p>phono3py calculates phonon-phonon interaction and related properties using the supercell approach.</p> <p>homepage: https://atztogo.github.io/phono3py/</p>    version versionsuffix toolchain     <code>1.12.5.35</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.12.7.55</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#phonopy","title":"phonopy","text":"<p>Phonopy is an open source package of phonon calculations based on the supercell approach.</p> <p>homepage: https://atztogo.github.io/phonopy/</p>    version versionsuffix toolchain     <code>1.10.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.12.2.20</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.12.6.66</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.13.0.64</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.14.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>2.0.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.2.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>2.7.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>2.7.1</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>2.12.0</code>  <code>foss/2020b</code>   <code>2.16.3</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#photontorch","title":"photontorch","text":"<p>Photontorch is a photonic simulator for highly parallel simulation and optimization of photonic circuits in time and frequency domain. Photontorch features CUDA enabled simulation and optimization of photonic circuits. It leverages the deep learning framework PyTorch to view the photonic circuit as essentially a recurrent neural network. This enables the use of native PyTorch optimizers to optimize the (physical) parameters of the circuit. </p> <p>homepage: https://docs.photontorch.com/</p>    version toolchain     <code>0.4.1</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#phototonic","title":"phototonic","text":"<p>Phototonic is an image viewer and organizer</p> <p>homepage: https://github.com/oferkv/phototonic</p>    version toolchain     <code>2.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#phylip","title":"PHYLIP","text":"<p>PHYLIP is a free package of programs for inferring phylogenies.</p> <p>homepage: http://evolution.genetics.washington.edu/phylip</p>    version toolchain     <code>3.696</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.697</code> <code>GCC/6.4.0-2.28</code>, <code>GCC/9.3.0</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#phylobayes-mpi","title":"PhyloBayes-MPI","text":"<p>A Bayesian software for phylogenetic reconstruction using mixture models</p> <p>homepage: https://github.com/bayesiancook/pbmpi</p>    version toolchain     <code>20161021</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#phylokit","title":"phylokit","text":"<p>C++ library for high performance phylogenetics</p> <p>homepage: https://github.com/pranjalv123/phylokit</p>    version toolchain     <code>1.0</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#phylonaut","title":"phylonaut","text":"<p>Dynamic programming for phylogenetics applications</p> <p>homepage: https://github.com/pranjalv123/phylonaut</p>    version toolchain     <code>20190626</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#phylophlan","title":"PhyloPhlAn","text":"<p>PhyloPhlAn is an integrated pipeline for large-scale phylogenetic profiling of genomes and metagenomes. PhyloPhlAn is an accurate, rapid, and easy-to-use method for large-scale microbial genome characterization and phylogenetic analysis at multiple levels of resolution. </p> <p>homepage: https://github.com/biobakery/phylophlan</p>    version versionsuffix toolchain     <code>3.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.0.2</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#phyml","title":"PhyML","text":"<p>Phylogenetic estimation using (Maximum) Likelihood</p> <p>homepage: https://github.com/stephaneguindon/phyml</p>    version toolchain     <code>3.3.20190321</code> <code>foss/2018b</code>   <code>3.3.20200621</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#phyx","title":"phyx","text":"<p>phyx performs phylogenetics analyses on trees and sequences.</p> <p>homepage: https://github.com/FePhyFoFum/phyx</p>    version toolchain     <code>1.01</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#picard","title":"picard","text":"<p>A set of tools (in Java) for working with next generation sequencing data in the BAM format.</p> <p>homepage: https://sourceforge.net/projects/picard</p>    version versionsuffix toolchain     <code>1.39</code>  <code>system</code>   <code>1.100</code>  <code>system</code>   <code>1.109</code>  <code>system</code>   <code>1.119</code>  <code>system</code>   <code>1.119</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>1.120</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>1.141</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>2.0.1</code> <code>-Java-1.8.0_66</code> <code>system</code>   <code>2.1.0</code>  <code>system</code>   <code>2.1.0</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>2.1.1</code> <code>-Java-1.8.0_112</code> <code>system</code>   <code>2.1.1</code> <code>-Java-1.8.0_74</code> <code>system</code>   <code>2.2.4</code> <code>-Java-1.8.0_92</code> <code>system</code>   <code>2.6.0</code> <code>-Java-1.8.0_131</code> <code>system</code>   <code>2.10.1</code> <code>-Java-1.8.0_131</code> <code>system</code>   <code>2.18.5</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>2.18.11</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>2.18.14</code> <code>-Java-1.8</code> <code>system</code>   <code>2.18.17</code> <code>-Java-1.8</code> <code>system</code>   <code>2.18.27</code> <code>-Java-1.8</code> <code>system</code>   <code>2.20.6</code> <code>-Java-1.8</code> <code>system</code>   <code>2.21.1</code> <code>-Java-11</code> <code>system</code>   <code>2.21.6</code> <code>-Java-11</code> <code>system</code>   <code>2.22.1</code> <code>-Java-11</code> <code>system</code>   <code>2.25.0</code> <code>-Java-11</code> <code>system</code>   <code>2.25.1</code> <code>-Java-11</code> <code>system</code>   <code>2.25.5</code> <code>-Java-13</code> <code>system</code>   <code>2.26.10</code> <code>-Java-15</code> <code>system</code>"},{"location":"version-specific/supported-software/#pigz","title":"pigz","text":"<p>pigz, which stands for parallel implementation of gzip, is a fully  functional replacement for gzip that exploits multiple processors and multiple  cores to the hilt when compressing data. pigz was written by Mark Adler, and  uses the zlib and pthread libraries. </p> <p>homepage: https://zlib.net/pigz/</p>    version toolchain     <code>2.3.3</code> <code>foss/2016b</code>   <code>2.3.4</code> <code>GCCcore/6.4.0</code>   <code>2.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018a</code>   <code>2.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.7</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pil","title":"PIL","text":"<p>The Python Imaging Library (PIL) adds image processing capabilities to your Python interpreter.  This library supports many file formats, and provides powerful image processing and graphics capabilities.</p> <p>homepage: http://www.pythonware.com/products/pil</p>    version versionsuffix toolchain     <code>1.1.7</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.1.7</code> <code>-Python-2.7.11-freetype-2.6.3</code> <code>intel/2016a</code>   <code>1.1.7</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.1.7</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.1.7</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#pileometh","title":"PileOMeth","text":"<p>PileOMeth processes a coordinate-sorted and indexed BAM or CRAM file containing some form of BS-seq alignments.  PileOMeth extracts per-base methylation metrics from them.  PileOMeth requires an indexed fasta file containing the reference genome as well. </p> <p>homepage: https://github.com/dpryan79/PileOMeth</p>    version toolchain     <code>0.1.11</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#pillow","title":"Pillow","text":"<p>Pillow is the 'friendly PIL fork' by Alex Clark and Contributors.  PIL is the Python Imaging Library by Fredrik Lundh and Contributors.</p> <p>homepage: https://pillow.readthedocs.org/</p>    version versionsuffix toolchain     <code>3.2.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.2.0</code> <code>-Python-2.7.11-freetype-2.6.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.4.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.4.2</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.4.2</code> <code>-Python-3.5.2-freetype-2.6.5</code> <code>intel/2016b</code>   <code>4.1.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.1.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>4.2.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>4.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.3.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>4.3.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>5.0.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>5.0.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.0.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>5.3.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>5.3.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>6.0.0</code>  <code>GCCcore/8.2.0</code>   <code>6.2.1</code>  <code>GCCcore/8.3.0</code>   <code>6.2.2</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>7.0.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>8.0.1</code>  <code>GCCcore/10.2.0</code>   <code>8.2.0</code>  <code>GCCcore/10.3.0</code>   <code>8.3.1</code>  <code>GCCcore/11.2.0</code>   <code>8.3.2</code>  <code>GCCcore/11.2.0</code>   <code>9.1.0</code>  <code>GCCcore/10.3.0</code>   <code>9.1.1</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>9.2.0</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pillow-simd","title":"Pillow-SIMD","text":"<p>Pillow is the 'friendly PIL fork' by Alex Clark and Contributors.  PIL is the Python Imaging Library by Fredrik Lundh and Contributors.</p> <p>homepage: https://github.com/uploadcare/pillow-simd</p>    version versionsuffix toolchain     <code>5.0.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>5.3.0.post0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>6.0.x.post0</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>7.1.2</code>  <code>GCCcore/10.2.0</code>   <code>7.1.2</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>8.2.0</code>  <code>GCCcore/10.3.0</code>   <code>8.3.1</code>  <code>GCCcore/11.2.0</code>   <code>8.3.2</code>  <code>GCCcore/11.2.0</code>   <code>9.2.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pilon","title":"Pilon","text":"<p>Pilon is an automated genome assembly improvement and variant detection tool</p> <p>homepage: https://github.com/broadinstitute/pilon</p>    version versionsuffix toolchain     <code>1.22</code> <code>-Java-1.8</code> <code>system</code>   <code>1.22</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>1.23</code> <code>-Java-1.8</code> <code>system</code>   <code>1.23</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#pims","title":"PIMS","text":"<p>PIMS is a lazy-loading interface to sequential data with numpy-like slicing.</p> <p>homepage: https://soft-matter.github.io/pims</p>    version versionsuffix toolchain     <code>0.4.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pindel","title":"Pindel","text":"<p>Pindel can detect breakpoints of large deletions, medium sized  insertions, inversions, tandem duplications and other structural variants at single-based  resolution from next-gen sequence data. It uses a pattern growth approach to identify the  breakpoints of these variants from paired-end short reads. </p> <p>homepage: http://gmt.genome.wustl.edu/packages/pindel/</p>    version toolchain     <code>0.2.5b8</code> <code>foss/2016b</code>   <code>0.2.5b9-20170508</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>, <code>GCC/6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#pingouin","title":"Pingouin","text":"<p>Pingouin is an open-source statistical package written in Python 3 and based mostly on Pandas and  NumPy.</p> <p>homepage: https://pingouin-stats.org/</p>    version versionsuffix toolchain     <code>0.3.8</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pint","title":"Pint","text":"<p>Pint is a Python package to define, operate and manipulate physical quantities: the product of a numerical value and a unit of measurement. It allows arithmetic operations between them and conversions from and to different units.</p> <p>homepage: https://github.com/hgrecco/pint</p>    version versionsuffix toolchain     <code>0.14</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.19.2</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#pip","title":"pip","text":"<p>The PyPA recommended tool for installing Python packages.</p> <p>homepage: https://pip.pypa.io</p>    version versionsuffix toolchain     <code>8.0.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>8.1.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>8.1.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#pipits","title":"PIPITS","text":"<p>An automated pipeline for analyses of fungal internal transcribed spacer (ITS) sequences  from the Illumina sequencing platform.</p> <p>homepage: https://github.com/hsgweon/pipits</p>    version versionsuffix toolchain     <code>2.7</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.8</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pirs","title":"pIRS","text":"<p>pIRS (profile based Illumina pair-end Reads Simulator) is a program for simulating paired-end reads from a reference genome. It is optimized for simulating reads similar to those generated from the Illumina platform.</p> <p>homepage: https://github.com/galaxy001/pirs</p>    version toolchain     <code>2.0.2</code> <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#pisces","title":"Pisces","text":"<p>Somatic and germline variant caller for amplicon data. Recommended caller for tumor-only workflows.</p> <p>homepage: https://github.com/Illumina/Pisces</p>    version toolchain     <code>5.2.7.47</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#pisvm","title":"piSvM","text":"<p>piSvM is a parallel implementation of the Support Vector Machine (SVM) algorithm that allows  efficient training and testing on a multiprocessor system.</p> <p>homepage: http://pisvm.sourceforge.net/</p>    version toolchain     <code>1.3</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pisvm-jsc","title":"piSvM-JSC","text":"<p>piSvM is a parallel implementation of the Support Vector Machine (SVM) algorithm that allows  efficient training and testing on a multiprocessor system. This version is a fork of the original PiSvM to increase scalability.</p> <p>homepage: https://github.com/mricherzhagen/pisvm</p>    version toolchain     <code>1.2-20150622</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pixman","title":"pixman","text":"<p>Pixman is a low-level software library for pixel manipulation, providing  features such as image compositing and trapezoid rasterization. Important  users of pixman are the cairo graphics library and the X server. </p> <p>homepage: http://www.pixman.org/</p>    version toolchain     <code>0.34.0</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>0.38.0</code> <code>GCCcore/8.2.0</code>   <code>0.38.4</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>0.40.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>0.42.2</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pizzly","title":"pizzly","text":"<p>Pizzly is a program for detecting gene fusions from RNA-Seq data of cancer samples.</p> <p>homepage: https://github.com/pmelsted/pizzly</p>    version toolchain     <code>0.37.3</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#pkg-config","title":"pkg-config","text":"<p>pkg-config is a helper tool used when compiling applications and libraries.  It helps you insert the correct compiler options on the command line so an  application can use gcc -o test test.c <code>pkg-config --libs --cflags glib-2.0</code>  for instance, rather than hard-coding values on where to find glib (or other  libraries). </p> <p>homepage: http://www.freedesktop.org/wiki/Software/pkg-config/</p>    version toolchain     <code>0.28</code> <code>GCC/4.8.2</code>, <code>GCC/4.9.2</code>, <code>GNU/4.9.3-2.25</code>   <code>0.29</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>0.29.1</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>gimkl/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>0.29.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2017a</code>, <code>system</code>"},{"location":"version-specific/supported-software/#pkgconf","title":"pkgconf","text":"<p>pkgconf is a program which helps to configure compiler and linker flags for development libraries.  It is similar to pkg-config from freedesktop.org.</p> <p>homepage: https://github.com/pkgconf/pkgconf</p>    version toolchain     <code>1.8.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>system</code>   <code>1.9.3</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pkgconfig","title":"pkgconfig","text":"<p>pkgconfig is a Python module to interface with the pkg-config command line tool</p> <p>homepage: https://github.com/matze/pkgconfig</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.1.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.1.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>1.1.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.2.2</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.2.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>   <code>1.2.2</code> <code>-Python-3.6.1</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>1.2.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>   <code>1.3.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.3.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>1.3.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.3.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>1.5.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.5.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>1.5.1</code> <code>-python</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>   <code>1.5.4</code> <code>-python</code> <code>GCCcore/10.3.0</code>   <code>1.5.5</code> <code>-python</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#plantcv","title":"plantcv","text":"<p>PlantCV: Plant phenotyping using computer vision.</p> <p>homepage: https://pypi.org/project/plantcv/</p>    version versionsuffix toolchain     <code>3.8.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#plascope","title":"PlaScope","text":"<p>Plasmid exploration of bacterial genomes</p> <p>homepage: https://github.com/GuilhemRoyer/PlaScope</p>    version toolchain     <code>1.3.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#plasmapy","title":"PlasmaPy","text":"<p>Open source Python ecosystem for plasma research and education</p> <p>homepage: https://www.plasmapy.org</p>    version versionsuffix toolchain     <code>0.3.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#plast","title":"PLAST","text":"<p>PLAST is a parallel alignment search tool for comparing large protein banks</p> <p>homepage: http://www.irisa.fr/symbiose/projects/plast/</p>    version versionsuffix toolchain     <code>2.3.1</code> <code>-Java-1.8.0_92</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#platanus","title":"Platanus","text":"<p>PLATform for Assembling NUcleotide Sequences</p> <p>homepage: http://platanus.bio.titech.ac.jp/</p>    version versionsuffix toolchain     <code>1.2.1</code> <code>-linux-x86_64</code> <code>system</code>   <code>1.2.4</code>  <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#platypus","title":"Platypus","text":"<p>Platypus is a tool designed for efficient and accurate variant-detection  in high-throughput sequencing data.</p> <p>homepage: http://www.well.ox.ac.uk/platypus</p>    version versionsuffix toolchain     <code>0.8.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#plc","title":"plc","text":"<p>plc is the public Planck Likelihood Code.  It provides C and Fortran libraries that allow   users to compute the log likelihoods of the temperature,   polarization, and lensing maps.  Optionally, it also provides a python version of this library,   as well as tools to modify the predetermined options for some likelihoods   (e.g. changing the high-ell and low-ell lmin and lmax values of the temperature). </p> <p>homepage: http://pla.esac.esa.int/pla/#home</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>intel/2018b</code>   <code>3.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#plink","title":"PLINK","text":"<p>Whole-genome association analysis toolset</p> <p>homepage: https://www.cog-genomics.org/plink/2.0/</p>    version toolchain     <code>1.07</code> <code>foss/2016a</code>, <code>foss/2016b</code>   <code>1.07-x86_64</code> <code>system</code>   <code>1.9b5</code> <code>golf/2020a</code>   <code>1.9b_4.1-x86_64</code> <code>system</code>   <code>1.9b_6.17-x86_64</code> <code>system</code>   <code>1.9b_6.21-x86_64</code> <code>system</code>   <code>2.00-alpha1-x86_64</code> <code>system</code>   <code>2.00-alpha2-x86_64</code> <code>system</code>   <code>2.00-alpha2-x86_64_avx2</code> <code>system</code>   <code>2.00a2.3</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>2.00a2.3_x86_64</code> <code>system</code>   <code>2.00a3.1</code> <code>GCC/11.2.0</code>   <code>2.00a3.6</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#plinkqc","title":"plinkQC","text":"<p>plinkQC is a R/CRAN package for genotype quality control in genetic association studies.  It makes PLINK basic statistics (e.g.missing genotyping rates per individual, allele frequencies per genetic  marker) and relationship functions easily accessible from within R and allows for automatic evaluation of the  results.</p> <p>homepage: https://meyer-lab-cshl.github.io/plinkQC/</p>    version versionsuffix toolchain     <code>0.3.3</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#plinkseq","title":"PLINKSEQ","text":"<p>PLINK/SEQ is an open-source C/C++ library for working with human   genetic variation data. The specific focus is to provide a platform for analytic tool   development for variation data from large-scale resequencing and genotyping projects,   particularly whole-exome and whole-genome studies. It is independent of (but designed   to be complementary to) the existing PLINK package. </p> <p>homepage: https://atgu.mgh.harvard.edu/plinkseq/</p>    version toolchain     <code>0.10</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#ploticus","title":"Ploticus","text":"<p>Ploticus is a free GPL software utility that can produce various types of plots and graphs</p> <p>homepage: http://ploticus.sourceforge.net/doc/welcome.html</p>    version toolchain     <code>2.42</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#plotly","title":"plotly","text":"<p>Easily translate 'ggplot2' graphs to an interactive web-based version and/or  create custom web-based visualizations directly from R.</p> <p>homepage: https://cran.r-project.org/web/packages/plotly</p>    version versionsuffix toolchain     <code>4.7.1</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>4.8.0</code> <code>-R-3.4.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#plotly-orca","title":"plotly-orca","text":"<p>Orca is an Electron app that generates images and reports of Plotly things like  plotly.js graphs, dash apps, dashboards from the command line.</p> <p>homepage: https://github.com/plotly/orca</p>    version toolchain     <code>1.3.0</code> <code>GCCcore/8.3.0</code>   <code>1.3.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#plotlypy","title":"plotly.py","text":"<p>An open-source, interactive graphing library for Python</p> <p>homepage: https://plot.ly/python</p>    version toolchain     <code>4.1.0</code> <code>intel/2019a</code>   <code>4.4.1</code> <code>intel/2019b</code>   <code>4.8.1</code> <code>GCCcore/9.3.0</code>   <code>4.14.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>5.1.0</code> <code>GCCcore/10.3.0</code>   <code>5.4.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#plplot","title":"PLplot","text":"<p>PLplot is a cross-platform software package for creating scientific plots whose (UTF-8) plot symbols  and text are limited in practice only by what Unicode-aware system fonts are installed on a user's computer.</p> <p>homepage: http://plplot.sourceforge.net</p>    version versionsuffix toolchain     <code>5.11.1</code> <code>-Java-1.7.0_80-Python-2.7.11</code> <code>foss/2016a</code>   <code>5.11.1</code> <code>-Java-1.7.0_80-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#plumed","title":"PLUMED","text":"<p>PLUMED is an open source library for free energy calculations in molecular systems which  works together with some of the most popular molecular dynamics engines. Free energy calculations can be  performed as a function of many order parameters with a particular  focus on biological problems, using  state of the art methods such as metadynamics, umbrella sampling and Jarzynski-equation based steered MD.  The software, written in C++, can be easily interfaced with both fortran and C/C++ codes. </p> <p>homepage: https://www.plumed.org</p>    version versionsuffix toolchain     <code>2.2.2</code>  <code>intel/2016a</code>   <code>2.2.3</code>  <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.3.0</code>  <code>foss/2016b</code>, <code>foss/2017a</code>, <code>intel/2016b</code>   <code>2.3.4</code>  <code>intel/2017b</code>   <code>2.4.0</code>  <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.4.0</code> <code>-PathCV</code> <code>intel/2018a</code>   <code>2.4.1</code>  <code>iomkl/2018a</code>   <code>2.4.2</code>  <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.5.0</code>  <code>intel/2018b</code>   <code>2.5.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>2.5.1</code>  <code>foss/2019a</code>, <code>intel/2018b</code>   <code>2.5.1</code> <code>-PathCV</code> <code>intel/2018b</code>   <code>2.5.2</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>2.5.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>2.5b</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.6.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>2.6.2</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2.7.0</code>  <code>foss/2020b</code>   <code>2.7.2</code>  <code>foss/2021a</code>, <code>intel/2021a</code>   <code>2.7.3</code>  <code>foss/2021b</code>   <code>2.8.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ply","title":"PLY","text":"<p>PLY is yet another implementation of lex and yacc for Python.</p> <p>homepage: http://www.dabeaz.com/ply/</p>    version versionsuffix toolchain     <code>3.11</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>3.11</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pmix","title":"PMIx","text":"<p>Process Management for Exascale Environments PMI Exascale (PMIx) represents an attempt to provide an extended version of the PMI standard specifically designed to support clusters up to and including exascale sizes. The overall objective of the project is not to branch the existing pseudo-standard definitions - in fact, PMIx fully supports both of the existing PMI-1 and PMI-2 APIs - but rather to (a) augment and extend those APIs to eliminate some current restrictions that impact scalability, and (b) provide a reference implementation of the PMI-server that demonstrates the desired level of scalability. </p> <p>homepage: https://pmix.org/</p>    version toolchain     <code>1.2.5</code> <code>GCCcore/6.4.0</code>   <code>2.1.3</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>2.2.1</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>2.2.3</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>3.0.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>3.0.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.1.1</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>3.1.4</code> <code>GCCcore/8.3.0</code>   <code>3.1.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.2.3</code> <code>GCCcore/10.3.0</code>   <code>4.1.0</code> <code>GCCcore/11.2.0</code>   <code>4.1.2</code> <code>GCCcore/11.3.0</code>   <code>4.2.2</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pmx","title":"pmx","text":"<p>pmx (formerly pymacs) is a small bunch of classes to read structure files such as pdb or gro and trajectory data in gromacs xtc format. Over the years it has been extended towards a versatile (bio-) molecular structure manipulation package with some additional functionalities, e.g. gromacs file parsers and scripts for setup and analysis of free energy calculations.</p> <p>homepage: https://github.com/deGrootLab/pmx</p>    version versionsuffix toolchain     <code>2.0</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pnetcdf","title":"PnetCDF","text":"<p>Parallel netCDF: A Parallel I/O Library for NetCDF File Access</p> <p>homepage: https://trac.mcs.anl.gov/projects/parallel-netcdf</p>    version toolchain     <code>1.8.1</code> <code>intel/2017a</code>   <code>1.9.0</code> <code>intel/2018a</code>   <code>1.10.0</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.12.1</code> <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompic/2019b</code>, <code>gompic/2020a</code>, <code>iimpi/2020a</code>   <code>1.12.2</code> <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompic/2020b</code>, <code>iimpi/2021a</code>   <code>1.12.3</code> <code>gompi/2021b</code>, <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#pocl","title":"pocl","text":"<p>Pocl is a portable open source (MIT-licensed) implementation of the OpenCL standard</p> <p>homepage: http://portablecl.org</p>    version toolchain     <code>1.2</code> <code>GCC/7.3.0-2.30</code>   <code>1.3</code> <code>GCC/8.2.0-2.31.1</code>, <code>gcccuda/2019a</code>   <code>1.4</code> <code>GCC/8.3.0</code>, <code>gcccuda/2019b</code>   <code>1.5</code> <code>GCC/9.3.0</code>   <code>1.6</code> <code>GCC/10.2.0</code>, <code>gcccuda/2020b</code>, <code>iccifort/2020.4.304</code>   <code>1.8</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#poetry","title":"poetry","text":"<p>Python packaging and dependency management made easy</p> <p>homepage: https://python-poetry.org/</p>    version versionsuffix toolchain     <code>1.0.9</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#polars","title":"polars","text":"<p>Lightning-fast DataFrame library for Rust and Python.</p> <p>homepage: https://pola.rs/</p>    version toolchain     <code>0.15.6</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#polymake","title":"polymake","text":"<p>polymake is open source software for research in polyhedral geometry. It deals with polytopes, polyhedra and fans as well as simplicial complexes, matroids, graphs, tropical hypersurfaces, and other objects.</p> <p>homepage: https://polymake.org</p>    version toolchain     <code>4.0r1</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pomkl","title":"pomkl","text":"<p>Toolchain with PGI C, C++ and Fortran compilers, alongside Intel MKL &amp; OpenMPI.</p> <p>homepage: http://www.pgroup.com/index.htm</p>    version toolchain     <code>2016.03</code> <code>system</code>   <code>2016.04</code> <code>system</code>   <code>2016.09</code> <code>system</code>"},{"location":"version-specific/supported-software/#pompi","title":"pompi","text":"<p>Toolchain with PGI C, C++ and Fortran compilers, alongside OpenMPI.</p> <p>homepage: http://www.pgroup.com/index.htm</p>    version toolchain     <code>2016.03</code> <code>system</code>   <code>2016.04</code> <code>system</code>   <code>2016.09</code> <code>system</code>"},{"location":"version-specific/supported-software/#poppler","title":"poppler","text":"<p>Poppler is a PDF rendering library</p> <p>homepage: https://poppler.freedesktop.org</p>    version toolchain     <code>0.70.1</code> <code>foss/2018b</code>   <code>0.90.1</code> <code>GCCcore/8.3.0</code>   <code>21.06.1</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>22.01.0</code> <code>GCC/11.2.0</code>   <code>22.12.0</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#popscle","title":"popscle","text":"<p>A suite of population scale analysis tools for single-cell genomics data including implementation of Demuxlet / Freemuxlet methods and auxilary tools </p> <p>homepage: https://github.com/statgen/popscle</p>    version toolchain     <code>0.1-beta</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#popt","title":"popt","text":"<p>Popt is a C library for parsing command line parameters.</p> <p>homepage: http://freecode.com/projects/popt</p>    version toolchain     <code>1.14</code> <code>GCC/4.8.2</code>   <code>1.16</code> <code>GCC/4.9.2</code>, <code>system</code>"},{"location":"version-specific/supported-software/#porechop","title":"Porechop","text":"<p>Porechop is a tool for finding and removing adapters from Oxford Nanopore reads.  Adapters on the ends of reads are trimmed off, and when a read has an adapter in its middle,  it is treated as chimeric and chopped into separate reads. Porechop performs thorough alignments  to effectively find adapters, even at low sequence identity</p> <p>homepage: https://github.com/rrwick/Porechop</p>    version versionsuffix toolchain     <code>0.2.3</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>0.2.4</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>0.2.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.2.4</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#porefoam","title":"porefoam","text":"<p>Direct pore-scale simulation of single- and two-phase flow through confined media</p> <p>homepage: https://github.com/ImperialCollegeLondon/porefoam</p>    version toolchain     <code>2021-09-21</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#poretools","title":"poretools","text":"<p>A toolkit for working with nanopore sequencing data from Oxford Nanopore.</p> <p>homepage: https://poretools.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>0.6.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#portcullis","title":"Portcullis","text":"<p>Portcullis stands for PORTable CULLing of Invalid Splice junctions from pre-aligned RNA-seq data. It is known that RNAseq mapping tools generate many invalid junction predictions, particularly in deep datasets with high coverage over splice sites. In order to address this, instead for creating a new RNAseq mapper, with a focus on SJ accuracy we created a tool that takes in a BAM file generated by an RNAseq mapper of the user's own choice (e.g. Tophat2, Gsnap, STAR2 or HISAT2) as input (i.e. it's portable). It then, analyses and quantifies all splice junctions in the file before, filtering (culling) those which are unlikely to be genuine. Portcullis output's junctions in a variety of formats making it suitable for downstream analysis (such as differential splicing analysis and gene modelling) without additional work. Portcullis can also filter the original BAM file removing alignments associated with bad junctions.</p> <p>homepage: https://github.com/maplesond/portcullis</p>    version versionsuffix toolchain     <code>1.2.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#postgres-xl","title":"Postgres-XL","text":"<p>Postgres-XL is a horizontally scalable open source SQL database cluster, flexible enough to handle varying database workloads:</p> <p>homepage: http://www.postgres-xl.org</p>    version versionsuffix toolchain     <code>9.5r1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL is a powerful, open source object-relational database system.  It is fully ACID compliant, has full support for foreign keys,  joins, views, triggers, and stored procedures (in multiple languages).  It includes most SQL:2008 data types, including INTEGER,  NUMERIC, BOOLEAN, CHAR, VARCHAR, DATE, INTERVAL, and TIMESTAMP.  It also supports storage of binary large objects, including pictures,  sounds, or video. It has native programming interfaces for C/C++, Java,  .Net, Perl, Python, Ruby, Tcl, ODBC, among others, and exceptional documentation.</p> <p>homepage: https://www.postgresql.org/</p>    version versionsuffix toolchain     <code>9.4.7</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>9.5.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>9.6.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>9.6.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>10.2</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>10.3</code>  <code>foss/2018b</code>   <code>10.3</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>11.3</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>11.3</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>12.4</code>  <code>GCCcore/9.3.0</code>   <code>13.2</code>  <code>GCCcore/10.2.0</code>   <code>13.3</code>  <code>GCCcore/10.3.0</code>   <code>13.4</code>  <code>GCCcore/11.2.0</code>   <code>14.4</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pot","title":"POT","text":"<p>POT (Python Optimal Transport) is a Python library provide several solvers for optimization problems  related to Optimal Transport for signal, image processing and machine learning.</p> <p>homepage: https://github.com/rflamary/POT</p>    version versionsuffix toolchain     <code>0.5.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pov-ray","title":"POV-Ray","text":"<p>The Persistence of Vision Raytracer, or POV-Ray, is a ray tracing program  which generates images from a text-based scene description, and is available for a variety  of computer platforms. POV-Ray is a high-quality, Free Software tool for creating stunning  three-dimensional graphics. The source code is available for those wanting to do their own ports.</p> <p>homepage: https://www.povray.org/</p>    version toolchain     <code>3.7.0.0</code> <code>intel/2016b</code>   <code>3.7.0.7</code> <code>foss/2017b</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>3.7.0.8</code> <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>3.7.0.10</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#ppanggolin","title":"PPanGGOLiN","text":"<p>PPanGGOLiN is a software suite used to create and manipulate prokaryotic pangenomes from a set of either genomic DNA sequences or provided genome annotations. It is designed to scale up to tens of thousands of genomes. It has the specificity to partition the pangenome using a statistical approach rather than using fixed thresholds which gives it the ability to work with low-quality data such as Metagenomic Assembled Genomes (MAGs) or Single-cell Amplified Genomes (SAGs) thus taking advantage of large scale environmental studies and letting users study the pangenome of uncultivable species. </p> <p>homepage: https://github.com/labgem/PPanGGOLiN</p>    version toolchain     <code>1.1.136</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#ppfold","title":"PPfold","text":"<p>PPfold is a new implementation of pfold, written in Java 6.0. It can predict the consensus secondary  structure of RNA alignments through a stochastic context-free grammar coupled to an evolutionary model.  It can also use data from chemical probing experiments to predict RNA secondary structure. PPfold is multithreaded,  and can solve the structure of much longer alignments than pfold.</p> <p>homepage:     version versionsuffix toolchain     <code>3.1.1</code> <code>-Java-1.8.0_66</code> <code>system</code>"},{"location":"version-specific/supported-software/#ppl","title":"ppl","text":"<p>The Parma Polyhedra Library (PPL) provides numerical abstractions especially  targeted at applications in the field of analysis and verification of complex systems.</p> <p>homepage: https://www.bugseng.com/parma-polyhedra-library</p>    version toolchain     <code>1.2</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#pplacer","title":"pplacer","text":"<p>Pplacer places query sequences on a fixed reference phylogenetic tree to maximize phylogenetic  likelihood or posterior probability according to a reference alignment. Pplacer is designed to be fast, to give  useful information about uncertainty, and to offer advanced visualization and downstream analysis.</p> <p>homepage: http://matsen.fhcrc.org/pplacer/</p>    version toolchain     <code>1.1.alpha19</code> <code>system</code>"},{"location":"version-specific/supported-software/#pplpy","title":"pplpy","text":"<p>This Python package provides a wrapper to the C++ Parma Polyhedra Library (PPL).</p> <p>homepage: https://pypi.org/project/pplpy/</p>    version versionsuffix toolchain     <code>0.8.4</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.8.4</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#prank","title":"PRANK","text":"<p>PRANK is a probabilistic multiple alignment program for DNA,   codon and amino-acid sequences. PRANK is based on a novel algorithm that treats   insertions correctly and avoids over-estimation of the number of deletion events.</p> <p>homepage: http://wasabiapp.org/software/prank/</p>    version toolchain     <code>170427</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#prc","title":"PRC","text":"<p>PRC is a stand-alone program for aligning and scoring two profile hidden Markov models.  This can be used to detect remote relationships between profiles more effectively than by doing simple  profile-sequence comparisons. PRC takes into account all transition and emission probabilities in both  hidden Markov models. </p> <p>homepage: </p>    version toolchain     <code>1.5.6</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#precice","title":"preCICE","text":"<p>preCICE (Precise Code Interaction Coupling Environment) is a coupling library for partitioned multi-physics simulations, including, but not restricted to fluid-structure interaction and conjugate heat transfer simulations. Partitioned means that preCICE couples existing programs (solvers) capable of simulating a subpart of the complete physics involved in a simulation. This allows for the high flexibility that is needed to keep a decent time-to-solution for complex multi-physics scenarios.</p> <p>homepage: https://www.precice.org/</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#prequal","title":"PREQUAL","text":"<p>A program to identify and mask regions with non-homologous adjacent characters in FASTA files.</p> <p>homepage: https://github.com/simonwhelan/prequal</p>    version toolchain     <code>1.02</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#preseq","title":"preseq","text":"<p>Software for predicting library complexity and genome coverage in high-throughput sequencing.</p> <p>homepage: https://smithlabresearch.org/software/preseq</p>    version toolchain     <code>2.0.2</code> <code>foss/2016b</code>   <code>2.0.3</code> <code>foss/2018b</code>, <code>intel/2018a</code>   <code>3.1.2</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#presto","title":"presto","text":"<p>Presto performs a fast Wilcoxon rank sum test and auROC analysis.</p> <p>homepage: https://github.com/immunogenomics/presto</p>    version versionsuffix toolchain     <code>1.0.0-20200718</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pretty-yaml","title":"pretty-yaml","text":"<p>PyYAML-based python module to produce pretty and readable YAML-serialized data. This module is for serialization only, see ruamel.yaml module for literate YAML parsing (keeping track of comments, spacing, line/column numbers of values, etc).</p> <p>homepage: https://github.com/mk-fg/pretty-yaml</p>    version toolchain     <code>19.12.0</code> <code>GCCcore/8.3.0</code>   <code>20.4.0</code> <code>GCCcore/9.3.0</code>   <code>21.10.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#primer3","title":"Primer3","text":"<p>Primer3 is a widely used program for designing PCR primers (PCR = 'Polymerase Chain Reaction').  PCR is an essential and ubiquitous tool in genetics and molecular biology.  Primer3 can also design hybridization probes and sequencing primers.</p> <p>homepage: https://primer3.org/</p>    version toolchain     <code>2.3.7</code> <code>intel/2017b</code>   <code>2.4.0</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>   <code>2.5.0</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#prinseq","title":"PRINSEQ","text":"<p>A bioinformatics tool to PRe-process and show INformation of SEQuence data.</p> <p>homepage: http://prinseq.sourceforge.net</p>    version versionsuffix toolchain     <code>0.20.4</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>0.20.4</code> <code>-Perl-5.32.0</code> <code>foss/2020b</code>   <code>0.20.4</code> <code>-Perl-5.34.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#printproto","title":"printproto","text":"<p>X.org PrintProto protocol headers.</p> <p>homepage: http://xorg.freedesktop.org/</p>    version toolchain     <code>1.0.5</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#prisms-pf","title":"PRISMS-PF","text":"<p>PRISMS-PF is a powerful, massively parallel finite element code for conducting phase field and  other related simulations of microstructural evolution.</p> <p>homepage: https://prisms-center.github.io/phaseField</p>    version toolchain     <code>2.1.1</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>2.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#probabel","title":"ProbABEL","text":"<p>Tool for genome-wide association  analysis of imputed genetic data.</p> <p>homepage: http://www.genabel.org/packages/ProbABEL</p>    version toolchain     <code>0.5.0</code> <code>GCCcore/9.3.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#prodigal","title":"prodigal","text":"<p>Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm)    is a microbial (bacterial and archaeal) gene finding program developed    at Oak Ridge National Laboratory and the University of Tennessee.</p> <p>homepage: https://github.com/hyattpd/Prodigal/</p>    version toolchain     <code>2.6.2</code> <code>GCC/4.9.3-binutils-2.25</code>   <code>2.6.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#profit","title":"ProFit","text":"<p>ProFit (pronounced Pro-Fit, not profit!) is designed to be the ultimate program for  performing least squares fits of two or more protein structures. It performs a very simple and  basic function, but allows as much flexibility as possible in performing this procedure. Thus one  can specify subsets of atoms to be considered, specify zones to be fitted by number, sequence, or  by sequence alignment. </p> <p>homepage: http://www.bioinf.org.uk/software/profit</p>    version toolchain     <code>3.3</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#proj","title":"PROJ","text":"<p>Program proj is a standard Unix filter function which converts geographic longitude and latitude coordinates into cartesian coordinates</p> <p>homepage: https://proj.org</p>    version toolchain     <code>4.9.2</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>4.9.3</code> <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>5.0.0</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018a</code>   <code>6.0.0</code> <code>GCCcore/8.2.0</code>   <code>6.2.1</code> <code>GCCcore/8.3.0</code>   <code>7.0.0</code> <code>GCCcore/9.3.0</code>   <code>7.2.1</code> <code>GCCcore/10.2.0</code>   <code>8.0.1</code> <code>GCCcore/10.3.0</code>   <code>8.1.0</code> <code>GCCcore/11.2.0</code>   <code>9.0.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#projectq","title":"ProjectQ","text":"<p>An open source software framework for quantum computing</p> <p>homepage: https://projectq.ch</p>    version versionsuffix toolchain     <code>0.4.2</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#prokka","title":"prokka","text":"<p>Prokka is a software tool for the rapid annotation of prokaryotic genomes.</p> <p>homepage: https://www.vicbioinformatics.com/software.prokka.shtml</p>    version versionsuffix toolchain     <code>1.11</code> <code>-BioPerl-1.7.0</code> <code>foss/2016b</code>   <code>1.13</code> <code>-BioPerl-1.7.2</code> <code>intel/2018a</code>   <code>1.13.4</code>  <code>foss/2018b</code>   <code>1.13.7</code>  <code>gompi/2019a</code>   <code>1.14.5</code>  <code>gompi/2019a</code>, <code>gompi/2019b</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#prompt-toolkit","title":"prompt-toolkit","text":"<p>prompt_toolkit is a Python library for building powerful interactive command lines and  terminal applications.</p> <p>homepage: https://github.com/jonathanslenders/python-prompt-toolkit</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.0.3</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>1.0.6</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.0.6</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.0.13</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#proovread","title":"proovread","text":"<p>PacBio hybrid error correction through iterative short read consensus</p> <p>homepage: https://github.com/BioInf-Wuerzburg/proovread</p>    version toolchain     <code>2.14.1</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#propy","title":"propy","text":"<p>Propy is a protein description software. It allows analyzing sequence-derived structural and physicochemical features, which are very useful in representing and distinguishing proteins or peptides of different structural, functional and interaction properties. These have been widely used in developing methods and software for predicting protein structural and functional classes, protein-protein interactions, drug-target interactions, protein substrates, among others.</p> <p>homepage: https://code.google.com/archive/p/protpy</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#proteinortho","title":"Proteinortho","text":"<p>Proteinortho is a tool to detect orthologous genes within different species.</p> <p>homepage: http://www.bioinf.uni-leipzig.de/Software/proteinortho/</p>    version versionsuffix toolchain     <code>5.16b</code> <code>-Python-3.6.4-Perl-5.26.1</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#prothint","title":"ProtHint","text":"<p>ProtHint is a pipeline for predicting and scoring hints (in the form of introns, start and  stop codons) in the genome of interest by mapping and spliced aligning predicted genes to a database of  reference protein sequences.</p> <p>homepage: https://github.com/gatech-genemark/ProtHint</p>    version versionsuffix toolchain     <code>2.4.0</code> <code>-Python-3.7.2</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.4.0</code> <code>-Python-3.7.4</code> <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#protobuf","title":"protobuf","text":"<p>Google Protocol Buffers</p> <p>homepage: https://github.com/google/protobuf/</p>    version toolchain     <code>2.5.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>system</code>   <code>2.6.1</code> <code>system</code>   <code>3.0.2</code> <code>foss/2016a</code>   <code>3.2.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.0</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>3.4.0</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>3.5.1</code> <code>intel/2017b</code>   <code>3.6.0</code> <code>GCCcore/7.3.0</code>   <code>3.6.1</code> <code>GCCcore/7.3.0</code>   <code>3.6.1.2</code> <code>GCCcore/8.2.0</code>   <code>3.7.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.10.0</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>3.13.0</code> <code>GCCcore/9.3.0</code>   <code>3.14.0</code> <code>GCCcore/10.2.0</code>   <code>3.17.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.19.4</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#protobuf-python","title":"protobuf-python","text":"<p>Python Protocol Buffers runtime library.</p> <p>homepage: https://github.com/google/protobuf/</p>    version versionsuffix toolchain     <code>3.0.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.0.2</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>3.2.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.2.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.3.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>3.3.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.4.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.4.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>3.4.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.4.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.6.0</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>3.6.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>3.10.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>3.13.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>3.14.0</code>  <code>GCCcore/10.2.0</code>   <code>3.17.3</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.19.4</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#protozero","title":"protozero","text":"<p>Minimalistic protocol buffer decoder and encoder in C++.</p> <p>homepage: https://github.com/mapbox/protozero</p>    version toolchain     <code>1.6.8</code> <code>GCCcore/7.3.0</code>   <code>1.7.0</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#prsice","title":"PRSice","text":"<p>PRSice (pronounced 'precise') is a Polygenic Risk  Score software for calculating, applying, evaluating and  plotting the results of polygenic risk scores (PRS) analyses.</p> <p>homepage: https://www.prsice.info/</p>    version toolchain     <code>2.2.12</code> <code>GCCcore/8.3.0</code>   <code>2.3.1</code> <code>GCCcore/9.3.0</code>   <code>2.3.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.3.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pscom","title":"pscom","text":"<p>ParaStation is a robust and efficient cluster middleware, consisting  of a high-performance communication layer (MPI) and a sophisticated management layer.</p> <p>homepage: http://www.par-tec.com</p>    version toolchain     <code>5.0.43</code> <code>GCC/4.8.2</code>   <code>5.0.44-1</code> <code>GCC/4.9.2</code>   <code>5.0.48-1</code> <code>system</code>"},{"location":"version-specific/supported-software/#psi","title":"PSI","text":"<p>PSI4 is an open-source suite of ab initio quantum chemistry programs designed for  efficient, high-accuracy simulations of a variety of molecular properties. We can routinely perform  computations with more than 2500 basis functions running serially or in parallel.</p> <p>homepage: http://www.psicode.org/</p>    version versionsuffix toolchain     <code>4.0b6-20160201</code> <code>-mt-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#psi4","title":"PSI4","text":"<p>PSI4 is an open-source suite of ab initio quantum chemistry programs designed for  efficient, high-accuracy simulations of a variety of molecular properties. We can routinely perform  computations with more than 2500 basis functions running serially or in parallel.</p> <p>homepage: http://www.psicode.org/</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.0</code> <code>-mt-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.2.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.2.1</code> <code>-Python-2.7.15-maxam8</code> <code>intel/2018b</code>   <code>1.3.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.3.2</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#psiclass","title":"PsiCLASS","text":"<p>PsiCLASS is a reference-based transcriptome assembler for single or multiple RNA-seq samples.</p> <p>homepage: https://github.com/splicebox/PsiCLASS</p>    version toolchain     <code>1.0.3</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#psipred","title":"PSIPRED","text":"<p>Accurate protein secondary structure prediction</p> <p>homepage: http://bioinf.cs.ucl.ac.uk</p>    version toolchain     <code>4.02</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#psmc","title":"psmc","text":"<p>This software package infers population size history from a diploid sequence using the Pairwise Sequentially Markovian Coalescent (PSMC) model.</p> <p>homepage: https://github.com/lh3/psmc</p>    version toolchain     <code>0.6.5</code> <code>foss/2016a</code>, <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#psmpi","title":"psmpi","text":"<p>ParaStation MPI is an open source high-performance MPI 3.0 implementation, based on MPICH v3. It provides extra low level communication libraries and integration with  various batch systems for tighter process control. </p> <p>homepage: https://github.com/ParaStation/psmpi2</p>    version versionsuffix toolchain     <code>5.1.0-1</code>  <code>GCC/4.9.2</code>   <code>5.1.5-1</code>  <code>GCC/4.9.3</code>   <code>5.1.5-1</code> <code>-mt</code> <code>GCC/4.9.3</code>"},{"location":"version-specific/supported-software/#psmpi2","title":"psmpi2","text":"<p>ParaStation is a robust and efficient cluster middleware, consisting  of a high-performance communication layer (MPI) and a sophisticated management layer.</p> <p>homepage: http://www.par-tec.com</p>    version versionsuffix toolchain     <code>5.0.29</code>  <code>GCC/4.8.2</code>   <code>5.0.29</code> <code>-mt</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#psolver","title":"PSolver","text":"<p>Interpolating scaling function Poisson Solver Library  </p> <p>homepage: http://bigdft.org/devel-doc/d1/d81/group__PSOLVER.html</p>    version toolchain     <code>1.7.6</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>1.8.3</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#psortb","title":"PSORTb","text":"<p>PSORTb v3.0.4 is the most precise bacterial localization prediction tool available.</p> <p>homepage: http://psort.org/psortb/index.html</p>    version versionsuffix toolchain     <code>3.0.4</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#psrecord","title":"psrecord","text":"<p>psrecord is a small utility that uses the psutil library to record the CPU and  memory activity of a process.</p> <p>homepage: https://github.com/astrofrog/psrecord</p>    version versionsuffix toolchain     <code>1.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pstoedit","title":"pstoedit","text":"<p>pstoedit translates PostScript and PDF graphics into other vector formats</p> <p>homepage: http://pstoedit.net/</p>    version toolchain     <code>3.70</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#psutil","title":"psutil","text":"<p>A cross-platform process and system utilities module for Python</p> <p>homepage: https://github.com/giampaolo/psutil</p>    version versionsuffix toolchain     <code>4.2.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>4.3.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.4.3</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>5.4.7</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>5.4.7</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>5.6.1</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>5.6.3</code>  <code>GCCcore/8.2.0</code>   <code>5.9.3</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#psycopg2","title":"psycopg2","text":"<p>Psycopg is the most popular PostgreSQL adapter for the Python programming language.</p> <p>homepage: http://initd.org/psycopg/</p>    version versionsuffix toolchain     <code>2.7</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.8.3</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>2.8.6</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#ptemcee","title":"ptemcee","text":"<p>ptemcee, pronounced \"tem-cee\", is fork of Daniel Foreman-Mackey's wonderful emcee to implement  parallel tempering more robustly. If you're trying to characterise awkward, multi-model probability  distributions, then ptemcee is your friend.</p> <p>homepage: https://github.com/willvousden/ptemcee</p>    version toolchain     <code>1.0.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#ptesfinder","title":"PTESFinder","text":"<p>Post-Transcriptional Exon Shuffling (PTES) Identification Pipeline</p> <p>homepage: https://sourceforge.net/projects/ptesfinder-v1/</p>    version toolchain     <code>1</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pubtcrs","title":"pubtcrs","text":"<p>This repository contains C++ source code for the TCR clustering  and correlation analyses described in the manuscript \"Human T cell receptor  occurrence patterns encode immune history, genetic background, and receptor  specificity\" by William S DeWitt III, Anajane Smith, Gary Schoch, John A Hansen,  Frederick A Matsen IV and Philip Bradley, available on bioRxiv.</p> <p>homepage: https://github.com/phbradley/pubtcrs</p>    version toolchain     <code>20180622</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#pugixml","title":"pugixml","text":"<p>pugixml is a light-weight C++ XML processing library</p> <p>homepage: https://pugixml.org/</p>    version toolchain     <code>1.11.4</code> <code>GCCcore/10.3.0</code>   <code>1.12.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pullseq","title":"pullseq","text":"<p>Utility program for extracting sequences from a fasta/fastq file</p> <p>homepage: https://github.com/bcthomas/pullseq</p>    version toolchain     <code>1.0.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#pulp","title":"PuLP","text":"<p>PuLP is an LP modeler written in Python. PuLP can generate MPS or LP files and call GLPK, COIN-OR CLP/CBC, CPLEX, GUROBI, MOSEK, XPRESS, CHOCO, MIPCL, SCIP to solve linear problems. </p> <p>homepage: https://github.com/coin-or/pulp</p>    version toolchain     <code>2.5.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#purge_dups","title":"purge_dups","text":"<p>purge haplotigs and overlaps in an assembly based on read depth</p> <p>homepage: https://github.com/dfguan/purge_dups</p>    version toolchain     <code>1.2.5</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#py","title":"py","text":"<p>library with cross-python path, ini-parsing, io, code, log facilities</p> <p>homepage: &lt; https://pylib.readthedocs.org/&gt;</p>    version versionsuffix toolchain     <code>1.4.31</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.4.31</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#py-aiger","title":"py-aiger","text":"<p>A python library for manipulating sequential and combinatorial circuits. This module provides the py-aiger extensions: aiger_bv, aiger_cnf, aiger_ptltl, aiger_coins, aiger_gridworld, aiger_dfa</p> <p>homepage: https://github.com/mvcisback/py-aiger</p>    version versionsuffix toolchain     <code>6.1.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>6.1.14</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#py-aiger-bdd","title":"py-aiger-bdd","text":"<p>Aiger to BDD bridge.</p> <p>homepage: https://github.com/mvcisback/py-aiger-bdd</p>    version versionsuffix toolchain     <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#py-cpuinfo","title":"py-cpuinfo","text":"<p>py-cpuinfo gets CPU info with pure Python.</p> <p>homepage: https://github.com/workhorsy/py-cpuinfo</p>    version toolchain     <code>5.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#pyabc","title":"pyABC","text":"<p>Massively parallel, distributed and scalable ABC-SMC (Approximate Bayesian Computation - Sequential Monte Carlo) for parameter estimation of complex stochastic models.  Implemented in Python with support of the R language. </p> <p>homepage: https://github.com/icb-dcm/pyabc</p>    version versionsuffix toolchain     <code>0.10.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pyamg","title":"PyAMG","text":"<p>PyAMG is a library of Algebraic Multigrid (AMG) solvers with a convenient Python interface.</p> <p>homepage: https://pyamg.github.io</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>4.0.0</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>4.2.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pyaps3","title":"PyAPS3","text":"<p>Python 3 Atmospheric Phase Screen</p> <p>homepage: https://github.com/AngeliqueBenoit/pyaps3</p>    version versionsuffix toolchain     <code>20190407</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#pybedtools","title":"pybedtools","text":"<p>pybedtools wraps and extends BEDTools and offers feature-level manipulations from within Python.</p> <p>homepage: https://daler.github.io/pybedtools</p>    version versionsuffix toolchain     <code>0.7.10</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>, <code>intel/2018a</code>   <code>0.7.10</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.8.0</code>  <code>foss/2019a</code>, <code>intel/2019a</code>   <code>0.8.1</code>  <code>foss/2019b</code>   <code>0.8.2</code>  <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2020.4.304</code>   <code>0.8.2</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>   <code>0.9.0</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#pyberny","title":"PyBerny","text":"<p>PyBerny is an optimizer of molecular geometries with respect to the total energy, using nuclear gradient information.</p> <p>homepage: https://github.com/jhrmnn/pyberny</p>    version versionsuffix toolchain     <code>0.6.2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>0.6.3</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pybigwig","title":"pyBigWig","text":"<p>A python extension, written in C, for quick access to bigBed  files and access to and creation of bigWig files.</p> <p>homepage: https://github.com/deeptools/pyBigWig</p>    version versionsuffix toolchain     <code>0.3.13</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.3.17</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>   <code>0.3.18</code>  <code>GCCcore/10.2.0</code>, <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pybind11","title":"pybind11","text":"<p>pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa,  mainly to create Python bindings of existing C++ code.</p> <p>homepage: https://pybind11.readthedocs.io</p>    version versionsuffix toolchain     <code>2.2.4</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2.2.4</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.4.3</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.4.3</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>2.6.0</code>  <code>GCCcore/10.2.0</code>   <code>2.6.2</code>  <code>GCCcore/10.3.0</code>   <code>2.7.1</code>  <code>GCCcore/11.2.0</code>   <code>2.7.1</code> <code>-Python-2.7.18</code> <code>GCCcore/11.2.0</code>   <code>2.9.2</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pycairo","title":"PyCairo","text":"<p>Python bindings for the cairo library</p> <p>homepage: https://pycairo.readthedocs.io/</p>    version versionsuffix toolchain     <code>1.10.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.16.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>1.16.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.18.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.18.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.18.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.18.0</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>1.18.2</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.20.0</code>  <code>GCCcore/10.2.0</code>   <code>1.20.1</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>1.21.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pycalib","title":"PyCalib","text":"<p>Python library for classifier calibration</p> <p>homepage: https://github.com/classifier-calibration/PyCalib</p>    version toolchain     <code>0.1.0.dev0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pyccel","title":"pyccel","text":"<p>Python extension language using accelerators</p> <p>homepage: https://github.com/pyccel/pyccel</p>    version toolchain     <code>1.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pycharm","title":"PyCharm","text":"<p>PyCharm Community Edition: Python IDE for Professional Developers</p> <p>homepage: https://www.jetbrains.com/pycharm/</p>    version toolchain     <code>2017.2.3</code> <code>system</code>   <code>2019.3.1</code> <code>system</code>   <code>2021.1.1</code> <code>system</code>   <code>2022.2.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#pychemps2","title":"PyCheMPS2","text":"<p>PyCheMPS2 is a python interface to CheMPS2, for compilation without MPI. CheMPS2 is a scientific library which contains a spin-adapted implementation of the density matrix renormalization group (DMRG) for ab initio quantum chemistry.</p> <p>homepage: https://sebwouters.github.io/CheMPS2</p>    version toolchain     <code>1.8.12</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pycifrw","title":"PyCifRW","text":"<p>PyCIFRW provides support for reading and writing CIF (Crystallographic Information Format) files using Python.</p> <p>homepage: https://bitbucket.org/jamesrhester/pycifrw/src/development</p>    version toolchain     <code>4.4.2</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pyclone","title":"PyClone","text":"<p>PyClone is a Python package that wraps rclone and provides a threaded interface for  an installation at the host or container level.</p> <p>homepage: https://gitlab.com/ltgiv/pyclone</p>    version toolchain     <code>2020.9b2</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pycma","title":"pycma","text":"<p>A stochastic numerical optimization algorithm for difficult (non-convex, ill-conditioned,  multi-modal, rugged, noisy) optimization problems in continuous search spaces, implemented in Python.</p> <p>homepage: https://github.com/CMA-ES/pycma</p>    version toolchain     <code>2.7.0</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#pycocotools","title":"pycocotools","text":"<p>Official APIs for the MS-COCO dataset</p> <p>homepage: https://pypi.org/project/pycocotools</p>    version versionsuffix toolchain     <code>2.0.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.0.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>2.0.4</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pycodestyle","title":"pycodestyle","text":"<p>pycodestyle is a tool to check your Python code against some of the style conventions in PEP 8.</p> <p>homepage: https://pycodestyle.readthedocs.io</p>    version versionsuffix toolchain     <code>2.5.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pycogent","title":"PyCogent","text":"<p>PyCogent is a software library for genomic biology. It is a fully  integrated and thoroughly tested framework for: controlling third-party applications;  devising workflows; querying databases; conducting novel probabilistic analyses of  biological sequence evolution; and generating publication quality graphics.</p> <p>homepage: http://pycogent.org</p>    version versionsuffix toolchain     <code>1.5.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.9</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.9</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#pycoqc","title":"pycoQC","text":"<p>PycoQC computes metrics and generates interactive QC plots for  Oxford Nanopore technologies sequencing data.</p> <p>homepage: https://tleonardi.github.io/pycoQC</p>    version toolchain     <code>2.5.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pycuda","title":"PyCUDA","text":"<p>PyCUDA lets you access Nvidia\u2019s CUDA parallel computation API from Python.</p> <p>homepage: https://mathema.tician.de/software/pycuda</p>    version versionsuffix toolchain     <code>2016.1.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2017.1.1</code> <code>-CUDA-9.0.176-Python-2.7.14</code> <code>foss/2017b</code>   <code>2017.1.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2018.1</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>intel/2018a</code>   <code>2019.1.2</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>, <code>intelcuda/2019b</code>   <code>2020.1</code>  <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pycurl","title":"PycURL","text":"<p>PycURL is a Python interface to libcurl. PycURL can be used to fetch objects identified by a URL  from a Python program, similar to the urllib Python module. PycURL is mature, very fast, and supports a lot of  features.</p> <p>homepage: http://pycurl.io/</p>    version versionsuffix toolchain     <code>7.43.0.5</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pydamage","title":"PyDamage","text":"<p>Pydamage, is a Python software to automate the process of contig damage identification and estimation. After modelling the ancient DNA damage using the C to T transitions, Pydamage uses a likelihood ratio test to discriminate between truly ancient, and modern contigs originating from sample contamination.</p> <p>homepage: https://github.com/maxibor/pydamage</p>    version toolchain     <code>0.70</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pydantic","title":"pydantic","text":"<p>Data validation and settings management using Python type hinting.</p> <p>homepage: https://github.com/samuelcolvin/pydantic</p>    version versionsuffix toolchain     <code>1.6.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.10.2</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#pydatastream","title":"PyDatastream","text":"<p>Lightweight SOAP client</p> <p>homepage: https://pypi.python.org/pypi/suds-py3</p>    version versionsuffix toolchain     <code>0.5.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pydicom","title":"pydicom","text":"<p>Pure python package for DICOM medical file reading and writing.</p> <p>homepage: https://pydicom.github.io/</p>    version versionsuffix toolchain     <code>0.9.9</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.2.2</code>  <code>GCCcore/8.2.0</code>   <code>1.4.2</code>  <code>GCCcore/8.3.0</code>   <code>2.1.2</code>  <code>GCCcore/10.2.0</code>   <code>2.1.2</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>2.2.2</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.3.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pydlpoly","title":"pydlpoly","text":"<p>Pydlpoly is a molecular dynamics simulation package which is a modified version of DL-POLY with  a Python language interface.</p> <p>homepage: http://cmc.aci.ruhr-uni-bochum.de/cmc/</p>    version versionsuffix toolchain     <code>20150225</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>20150225</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pydot","title":"pydot","text":"<p>Python interface to Graphviz's Dot language.</p> <p>homepage: https://github.com/pydot/pydot</p>    version toolchain     <code>1.4.1</code> <code>GCCcore/9.3.0</code>, <code>foss/2019b</code>   <code>1.4.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#pyega3","title":"pyEGA3","text":"<p>A basic Python-based EGA download client </p> <p>homepage: https://github.com/EGA-archive/ega-download-client</p>    version versionsuffix toolchain     <code>3.0.33</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>3.4.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>3.4.0</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>4.0.0</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#pyenchant","title":"pyenchant","text":"<p>PyEnchant is a spellchecking library for Python, based on the excellent Enchant library.</p> <p>homepage: https://pythonhosted.org/pyenchant/</p>    version versionsuffix toolchain     <code>1.6.8</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pyevtk","title":"PyEVTK","text":"<p>EVTK (Export VTK) package allows exporting data to binary VTK files for visualization and data analysis with any of the visualization packages that support VTK files</p> <p>homepage: https://github.com/paulo-herrera/PyEVTK</p>    version toolchain     <code>1.4.1</code> <code>foss/2021b</code>   <code>2.0.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pyfai","title":"pyFAI","text":"<p>Python implementation of fast azimuthal integration.</p> <p>homepage: https://github.com/silx-kit/pyFAI</p>    version versionsuffix toolchain     <code>0.19.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.20.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pyfaidx","title":"pyfaidx","text":"<p>pyfaidx: efficient pythonic random access to fasta subsequences</p> <p>homepage: https://pypi.python.org/pypi/pyfaidx</p>    version versionsuffix toolchain     <code>0.5.9.5</code>  <code>GCCcore/10.2.0</code>   <code>0.5.9.5</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.6.3.1</code>  <code>GCCcore/10.3.0</code>   <code>0.7.0</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#pyfasta","title":"pyfasta","text":"<p>fast, memory-efficient, pythonic (and command-line) access to fasta sequence files</p> <p>homepage: https://pypi.org/project/pyfasta/</p>    version toolchain     <code>0.5.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pyffmpeg","title":"PyFFmpeg","text":"<p>Python FFmpeg wrapper</p> <p>homepage: https://github.com/mhaller/pyffmpeg</p>    version versionsuffix toolchain     <code>2.1beta</code> <code>-Python-2.7.10</code> <code>gimkl/2.11.5</code>   <code>2.1beta</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#pyfftw","title":"pyFFTW","text":"<p>A pythonic wrapper around FFTW, the FFT library, presenting a unified interface  for all the supported transforms.</p> <p>homepage: https://github.com/pyFFTW/pyFFTW</p>    version versionsuffix toolchain     <code>0.11.1</code>  <code>intel/2019a</code>   <code>0.11.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.12.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pyfits","title":"pyfits","text":"<p>The PyFITS module is a Python library providing access to FITS (Flexible Image Transport System)</p> <p>homepage: https://pythonhosted.org/pyfits/</p>    version versionsuffix toolchain     <code>3.5</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pyfmi","title":"PyFMI","text":"<p>PyFMI is a package for loading and interacting with Functional Mock-Up Units (FMUs),  which are compiled dynamic models compliant with the Functional Mock-Up Interface (FMI)</p> <p>homepage: https://pypi.org/project/PyFMI/</p>    version versionsuffix toolchain     <code>2.4.0</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pyfoam","title":"PyFoam","text":"<p>A Python library to control OpenFOAM-runs and manipulate OpenFOAM-data.</p> <p>homepage: http://openfoamwiki.net/index.php/Contrib/PyFoam</p>    version toolchain     <code>2020.5</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pyfr","title":"PyFR","text":"<p>PyFR is an open-source Python based framework for solving advection-diffusion type problems on streaming architectures using the Flux Reconstruction approach of Huynh. The framework is designed to solve a range of governing systems on mixed unstructured grids containing various element types. It is also designed to target a range of hardware platforms via use of an in-built domain specific language derived from the Mako templating engine.</p> <p>homepage: http://www.pyfr.org</p>    version versionsuffix toolchain     <code>1.7.6</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>intel/2018a</code>   <code>1.9.0</code> <code>-Python-3.7.4</code> <code>intelcuda/2019b</code>"},{"location":"version-specific/supported-software/#pyfrag","title":"PyFrag","text":"<p>PyFrag 2019 resolves three main challenges associated with the automatized computational exploration of reaction mechanisms: 1) the management of multiple parallel calculations to automatically find a reaction path; 2) the monitoring of the entire computational process along with the extraction and plotting of relevant information from large amounts of data; and 3) the analysis and presentation of these data in a clear and informative way.  This module provides the Activation Strain Analysis (ASA) Module of PyFrag 2019 </p> <p>homepage: https://pyfragdocument.readthedocs.io/en/latest/includeme.html</p>    version versionsuffix toolchain     <code>2019-20220216</code> <code>-ASA</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#pygccxml","title":"pygccxml","text":"<p>Python package for easy C++ declarations navigation.</p> <p>homepage: https://pypi.python.org/pypi/pygccxml</p>    version versionsuffix toolchain     <code>20160706</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>20160706</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pygenometracks","title":"pyGenomeTracks","text":"<p>pyGenomeTracks aims to produce high-quality genome browser tracks that are highly customizable.</p> <p>homepage: https://pygenometracks.readthedocs.io</p>    version toolchain     <code>3.7</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pygeos","title":"PyGEOS","text":"<p>PyGEOS is a C/Python library with vectorized geometry functions. The geometry operations are done in  the open-source geometry library GEOS. PyGEOS wraps these operations in NumPy ufuncs providing a performance  improvement when operating on arrays of geometries.</p> <p>homepage: https://pygeos.readthedocs.io</p>    version versionsuffix toolchain     <code>0.7.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.8</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.10.2</code>  <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#pygimli","title":"pyGIMLi","text":"<p>pyGIMLi is an open-source multi-method library for solving inverse  and forward tasks related to geophysical problems. Written in C++ and Python,  it offers both efficiency and flexibility allowing you to quickly build  your own robust inversion applications for the geophysical problem at hand.</p> <p>homepage: http://www.pygimli.org/</p>    version versionsuffix toolchain     <code>20160803</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>20160803</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pygments","title":"Pygments","text":"<p>Generic syntax highlighter suitable for use in code hosting, forums, wikis or other applications  that need to prettify source code.</p> <p>homepage: https://pygments.org/</p>    version versionsuffix toolchain     <code>2.1.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.1.3</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pygmo","title":"pygmo","text":"<p>pygmo is a scientific Python library for massively parallel optimization.</p> <p>homepage: https://esa.github.io/pygmo2</p>    version toolchain     <code>2.16.1</code> <code>foss/2020b</code>   <code>2.18.0</code> <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pygobject","title":"PyGObject","text":"<p>PyGObject is a Python package which provides bindings for GObject based libraries such as GTK, GStreamer, WebKitGTK, GLib, GIO and many more.</p> <p>homepage: https://pygobject.readthedocs.io/</p>    version versionsuffix toolchain     <code>2.28.6</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.28.6</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.28.7</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.28.7</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.34.0</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>   <code>3.34.0</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>3.34.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>3.42.1</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pygraphviz","title":"pygraphviz","text":"<p>PyGraphviz is a Python interface to the Graphviz graph layout and visualization package.  With PyGraphviz you can create, edit, read, write, and draw graphs using Python to access the Graphviz  graph data structure and layout algorithms.</p> <p>homepage: https://pygraphviz.github.io/</p>    version toolchain     <code>1.5</code> <code>foss/2019b</code>   <code>1.7</code> <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pygrib","title":"pygrib","text":"<p>Python interface for reading and writing GRIB data</p> <p>homepage: https://jswhit.github.io/pygrib</p>    version toolchain     <code>2.0.4</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#pygtk","title":"PyGTK","text":"<p>PyGTK lets you to easily create programs with a graphical user interface  using the Python programming language.</p> <p>homepage: http://www.pygtk.org/</p>    version versionsuffix toolchain     <code>2.24.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.24.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.24.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#pygts","title":"PyGTS","text":"<p>PyGTS is a python package used to construct, manipulate,   and perform computations on triangulated surfaces.   It is a hand-crafted and pythonic binding for the GNU Triangulated Surface (GTS) Library. </p> <p>homepage: https://sourceforge.net/projects/pygts/</p>    version versionsuffix toolchain     <code>0.3.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.3.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.3.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pygwas","title":"PyGWAS","text":"<p>PyGWAS is a library for running Genome Wide Association studies.</p> <p>homepage: https://github.com/timeu/pygwas</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.3.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.4.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.5.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.6.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.7.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#pyhdf","title":"pyhdf","text":"<p>Python wrapper around the NCSA HDF version 4 library</p> <p>homepage: https://github.com/fhs/pyhdf</p>    version toolchain     <code>0.10.1</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#pyimagej","title":"PyImageJ","text":"<p>PyImageJ provides a set of wrapper functions for integration between ImageJ2 and Python. It also  supports the original ImageJ API and data structures. A major advantage of this approach is the ability to combine  ImageJ and ImageJ2 with other tools available from the Python software ecosystem, including NumPy, SciPy,  scikit-image, CellProfiler, OpenCV, ITK and many more.</p> <p>homepage: https://pyimagej.readthedocs.io/</p>    version toolchain     <code>1.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pyiron","title":"pyiron","text":"<p>An integrated development environment (IDE) for computational materials science.</p> <p>homepage: https://github.com/pyiron/pyiron</p>    version versionsuffix toolchain     <code>0.2.5</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#pyke3","title":"Pyke3","text":"<p>Pyke introduces a form of Logic Programming (inspired by Prolog)  to the Python community by providing a knowledge-based inference engine  (expert system) written in 100% Python.</p> <p>homepage: http://sourceforge.net/projects/pyke/</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pylift","title":"pylift","text":"<p>pylift is an uplift library that provides, primarily:  (1) Fast uplift modeling implementations and (2) Evaluation tools (UpliftEval class).</p> <p>homepage: https://github.com/df-foundation/pylift</p>    version versionsuffix toolchain     <code>0.1.5</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.1.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#pylint","title":"Pylint","text":"<p>Pylint is a tool that checks for errors in Python code, tries to enforce  a coding standard and looks for code smells. It can also look for certain type errors,  it can recommend suggestions about how particular blocks can be refactored and  can offer you details about the code's complexity.</p> <p>homepage: https://www.pylint.org/</p>    version versionsuffix toolchain     <code>1.9.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>1.9.5</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>1.9.5</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>   <code>2.7.4</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pymatgen","title":"pymatgen","text":"<p>Python Materials Genomics is a robust materials analysis code that defines core object  representations for structures and molecules with support for many electronic structure codes.</p> <p>homepage: https://pypi.python.org/pypi/pymatgen</p>    version versionsuffix toolchain     <code>3.5.0</code> <code>-Python-2.7.11</code> <code>intel/2016.02-GCC-4.9</code>   <code>4.1.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.3.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.7.3</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>2017.10.16</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2017.10.16</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>2022.0.4</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pymatgen-db","title":"pymatgen-db","text":"<p>Pymatgen-db is a database add-on for the Python Materials Genomics (pymatgen)  materials analysis library.</p> <p>homepage: https://pypi.python.org/pypi/pymatgen-db</p>    version versionsuffix toolchain     <code>0.6.5</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#pymbar","title":"pymbar","text":"<p>The pymbar package contains the pymbar suite of tools for the analysis of simulated and experimental data with the multistate Bennett acceptance ratio (MBAR) estimator.</p> <p>homepage: http://pymbar.readthedocs.io/en/master/</p>    version versionsuffix toolchain     <code>3.0.3</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.0.3</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#pymc3","title":"PyMC3","text":"<p>Probabilistic Programming in Python:  Bayesian Modeling and Probabilistic Machine Learning with Theano</p> <p>homepage: https://docs.pymc.io/</p>    version versionsuffix toolchain     <code>3.8</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.11.1</code>  <code>foss/2021b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#pymca","title":"pymca","text":"<p>The PyMca X-Ray Fluorescence Toolkit, including PyMca5 and fisx.</p> <p>homepage: https://github.com/vasole/pymca</p>    version versionsuffix toolchain     <code>5.6.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>5.6.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#pymemcache","title":"pymemcache","text":"<p>A comprehensive, fast, pure-Python memcached client.</p> <p>homepage: https://github.com/pinterest/pymemcache</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#pymol","title":"PyMOL","text":"<p>PyMOL is a Python-enhanced molecular graphics tool. It excels at 3D              visualization of proteins, small molecules, density, surfaces, and trajectories. It also includes molecular editing, ray tracing, and movies. Open Source PyMOL   is free to everyone! </p> <p>homepage: https://github.com/schrodinger/pymol-open-source</p>    version toolchain     <code>2.5.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pynast","title":"PyNAST","text":"<p>PyNAST is a reimplementation of the NAST sequence aligner, which has  become a popular tool for adding new 16s rRNA sequences to existing 16s rRNA alignments.  This reimplementation is more flexible, faster, and easier to install and maintain than  the original NAST implementation.</p> <p>homepage: https://biocore.github.io/pynast</p>    version versionsuffix toolchain     <code>1.2.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.2.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#pyobjcryst","title":"pyobjcryst","text":"<p>Python bindings to ObjCryst++, the Object-Oriented Crystallographic Library.</p> <p>homepage: https://github.com/diffpy/pyobjcryst</p>    version versionsuffix toolchain     <code>2.1.0.post2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>2.2.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pyod","title":"PyOD","text":"<p>PyOD is a comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data.</p> <p>homepage: https://pyod.readthedocs.io</p>    version toolchain     <code>0.8.7</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#pyomo","title":"Pyomo","text":"<p>Pyomo is a Python-based open-source software package that supports a diverse set of optimization  capabilities for formulating and analyzing optimization models. </p> <p>homepage: https://www.pyomo.org/</p>    version versionsuffix toolchain     <code>5.5.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>5.5.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>6.0.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>   <code>6.4.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pyopencl","title":"PyOpenCL","text":"<p>PyOpenCL lets you access GPUs and other massively parallel compute devices from Python.</p> <p>homepage: https://mathema.tician.de/software/pyopencl/</p>    version versionsuffix toolchain     <code>2020.2.2</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>2021.1.2</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>2021.2.13</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pyopengl","title":"PyOpenGL","text":"<p>PyOpenGL is the most common cross platform Python binding to OpenGL and related APIs.</p> <p>homepage: http://pyopengl.sourceforge.net</p>    version versionsuffix toolchain     <code>3.1.1a1</code>  <code>GCCcore/8.2.0</code>   <code>3.1.1a1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.1.1a1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>3.1.1a1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>   <code>3.1.3b2</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>3.1.3b2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.1.5</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>   <code>3.1.6</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pyparsing","title":"pyparsing","text":"<p>The pyparsing module is an alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions. The pyparsing module provides a library of classes that client code uses to construct the grammar directly in Python code.</p> <p>homepage: https://github.com/pyparsing/pyparsing</p>    version versionsuffix toolchain     <code>2.4.6</code> <code>-Python-2.7.16</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pyplusplus","title":"pyplusplus","text":"<p>Py++ is a code generator for Boost.Python that simplifies  writing Python bindings of a C/C++ library  The tool is implemented as a Python module which is controlled by a user script.</p> <p>homepage: https://bitbucket.org/ompl/pyplusplus</p>    version versionsuffix toolchain     <code>20160707</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>20160707</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pypower","title":"PYPOWER","text":"<p>PYPOWER is a power flow and Optimal Power Flow (OPF) solver. It is a port of MATPOWER to the Python programming language.</p> <p>homepage: https://github.com/rwl/PYPOWER</p>    version toolchain     <code>5.1.15</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pyproj","title":"pyproj","text":"<p>Python interface to PROJ4 library for cartographic transformations</p> <p>homepage: https://pyproj4.github.io/pyproj</p>    version versionsuffix toolchain     <code>2.1.3</code>  <code>GCCcore/8.2.0</code>   <code>2.4.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.6.1.post1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>3.0.1</code>  <code>GCCcore/10.2.0</code>   <code>3.1.0</code>  <code>GCCcore/10.3.0</code>   <code>3.3.1</code>  <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>3.4.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pypsa","title":"PyPSA","text":"<p>PyPSA is an open source toolbox for simulating and optimising modern power systems that include features such as conventional generators with unit commitment, variable wind and solar generation, storage units, coupling to other energy sectors, and mixed alternating and direct current networks. PyPSA is designed to scale well with large networks and long time series.</p> <p>homepage: https://pypsa.readthedocs.io/</p>    version toolchain     <code>0.17.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pyqstem","title":"pyqstem","text":"<p>QSTEM is a program for quantitative image simulation in electron microscopy, including TEM, STEM and CBED image simulation.  This project interfaces the QSTEM code with Python and the Atomic Simulation Environment (ASE) to provide a single environment for building models, simulating and analysing images.</p> <p>homepage: https://github.com/jacobjma/PyQSTEM</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-ASE-3.22.0</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.0.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#pyqt","title":"PyQt","text":"<p>PyQt is a set of Python v2 and v3 bindings for Digia's Qt application framework.</p> <p>homepage: http://www.riverbankcomputing.co.uk/software/pyqt</p>    version versionsuffix toolchain     <code>4.11.4</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>4.11.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.12</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.12</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.12.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>4.12.3</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>"},{"location":"version-specific/supported-software/#pyqt5","title":"PyQt5","text":"<p>PyQt5 is a set of Python bindings for v5 of the Qt application framework from The Qt Company.</p> <p>homepage: http://www.riverbankcomputing.co.uk/software/pyqt</p>    version versionsuffix toolchain     <code>5.7</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>5.7.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>5.8.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>5.9.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>5.9.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>5.11.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>5.12.1</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>5.12.1</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>5.13.2</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>5.15.1</code>  <code>GCCcore/10.2.0</code>   <code>5.15.1</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>5.15.4</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>5.15.5</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pyqtgraph","title":"PyQtGraph","text":"<p>PyQtGraph is a pure-python graphics and GUI library built on PyQt5/PySide2 and numpy.</p> <p>homepage: http://www.pyqtgraph.org/</p>    version versionsuffix toolchain     <code>0.10.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.10.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.10.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>0.11.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.11.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.12.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pyradiomics","title":"pyradiomics","text":"<p>Open-source python package for the extraction of Radiomics features from 2D and 3D   images and binary masks.</p> <p>homepage: https://pyradiomics.readthedocs.io/</p>    version versionsuffix toolchain     <code>3.0.1</code>  <code>foss/2021a</code>   <code>3.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pyre","title":"PyRe","text":"<p>PyRe (Python Reliability) is a Python module for structural reliability analysis.</p> <p>homepage: https://hackl.science/pyre</p>    version versionsuffix toolchain     <code>5.0.3-20190221</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#pyretis","title":"PyRETIS","text":"<p>PyRETIS is a Python library for rare event molecular simulations with emphasis on methods based  on transition interface sampling and replica exchange transition interface sampling.</p> <p>homepage: http://www.pyretis.org</p>    version versionsuffix toolchain     <code>2.1.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.5.0</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>2.5.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#pyringe","title":"pyringe","text":"<p>Debugger capable of attaching to and injecting code into python processes.</p> <p>homepage: https://github.com/google/pyringe</p>    version versionsuffix toolchain     <code>1.0.2</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#pyro-api","title":"pyro-api","text":"<p>Pyro is a flexible, scalable deep probabilistic programming library built on PyTorch.</p> <p>homepage: https://github.com/pyro-ppl/pyro-api</p>    version toolchain     <code>0.1.2</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pyro-ppl","title":"pyro-ppl","text":"<p>Pyro is a flexible, scalable deep probabilistic programming library built on PyTorch.</p> <p>homepage: https://github.com/pyro-ppl/pyro</p>    version toolchain     <code>1.5.2</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pyro4","title":"Pyro4","text":"<p>Pyro means PYthon Remote Objects. It is a library that enables you to build applications in which  objects can talk to eachother over the network, with minimal programming effort.</p> <p>homepage: https://pypi.python.org/pypi/Pyro4</p>    version versionsuffix toolchain     <code>4.47</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pyrosetta","title":"PyRosetta","text":"<p>PyRosetta is an interactive Python-based interface to the powerful Rosetta molecular modeling suite. It enables users to design their own custom molecular modeling algorithms using Rosetta sampling methods and energy functions.</p> <p>homepage: https://www.pyrosetta.org/</p>    version versionsuffix toolchain     <code>4.release-292</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#pysam","title":"Pysam","text":"<p>Pysam is a python module for reading and manipulating Samfiles.   It's a lightweight wrapper of the samtools C-API. Pysam also includes an interface for tabix.</p> <p>homepage: https://github.com/pysam-developers/pysam</p>    version versionsuffix toolchain     <code>0.8.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.9.1.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>0.10.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.12.0.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.12.0.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.12.0.1</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.13</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.13.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.14</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.14</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.14</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.14.1</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.14.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.15.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.15.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.15.2</code>  <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>0.15.3</code>  <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>0.16.0.1</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>, <code>iccifort/2020.4.304</code>   <code>0.16.0.1</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>   <code>0.17.0</code>  <code>GCC/11.2.0</code>   <code>0.18.0</code>  <code>GCC/11.2.0</code>   <code>0.19.1</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#pysamstats","title":"pysamstats","text":"<p>A Python utility for calculating statistics against genome positions based on sequence alignments from a SAM or BAM file.</p> <p>homepage: https://github.com/alimanfoo/pysamstats</p>    version toolchain     <code>1.1.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pysat","title":"PySAT","text":"<p>PySAT is a Python toolkit, which aims at providing a simple and unified interface to a number of state-of-art Boolean satisfiability (SAT) solvers as well as to a variety of cardinality and pseudo-Boolean encodings.</p> <p>homepage: https://pysathq.github.io/</p>    version versionsuffix toolchain     <code>0.1.6.dev11</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>0.1.7.dev1</code>  <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#pyscaf","title":"pyScaf","text":"<p>pyScaf orders contigs from genome assemblies utilising several types of information</p> <p>homepage: https://github.com/lpryszcz/pyScaf</p>    version versionsuffix toolchain     <code>0.12a4</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pyscenic","title":"pySCENIC","text":"<p>pySCENIC is a lightning-fast python implementation of the SCENIC pipeline (Single-Cell rEgulatory Network Inference and Clustering) which enables biologists to infer transcription factors, gene regulatory networks and cell types from single-cell RNA-seq data.</p> <p>homepage: https://github.com/aertslab/pySCENIC</p>    version versionsuffix toolchain     <code>0.10.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#pyscf","title":"PySCF","text":"<p>PySCF is an open-source collection of electronic structure modules powered by Python.</p> <p>homepage: http://www.pyscf.org</p>    version versionsuffix toolchain     <code>1.6.3</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.7.6</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>gomkl/2021a</code>"},{"location":"version-specific/supported-software/#pysheds","title":"pysheds","text":"<p>Simple and fast watershed delineation in python.</p> <p>homepage: https://mattbartos.com/pysheds/</p>    version toolchain     <code>0.2.7.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#pyshp","title":"pyshp","text":"<p>Pure Python read/write support for ESRI Shapefile format</p> <p>homepage: https://github.com/GeospatialPython/pyshp</p>    version versionsuffix toolchain     <code>1.2.12</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>2.1.3</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pyside2","title":"PySide2","text":"<p>PySide2 is the official Python module from the Qt for Python project,     which provides access to the complete Qt 5.12+ framework.</p> <p>homepage: https://pypi.python.org/pypi/PySide2</p>    version toolchain     <code>5.14.2.3</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pysndfx","title":"pysndfx","text":"<p>A lightweight Python wrapper for SoX - Sound eXchange.  Supported effects range from EQ and compression to phasers, reverb and pitch shifters.</p> <p>homepage: https://github.com/carlthome/python-audio-effects</p>    version versionsuffix toolchain     <code>0.3.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pysolar","title":"Pysolar","text":"<p>Pysolar is a collection of Python libraries for simulating the irradiation  of any point on earth by the sun.</p> <p>homepage: https://pysolar.org/</p>    version versionsuffix toolchain     <code>0.7</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.7</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.8</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.8</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#pyspoa","title":"pyspoa","text":"<p>Python bindings to spoa.</p> <p>homepage: https://github.com/nanoporetech/pyspoa</p>    version versionsuffix toolchain     <code>0.0.4</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>0.0.8</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#pysqlite","title":"pysqlite","text":"<p>pysqlite is an interface to the SQLite 3.x embedded relational database engine.  It is almost fully compliant with the Python database API version 2.0 also exposes the unique features of SQLite.</p> <p>homepage: https://pypi.python.org/pypi/pysqlite</p>    version versionsuffix toolchain     <code>2.8.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#pystan","title":"PyStan","text":"<p>Python interface to Stan, a package for Bayesian inference  using the No-U-Turn sampler, a variant of Hamiltonian Monte Carlo.</p> <p>homepage: https://github.com/stan-dev/pystan</p>    version versionsuffix toolchain     <code>2.19.0.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>2.19.1.1</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>3.5.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#pysteps","title":"pysteps","text":"<p>Pysteps is an open-source and community-driven Python library for probabilistic precipitation nowcasting, i.e. short-term ensemble prediction systems.</p> <p>homepage: https://pysteps.github.io/</p>    version toolchain     <code>1.7.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pystran","title":"pystran","text":"<p>Toolset of dynamical model STRucture ANalysis algorithms</p> <p>homepage: https://stijnvanhoey.github.io/pystran/</p>    version versionsuffix toolchain     <code>2017.04.20</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#pytables","title":"PyTables","text":"<p>PyTables is a package for managing hierarchical datasets and designed to efficiently and easily cope  with extremely large amounts of data. PyTables is built on top of the HDF5 library, using the Python language and the  NumPy package. It features an object-oriented interface that, combined with C extensions for the performance-critical  parts of the code (generated using Cython), makes it a fast, yet extremely easy to use tool for interactively browse,  process and search very large amounts of data. One important feature of PyTables is that it optimizes memory and disk  resources so that data takes much less space (specially if on-flight compression is used) than other solutions such as  relational or object oriented databases.</p> <p>homepage: https://www.pytables.org</p>    version versionsuffix toolchain     <code>3.2.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>3.2.3.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.3.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>3.4.2</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>3.4.2</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.4.2</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>3.4.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.4.4</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.4.4</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>3.4.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>3.5.2</code>  <code>intel/2019a</code>   <code>3.5.2</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>3.5.2</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>3.5.2</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>3.6.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>3.6.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>3.6.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#pytest","title":"pytest","text":"<p>pytest: simple powerful testing with Python</p> <p>homepage: https://pytest.org</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>3.0.1</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>3.8.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.8.2</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.8.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>3.8.2</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.8.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.3.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.4.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.4.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>6.0.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>7.1.3</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#pytest-benchmark","title":"pytest-benchmark","text":"<p>A pytest fixture for benchmarking code.</p> <p>homepage: https://github.com/ionelmc/pytest-benchmark</p>    version toolchain     <code>3.4.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#pytest-xdist","title":"pytest-xdist","text":"<p>xdist: pytest distributed testing plugin  The pytest-xdist plugin extends pytest with some unique test execution modes:      * test run parallelization: if you have multiple CPUs or hosts you       can use those for a combined test run. This allows to speed up       development or to use special resources of remote machines.      * --looponfail: run your tests repeatedly in a subprocess. After         each run pytest waits until a file in your project changes and         then re-runs the previously failing tests. This is repeated         until all tests pass after which again a full run is         performed.      * Multi-Platform coverage: you can specify different Python       interpreters or different platforms and run tests in parallel on       all of them.  Before running tests remotely, pytest efficiently \u201crsyncs\u201d your program source code to the remote place. All test results are reported back and displayed to your local terminal. You may specify different Python versions and interpreters.</p> <p>homepage: https://github.com/pytest-dev/pytest-xdist</p>    version toolchain     <code>2.1.0</code> <code>GCCcore/10.2.0</code>   <code>2.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.5.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#pythia","title":"PYTHIA","text":"<p>PYTHIA is a standard tool for the generation of events in high-energy collisions,  comprising a coherent set of physics models for the evolution from a few-body hard  process to a complex multiparticle final state.</p> <p>homepage: http://home.thep.lu.se/~torbjorn/Pythia.html</p>    version versionsuffix toolchain     <code>8.226</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#python","title":"Python","text":"<p>Python is a programming language that lets you work more quickly and integrate your systems  more effectively.</p> <p>homepage: https://python.org/</p>    version versionsuffix toolchain     <code>2.7.9</code> <code>-bare</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>2.7.10</code>  <code>gimkl/2.11.5</code>   <code>2.7.10</code> <code>-bare</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>   <code>2.7.11</code>  <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>2.7.11</code> <code>-bare</code> <code>GCC/4.9.3-2.25</code>   <code>2.7.11</code> <code>-libX11-1.6.3</code> <code>intel/2016a</code>   <code>2.7.12</code>  <code>foss/2016b</code>, <code>intel/2016b</code>, <code>iomkl/2017a</code>   <code>2.7.12</code> <code>-bare</code> <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>   <code>2.7.13</code>  <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.7.13</code> <code>-bare</code> <code>GCCcore/6.3.0</code>   <code>2.7.14</code>  <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>, <code>intel/2018a</code>, <code>intelcuda/2017b</code>, <code>iomkl/2018a</code>   <code>2.7.14</code> <code>-bare</code> <code>GCCcore/6.4.0</code>   <code>2.7.15</code>  <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>2.7.15</code> <code>-bare</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>2.7.16</code>  <code>GCCcore/8.3.0</code>   <code>2.7.16</code> <code>-bare</code> <code>GCCcore/8.3.0</code>   <code>2.7.18</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>2.7.18</code> <code>-bare</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.5.1</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.5.2</code>  <code>foss/2016.04</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.5.2</code> <code>-bare</code> <code>GCC/5.4.0-2.26</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>   <code>3.6.1</code>  <code>foss/2017a</code>, <code>intel/2017a</code>   <code>3.6.2</code>  <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.00</code>   <code>3.6.3</code>  <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>, <code>intelcuda/2017b</code>   <code>3.6.4</code>  <code>foss/2017a</code>, <code>foss/2018a</code>, <code>fosscuda/2018a</code>, <code>golf/2018a</code>, <code>iimkl/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018.02</code>, <code>iomkl/2018a</code>   <code>3.6.6</code>  <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.7.0</code>  <code>foss/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.7.2</code>  <code>GCCcore/8.2.0</code>   <code>3.7.4</code>  <code>GCCcore/8.3.0</code>   <code>3.8.2</code>  <code>GCCcore/9.3.0</code>   <code>3.8.6</code>  <code>GCCcore/10.2.0</code>   <code>3.9.5</code>  <code>GCCcore/10.3.0</code>   <code>3.9.5</code> <code>-bare</code> <code>GCCcore/10.3.0</code>   <code>3.9.6</code>  <code>GCCcore/11.2.0</code>   <code>3.9.6</code> <code>-bare</code> <code>GCCcore/11.2.0</code>   <code>3.10.4</code>  <code>GCCcore/11.3.0</code>   <code>3.10.4</code> <code>-bare</code> <code>GCCcore/11.3.0</code>   <code>3.10.8</code>  <code>GCCcore/12.2.0</code>   <code>3.10.8</code> <code>-bare</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#python-docx","title":"python-docx","text":"<p>python-docx is a Python library for creating and updating Microsoft Word (.docx) files</p> <p>homepage: https://python-docx.readthedocs.io/en/latest/</p>    version toolchain     <code>0.8.11</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#python-hl7","title":"python-hl7","text":"<p>A simple library for parsing messages of Health Level 7 (HL7) version 2.x into Python objects.</p> <p>homepage: https://github.com/johnpaulett/python-hl7</p>    version versionsuffix toolchain     <code>0.3.4</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#python-igraph","title":"python-igraph","text":"<p>Python interface to the igraph high performance graph library, primarily aimed at complex network  research and analysis.</p> <p>homepage: https://igraph.org/python</p>    version versionsuffix toolchain     <code>0.7.1.post6</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.7.1.post6</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.8.0</code>  <code>foss/2019b</code>, <code>foss/2020a</code>   <code>0.9.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.9.6</code>  <code>foss/2021a</code>   <code>0.9.8</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#python-irodsclient","title":"python-irodsclient","text":"<p>A python API for iRODS</p> <p>homepage: https://github.com/irods/python-irodsclient</p>    version toolchain     <code>1.1.4</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#python-isal","title":"python-isal","text":"<p>Faster zlib and gzip compatible compression and decompression  by providing python bindings for the isa-l library. </p> <p>homepage: https://github.com/pycompression/python-isal</p>    version toolchain     <code>0.11.0</code> <code>GCCcore/10.3.0</code>   <code>0.11.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>   <code>1.1.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#python-levenshtein","title":"python-Levenshtein","text":"<p>Python extension for computing string edit distances and similarities.</p> <p>homepage: https://pypi.org/project/python-Levenshtein/</p>    version versionsuffix toolchain     <code>0.12.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.12.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.12.1</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#python-libsbml","title":"python-libsbml","text":"<p>LibSBML Python API.</p> <p>homepage: https://sbml.org/</p>    version toolchain     <code>5.19.7</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#python-parasail","title":"python-parasail","text":"<p>Python Bindings for the Parasail C Library</p> <p>homepage: https://github.com/jeffdaily/parasail-python</p>    version versionsuffix toolchain     <code>1.1.12</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.1.16</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>1.2.2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>1.2.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.2.4</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#python-telegram-bot","title":"python-telegram-bot","text":"<p>This library provides a pure Python, asynchronous interface for the Telegram Bot API.  It's compatible with Python versions 3.7+.</p> <p>homepage: https://python-telegram-bot.org/</p>    version toolchain     <code>20.0a0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#python-weka-wrapper3","title":"python-weka-wrapper3","text":"<p>Python3 wrapper for the Weka Machine Learning Workbench</p> <p>homepage: https://github.com/fracpete/python-weka-wrapper3</p>    version versionsuffix toolchain     <code>0.1.11</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pythran","title":"pythran","text":"<p>Pythran is an ahead of time compiler for a subset of the Python language, with a focus on scientific computing. It takes a Python module annotated with a few interface description and turns it into a native Python module with the same interface, but (hopefully) faster. </p> <p>homepage: https://pythran.readthedocs.io</p>    version versionsuffix toolchain     <code>0.9.4.post1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#pytorch","title":"PyTorch","text":"<p>Tensors and Dynamic neural networks in Python with strong GPU acceleration. PyTorch is a deep learning framework that puts Python first.</p> <p>homepage: https://pytorch.org/</p>    version versionsuffix toolchain     <code>0.3.1</code> <code>-Python-2.7.14</code> <code>fosscuda/2017b</code>   <code>0.3.1</code> <code>-Python-3.6.3</code> <code>fosscuda/2017b</code>   <code>0.3.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.3.1</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>0.4.1</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.0.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.1.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.2.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>1.3.1</code>  <code>fosscuda/2020b</code>   <code>1.3.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.4.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.6.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.6.0</code> <code>-Python-3.7.4-imkl</code> <code>fosscuda/2019b</code>   <code>1.7.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.7.1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.7.1</code> <code>-Python-3.8.2</code> <code>fosscuda/2020a</code>   <code>1.8.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.8.1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.9.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.9.0</code> <code>-imkl</code> <code>fosscuda/2020b</code>   <code>1.10.0</code>  <code>foss/2021a</code>, <code>fosscuda/2020b</code>   <code>1.10.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.11.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.12.0</code>  <code>foss/2022a</code>   <code>1.12.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>   <code>1.12.1</code>  <code>foss/2021a</code>, <code>foss/2022a</code>   <code>1.12.1</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.12.1</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pytorch-geometric","title":"PyTorch-Geometric","text":"<p>PyTorch Geometric (PyG) is a geometric deep learning extension library for PyTorch.</p> <p>homepage: https://github.com/rusty1s/pytorch_geometric</p>    version versionsuffix toolchain     <code>1.3.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.4.2</code> <code>-Python-3.7.4-PyTorch-1.4.0</code> <code>foss/2019b</code>   <code>1.6.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.6.3</code> <code>-Python-3.7.4-PyTorch-1.8.1</code> <code>fosscuda/2019b</code>   <code>2.0.1</code> <code>-PyTorch-1.9.0</code> <code>fosscuda/2020b</code>   <code>2.1.0</code> <code>-PyTorch-1.12.1-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#pytorch-lightning","title":"PyTorch-Lightning","text":"<p>PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers.</p> <p>homepage: https://pytorchlightning.ai</p>    version versionsuffix toolchain     <code>1.5.9</code>  <code>foss/2021a</code>   <code>1.5.9</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>1.7.7</code>  <code>foss/2022a</code>   <code>1.7.7</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>   <code>1.8.4</code>  <code>foss/2022a</code>   <code>1.8.4</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#pytorch3d","title":"PyTorch3D","text":"<p>PyTorch3D is FAIR's library of reusable components for deep learning with 3D data.</p> <p>homepage: https://pytorch3d.org/</p>    version versionsuffix toolchain     <code>0.4.0</code> <code>-PyTorch-1.7.1</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#pyvcf","title":"PyVCF","text":"<p>A Variant Call Format reader for Python.</p> <p>homepage: https://github.com/jamescasbon/PyVCF</p>    version versionsuffix toolchain     <code>0.6.8</code> <code>-Python-2.7.16</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#pywannier90","title":"pyWannier90","text":"<p>A Wannier90 Python interface for VASP and PySCF</p> <p>homepage: https://github.com/hungpham2017/pyWannier90</p>    version toolchain     <code>2021-12-07</code> <code>foss/2021a</code>, <code>gomkl/2021a</code>"},{"location":"version-specific/supported-software/#pywavelets","title":"PyWavelets","text":"<p>PyWavelets is open source wavelet transform software for Python.</p> <p>homepage: https://pywavelets.readthedocs.io</p>    version versionsuffix toolchain     <code>1.1.1</code>  <code>intelcuda/2020b</code>   <code>1.1.1</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#pyyaml","title":"PyYAML","text":"<p>PyYAML is a YAML parser and emitter for the Python programming language.</p> <p>homepage: https://github.com/yaml/pyyaml</p>    version versionsuffix toolchain     <code>3.11</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>3.12</code>  <code>system</code>   <code>3.12</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.12</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.12</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.12</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>3.12</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.12</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>   <code>3.12</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.13</code>  <code>system</code>   <code>3.13</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>3.13</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>5.1</code>  <code>GCCcore/8.2.0</code>   <code>5.1.2</code>  <code>GCCcore/8.3.0</code>   <code>5.3</code>  <code>GCCcore/9.3.0</code>   <code>5.3.1</code>  <code>GCCcore/10.2.0</code>   <code>5.4.1</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>6.0</code>  <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#pyzmq","title":"PyZMQ","text":"<p>Python bindings for ZeroMQ</p> <p>homepage: https://www.zeromq.org/bindings:python</p>    version versionsuffix toolchain     <code>15.2.0</code> <code>-Python-2.7.11-zmq4</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>15.2.0</code> <code>-Python-3.5.1-zmq4</code> <code>intel/2016a</code>   <code>15.3.0</code> <code>-Python-2.7.11-zmq4</code> <code>foss/2016a</code>   <code>15.3.0</code> <code>-Python-3.5.1-zmq4</code> <code>foss/2016a</code>   <code>15.4.0</code> <code>-Python-2.7.12-zmq4</code> <code>intel/2016b</code>   <code>15.4.0</code> <code>-Python-3.5.2-zmq4</code> <code>intel/2016b</code>   <code>16.0.2</code> <code>-Python-2.7.12-zmq4</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>16.0.2</code> <code>-Python-2.7.13-zmq4</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>16.0.2</code> <code>-Python-3.5.2-zmq4</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>16.0.3</code> <code>-Python-2.7.14-zmq4</code> <code>intel/2017b</code>   <code>17.0.0</code> <code>-Python-2.7.14-zmq4</code> <code>foss/2018a</code>   <code>17.0.0</code> <code>-Python-3.6.4-zmq4</code> <code>foss/2018a</code>   <code>18.1.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>22.3.0</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#q","title":"Q","text":"<p>Q6 - QCA - qcat - QCG-PilotJob - qcint - QCxMS - QD - QDD - QEMU - QGIS - Qhull - QIIME - QIIME2 - Qiskit - QJson - QML - qpth - qrupdate - QScintilla - Qt - Qt5 - Qt5Webkit - Qtconsole - QtKeychain - QTLtools - qtop - QtPy - Qualimap - Quandl - QuantumESPRESSO - QUAST - QuaZIP - QuickFF - QuickPIC - Quip - Quorum - QuTiP - Qwt - QwtPolar</p>"},{"location":"version-specific/supported-software/#q6","title":"Q6","text":"<p>EVB, FEP and LIE simulator.</p> <p>homepage: https://github.com/qusers/Q6</p>    version toolchain     <code>20180205</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#qca","title":"QCA","text":"<p>Taking a hint from the similarly-named Java Cryptography Architecture,  QCA aims to provide a straightforward and cross-platform crypto API, using Qt datatypes  and conventions. QCA separates the API from the implementation, using plugins known as  Providers. The advantage of this model is to allow applications to avoid linking to or  explicitly depending on any particular cryptographic library. This allows one to easily  change or upgrade crypto implementations without even needing to recompile the  application! QCA should work everywhere Qt does, including Windows/Unix/MacOSX.</p> <p>homepage: https://userbase.kde.org/QCA</p>    version toolchain     <code>2.1.0</code> <code>foss/2016a</code>, <code>intel/2016b</code>   <code>2.1.3</code> <code>GCCcore/8.2.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.3.5</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qcat","title":"qcat","text":"<p>qcat is a Python command-line tool for demultiplexing Oxford Nanopore reads from FASTQ files</p> <p>homepage: https://github.com/nanoporetech/qcat/releases</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.1.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#qcg-pilotjob","title":"QCG-PilotJob","text":"<p>A python service for easy execution of many tasks inside a single allocation.</p> <p>homepage: https://qcg-pilotjob.readthedocs.org</p>    version toolchain     <code>0.12.3</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#qcint","title":"qcint","text":"<p>libcint is an open source library for analytical Gaussian integrals. qcint is an optimized libcint branch for the x86-64 platform.</p> <p>homepage: http://wiki.sunqm.net/libcint</p>    version toolchain     <code>3.0.18</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#qcxms","title":"QCxMS","text":"<p>QCxMS is a quantum chemical based program to calculate electron ionization (EI)  and collision induced dissociation (CID) mass spectra using Born-Oppenheimer Molecular Dynamics  (BO-MD). It is the successor of the QCEIMS program, in which the EI part is exchanged to x to  account for the greater general applicibility of the program. </p> <p>homepage: https://xtb-docs.readthedocs.io/en/latest/qcxms_doc/qcxms.html</p>    version toolchain     <code>5.0.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#qd","title":"QD","text":"<p>Quad Double computation package</p> <p>homepage: https://github.com/scibuilder/QD</p>    version versionsuffix toolchain     <code>0.8.9</code>  <code>foss/2021a</code>   <code>2.3.17</code> <code>-20160110</code> <code>NVHPC/21.2</code>"},{"location":"version-specific/supported-software/#qdd","title":"QDD","text":"<p>A user-friendly program to select microsatellite markers and design primers  from large sequencing projects.</p> <p>homepage: http://net.imbe.fr/~emeglecz/qdd.html</p>    version versionsuffix toolchain     <code>3.1.2</code> <code>-Perl-5.28.0</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#qemu","title":"QEMU","text":"<p>QEMU is a generic and open source machine emulator and virtualizer.</p> <p>homepage: https://www.qemu.org/</p>    version toolchain     <code>2.10.1</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#qgis","title":"QGIS","text":"<p>QGIS is a user friendly Open Source Geographic Information System (GIS)</p> <p>homepage: http://www.qgis.org/</p>    version versionsuffix toolchain     <code>2.14.12</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.18.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>3.4.12</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>3.28.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#qhull","title":"Qhull","text":"<p>Qhull computes the convex hull, Delaunay triangulation, Voronoi diagram,  halfspace intersection about a point, furthest-site Delaunay triangulation,  and furthest-site Voronoi diagram. The source code runs in 2-d, 3-d, 4-d, and  higher dimensions. Qhull implements the Quickhull algorithm for computing the  convex hull. </p> <p>homepage: http://www.qhull.org</p>    version toolchain     <code>2015.2</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>2019.1</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>2020.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#qiime","title":"QIIME","text":"<p>QIIME is an open-source bioinformatics pipeline for performing microbiome analysis  from raw DNA sequencing data.</p> <p>homepage: http://qiime.org/</p>    version toolchain     <code>1.9.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#qiime2","title":"QIIME2","text":"<p>QIIME is an open-source bioinformatics pipeline for performing microbiome analysis  from raw DNA sequencing data.</p> <p>homepage: http://qiime2.org/</p>    version toolchain     <code>2017.10</code> <code>system</code>   <code>2018.2</code> <code>system</code>   <code>2019.4</code> <code>system</code>   <code>2019.7</code> <code>system</code>   <code>2020.8</code> <code>system</code>   <code>2020.11</code> <code>system</code>   <code>2021.8</code> <code>system</code>   <code>2022.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#qiskit","title":"Qiskit","text":"<p>Qiskit is an open-source framework for working with noisy quantum computers  at the level of pulses, circuits, and algorithms.</p> <p>homepage: https://qiskit.org</p>    version versionsuffix toolchain     <code>0.11.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.12.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.31.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#qjson","title":"QJson","text":"<p>QJson is a Qt-based library that maps JSON data to QVariant objects and vice versa.</p> <p>homepage: http://qjson.sourceforge.net/</p>    version toolchain     <code>0.9.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#qml","title":"QML","text":"<p>QML is a Python2/3-compatible toolkit for representation learning of properties  of molecules and solids.</p> <p>homepage: https://www.qmlcode.org</p>    version versionsuffix toolchain     <code>0.2.10</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#qpth","title":"qpth","text":"<p>A fast and differentiable QP solver for PyTorch. </p> <p>homepage: https://locuslab.github.io/qpth/</p>    version versionsuffix toolchain     <code>0.0.13-20190626</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#qrupdate","title":"qrupdate","text":"<p>qrupdate is a Fortran library for fast updates of QR and Cholesky decompositions.</p> <p>homepage: https://sourceforge.net/projects/qrupdate/</p>    version toolchain     <code>1.1.2</code> <code>GCC/5.4.0-2.26</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016a</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#qscintilla","title":"QScintilla","text":"<p>QScintilla is a port to Qt of Neil Hodgson's Scintilla C++ editor control</p> <p>homepage: https://www.riverbankcomputing.com/software/qscintilla</p>    version versionsuffix toolchain     <code>2.9.4</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.10</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.11.2</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>2.11.6</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qt","title":"Qt","text":"<p>Qt is a comprehensive cross-platform C++ application framework.</p> <p>homepage: http://qt.io/</p>    version versionsuffix toolchain     <code>3.3.8</code>  <code>intel/2016a</code>   <code>4.8.6</code>  <code>system</code>   <code>4.8.7</code>  <code>GCCcore/8.2.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>4.8.7</code> <code>-GLib-2.48.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#qt5","title":"Qt5","text":"<p>Qt is a comprehensive cross-platform C++ application framework.</p> <p>homepage: https://qt.io/</p>    version toolchain     <code>5.6.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.7.0</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>5.7.1</code> <code>intel/2016b</code>   <code>5.8.0</code> <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>5.9.3</code> <code>foss/2017b</code>   <code>5.9.8</code> <code>fosscuda/2018b</code>   <code>5.10.1</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>5.11.2</code> <code>foss/2018b</code>   <code>5.12.3</code> <code>GCCcore/8.2.0</code>   <code>5.13.1</code> <code>GCCcore/8.3.0</code>   <code>5.14.1</code> <code>GCCcore/9.3.0</code>   <code>5.14.2</code> <code>GCCcore/10.2.0</code>   <code>5.15.2</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>5.15.5</code> <code>GCCcore/11.3.0</code>   <code>5.15.7</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#qt5webkit","title":"Qt5Webkit","text":"<p>Qt Port of WebKit. WebKit is an open source web browser engine.</p> <p>homepage: https://github.com/qt/qtwebkit</p>    version toolchain     <code>5.212.0-alpha3</code> <code>GCCcore/8.2.0</code>   <code>5.212.0-alpha4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qtconsole","title":"Qtconsole","text":"<p>A rich Qt-based console for working with Jupyter kernels, supporting rich media  output, session export, and more. The Qtconsole is a very lightweight application that largely feels like a        terminal, but provides a number of enhancements only possible in a GUI, such as  inline figures, proper multiline editing with syntax highlighting, graphical     calltips, and more.</p> <p>homepage: https://jupyter.org/</p>    version versionsuffix toolchain     <code>4.7.7</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>5.0.2</code>  <code>GCCcore/10.2.0</code>   <code>5.3.2</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qtkeychain","title":"QtKeychain","text":"<p>Platform-independent Qt API for storing passwords securely.</p> <p>homepage: https://github.com/frankosterfeld/qtkeychain</p>    version toolchain     <code>0.9.1</code> <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>   <code>0.13.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qtltools","title":"QTLtools","text":"<p>QTLtools is a tool set for molecular QTL discovery and analysis. It allows to go from the raw sequence data to collection of molecular Quantitative Trait Loci (QTLs)  in few easy-to-perform steps.</p> <p>homepage: https://qtltools.github.io/qtltools/</p>    version toolchain     <code>1.1</code> <code>intel/2016b</code>   <code>1.3.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#qtop","title":"qtop","text":"<p>qtop is a nifty command-line tool for monitoring queueing systems, esp. PBS/torque.  It tries to fit as much information as possible in your screen's real estate,  by stitching together the output of commands like pbsnodes -a, qstat &amp; qstat -q.  It is possible to write wrappers for other platforms -people have done so for SGE, OAR etc-  or, even examine traces offline and present the sampled information.</p> <p>homepage: http://cern.ch/fotis/QTOP/</p>    version versionsuffix toolchain     <code>53</code> <code>-1</code> <code>system</code>"},{"location":"version-specific/supported-software/#qtpy","title":"QtPy","text":"<p>QtPy is a small abstraction layer that lets you write applications using a       single API call to either PyQt or PySide.  It provides support for PyQt5, PyQt4, PySide2 and PySide.</p> <p>homepage: https://github.com/spyder-ide/qtpy</p>    version versionsuffix toolchain     <code>1.9.0</code>  <code>GCCcore/10.2.0</code>   <code>1.9.0</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>2.2.1</code>  <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qualimap","title":"Qualimap","text":"<p>Qualimap 2 is a platform-independent application written in Java and R that provides both  a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of  alignment sequencing data and its derivatives like feature counts.</p> <p>homepage: http://qualimap.bioinfo.cipf.es/</p>    version versionsuffix toolchain     <code>2.2.1</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>2.2.1</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>2.2.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#quandl","title":"Quandl","text":"<p>A Python library for Quandl\u2019s RESTful API.</p> <p>homepage: https://pypi.python.org/pypi/Quandl</p>    version versionsuffix toolchain     <code>3.4.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>3.4.8</code>  <code>foss/2019a</code>   <code>3.6.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#quantumespresso","title":"QuantumESPRESSO","text":"<p>Quantum ESPRESSO  is an integrated suite of computer codes for electronic-structure calculations and materials modeling at the nanoscale. It is based on density-functional theory, plane waves, and pseudopotentials (both norm-conserving and ultrasoft). </p> <p>homepage: https://www.quantum-espresso.org</p>    version versionsuffix toolchain     <code>5.3.0</code>  <code>intel/2016.02-GCC-4.9</code>   <code>5.4.0</code>  <code>intel/2016.02-GCC-4.9</code>   <code>5.4.0</code> <code>-hybrid</code> <code>foss/2016b</code>   <code>6.0</code>  <code>intel/2016b</code>   <code>6.1</code>  <code>intel/2017a</code>   <code>6.2</code>  <code>intel/2017b</code>   <code>6.2.1</code>  <code>iomkl/2017b</code>   <code>6.3</code>  <code>foss/2018b</code>, <code>intel/2018b</code>   <code>6.4.1</code>  <code>intel/2019a</code>   <code>6.5</code>  <code>intel/2019a</code>, <code>intel/2019b</code>   <code>6.6</code>  <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>, <code>intel/2019b</code>   <code>6.7</code>  <code>foss/2019b</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>intel/2019b</code>, <code>intel/2021a</code>, <code>iomkl/2019b</code>   <code>6.8</code>  <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2021a</code>   <code>7.0</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>7.1</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#quast","title":"QUAST","text":"<p>QUAST evaluates genome assemblies by computing various metrics. It works both with and without reference genomes. The tool accepts multiple assemblies, thus is suitable for comparison.</p> <p>homepage: https://github.com/ablab/quast</p>    version versionsuffix toolchain     <code>4.6.0</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>4.6.3</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>5.0.2</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>   <code>5.0.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>foss/2019a</code>   <code>5.0.2</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>5.0.2</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>5.0.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#quazip","title":"QuaZIP","text":"<p>QuaZIP is the C++ wrapper for Gilles Vollant's ZIP/UNZIP   package (AKA Minizip) using Trolltech's Qt library.</p> <p>homepage: https://stachenov.github.io/quazip</p>    version toolchain     <code>0.8.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#quickff","title":"QuickFF","text":"<p>QuickFF is a Python package developed at the Center for Molecular Modeling (CMM) to quickly derive accurate force fields from ab initio calculations.</p> <p>homepage: https://molmod.github.io/QuickFF/</p>    version versionsuffix toolchain     <code>2.1.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.2.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>2.2.4</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>2.2.4</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>2.2.7</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#quickpic","title":"QuickPIC","text":"<p>QuickPIC is a 3D parallel (MPI &amp; OpenMP Hybrid) Quasi-Static PIC code,  which is developed based on the framework UPIC. QuickPIC can efficiently simulate plasma  based accelerator problems. This is the UCLA Plasma Simulation Group's official open-source  repository for QuickPIC.</p> <p>homepage: https://github.com/UCLA-Plasma-Simulation-Group/QuickPIC-OpenSource</p>    version toolchain     <code>20210224</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#quip","title":"Quip","text":"<p>Quip compresses next-generation sequencing data with extreme prejudice.  It supports input and output in the FASTQ and SAM/BAM formats,  compressing large datasets to as little as 15% of their original size.</p> <p>homepage: http://homes.cs.washington.edu/~dcjones/quip</p>    version toolchain     <code>1.1.8</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#quorum","title":"Quorum","text":"<p>QuorUM is an error corrector for Illumina reads</p> <p>homepage: http://www.genome.umd.edu/quorum.html</p>    version toolchain     <code>1.1.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#qutip","title":"QuTiP","text":"<p>QuTiP is open-source software for simulating the dynamics of open quantum systems.</p> <p>homepage: http://qutip.org</p>    version versionsuffix toolchain     <code>4.1.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.3.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#qwt","title":"Qwt","text":"<p>The Qwt library contains GUI Components and utility classes which are primarily useful for programs  with a technical background.</p> <p>homepage: https://qwt.sourceforge.io/</p>    version toolchain     <code>6.1.2</code> <code>intel/2016a</code>   <code>6.1.3</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>6.1.4</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2018b</code>   <code>6.1.5</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>6.2.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#qwtpolar","title":"QwtPolar","text":"<p>The QwtPolar library contains classes for displaying values on a polar coordinate system.</p> <p>homepage: http://qwtpolar.sourceforge.net/</p>    version toolchain     <code>1.1.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#r","title":"R","text":"<p>R - R-bundle-Bioconductor - R-INLA - R-keras - R-opencv - R-tesseract - Racon - radeontop - RaGOO - Ragout - RagTag - rampart - randfold - randrproto - RapidJSON - rapidtide - RAPSearch2 - Rascaf - RASPA2 - rasterio - rasterstats - Ratatosk - RAxML - RAxML-NG - Ray-assembler - Ray-project - Raysect - RBFOpt - rclone - Rcorrector - RcppGSL - rCUDA - RDFlib - RDKit - RDP-Classifier - RE2 - re2c - Reads2snp - Reapr - RECON - Red - Redis - redis-py - Redundans - ReFrame - regionmask - RegTools - Relate - RELION - ReMatCh - REMORA - renderproto - RepastHPC - RepeatMasker - RepeatModeler - RepeatScout - request - requests - RERconverge - resolos - retworkx - RevBayes - rgdal - rgeos - Rgurobi - rhdf5 - RheoTool - rickflow - RInChI - rioxarray - rising - rjags - RLCard - Rmath - rMATS-turbo - RMBlast - RNA-Bloom - RNA-SeQC - RNAclust - RNAcode - RNAIndel - RNAmmer - rnaQUAST - RNAz - RnBeads - Roary - ROCm - rocm-cmake - ROCm-CompilerSupport - rocm-smi - rocminfo - ROCR-Runtime - ROCT-Thunk-Interface - ROI_PAC - ROME - ROOT - root_numpy - rootpy - Rosetta - rpmrebuild - rpy2 - RQGIS3 - RSEM - RSeQC - RStan - rstanarm - RStudio-Server - RTG-Tools - Rtree - ruamel.yaml - Ruby - Ruby-Tk - ruffus - Rust</p>"},{"location":"version-specific/supported-software/#r_1","title":"R","text":"<p>R is a free software environment for statistical computing  and graphics.</p> <p>homepage: https://www.r-project.org/</p>    version versionsuffix toolchain     <code>3.2.3</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>   <code>3.2.3</code> <code>-bare</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.2.3</code> <code>-libX11-1.6.3</code> <code>intel/2016a</code>   <code>3.3.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.3</code> <code>-X11-20160819</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.3.3</code> <code>-X11-20170314</code> <code>intel/2017a</code>   <code>3.4.0</code> <code>-X11-20170314</code> <code>intel/2017a</code>   <code>3.4.1</code> <code>-X11-20160819</code> <code>foss/2016b</code>   <code>3.4.3</code> <code>-X11-20171023</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.4.3</code> <code>-X11-20171023-HDF5-1.8.19</code> <code>intel/2017b</code>   <code>3.4.4</code> <code>-X11-20180131</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>3.5.0</code> <code>-X11-20180131</code> <code>iomkl/2018a</code>   <code>3.5.1</code>  <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.5.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.5.1</code> <code>-bare</code> <code>foss/2018b</code>   <code>3.6.0</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>   <code>3.6.2</code>  <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>3.6.3</code>  <code>foss/2020a</code>   <code>4.0.0</code>  <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>4.0.3</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4.0.4</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4.0.5</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4.1.0</code>  <code>foss/2021a</code>   <code>4.1.2</code>  <code>foss/2021b</code>   <code>4.2.0</code>  <code>foss/2021b</code>   <code>4.2.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#r-bundle-bioconductor","title":"R-bundle-Bioconductor","text":"<p>Bioconductor provides tools for the analysis and coprehension  of high-throughput genomic data.</p> <p>homepage: https://bioconductor.org</p>    version versionsuffix toolchain     <code>3.2</code> <code>-R-3.2.3</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.3</code> <code>-R-3.3.1</code> <code>intel/2016b</code>   <code>3.5</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>3.6</code> <code>-R-3.4.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.6</code> <code>-R-3.4.4</code> <code>intel/2018a</code>   <code>3.7</code> <code>-R-3.5.0</code> <code>iomkl/2018a</code>   <code>3.7</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>3.8</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>3.9</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>3.10</code>  <code>foss/2019b</code>   <code>3.11</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>3.12</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>3.13</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>3.14</code> <code>-R-4.1.2</code> <code>foss/2021b</code>   <code>3.15</code> <code>-R-4.2.0</code> <code>foss/2021b</code>   <code>3.15</code> <code>-R-4.2.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#r-inla","title":"R-INLA","text":"<p>R-INLA is a package in R that do approximate Bayesian inference for Latent Gaussian Models.</p> <p>homepage: https://www.r-inla.org</p>    version versionsuffix toolchain     <code>21.05.02</code> <code>-R-4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#r-keras","title":"R-keras","text":"<p>Interface to 'Keras' https://keras.io, a high-level neural networks 'API'. </p> <p>homepage: https://cran.r-project.org/web/packages/keras</p>    version versionsuffix toolchain     <code>2.1.6</code> <code>-R-3.4.4</code> <code>foss/2018a</code>   <code>2.2.5.0</code> <code>-Python-3.7.2-R-3.6.0</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>2.2.5.0</code> <code>-Python-3.7.4-R-3.6.2</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.4.0</code> <code>-R-4.0.4</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#r-opencv","title":"R-opencv","text":"<p>Experimenting with computer vision and machine learning in R. This package exposes some of the available OpenCV algorithms, such as edge, body or face detection. These can either be applied to analyze static images, or to filter live video footage from a camera device.</p> <p>homepage: https://cran.r-project.org/web/packages/opencv/</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#r-tesseract","title":"R-tesseract","text":"<p>The R extension for using tesseract</p> <p>homepage: https://cran.r-project.org/package=tesseract</p>    version versionsuffix toolchain     <code>4.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#racon","title":"Racon","text":"<p>Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads.</p> <p>homepage: https://github.com/lbcb-sci/racon</p>    version toolchain     <code>1.3.2</code> <code>GCCcore/8.2.0</code>   <code>1.4.7</code> <code>GCCcore/8.2.0</code>, <code>gcccuda/2019b</code>   <code>1.4.10</code> <code>GCC/7.3.0-2.30</code>   <code>1.4.13</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.4.21</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#radeontop","title":"radeontop","text":"<p>View your GPU utilization, both for the total activity percent and individual blocks.</p> <p>homepage: https://github.com/clbr/radeontop</p>    version toolchain     <code>1.3</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#ragoo","title":"RaGOO","text":"<p>A tool to order and orient genome assembly contigs via Minimap2 alignments to a reference genome</p> <p>homepage: https://github.com/malonge/RaGOO</p>    version versionsuffix toolchain     <code>1.11</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#ragout","title":"Ragout","text":"<p>Ragout (Reference-Assisted Genome Ordering UTility) is a tool for chromosome-level scaffolding using multiple references. Given initial assembly fragments (contigs/scaffolds) and one or multiple related references (complete or draft), it produces a chromosome-scale assembly (as a set of scaffolds).</p> <p>homepage: https://github.com/fenderglass/Ragout</p>    version versionsuffix toolchain     <code>2.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.3</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ragtag","title":"RagTag","text":"<p>RagTag is a collection of software tools for scaffolding and improving modern genome assemblies. Tasks include: homology-based misassembly correction, homology-based assembly scaffolding and patching, and scaffold merging. RagTag also provides command line utilities for working with common genome assembly file formats.</p> <p>homepage: https://github.com/malonge/RagTag</p>    version toolchain     <code>2.0.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#rampart","title":"rampart","text":"<p>Read Assignment, Mapping, and Phylogenetic Analysis in Real Time.</p> <p>homepage: https://github.com/artic-network/rampart/</p>    version versionsuffix toolchain     <code>1.2.0</code>  <code>foss/2020b</code>   <code>1.2.0rc3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#randfold","title":"randfold","text":"<p>Minimum free energy of folding randomization test software</p> <p>homepage: http://bioinformatics.psb.ugent.be/software/details/Randfold</p>    version toolchain     <code>2.0.1</code> <code>foss/2018b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#randrproto","title":"randrproto","text":"<p>Xrandr protocol and ancillary headers</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.5.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#rapidjson","title":"RapidJSON","text":"<p>A fast JSON parser/generator for C++ with both SAX/DOM style API</p> <p>homepage: https://rapidjson.org</p>    version toolchain     <code>1.1.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#rapidtide","title":"rapidtide","text":"<p>Rapidtide is a suite of python programs used to perform time delay analysis on functional imaging  data to find time lagged correlations between the voxelwise time series and other time series.</p> <p>homepage: https://rapidtide.readthedocs.io</p>    version versionsuffix toolchain     <code>1.8.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#rapsearch2","title":"RAPSearch2","text":"<p>RAPSearch stands for Reduced Alphabet based Protein similarity Search </p> <p>homepage: https://omics.informatics.indiana.edu/mg/RAPSearch2</p>    version toolchain     <code>2.24</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#rascaf","title":"Rascaf","text":"<p>Rascaf (RnA-seq SCAFfolder) uses continuity and order information from paired-end RNA-seq reads  to improve a draft assembly, particularly in the gene regions.</p> <p>homepage: https://github.com/mourisl/Rascaf</p>    version toolchain     <code>1.0.2</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#raspa2","title":"RASPA2","text":"<p>RASPA is a software package for simulating adsorption and diffusion of molecules in flexible nanoporous materials.</p> <p>homepage: https://iraspa.org/raspa/</p>    version versionsuffix toolchain     <code>2.0.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.0.41</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#rasterio","title":"rasterio","text":"<p>Rasterio reads and writes geospatial raster data.</p> <p>homepage: https://github.com/mapbox/rasterio</p>    version versionsuffix toolchain     <code>1.1.7</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.2.3</code>  <code>foss/2020b</code>   <code>1.2.10</code>  <code>foss/2021b</code>   <code>1.3.4</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#rasterstats","title":"rasterstats","text":"<p>rasterstats is a Python module for summarizing geospatial raster datasets based on vector geometries.</p> <p>homepage: https://github.com/perrygeo/python-rasterstats</p>    version versionsuffix toolchain     <code>0.15.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#ratatosk","title":"Ratatosk","text":"<p>Phased hybrid error correction of long reads using colored de Bruijn graphs</p> <p>homepage: https://github.com/DecodeGenetics/Ratatosk</p>    version toolchain     <code>0.4</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#raxml","title":"RAxML","text":"<p>RAxML search algorithm for maximum likelihood based inference of phylogenetic trees.</p> <p>homepage: https://github.com/stamatak/standard-RAxML</p>    version versionsuffix toolchain     <code>8.2.4</code> <code>-hybrid-avx2</code> <code>foss/2016a</code>   <code>8.2.9</code> <code>-hybrid-avx2</code> <code>foss/2016a</code>   <code>8.2.10</code> <code>-hybrid-avx2</code> <code>intel/2017a</code>   <code>8.2.11</code> <code>-hybrid-avx</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.2.11</code> <code>-hybrid-avx2</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>8.2.11</code> <code>-hybrid-sse3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.2.12</code> <code>-hybrid-avx2</code> <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>gompi/2021b</code>, <code>iimpi/2019b</code>, <code>intel/2018b</code>, <code>intel/2019a</code>   <code>8.2.12</code> <code>-pthreads-avx2</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#raxml-ng","title":"RAxML-NG","text":"<p>RAxML-NG is a phylogenetic tree inference tool which uses maximum-likelihood (ML)  optimality criterion. Its search heuristic is based on iteratively performing a series of Subtree  Pruning and Regrafting (SPR) moves, which allows to quickly navigate to the best-known ML tree.</p> <p>homepage: https://github.com/amkozlov/raxml-ng</p>    version toolchain     <code>0.9.0</code> <code>GCC/8.3.0</code>, <code>gompi/2019b</code>   <code>1.0.1</code> <code>gompi/2019b</code>   <code>1.0.2</code> <code>gompi/2020b</code>   <code>1.0.3</code> <code>GCC/10.2.0</code>   <code>1.1.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#ray-assembler","title":"Ray-assembler","text":"<p>Parallel genome assemblies for parallel DNA sequencing</p> <p>homepage: http://denovoassembler.sourceforge.net/</p>    version toolchain     <code>2.3.1</code> <code>iimpi/2019a</code>"},{"location":"version-specific/supported-software/#ray-project","title":"Ray-project","text":"<p>Ray is an open source project that makes it simple to scale any compute-intensive Python workload \u2014 from deep learning to production model serving. With a rich set of libraries and integrations built on a flexible distributed execution framework, Ray makes distributed computing easy and accessible to every engineer.</p> <p>homepage: https://www.ray.io/</p>    version versionsuffix toolchain     <code>0.8.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.0.1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.9.2</code>  <code>foss/2021b</code>   <code>1.13.0</code>  <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#raysect","title":"Raysect","text":"<p>Raysect is an OOP ray-tracing framework for Python</p> <p>homepage: https://raysect.org</p>    version versionsuffix toolchain     <code>0.6.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.7.1</code>  <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#rbfopt","title":"RBFOpt","text":"<p>RBFOpt is a Python library for black-box optimization (also known as derivative-free optimization).</p> <p>homepage: https://github.com/coin-or/rbfopt</p>    version versionsuffix toolchain     <code>4.1.1</code>  <code>intel/2019a</code>   <code>4.1.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#rclone","title":"rclone","text":"<p>Rclone is a command line program to sync files and directories to and from  a variety of online storage services </p> <p>homepage: https://rclone.org</p>    version versionsuffix toolchain     <code>1.42</code> <code>-amd64</code> <code>system</code>   <code>1.54.1</code> <code>-amd64</code> <code>system</code>   <code>1.56.0</code> <code>-amd64</code> <code>system</code>   <code>1.57.0</code>  <code>system</code>"},{"location":"version-specific/supported-software/#rcorrector","title":"Rcorrector","text":"<p>Rcorrector(RNA-seq error CORRECTOR) is a kmer-based error correction method for RNA-seq data.</p> <p>homepage: https://github.com/mourisl/Rcorrector</p>    version toolchain     <code>1.0.2</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#rcppgsl","title":"RcppGSL","text":"<p>The 'RcppGSL' package provides an easy-to-use interface  between 'GSL' data structures and R using concepts from 'Rcpp' which is itself  a package that eases the interfaces between R and C++.</p> <p>homepage: https://cran.r-project.org/web/packages/RcppGSL</p>    version versionsuffix toolchain     <code>0.3.8</code> <code>-R-4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#rcuda","title":"rCUDA","text":"<p>The rCUDA Framework enables the concurrent usage of CUDA-compatible devices remotely.</p> <p>homepage: http://www.rcuda.net/</p>    version versionsuffix toolchain     <code>4.0.1</code> <code>_linux_64_Ubuntu10.04</code> <code>system</code>   <code>5.0</code> <code>_linux_64_scientificLinux6</code> <code>system</code>"},{"location":"version-specific/supported-software/#rdflib","title":"RDFlib","text":"<p>RDFLib is a Python library for working with RDF, a simple yet powerful language  for representing information.</p> <p>homepage: https://github.com/RDFLib/rdflib</p>    version toolchain     <code>4.2.2</code> <code>GCCcore/8.3.0</code>, <code>foss/2019a</code>   <code>5.0.0</code> <code>GCCcore/10.2.0</code>   <code>6.2.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#rdkit","title":"RDKit","text":"<p>RDKit is a collection of cheminformatics and machine-learning software written in C++ and Python.</p> <p>homepage: https://www.rdkit.org</p>    version versionsuffix toolchain     <code>2018.09.3</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2019.09.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2020.03.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>2020.09.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2021.03.4</code>  <code>foss/2021a</code>   <code>2022.03.5</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rdp-classifier","title":"RDP-Classifier","text":"<p>The RDP Classifier is a naive Bayesian classifier that can rapidly and accurately provides taxonomic  assignments from domain to genus, with confidence estimates for each assignment.</p> <p>homepage: http://sourceforge.net/projects/rdp-classifier</p>    version versionsuffix toolchain     <code>2.7</code> <code>-Java-1.7.0_60</code> <code>system</code>   <code>2.12</code> <code>-Java-1.8</code> <code>system</code>   <code>2.13</code> <code>-Java-11</code> <code>system</code>   <code>2.13</code> <code>-Java-17</code> <code>system</code>"},{"location":"version-specific/supported-software/#re2","title":"RE2","text":"<p>RE2 is a fast, safe, thread-friendly alternative to backtracking regular expression engines like those used in PCRE, Perl, and Python. It is a C++ library. </p> <p>homepage: https://github.com/google/re2</p>    version toolchain     <code>2020-07-01</code> <code>GCCcore/8.3.0</code>   <code>2021-06-01</code> <code>GCCcore/10.2.0</code>   <code>2022-02-01</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2022-06-01</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#re2c","title":"re2c","text":"<p>re2c is a free and open-source lexer generator for C and C++. Its main goal is generating fast lexers: at least as fast as their reasonably optimized hand-coded counterparts. Instead of using traditional table-driven approach, re2c encodes the generated finite state automata directly in the form of conditional jumps and comparisons.</p> <p>homepage: https://re2c.org</p>    version toolchain     <code>1.1.1</code> <code>GCCcore/8.2.0</code>   <code>1.2.1</code> <code>GCCcore/8.3.0</code>   <code>1.3</code> <code>GCCcore/9.3.0</code>   <code>2.0.3</code> <code>GCCcore/10.2.0</code>   <code>2.1.1</code> <code>GCCcore/10.3.0</code>   <code>2.2</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>   <code>3.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#reads2snp","title":"Reads2snp","text":"<p>reads2snp is a SNP and genotype caller: it predicts the genotype of distinct individuals   at distinct positions of a set of sequences based on read mapping / read counts. Its typical input is a bam file.   Its typical output is a vcf file. It is written in C++, based on the bio++ libraries, multi-threaded with openMP,   available under Linux and MacOS</p> <p>homepage: http://kimura.univ-montp2.fr/PopPhyl/index.php?section=tools</p>    version toolchain     <code>2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#reapr","title":"Reapr","text":"<p>A tool that evaluates the accuracy of a genome assembly using mapped paired end reads,  without the use of a reference genome for comparison.</p> <p>homepage: https://www.sanger.ac.uk/science/tools/reapr</p>    version toolchain     <code>1.0.18</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#recon","title":"RECON","text":"<p>Patched version of RECON to be used with RepeatModeler.</p> <p>homepage: https://www.repeatmasker.org/RepeatModeler/</p>    version toolchain     <code>1.08</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#red","title":"Red","text":"<p>Red (REpeat Detector)</p> <p>homepage: http://toolsmith.ens.utulsa.edu/</p>    version toolchain     <code>2015-05-22</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#redis","title":"Redis","text":"<p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p> <p>homepage: https://redis.io</p>    version toolchain     <code>6.2.6</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#redis-py","title":"redis-py","text":"<p>The Python interface to the Redis key-value store.</p> <p>homepage: https://github.com/redis/redis-py</p>    version toolchain     <code>4.3.1</code> <code>foss/2021a</code>   <code>4.3.3</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#redundans","title":"Redundans","text":"<p>Redundans is a pipeline that assists an assembly of heterozygous/polymorphic genomes.</p> <p>homepage: https://github.com/lpryszcz/redundans</p>    version toolchain     <code>0.13c</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#reframe","title":"ReFrame","text":"<p>ReFrame is a framework for writing regression tests for HPC systems.</p> <p>homepage: https://github.com/eth-cscs/reframe</p>    version toolchain     <code>2.18</code> <code>system</code>   <code>2.19</code> <code>system</code>   <code>2.20</code> <code>system</code>   <code>2.21</code> <code>system</code>   <code>3.0</code> <code>system</code>   <code>3.2</code> <code>system</code>   <code>3.3</code> <code>system</code>   <code>3.4.1</code> <code>system</code>   <code>3.5.0</code> <code>system</code>   <code>3.5.1</code> <code>system</code>   <code>3.5.2</code> <code>system</code>   <code>3.6.2</code> <code>system</code>   <code>3.6.3</code> <code>system</code>   <code>3.7.3</code> <code>system</code>   <code>3.8.0</code> <code>system</code>   <code>3.9.0</code> <code>system</code>   <code>3.9.1</code> <code>system</code>   <code>3.10.1</code> <code>system</code>   <code>3.11.0</code> <code>system</code>   <code>3.11.1</code> <code>system</code>   <code>3.11.2</code> <code>system</code>   <code>3.12.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#regionmask","title":"regionmask","text":"<p>regionmask creates masks of geographical regions. It determines to which geographic region each grid point belongs.</p> <p>homepage: https://regionmask.readthedocs.io</p>    version versionsuffix toolchain     <code>0.9.0</code>  <code>foss/2021b</code>, <code>foss/2022a</code>   <code>0.9.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#regtools","title":"RegTools","text":"<p>RegTools is a set of tools that integrate DNA-seq and RNA-seq data to help interpret mutations in a regulatory and splicing context.</p> <p>homepage: https://regtools.readthedocs.org</p>    version toolchain     <code>0.4.2</code> <code>foss/2020b</code>   <code>0.5.2</code> <code>foss/2020b</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#relate","title":"Relate","text":"<p>Software for estimating genome-wide genealogies for thousands of samples</p> <p>homepage: https://myersgroup.github.io/relate/</p>    version versionsuffix toolchain     <code>20211123</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#relion","title":"RELION","text":"<p>RELION (for REgularised LIkelihood OptimisatioN, pronounce rely-on) is a stand-alone computer  program that employs an empirical Bayesian approach to refinement of (multiple) 3D reconstructions or 2D class  averages in electron cryo-microscopy (cryo-EM).</p> <p>homepage: http://www2.mrc-lmb.cam.ac.uk/relion/index.php/Main_Page</p>    version versionsuffix toolchain     <code>1.4</code>  <code>intel/2016b</code>   <code>1.4</code> <code>-single</code> <code>intel/2016b</code>   <code>2.0.1</code>  <code>intel/2016b</code>   <code>2.1</code>  <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>fosscuda/2018a</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>2.1</code> <code>-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>3.0.4</code>  <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.0_beta.2018.08.02</code>  <code>fosscuda/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#rematch","title":"ReMatCh","text":"<p>Reads mapping against target sequences, checking mapping and consensus sequences production</p> <p>homepage: https://github.com/B-UMMI/ReMatCh</p>    version versionsuffix toolchain     <code>3.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#remora","title":"REMORA","text":"<p>REsource MOnitoring for Remote Applications</p> <p>homepage: https://github.com/TACC/remora</p>    version toolchain     <code>1.8.2</code> <code>foss/2017a</code>, <code>foss/2018a</code>, <code>intel/2017a</code>, <code>intel/2018a</code>   <code>1.8.3</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#renderproto","title":"renderproto","text":"<p>Xrender protocol and ancillary headers</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>0.11</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#repasthpc","title":"RepastHPC","text":"<p>The Repast Suite is a family of advanced, free, and open source agent-based modeling and simulation platforms that have collectively been under continuous development for over 15 years:  Repast for High Performance Computing 2.2.0, released on 30 September 2016, is a lean and expert-focused C++-based  modeling system that is designed for use on large computing clusters and supercomputers.</p> <p>homepage: https://repast.github.io/</p>    version toolchain     <code>2.2.0</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#repeatmasker","title":"RepeatMasker","text":"<p>RepeatMasker is a program that screens DNA sequences for interspersed repeats  and low complexity DNA sequences.</p> <p>homepage: https://www.repeatmasker.org/</p>    version versionsuffix toolchain     <code>4.0.8</code> <code>-Perl-5.26.0-HMMER</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>   <code>4.0.8</code> <code>-Perl-5.28.0-HMMER</code> <code>intel/2018b</code>   <code>4.0.9-p2</code> <code>-HMMER</code> <code>gompi/2019b</code>   <code>4.1.2-p1</code>  <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#repeatmodeler","title":"RepeatModeler","text":"<p>RepeatModeler is a de novo transposable element (TE) family identification and modeling package. </p> <p>homepage: https://www.repeatmasker.org/</p>    version toolchain     <code>2.0.2a</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#repeatscout","title":"RepeatScout","text":"<p>De Novo Repeat Finder, Price A.L., Jones N.C. and Pevzner P.A. Developed and  tested with our multiple sequence version of RepeatScout ( 1.0.6 )</p> <p>homepage: https://www.repeatmasker.org/</p>    version toolchain     <code>1.0.6</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#request","title":"request","text":"<p>Request is designed to be the simplest way possible to make http calls.      It supports HTTPS and follows redirects by default.</p> <p>homepage: https://github.com/request/request/</p>    version versionsuffix toolchain     <code>2.88.1</code> <code>-nodejs-12.19.0</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#requests","title":"requests","text":"<p>Python http for humans</p> <p>homepage: https://pypi.python.org/pypi/requests</p>    version versionsuffix toolchain     <code>2.10.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.10.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>2.11.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.11.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>2.13.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#rerconverge","title":"RERconverge","text":"<p>RERconverge is a set of software written in R that  estimates the correlation between relative evolutionary rates of  genes and the evolution of a convergent binary or continuous trait  across a phylogeny. </p> <p>homepage: https://github.com/nclark-lab/RERconverge</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-R-3.4.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#resolos","title":"resolos","text":"<p>Resolos is a toolkit written in Python for maintaining reproducible environments  for scientific computations. It's main goal is to enable researchers to easily replicate environments through space (running code on HPC environment) and time (environment preservation for long term archival). For installation and detailed usage, check out the documentation.</p> <p>homepage: https://gitlab.unige.ch/resolos/resolos</p>    version toolchain     <code>0.3.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#retworkx","title":"retworkx","text":"<p>retworkx is a general purpose graph library for python3 written in Rust to take advantage of the performance and safety that Rust provides. It was built as a replacement for qiskit's previous (and current) networkx usage (hence the name) but is designed to provide a high performance general purpose graph library for any python application. The project was originally started to build a faster directed graph to use as the underlying data structure for the DAG at the center of qiskit-terra's transpiler, but it has since grown to cover all the graph usage in Qiskit and other applications.</p> <p>homepage: https://github.com/Qiskit/retworkx</p>    version toolchain     <code>0.9.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#revbayes","title":"RevBayes","text":"<p>RevBayes provides an interactive environment for statistical computation in  phylogenetics. It is primarily intended for modeling, simulation, and Bayesian inference in  evolutionary biology, particularly phylogenetics.</p> <p>homepage: https://revbayes.github.io/</p>    version toolchain     <code>1.1.1</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#rgdal","title":"rgdal","text":"<p>Provides bindings to the 'Geospatial' Data Abstraction Library ('GDAL') (&gt;= 1.11.4 and &lt;= 2.5.0) and  access to projection/transformation operations from the 'PROJ.4' library.</p> <p>homepage: https://rgdal.r-forge.r-project.org/</p>    version versionsuffix toolchain     <code>1.4-4</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>1.4-8</code> <code>-R-3.6.2</code> <code>foss/2019b</code>   <code>1.4-8</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>1.5-16</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>1.5-23</code> <code>-R-4.0.4</code> <code>foss/2020b</code>   <code>1.5-23</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#rgeos","title":"rgeos","text":"<p>R interface to Geometry Engine - Open Source (GEOS) using the C API for topology operations  on geometries</p> <p>homepage: https://cran.r-project.org/web/packages/rgeos/</p>    version versionsuffix toolchain     <code>0.3-17</code> <code>-R-3.2.3</code> <code>intel/2016a</code>   <code>0.5-1</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>0.5-2</code> <code>-R-3.6.2</code> <code>foss/2019b</code>   <code>0.5-5</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>0.5-5</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#rgurobi","title":"Rgurobi","text":"<p>Gurobi Optimizer 9.5 interface</p> <p>homepage: https://www.gurobi.com</p>    version versionsuffix toolchain     <code>9.1.2</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>9.5.0</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#rhdf5","title":"rhdf5","text":"<p>This R/Bioconductor package provides an interface between HDF5 and R.</p> <p>homepage: https://bioconductor.org/packages/release/bioc/html/rhdf5.html</p>    version versionsuffix toolchain     <code>2.16.0</code> <code>-R-3.2.3</code> <code>intel/2016a</code>   <code>2.18.0</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#rheotool","title":"RheoTool","text":"<p>RheoTool is an open-source toolbox based on OpenFOAM to simulate Generalized Newtonian Fluids (GNF) and viscoelastic fluids under pressure-driven and/or electrically-driven flows.</p> <p>homepage: https://github.com/fppimenta/rheoTool</p>    version toolchain     <code>5.0</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#rickflow","title":"rickflow","text":"<p>Running and Analyzing OpenMM Jobs</p> <p>homepage: https://gitlab.com/Olllom/rickflow</p>    version versionsuffix toolchain     <code>0.7.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>   <code>0.7.0-20200529</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#rinchi","title":"RInChI","text":"<p>The reaction IUPAC International Chemical Identifier (RInChI TM) is a non-proprietary identifier for chemical reactions that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.</p> <p>homepage: https://www.inchi-trust.org/</p>    version versionsuffix toolchain     <code>1.00</code> <code>-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#rioxarray","title":"rioxarray","text":"<p>geospatial xarray extension powered by rasterio</p> <p>homepage: https://github.com/corteva/rioxarray</p>    version versionsuffix toolchain     <code>0.0.12</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>0.0.24</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.1.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.11.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rising","title":"rising","text":"<p>Provides everything needed for high performance data loading and augmentation in PyTorch.</p> <p>homepage: https://rising.rtfd.io/</p>    version versionsuffix toolchain     <code>0.2.2</code>  <code>foss/2021a</code>, <code>foss/2022a</code>   <code>0.2.2</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.2.2</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#rjags","title":"rjags","text":"<p>The rjags package is an interface to the JAGS library.</p> <p>homepage: https://cran.r-project.org/web/packages/rjags</p>    version versionsuffix toolchain     <code>4-6</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>4-6</code> <code>-R-3.4.3</code> <code>intel/2017b</code>   <code>4-8</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>4-9</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>4-10</code>  <code>foss/2019b</code>   <code>4-10</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>4-10</code> <code>-R-4.0.3</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4-10</code> <code>-R-4.0.4</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4-10</code> <code>-R-4.0.5</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>4-10</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>4-12</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rlcard","title":"RLCard","text":"<p>RLCard is a toolkit for Reinforcement Learning (RL) in card games.</p> <p>homepage: https://www.rlcard.org</p>    version toolchain     <code>1.0.9</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#rmath","title":"Rmath","text":"<p>Rmath is the standalone version of the R math library.  Rmath can be used in your own C/C++ routines.</p> <p>homepage: https://www.r-project.org/</p>    version toolchain     <code>3.3.1</code> <code>intel/2016b</code>   <code>4.0.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#rmats-turbo","title":"rMATS-turbo","text":"<p>rMATS turbo is the C/Cython version of rMATS (refer to http://rnaseq-mats.sourceforge.net).</p> <p>homepage: https://github.com/Xinglab/rmats-turbo</p>    version toolchain     <code>4.1.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#rmblast","title":"RMBlast","text":"<p>RMBlast is a RepeatMasker compatible version of the standard NCBI BLAST suite. The primary  difference between this distribution and the NCBI distribution is the addition of a new program 'rmblastn'  for use with RepeatMasker and RepeatModeler.</p> <p>homepage: http://www.repeatmasker.org/RMBlast.html</p>    version versionsuffix toolchain     <code>2.2.28</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.9.0</code>  <code>gompi/2019b</code>   <code>2.10.0</code>  <code>gompi/2019b</code>   <code>2.11.0</code>  <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#rna-bloom","title":"RNA-Bloom","text":"<p>RNA-Bloom is a fast and memory-efficient de novo transcript sequence assembler.</p> <p>homepage: https://github.com/bcgsc/RNA-Bloom</p>    version toolchain     <code>1.2.3</code> <code>GCC/8.3.0</code>   <code>1.4.3</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#rna-seqc","title":"RNA-SeQC","text":"<p>Fast, efficient RNA-Seq metrics for quality control and process optimization</p> <p>homepage: https://github.com/getzlab/rnaseqc</p>    version versionsuffix toolchain     <code>1.1.8</code> <code>-Java-1.8</code> <code>foss/2018b</code>   <code>1.1.8</code> <code>-Java-1.8.0_121</code> <code>foss/2016b</code>   <code>2.4.2</code>  <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rnaclust","title":"RNAclust","text":"<p>RNAclust is a perl script summarizing all the single steps required for clustering  of structured RNA motifs, i.e. identifying groups of RNA sequences sharing a secondary structure  motif. It requires as input a multiple FASTA file.</p> <p>homepage: http://www.bioinf.uni-leipzig.de/~kristin/Software/RNAclust/</p>    version versionsuffix toolchain     <code>1.3</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>1.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#rnacode","title":"RNAcode","text":"<p>RNAcode - Analyze the protein coding potential in multiple sequence alignments</p> <p>homepage: https://wash.github.io/rnacode/</p>    version toolchain     <code>0.3</code> <code>foss/2017a</code>"},{"location":"version-specific/supported-software/#rnaindel","title":"RNAIndel","text":"<p>RNAIndel calls coding indels and classifies them into somatic, germline,  and artifact from tumor RNA-Seq data.</p> <p>homepage: https://github.com/stjude/RNAIndel</p>    version versionsuffix toolchain     <code>0.3.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>1.0.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#rnammer","title":"RNAmmer","text":"<p>This is an example description.</p> <p>homepage: https://www.cbs.dtu.dk/services/RNAmmer</p>    version versionsuffix toolchain     <code>1.2</code> <code>-Perl-5.28.0</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#rnaquast","title":"rnaQUAST","text":"<p>rnaQUAST is a tool for evaluating RNA-Seq assemblies using reference genome and gene database. In addition, rnaQUAST is also capable of estimating gene database coverage by raw reads and de novo quality assessment using third-party software.</p> <p>homepage: https://cab.spbu.ru/software/rnaquast/</p>    version versionsuffix toolchain     <code>1.5.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>2.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.2.2</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rnaz","title":"RNAz","text":"<p>RNAz is a program for predicting structurally conserved and thermodynamically stable RNA secondary structures in multiple sequence alignments.</p> <p>homepage: http://www.tbi.univie.ac.at/~wash/RNAz/</p>    version toolchain     <code>2.1</code> <code>foss/2016b</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#rnbeads","title":"RnBeads","text":"<p>RnBeads is an R package for comprehensive analysis of DNA methylation data obtained with any experimental protocol that provides single-CpG resolution.</p> <p>homepage: https://rnbeads.org</p>    version versionsuffix toolchain     <code>2.6.0</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#roary","title":"Roary","text":"<p>Rapid large-scale prokaryote pan genome analysis</p> <p>homepage: https://github.com/sanger-pathogens/Roary</p>    version versionsuffix toolchain     <code>3.12.0</code>  <code>system</code>   <code>3.12.0</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>3.13.0</code>  <code>foss/2020a</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#rocm","title":"ROCm","text":"<p>AMD ROCm is the first open-source software development platform for HPC/Hyperscale-class GPU computing. AMD ROCm brings the UNIX philosophy of choice, minimalism and modular software development to GPU computing.</p> <p>homepage: https://rocmdocs.amd.com/en/latest/</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#rocm-cmake","title":"rocm-cmake","text":"<p>ROCM cmake modules provides cmake modules for common build tasks needed for the ROCM software stack</p> <p>homepage: https://github.com/RadeonOpenCompute/rocm-cmake</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#rocm-compilersupport","title":"ROCm-CompilerSupport","text":"<p>The compiler support repository provides various Lightning Compiler related services</p> <p>homepage: https://github.com/RadeonOpenCompute/ROCm-CompilerSupport</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#rocm-smi","title":"rocm-smi","text":"<p>The ROCm System Management Interface Library, or ROCm SMI library, is part of the Radeon Open Compute ROCm software stack. It is a C library for Linux that provides a user space interface for applications to monitor and control GPU applications.</p> <p>homepage: https://github.com/RadeonOpenCompute/rocm_smi_lib</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#rocminfo","title":"rocminfo","text":"<p>ROCm Application for Reporting System Info</p> <p>homepage: https://github.com/RadeonOpenCompute/rocminfo</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#rocr-runtime","title":"ROCR-Runtime","text":"<p>The user-mode API interfaces and libraries necessary for host applications to launch compute kernels to available HSA ROCm kernel agents</p> <p>homepage: https://github.com/RadeonOpenCompute/ROCR-Runtime</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#roct-thunk-interface","title":"ROCT-Thunk-Interface","text":"<p>The user-mode API interfaces used to interact with the ROCk driver</p> <p>homepage: https://github.com/RadeonOpenCompute/ROCT-Thunk-Interface</p>    version toolchain     <code>4.5.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#roi_pac","title":"ROI_PAC","text":"<p>Repeat Orbit Interferometry PACkage (ROI_PAC), software for processing synthetic aperture radar data  to produce differential interferograms</p> <p>homepage: http://roipac.org/</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#rome","title":"ROME","text":"<p>The ROME (Refinement and Optimization via Machine Learning for cryo-EM)  Software package is one of the major research products at the Intel\u00ae PCCSB.</p> <p>homepage: https://ipccsb.dfci.harvard.edu/rome</p>    version toolchain     <code>1.1.2</code> <code>intel/2019.02</code>"},{"location":"version-specific/supported-software/#root","title":"ROOT","text":"<p>The ROOT system provides a set of OO frameworks with all the functionality     needed to handle and analyze large amounts of data in a very efficient way.</p> <p>homepage: http://root.cern.ch/drupal/</p>    version versionsuffix toolchain     <code>6.10.02</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>6.10.04</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>6.10.08</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>6.14.06</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>6.14.06</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>6.20.04</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>6.24.06</code>  <code>foss/2021b</code>   <code>v5.34.34</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>v5.34.36</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>v6.06.02</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>v6.08.02</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#root_numpy","title":"root_numpy","text":"<p>root_numpy is a Python extension module that provides an efficient interface between ROOT and  NumPy. root_numpy\u2019s internals are compiled C++ and can therefore handle large amounts of data much faster than  equivalent pure Python implementations.</p> <p>homepage: https://scikit-hep.org/root_numpy/</p>    version versionsuffix toolchain     <code>4.8.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#rootpy","title":"rootpy","text":"<p>The rootpy project is a community-driven initiative aiming to provide a more pythonic interface with ROOT on top of the existing PyROOT bindings. Given Python\u2019s reflective and dynamic nature, rootpy also aims to improve ROOT design flaws and supplement existing ROOT functionality. The scientific Python community also offers a multitude of powerful packages such as SciPy, NumPy, matplotlib, scikit-learn, and PyTables, but a suitable interface between them and ROOT has been lacking. rootpy provides the interfaces and conversion mechanisms required to liberate your data and to take advantage of these alternatives if needed.</p> <p>homepage: http://www.rootpy.org/</p>    version versionsuffix toolchain     <code>0.8.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.0.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#rosetta","title":"Rosetta","text":"<p>Rosetta is the premier software suite for modeling macromolecular structures. As a flexible, multi-purpose application, it includes tools for structure prediction, design, and remodeling of proteins and nucleic acids.</p> <p>homepage: https://www.rosettacommons.org</p>    version toolchain     <code>3.7</code> <code>foss/2016b</code>   <code>2016.13.58602</code> <code>foss/2016a</code>   <code>2016.46.59086</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#rpmrebuild","title":"rpmrebuild","text":"<p>rpmrebuild is a tool to build an RPM file from a package that has already been     installed in a basic use</p> <p>homepage: http://rpmrebuild.sourceforge.net/</p>    version toolchain     <code>2.11</code> <code>system</code>"},{"location":"version-specific/supported-software/#rpy2","title":"rpy2","text":"<p>rpy2 is an interface to R running embedded in a Python process.</p> <p>homepage: https://rpy2.bitbucket.io/</p>    version versionsuffix toolchain     <code>2.7.9</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>2.8.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.2.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.4.5</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rqgis3","title":"RQGIS3","text":"<p>RQGIS3 establishes an interface between R and QGIS3, i.e.,  it allows the user to access QGIS3 functionalities from within R.</p> <p>homepage: https://github.com/r-spatial/RQGIS3</p>    version versionsuffix toolchain     <code>20190903</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#rsem","title":"RSEM","text":"<p>RNA-Seq by Expectation-Maximization</p> <p>homepage: https://deweylab.github.io/RSEM/</p>    version toolchain     <code>1.2.26</code> <code>GNU/4.9.3-2.25</code>   <code>1.2.30</code> <code>foss/2016a</code>, <code>intel/2016b</code>   <code>1.3.0</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>1.3.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.3.2</code> <code>foss/2018b</code>   <code>1.3.3</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#rseqc","title":"RSeQC","text":"<p>RSeQC provides a number of useful modules that can  comprehensively evaluate high throughput sequence data especially RNA-seq  data. Some basic modules quickly inspect sequence quality, nucleotide  composition bias, PCR bias and GC bias, while RNA-seq specific modules  evaluate sequencing saturation, mapped reads distribution, coverage  uniformity, strand specificity, transcript level RNA integrity etc.</p> <p>homepage: http://rseqc.sourceforge.net/</p>    version versionsuffix toolchain     <code>2.6.4</code> <code>-Python-2.7.12-R-3.3.1</code> <code>foss/2016b</code>   <code>2.6.4</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>3.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.0.0</code>  <code>foss/2021a</code>, <code>foss/2021b</code>   <code>4.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#rstan","title":"RStan","text":"<p>RStan is the R interface to Stan. Stan is a state-of-the-art   platform for statistical modeling and high-performance statistical computation.</p> <p>homepage: https://github.com/stan-dev/rstan</p>    version versionsuffix toolchain     <code>2.18.2</code> <code>-R-3.4.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.18.2</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#rstanarm","title":"rstanarm","text":"<p>Estimates previously compiled regression models using the 'rstan' package, which provides  the R interface to the Stan C++ library for Bayesian estimation.</p> <p>homepage: https://r-forge.r-project.org/projects/rstanarm</p>    version versionsuffix toolchain     <code>2.19.3</code> <code>-R-3.6.2</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#rstudio-server","title":"RStudio-Server","text":"<p>This is the RStudio Server version. RStudio is a set of integrated tools designed to help you be more productive with R.  The server can be started with:   rserver --server-daemonize=0 --www-port=8787  If you need a database config one can be created with:   MYTMP=<code>mktemp -d</code> &amp;&amp; echo -e \"provider=sqlite\\ndirectory=${MYTMP}/sqlite\" &gt; \"${MYTMP}/db.conf\" and then used with:   rserver ... --database-config-file=\"${MYTMP}/db.conf\" </p> <p>homepage: https://www.rstudio.com/</p>    version versionsuffix toolchain     <code>1.2.5033</code> <code>-Java-11</code> <code>fosscuda/2019b</code>   <code>1.2.5042</code> <code>-Java-11</code> <code>foss/2019b</code>   <code>1.3.959</code> <code>-Java-11-R-4.0.0</code> <code>foss/2020a</code>   <code>1.3.1093</code> <code>-Java-11-R-4.0.0</code> <code>foss/2020a</code>   <code>1.4.1717</code> <code>-Java-11-R-4.1.0</code> <code>foss/2021a</code>   <code>2022.07.2+576</code> <code>-Java-11-R-4.2.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#rtg-tools","title":"RTG-Tools","text":"<p>RTG Tools contains utilities to easily manipulate and accurately compare multiple VCF files,  as well as utilities for processing other common NGS data formats. </p> <p>homepage: https://www.realtimegenomics.com/products/rtg-tools</p>    version versionsuffix toolchain     <code>3.9.1</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#rtree","title":"Rtree","text":"<p>Rtree is a ctypes Python wrapper of libspatialindex that provides a number of advanced spatial  indexing features for the spatially curious Python user.</p> <p>homepage: https://toblerity.org/rtree/</p>    version versionsuffix toolchain     <code>0.8.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#ruamelyaml","title":"ruamel.yaml","text":"<p>ruamel.yaml is a YAML 1.2 loader/dumper package for Python.</p> <p>homepage: https://sourceforge.net/projects/ruamel-yaml</p>    version toolchain     <code>0.17.21</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ruby","title":"Ruby","text":"<p>Ruby is a dynamic, open source programming language with  a focus on simplicity and productivity. It has an elegant syntax that is  natural to read and easy to write.</p> <p>homepage: https://www.ruby-lang.org</p>    version toolchain     <code>2.1.6</code> <code>system</code>   <code>2.3.1</code> <code>intel/2016b</code>, <code>system</code>   <code>2.3.3</code> <code>system</code>   <code>2.3.4</code> <code>system</code>   <code>2.4.2</code> <code>foss/2017b</code>   <code>2.5.0</code> <code>foss/2018a</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.5.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.6.1</code> <code>GCCcore/7.3.0</code>   <code>2.6.3</code> <code>GCCcore/8.2.0</code>   <code>2.7.1</code> <code>GCCcore/8.3.0</code>   <code>2.7.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.0.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>3.0.3</code> <code>GCCcore/11.3.0</code>   <code>3.0.5</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ruby-tk","title":"Ruby-Tk","text":"<p>Ruby Tk interface module using tcltklib</p> <p>homepage: https://github.com/ruby/tk</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Ruby-2.5.1</code> <code>foss/2018a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#ruffus","title":"ruffus","text":"<p>Ruffus is a Computation Pipeline library for python. It is open-sourced, powerful and user-friendly,  and widely used in science and bioinformatics.</p> <p>homepage: http://www.ruffus.org.uk/</p>    version toolchain     <code>2.8.4</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#rust","title":"Rust","text":"<p>Rust is a systems programming language that runs blazingly fast, prevents segfaults,  and guarantees thread safety.</p> <p>homepage: https://www.rust-lang.org</p>    version toolchain     <code>1.8.0</code> <code>foss/2016a</code>   <code>1.12.0</code> <code>foss/2016b</code>   <code>1.12.1</code> <code>foss/2016b</code>   <code>1.18.0</code> <code>foss/2017a</code>   <code>1.21.0</code> <code>foss/2017b</code>   <code>1.22.1</code> <code>GCCcore/6.4.0</code>   <code>1.29.2</code> <code>GCCcore/7.3.0</code>   <code>1.30.1</code> <code>GCCcore/6.4.0</code>   <code>1.35.0</code> <code>GCCcore/8.2.0</code>   <code>1.37.0</code> <code>GCCcore/8.3.0</code>   <code>1.42.0</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.52.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>1.54.0</code> <code>GCCcore/11.2.0</code>   <code>1.56.0</code> <code>GCCcore/11.2.0</code>   <code>1.60.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>   <code>1.65.0</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#s","title":"S","text":"<p>S-Lang - S4 - SAGE - Sailfish - SALib - Salmon - SALMON-TDDFT - Sambamba - samblaster - Samcef - samclip - samplot - SAMtools - sansa - SAP - SAS - Satsuma2 - savvy - Saxon-HE - SBCL - sbt - ScaFaCoS - ScaLAPACK - Scalasca - SCALCE - scanpy - SCENIC - scGeneFit - SCGid - Schrodinger - sciClone - ScientificPython - scikit-allel - scikit-bio - scikit-build - scikit-cuda - scikit-image - scikit-learn - scikit-misc - scikit-multilearn - scikit-optimize - scikit-uplift - SCIPhI - scipy - SciPy-bundle - SCnorm - Scoary - SCons - SCOOP - SCopeLoomR - Score-P - SCOTCH - scp - scPred - Scrappie - scVelo - scvi-tools - Scythe - SDCC - SDL - SDL2 - SDL2_image - SDL_image - SDSL - Seaborn - SearchGUI - SECAPR - Seeder - segemehl - segmentation-models - SeisSol - SelEstim - SELFIES - SentencePiece - sep - SEPP - Seq-Gen - seq2HLA - SeqAn - SeqAn3 - SeqKit - SeqLib - Seqmagick - SeqPrep - seqtk - Serf - setuptools - Seurat - SeuratData - SeuratDisk - SeuratWrappers - sf - sfftk - Shannon - SHAP - shapAAR - SHAPEIT - SHAPEIT4 - Shapely - sharutils - Shasta - ShengBTE - shift - SHORE - Short-Pair - shovill - shrinkwrap - SHTns - Sibelia - SICER2 - sickle - Siesta - SignalP - silx - simint - SimNIBS - SimPEG - SIMPLE - SimpleElastix - SimpleITK - simpy - SimVascular - SingleM - Singular - SiNVICT - SIONlib - SIP - SISSO - SISSO++ - SKESA - sketchmap - skewer - sklearn-pandas - sklearn-som - skorch - SlamDunk - slamdunk - SLATEC - SLEPc - slepc4py - sleuth - slidingwindow - SLiM - slow5tools - smafa - smallgenomeutilities - SMARTdenovo - SMC++ - smithwaterman - Smoldyn - smooth-topk - SMRT-Link - SMV - snakemake - SNAP - SNAP-HMM - SNAPE-pooled - snaphu - snappy - snippy - snp-sites - snpEff - SNPhylo - SNPomatic - SOAPaligner - SOAPdenovo-Trans - SOAPdenovo2 - SOAPfuse - socat - SOCI - SolexaQA++ - sonic - SoQt - SortMeRNA - SoX - SoXt - SpaceRanger - Spack - spaCy - SPAdes - spaln - Spark - sparsehash - spatialreg - spdlog - SpectrA - spectral.methods - speech_tools - spglib - spglib-python - Sphinx - Sphinx-RTD-Theme - SpiceyPy - SpiecEasi - SplAdder - SPLASH - SpliceMap - split-seq - splitRef - SPM - spoa - SPOOLES - SPOTPY - SPRNG - Spyder - SQLite - SqueezeMeta - Squidpy - SRA-Toolkit - SRPRISM - SRST2 - SSAHA2 - SSN - SSPACE_Basic - SSW - STACEY - Stack - Stacks - STAMP - StaMPS - Stampy - STAR - STAR-CCM+ - STAR-Fusion - stars - Stata - Statistics-R - statsmodels - STEAK - STIR - stpipeline - STREAM - strelka - StringTie - stripy - STRique - Structure - STRUMPACK - suave - Subread - Subversion - suds - SuiteSparse - SUMACLUST - SUMATRA - SUMO - SUNDIALS - SunPy - SuperLU - SuperLU_DIST - supermagic - supernova - SURVIVOR - SVDetect - SVDquest - SVG - svist4get - swarm - SWASH - SWAT+ - swifter - SWIG - SWIPE - swissknife - SymEngine - SymEngine-python - SYMPHONY - sympy - SyRI - Szip</p>"},{"location":"version-specific/supported-software/#s-lang","title":"S-Lang","text":"<p>S-Lang is a multi-platform programmer's library designed to allow  a developer to create robust multi-platform software. It provides facilities  required by interactive applications such as display/screen management, keyboard  input, keymaps, and so on.</p> <p>homepage: http://www.jedsoft.org/slang/</p>    version toolchain     <code>2.3.0</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#s4","title":"S4","text":"<p>S4 stands for Stanford Stratified Structure Solver, a frequency domain code  to solve the linear Maxwell\u2019s equations in layered periodic structures. Internally, it uses  Rigorous Coupled Wave Analysis (RCWA, also called the Fourier Modal Method (FMM)) and the  S-matrix algorithm.</p> <p>homepage: https://web.stanford.edu/group/fan/S4</p>    version toolchain     <code>1.1.1-20180610</code> <code>foss/2017b</code>"},{"location":"version-specific/supported-software/#sage","title":"SAGE","text":"<p>S.A.G.E. (Statistical Analysis for Genetic  Epidemiology) is free software package containing programs for  use in the genetic analysis of family, pedigree and individual data.</p> <p>homepage: http://darwin.cwru.edu/sage/</p>    version toolchain     <code>6.3</code> <code>system</code>   <code>6.4</code> <code>system</code>"},{"location":"version-specific/supported-software/#sailfish","title":"Sailfish","text":"<p>Sailfish is a software tool that implements a novel, alignment-free algorithm for the estimation of  isoform abundances directly from a set of reference sequences and RNA-seq reads. </p> <p>homepage: http://www.cs.cmu.edu/~ckingsf/software/sailfish/</p>    version versionsuffix toolchain     <code>0.10.1</code>  <code>gompi/2019b</code>   <code>0.10.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#salib","title":"SALib","text":"<p>Sensitivity Analysis Library in Python (Numpy). Contains Sobol, Morris, Fractional Factorial and FAST methods.</p> <p>homepage: https://SALib.github.io/SALib/</p>    version versionsuffix toolchain     <code>1.1.3</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#salmon","title":"Salmon","text":"<p>Salmon is a wicked-fast program to produce a highly-accurate,  transcript-level quantification estimates from RNA-seq data.</p> <p>homepage: https://github.com/COMBINE-lab/salmon</p>    version versionsuffix toolchain     <code>0.8.2</code>  <code>system</code>   <code>0.8.2</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>   <code>0.11.2</code>  <code>intel/2018a</code>   <code>0.12.0</code>  <code>foss/2018b</code>   <code>0.14.1</code>  <code>foss/2018b</code>   <code>0.14.2</code>  <code>gompi/2019a</code>   <code>1.0.0</code>  <code>gompi/2019a</code>, <code>gompi/2019b</code>   <code>1.1.0</code>  <code>gompi/2019b</code>   <code>1.2.0</code>  <code>gompi/2019b</code>   <code>1.3.0</code>  <code>gompi/2020a</code>   <code>1.4.0</code>  <code>GCC/11.2.0</code>, <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#salmon-tddft","title":"SALMON-TDDFT","text":"<p>SALMON is an open-source computer program for ab-initio quantum-mechanical calculations of  electron dynamics at the nanoscale that takes place in various situations of light-matter interactions.  It is based on time-dependent density functional theory, solving time-dependent Kohn-Sham equation in  real time and real space with norm-conserving pseudopotentials.</p> <p>homepage: https://salmon-tddft.jp</p>    version toolchain     <code>1.2.1</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#sambamba","title":"Sambamba","text":"<p>Sambamba is a high performance modern robust and fast tool  (and library), written in the D programming language, for working with SAM  and BAM files. Current functionality is an important subset of samtools  functionality, including view, index, sort, markdup, and depth.</p> <p>homepage: https://lomereiter.github.io/sambamba/</p>    version toolchain     <code>0.6.6</code> <code>system</code>   <code>0.7.1</code> <code>system</code>   <code>0.8.0</code> <code>GCC/10.2.0</code>   <code>0.8.2</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#samblaster","title":"samblaster","text":"<p>samblaster is a fast and flexible program for marking  duplicates in read-id grouped1 paired-end SAM files.</p> <p>homepage: https://github.com/GregoryFaust/samblaster</p>    version toolchain     <code>0.1.24</code> <code>foss/2018b</code>   <code>0.1.26</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#samcef","title":"Samcef","text":"<p>FEM solver solution suite for basic linear structures to advanced, flexible nonlinear mechanisms and  thermal applications.</p> <p>homepage: http://www.plm.automation.siemens.com/en_us/products/lms/samtech/samcef-solver-suite/</p>    version toolchain     <code>17.0-03</code> <code>system</code>"},{"location":"version-specific/supported-software/#samclip","title":"samclip","text":"<p>Filter SAM file for soft and hard clipped alignments.</p> <p>homepage: https://github.com/tseemann/samclip</p>    version versionsuffix toolchain     <code>0.2</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>   <code>0.4.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#samplot","title":"samplot","text":"<p>Plot structural variant signals from many BAMs and CRAMs. </p> <p>homepage: https://github.com/ryanlayer/samplot</p>    version toolchain     <code>1.3.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#samtools","title":"SAMtools","text":"<p>SAM Tools provide various utilities for manipulating alignments in the SAM format,   including sorting, merging, indexing and generating alignments in a per-position format.</p> <p>homepage: http://www.htslib.org/</p>    version versionsuffix toolchain     <code>0.1.17</code>  <code>intel/2017a</code>   <code>0.1.19</code>  <code>GCC/10.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>   <code>0.1.20</code>  <code>GCC/8.3.0</code>, <code>foss/2018b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>intel/2019b</code>   <code>1.2</code>  <code>foss/2016b</code>   <code>1.3</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.3.1</code> <code>-HTSlib-1.3.2</code> <code>intel/2016b</code>   <code>1.4</code>  <code>foss/2016b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.4.1</code>  <code>intel/2017a</code>   <code>1.5</code>  <code>foss/2016b</code>, <code>intel/2017a</code>   <code>1.6</code>  <code>GCC/6.4.0-2.28</code>, <code>foss/2017a</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>intel/2017b</code>   <code>1.7</code>  <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.8</code>  <code>intel/2018a</code>   <code>1.9</code>  <code>GCC/6.4.0-2.28</code>, <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>, <code>intel/2018b</code>   <code>1.10</code>  <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.5.281</code>   <code>1.11</code>  <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2020.4.304</code>   <code>1.12</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/9.3.0</code>   <code>1.13</code>  <code>GCC/10.3.0</code>, <code>GCC/11.3.0</code>   <code>1.14</code>  <code>GCC/11.2.0</code>   <code>1.15</code>  <code>GCC/11.2.0</code>   <code>1.15.1</code>  <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>   <code>1.16.1</code>  <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#sansa","title":"sansa","text":"<p>Structural variant (SV) annotation, a companion to the 'dolly' tool.</p> <p>homepage: https://github.com/dellytools/sansa/</p>    version toolchain     <code>0.0.7</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#sap","title":"SAP","text":"<p>SAP is a pairwise structure alignment via double dynamic programming</p> <p>homepage: https://github.com/mathbio-nimr-mrc-ac-uk/SAP</p>    version toolchain     <code>1.1.3</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#sas","title":"SAS","text":"<p>SAS is a software suite for advanced analytics, multivariate analyses, business intelligence,  data management, and predictive analytics.</p> <p>homepage: https://www.sas.com</p>    version toolchain     <code>9.4</code> <code>system</code>"},{"location":"version-specific/supported-software/#satsuma2","title":"Satsuma2","text":"<p>Satsuma2 is an optimised version of Satsuma, a tool to reliably align large and complex DNA sequences providing maximum sensitivity (to find all there is to find), specificity (to only find real homology) and speed (to accommodate the billions of base pairs in vertebrate genomes).</p> <p>homepage: https://github.com/bioinfologics/satsuma2</p>    version toolchain     <code>20220304</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#savvy","title":"savvy","text":"<p>Interface to various variant calling formats.</p> <p>homepage: https://github.com/statgen/savvy</p>    version toolchain     <code>1.3.0</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#saxon-he","title":"Saxon-HE","text":"<p>Open Source SAXON XSLT processor developed by Saxonica Limited.</p> <p>homepage: http://saxon.sourceforge.net</p>    version versionsuffix toolchain     <code>9.7.0.4</code> <code>-Java-1.7.0_79</code> <code>system</code>   <code>9.7.0.21</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>9.9.1.7</code> <code>-Java-13</code> <code>system</code>"},{"location":"version-specific/supported-software/#sbcl","title":"SBCL","text":"<p>Steel Bank Common Lisp (SBCL) is a high performance Common Lisp compiler. It is open source / free software, with a permissive license. In addition to the compiler and runtime system for ANSI Common Lisp, it provides an interactive environment including a debugger, a statistical profiler, a code coverage tool, and many other extensions.</p> <p>homepage: http://sbcl.sourceforge.net/</p>    version toolchain     <code>2.0.9</code> <code>GCCcore/9.3.0</code>   <code>2.2.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#sbt","title":"sbt","text":"<p>sbt is a build tool for Scala, Java, and more.</p> <p>homepage: http://www.scala-sbt.org/</p>    version versionsuffix toolchain     <code>1.0.2</code> <code>-Java-1.8.0_152</code> <code>system</code>   <code>1.3.13</code> <code>-Java-1.8</code> <code>system</code>"},{"location":"version-specific/supported-software/#scafacos","title":"ScaFaCoS","text":"<p>ScaFaCoS is a library of scalable fast coulomb solvers.</p> <p>homepage: http://www.scafacos.de/</p>    version toolchain     <code>1.0.1</code> <code>foss/2020a</code>, <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#scalapack","title":"ScaLAPACK","text":"<p>The ScaLAPACK (or Scalable LAPACK) library includes a subset of LAPACK routines  redesigned for distributed memory MIMD parallel computers.</p> <p>homepage: https://www.netlib.org/scalapack/</p>    version versionsuffix toolchain     <code>2.0.2</code>  <code>gompi/2019b</code>, <code>gompic/2019b</code>   <code>2.0.2</code> <code>-BLIS-0.3.2</code> <code>gompi/2018b</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.13-LAPACK-3.5.0</code> <code>gmvapich2/1.7.20</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.15-LAPACK-3.6.0</code> <code>gmpich/2016a</code>, <code>gmvapich2/2016a</code>, <code>gompi/2016a</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.18-LAPACK-3.6.0</code> <code>gompi/2016.04</code>, <code>gompi/2016.06</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.18-LAPACK-3.6.1</code> <code>gompi/2016.07</code>, <code>gompi/2016b</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.19-LAPACK-3.6.1</code> <code>gompi/2016.09</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.19-LAPACK-3.7.0</code> <code>gompi/2017a</code>   <code>2.0.2</code> <code>-OpenBLAS-0.2.20</code> <code>gimpi/2017b</code>, <code>gimpi/2018a</code>, <code>gimpic/2017b</code>, <code>gmpich/2017.08</code>, <code>gompi/2017b</code>, <code>gompi/2018a</code>, <code>gompic/2017b</code>, <code>gompic/2018a</code>   <code>2.0.2</code> <code>-OpenBLAS-0.3.1</code> <code>gompi/2018b</code>, <code>gompic/2018b</code>   <code>2.0.2</code> <code>-OpenBLAS-0.3.3</code> <code>gompi/2018.08</code>   <code>2.0.2</code> <code>-OpenBLAS-0.3.5</code> <code>gompi/2019a</code>, <code>gompic/2019a</code>   <code>2.1.0</code>  <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompic/2020a</code>, <code>gompic/2020b</code>   <code>2.1.0</code> <code>-bf</code> <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>iimpi/2020b</code>   <code>2.1.0</code> <code>-bl</code> <code>gompi/2020b</code>   <code>2.1.0</code> <code>-fb</code> <code>gompi/2021a</code>, <code>gompi/2021b</code>   <code>2.2</code> <code>-amd</code> <code>gompi/2020a</code>   <code>2.2.0</code> <code>-fb</code> <code>gompi/2022.05</code>, <code>gompi/2022.10</code>, <code>gompi/2022a</code>, <code>gompi/2022b</code>"},{"location":"version-specific/supported-software/#scalasca","title":"Scalasca","text":"<p>Scalasca is a software tool that supports the performance optimization of  parallel programs by measuring and analyzing their runtime behavior. The  analysis identifies potential performance bottlenecks -- in particular  those concerning communication and synchronization -- and offers guidance  in exploring their causes. </p> <p>homepage: https://www.scalasca.org/</p>    version toolchain     <code>2.3</code> <code>foss/2016a</code>   <code>2.5</code> <code>gompi/2019a</code>, <code>gompi/2020a</code>   <code>2.6</code> <code>gompi/2021a</code>, <code>gompic/2020b</code>"},{"location":"version-specific/supported-software/#scalce","title":"SCALCE","text":"<p>SCALCE [ske\u026alz] is a FASTQ compression tool that uses locally consistet parsing  to obtain better compression rate. SCALCE has been specifically designed for Illumina reads but it can  handle other technologies (that generate base pair reads) if the read length is the same throughout the file.</p> <p>homepage: http://scalce.sourceforge.net/Home</p>    version toolchain     <code>2.7</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#scanpy","title":"scanpy","text":"<p>Scanpy is a scalable toolkit for analyzing single-cell gene expression data built  jointly with anndata. It includes preprocessing, visualization, clustering, trajectory inference  and differential expression testing. The Python-based implementation efficiently deals with  datasets of more than one million cells. </p> <p>homepage: https://scanpy.readthedocs.io/en/stable/</p>    version toolchain     <code>1.7.2</code> <code>foss/2020b</code>   <code>1.8.1</code> <code>foss/2020b</code>, <code>foss/2021a</code>   <code>1.8.2</code> <code>foss/2021b</code>   <code>1.9.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#scenic","title":"SCENIC","text":"<p>SCENIC Suite is a set of tools to study and decipher gene regulation.</p> <p>homepage: https://scenic.aertslab.org</p>    version versionsuffix toolchain     <code>1.2.4</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scgenefit","title":"scGeneFit","text":"<p>Python code for genetic marker selection using linear programming.</p> <p>homepage: https://github.com/solevillar/scGeneFit-python</p>    version toolchain     <code>1.0.2</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scgid","title":"SCGid","text":"<p>A consensus approach to contig filtering and genome prediction from single-cell sequencing libraries</p> <p>homepage: https://github.com/amsesk/SCGid</p>    version toolchain     <code>0.9b0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#schrodinger","title":"Schrodinger","text":"<p>Schrodinger aims to provide integrated software solutions and services   that truly meet its customers needs. We want to empower researchers around the world to   achieve their goals of improving human health and quality of life through advanced computational   techniques that transform the way chemists design compounds and materials. </p> <p>homepage: https://www.schrodinger.com/</p>    version toolchain     <code>2020-4</code> <code>system</code>   <code>2021-4</code> <code>system</code>   <code>2022-1</code> <code>system</code>   <code>2022-2</code> <code>system</code>   <code>2022-3</code> <code>system</code>"},{"location":"version-specific/supported-software/#sciclone","title":"sciClone","text":"<p>An R package for inferring the subclonal architecture of tumors </p> <p>homepage: https://github.com/genome/sciclone</p>    version versionsuffix toolchain     <code>1.1</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#scientificpython","title":"ScientificPython","text":"<p>ScientificPython is a collection of Python modules for scientific computing.  It contains support for geometry, mathematical functions, statistics, physical units, IO, visualization,  and parallelization.</p> <p>homepage: http://dirac.cnrs-orleans.fr/ScientificPython</p>    version versionsuffix toolchain     <code>2.9.4</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#scikit-allel","title":"scikit-allel","text":"<p>This package provides utilities for exploratory analysis of large scale genetic variation data.  It is based on numpy, scipy and other general-purpose Python scientific libraries.</p> <p>homepage: https://scikit-allel.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>1.1.8</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>1.2.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.3.2</code>  <code>foss/2020b</code>   <code>1.3.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scikit-bio","title":"scikit-bio","text":"<p>scikit-bio is an open-source, BSD-licensed Python 3 package providing data structures, algorithms and educational resources for bioinformatics.</p> <p>homepage: http://scikit-bio.org</p>    version versionsuffix toolchain     <code>0.5.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.5.7</code>  <code>foss/2020b</code>, <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#scikit-build","title":"scikit-build","text":"<p>Scikit-Build, or skbuild, is an improved build system generator for CPython C/C++/Fortran/Cython extensions.</p> <p>homepage: https://scikit-build.readthedocs.io/en/latest</p>    version versionsuffix toolchain     <code>0.10.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.10.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>0.11.1</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>0.15.0</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#scikit-cuda","title":"scikit-cuda","text":"<p>SciKit-cuda, a.k.a. skcuda, provides Python interfaces to many of the functions in the CUDA  device/runtime, CUBLAS, CUFFT, and CUSOLVER libraries distributed as part of NVIDIA's CUDA Programming Toolkit.</p> <p>homepage: https://github.com/lebedov/scikit-cuda</p>    version versionsuffix toolchain     <code>0.5.3</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#scikit-image","title":"scikit-image","text":"<p>scikit-image is a collection of algorithms for image processing.</p> <p>homepage: https://scikit-image.org/</p>    version versionsuffix toolchain     <code>0.12.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.12.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.12.3</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.13.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.13.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.13.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>0.13.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.13.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>0.13.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>0.14.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.14.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>0.15.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.16.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>0.17.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.18.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>0.18.3</code>  <code>foss/2021a</code>   <code>0.19.1</code>  <code>foss/2021b</code>   <code>0.19.3</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#scikit-learn","title":"scikit-learn","text":"<p>Scikit-learn integrates machine learning algorithms in the tightly-knit scientific Python world, building upon numpy, scipy, and matplotlib. As a machine-learning module, it provides versatile tools for data mining and analysis in any field of science and engineering. It strives to be simple and efficient, accessible to everybody, and reusable in various contexts.</p> <p>homepage: https://scikit-learn.org/stable/index.html</p>    version versionsuffix toolchain     <code>0.16.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>0.17.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.17.1</code> <code>-Python-2.7.11-freetype-2.6.3</code> <code>intel/2016a</code>   <code>0.17.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.17.1</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.18</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.18</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.18.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.18.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.18.1</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.18.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.18.2</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.19.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.19.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>0.19.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.19.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.19.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.20.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.20.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>0.20.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.20.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.20.3</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>   <code>0.20.4</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>0.20.4</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>0.21.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>0.23.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>, <code>intelcuda/2020a</code>   <code>0.23.2</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>0.24.2</code>  <code>foss/2021a</code>, <code>intel/2021a</code>   <code>1.0.1</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>1.0.2</code>  <code>foss/2021b</code>   <code>1.1.2</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#scikit-misc","title":"scikit-misc","text":"<p>Miscellaneous tools for data analysis and scientific computing</p> <p>homepage: https://github.com/has2k1/scikit-misc</p>    version toolchain     <code>0.1.4</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scikit-multilearn","title":"scikit-multilearn","text":"<p>Scikit-multilearn is a BSD-licensed library for multi-label classification that is built on top of the well-known scikit-learn ecosystem.</p> <p>homepage: http://scikit.ml</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#scikit-optimize","title":"scikit-optimize","text":"<p>Scikit-Optimize, or skopt, is a simple and efficient library to minimize (very) expensive  and noisy black-box functions.</p> <p>homepage: https://scikit-optimize.github.io</p>    version versionsuffix toolchain     <code>0.5.2</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.7.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.8.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.9.0</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scikit-uplift","title":"scikit-uplift","text":"<p>scikit-uplift is a Python module for classic approaches for uplift modeling built on top of scikit-learn. Uplift prediction aims to estimate the causal impact of a treatment at the individual level. </p> <p>homepage: https://github.com/maks-sh/scikit-uplift</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#sciphi","title":"SCIPhI","text":"<p>Single-cell mutation identification via phylogenetic inference (SCIPhI) is a new approach  to mutation detection in individual tumor cells by leveraging the evolutionary relationship among cells.</p> <p>homepage: https://github.com/cbg-ethz/SCIPhI</p>    version toolchain     <code>0.1.3</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#scipy","title":"scipy","text":"<p>SciPy is a collection of mathematical algorithms and convenience  functions built on the Numpy extension for Python.</p> <p>homepage: https://www.scipy.org</p>    version versionsuffix toolchain     <code>0.16.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.17.0</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.19.0</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.4.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#scipy-bundle","title":"SciPy-bundle","text":"<p>Bundle of Python packages for scientific software</p> <p>homepage: https://python.org/</p>    version versionsuffix toolchain     <code>2019.03</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>, <code>intel/2019a</code>, <code>intelcuda/2019a</code>   <code>2019.10</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>2019.10</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>2019.10</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>, <code>intelcuda/2019b</code>   <code>2020.03</code> <code>-Python-2.7.18</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>   <code>2020.03</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>, <code>intelcuda/2020a</code>   <code>2020.11</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intelcuda/2020b</code>   <code>2020.11</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>2021.05</code>  <code>foss/2021a</code>, <code>gomkl/2021a</code>, <code>intel/2021a</code>   <code>2021.10</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>2021.10</code> <code>-Python-2.7.18</code> <code>foss/2021b</code>   <code>2022.05</code>  <code>foss/2022.05</code>, <code>foss/2022a</code>, <code>intel/2022.05</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#scnorm","title":"SCnorm","text":"<p>This package implements SCnorm \u2014 a method to normalize single-cell RNA-seq data.</p> <p>homepage: https://bioconductor.org/packages/SCnorm</p>    version versionsuffix toolchain     <code>0.99.7</code> <code>-R-3.4.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#scoary","title":"Scoary","text":"<p>Microbial pan-GWAS using the output from Roary</p> <p>homepage: https://github.com/AdmiralenOla/Scoary</p>    version versionsuffix toolchain     <code>1.6.16</code>  <code>foss/2021a</code>   <code>1.6.16</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#scons","title":"SCons","text":"<p>SCons is a software construction tool.</p> <p>homepage: https://www.scons.org/</p>    version versionsuffix toolchain     <code>2.4.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>2.5.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.5.1</code>  <code>intel/2017a</code>   <code>2.5.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.5.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.0.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>3.0.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>3.0.1</code> <code>-Python-2.7.15-bare</code> <code>GCCcore/7.3.0</code>   <code>3.0.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>3.0.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>3.0.4</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>3.0.5</code>  <code>GCCcore/8.2.0</code>   <code>3.0.5</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>   <code>3.0.5</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>3.1.1</code>  <code>GCCcore/8.3.0</code>   <code>3.1.2</code>  <code>GCCcore/9.3.0</code>   <code>4.0.1</code>  <code>GCCcore/10.2.0</code>   <code>4.1.0.post1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>4.2.0</code>  <code>GCCcore/11.2.0</code>   <code>4.4.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#scoop","title":"SCOOP","text":"<p>SCOOP (Scalable COncurrent Operations in Python) is a distributed task module  allowing concurrent parallel programming on various environments, from heterogeneous grids to supercomputers.</p> <p>homepage: http://code.google.com/p/scoop/</p>    version versionsuffix toolchain     <code>0.6.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.7.1.1</code>  <code>GCCcore/8.2.0</code>   <code>0.7.1.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.7.1.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.7.1.1</code> <code>-Python-3.5.1</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#scopeloomr","title":"SCopeLoomR","text":"<p>An R package (compatible with SCope) to create generic .loom files and extend them with other data e.g.: SCENIC regulons, Seurat clusters and markers, ...</p> <p>homepage: https://github.com/aertslab/SCopeLoomR</p>    version versionsuffix toolchain     <code>0.13.0</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#score-p","title":"Score-P","text":"<p>The Score-P measurement infrastructure is a highly scalable and easy-to-use  tool suite for profiling, event tracing, and online analysis of HPC  applications. </p> <p>homepage: https://www.score-p.org</p>    version versionsuffix toolchain     <code>2.0.1</code>  <code>foss/2016a</code>   <code>6.0</code>  <code>gompi/2019a</code>, <code>gompi/2020a</code>, <code>gompic/2019b</code>   <code>7.0</code>  <code>gompi/2021a</code>, <code>gompic/2020b</code>   <code>7.1</code> <code>-CUDA-11.3.1</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#scotch","title":"SCOTCH","text":"<p>Software package and libraries for sequential and parallel graph partitioning, static mapping, and sparse matrix block ordering, and sequential mesh and hypergraph partitioning.</p> <p>homepage: https://www.labri.fr/perso/pelegrin/scotch/</p>    version versionsuffix toolchain     <code>5.1.12b_esmumps</code>  <code>foss/2017b</code>   <code>6.0.4</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>6.0.4</code> <code>-64bitint</code> <code>foss/2017b</code>   <code>6.0.6</code>  <code>foss/2018a</code>, <code>foss/2018b</code>, <code>gompi/2019a</code>, <code>iimpi/2019a</code>, <code>intel/2018a</code>   <code>6.0.9</code>  <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>iimpi/2019b</code>, <code>iimpi/2020a</code>, <code>iimpic/2019b</code>   <code>6.1.0</code>  <code>gompi/2020b</code>, <code>gompi/2021a</code>, <code>iimpi/2020b</code>, <code>iimpi/2021a</code>   <code>6.1.2</code>  <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>7.0.1</code>  <code>gompi/2022a</code>, <code>iimpi/2022a</code>"},{"location":"version-specific/supported-software/#scp","title":"scp","text":"<p>The scp.py module uses a paramiko transport to send and recieve files via the scp1 protocol.</p> <p>homepage: https://github.com/jbardin/scp.py</p>    version versionsuffix toolchain     <code>0.10.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.13.1</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>0.13.2</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#scpred","title":"scPred","text":"<p>scPred package for cell type prediction from scRNA-seq data </p> <p>homepage: https://github.com/powellgenomicslab/scPred</p>    version versionsuffix toolchain     <code>1.9.2</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#scrappie","title":"Scrappie","text":"<p>Scrappie is a technology demonstrator for the Oxford Nanopore Research Algorithms group.</p> <p>homepage: https://github.com/nanoporetech/scrappie</p>    version toolchain     <code>1.3.2</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#scvelo","title":"scVelo","text":"<p>scVelo is a scalable toolkit for estimating and analyzing RNA velocities in single cells using  dynamical modeling.</p> <p>homepage: https://scvelo.org</p>    version versionsuffix toolchain     <code>0.1.24</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.2.3</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scvi-tools","title":"scvi-tools","text":"<p>scvi-tools (single-cell variational inference tools) is a package for probabilistic modeling and analysis of single-cell omics data, built on top of PyTorch and AnnData.</p> <p>homepage: https://github.com/scverse/scvi-tools</p>    version versionsuffix toolchain     <code>0.16.4</code>  <code>foss/2021a</code>   <code>0.16.4</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#scythe","title":"Scythe","text":"<p>Scythe uses a Naive Bayesian approach to classify contaminant substrings in  sequence reads. It considers quality information, which can make it robust in  picking out 3'-end adapters, which often include poor quality bases. </p> <p>homepage: https://github.com/ucdavis-bioinformatics/scythe</p>    version toolchain     <code>0.994</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#sdcc","title":"SDCC","text":"<p>SDCC is a retargettable, optimizing ANSI - C compiler suite that targets  the Intel MCS51 based microprocessors (8031, 8032, 8051, 8052, etc.), Maxim (formerly Dallas)  DS80C390 variants, Freescale (formerly Motorola) HC08 based (hc08, s08) and Zilog Z80 based  MCUs (z80, z180, gbz80, Rabbit 2000/3000, Rabbit 3000A). Work is in progress on supporting the  Microchip PIC16 and PIC18 targets. It can be retargeted for other microprocessors.</p> <p>homepage: http://sdcc.sourceforge.net/</p>    version toolchain     <code>3.3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#sdl","title":"SDL","text":"<p>SDL: Simple DirectMedia Layer, a cross-platform multimedia library</p> <p>homepage: https://www.libsdl.org/</p>    version toolchain     <code>1.2.15</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#sdl2","title":"SDL2","text":"<p>SDL: Simple DirectMedia Layer, a cross-platform multimedia library</p> <p>homepage: http://www.libsdl.org/</p>    version toolchain     <code>2.0.4</code> <code>intel/2016b</code>   <code>2.0.8</code> <code>GCCcore/6.4.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>2.0.9</code> <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.0.10</code> <code>GCCcore/8.3.0</code>   <code>2.0.14</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.0.20</code> <code>GCCcore/11.2.0</code>   <code>2.0.22</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#sdl2_image","title":"SDL2_image","text":"<p>SDL_image is an image file loading library.</p> <p>homepage: https://www.libsdl.org/projects/SDL_image/</p>    version toolchain     <code>2.0.3</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#sdl_image","title":"SDL_image","text":"<p>SDL_image is an image file loading library.</p> <p>homepage: https://www.libsdl.org/projects/SDL_image/release-1.2.html</p>    version toolchain     <code>1.2.12</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#sdsl","title":"SDSL","text":"<p>The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11 library implementing  succinct data structures.</p> <p>homepage: https://github.com/simongog/sdsl-lite</p>    version toolchain     <code>2.1.1-20191211</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#seaborn","title":"Seaborn","text":"<p>Seaborn is a Python visualization library based on matplotlib.  It provides a high-level interface for drawing attractive statistical graphics. </p> <p>homepage: https://seaborn.pydata.org/</p>    version versionsuffix toolchain     <code>0.7.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.8.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>0.8.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>0.9.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intelcuda/2017b</code>   <code>0.9.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>foss/2019a</code>, <code>intel/2018b</code>, <code>intel/2019a</code>   <code>0.9.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.9.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.9.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.9.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>0.9.1</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>0.9.1</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>   <code>0.10.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>0.10.1</code>  <code>intel/2020b</code>   <code>0.10.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>0.11.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>0.11.2</code>  <code>foss/2021a</code>, <code>foss/2021b</code>   <code>0.12.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#searchgui","title":"SearchGUI","text":"<p>SearchGUI is a user-friendly open-source graphical user interface for configuring and  running proteomics identification search engines and de novo sequencing algorithms,  currently supporting X! Tandem, MS-GF+, MS Amanda, MyriMatch, Comet, Tide, Andromeda, OMSSA,  Novor and DirecTag.</p> <p>homepage: https://github.com/compomics/searchgui</p>    version versionsuffix toolchain     <code>3.3.3</code> <code>-Java-1.8.0_152</code> <code>system</code>"},{"location":"version-specific/supported-software/#secapr","title":"SECAPR","text":"<p>SECAPR is a bioinformatics pipeline for the rapid and user-friendly processing of targeted enriched Illumina sequences, from raw reads to alignments</p> <p>homepage: https://github.com/AntonelliLab/seqcap_processor</p>    version versionsuffix toolchain     <code>1.1.15</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#seeder","title":"Seeder","text":"<p>Seeder is a framework for DNA motif discovery.</p> <p>homepage: https://metacpan.org/pod/Seeder</p>    version versionsuffix toolchain     <code>0.01</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#segemehl","title":"segemehl","text":"<p>segemehl is a software to map short sequencer reads to reference genomes.   Unlike other methods, segemehl is able to detect not only mismatches but also insertions   and deletions. Furthermore, segemehl is not limited to a specific read length and is able   to mapprimer- or polyadenylation contaminated reads correctly. segemehl implements a matching   strategy based on enhanced suffix arrays (ESA). Segemehl now supports the SAM format, reads   gziped queries to save both disk and memory space and allows bisulfite sequencing mapping   and split read mapping. </p> <p>homepage: http://www.bioinf.uni-leipzig.de/Software/segemehl/</p>    version toolchain     <code>0.2.0</code> <code>foss/2016b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>0.3.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.3.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#segmentation-models","title":"segmentation-models","text":"<p>Python library with Neural Networks for Image Segmentation based on Keras and TensorFlow.</p> <p>homepage: https://github.com/qubvel/segmentation_models</p>    version versionsuffix toolchain     <code>1.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#seissol","title":"SeisSol","text":"<p>SeisSol is a software package for simulating wave propagation and dynamic rupture based on  the arbitrary high-order accurate derivative discontinuous Galerkin method (ADER-DG).</p> <p>homepage: http://www.seissol.org</p>    version versionsuffix toolchain     <code>201703</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#selestim","title":"SelEstim","text":"<p>SelEstim is aimed at distinguishing neutral from selected polymorphisms and estimate   the intensity of selection at the latter. The SelEstim model accounts explicitly for positive selection,   and it is assumed that all marker loci in the dataset are responding to selection, to some extent</p> <p>homepage: http://www1.montpellier.inra.fr/CBGP/software/selestim/index.html</p>    version versionsuffix toolchain     <code>1.1.4</code> <code>-Linux-64bits</code> <code>system</code>"},{"location":"version-specific/supported-software/#selfies","title":"SELFIES","text":"<p>Robust representation of semantically constrained graphs, in particular for molecules in chemistry</p> <p>homepage: https://github.com/aspuru-guzik-group/selfies</p>    version toolchain     <code>2.1.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#sentencepiece","title":"SentencePiece","text":"<p>Unsupervised text tokenizer for Neural Network-based text generation.</p> <p>homepage: https://github.com/google/sentencepiece</p>    version versionsuffix toolchain     <code>0.1.85</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>0.1.94</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>0.1.96</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>0.1.97</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#sep","title":"sep","text":"<p>Python and C library for Source Extraction and Photometry.  (this easyconfig provides python library only)</p> <p>homepage: https://sep.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#sepp","title":"SEPP","text":"<p>SATe-enabled Phylogenetic Placement - addresses the problem of phylogenetic placement of short reads into reference alignments and trees.</p> <p>homepage: https://github.com/smirarab/sepp</p>    version versionsuffix toolchain     <code>4.3.10</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>4.3.10</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>4.4.0</code>  <code>foss/2020b</code>   <code>4.5.0</code>  <code>foss/2021a</code>   <code>4.5.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#seq-gen","title":"Seq-Gen","text":"<p>Seq-Gen is a program that will simulate the evolution of nucleotide or amino acid sequences  along a phylogeny, using common models of the substitution process.</p> <p>homepage: http://tree.bio.ed.ac.uk/software/Seq-Gen</p>    version toolchain     <code>1.3.4</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#seq2hla","title":"seq2HLA","text":"<p>In-silico method written in Python and R to determine HLA genotypes of a sample.  seq2HLA takes standard RNA-Seq sequence reads in fastq format as input,  uses a bowtie index comprising all HLA alleles and outputs the most likely  HLA class I and class II genotypes (in 4 digit resolution),  a p-value for each call, and the expression of each class. </p> <p>homepage: https://github.com/TRON-Bioinformatics/seq2HLA</p>    version versionsuffix toolchain     <code>2.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#seqan","title":"SeqAn","text":"<p>SeqAn is an open source C++ library of efficient algorithms and data structures  for the analysis of sequences with the focus on biological data</p> <p>homepage: https://www.seqan.de/</p>    version versionsuffix toolchain     <code>1.4.2</code> <code>-library</code> <code>system</code>   <code>2.3.2</code>  <code>foss/2016b</code>   <code>2.4.0</code>  <code>GCC/8.2.0-2.31.1</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#seqan3","title":"SeqAn3","text":"<p>SeqAn is an open source C++ library   of efficient algorithms and data structures for the   analysis of sequences with the focus on biological   data. Our library applies a unique generic design   that guarantees high performance, generality,   extensibility, and integration with other libraries.   SeqAn is easy to use and simplifies the development   of new software tools with a minimal loss of   performance. </p> <p>homepage: https://github.com/seqan/seqan3</p>    version toolchain     <code>3.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#seqkit","title":"SeqKit","text":"<p>SeqKit - a cross-platform and ultrafast toolkit for FASTA/Q file manipulation</p> <p>homepage: https://bioinf.shenwei.me/seqkit/</p>    version toolchain     <code>0.8.1</code> <code>system</code>   <code>0.13.2</code> <code>system</code>   <code>2.1.0</code> <code>system</code>   <code>2.2.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#seqlib","title":"SeqLib","text":"<p>C++ interface to HTSlib, BWA-MEM and Fermi.</p> <p>homepage: https://github.com/walaj/SeqLib</p>    version toolchain     <code>1.2.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#seqmagick","title":"Seqmagick","text":"<p>We often have to convert between sequence formats and do  little tasks on them, and it's not worth writing scripts for that. Seqmagick  is a kickass little utility built in the spirit of imagemagick to expose the  file format conversion in Biopython in a convenient way. Instead of having a  big mess of scripts, there is one that takes arguments.</p> <p>homepage: https://fhcrc.github.io/seqmagick/</p>    version versionsuffix toolchain     <code>0.6.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.6.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#seqprep","title":"SeqPrep","text":"<p>Tool for stripping adaptors and/or merging paired reads with overlap into single reads.</p> <p>homepage: https://github.com/jstjohn/SeqPrep</p>    version toolchain     <code>1.3.2</code> <code>GCCcore/7.3.0</code>"},{"location":"version-specific/supported-software/#seqtk","title":"seqtk","text":"<p>Seqtk is a fast and lightweight tool for processing sequences in the FASTA or FASTQ format.   It seamlessly parses both FASTA and FASTQ files which can also be optionally compressed by gzip.</p> <p>homepage: https://github.com/lh3/seqtk/</p>    version toolchain     <code>1.2</code> <code>foss/2016b</code>, <code>intel/2017a</code>   <code>1.3</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018a</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#serf","title":"Serf","text":"<p>The serf library is a high performance C-based HTTP client library  built upon the Apache Portable Runtime (APR) library</p> <p>homepage: http://serf.apache.org/</p>    version toolchain     <code>1.3.9</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2017b</code>, <code>intel/2017b</code>, <code>iomkl/2018a</code>"},{"location":"version-specific/supported-software/#setuptools","title":"setuptools","text":"<p>Easily download, build, install, upgrade, and uninstall Python packages</p> <p>homepage: https://pypi.org/project/setuptools</p>    version versionsuffix toolchain     <code>1.4.2</code>  <code>system</code>   <code>41.0.1</code> <code>-py3</code> <code>system</code>"},{"location":"version-specific/supported-software/#seurat","title":"Seurat","text":"<p>Seurat is an R package designed for QC, analysis, and exploration of single cell RNA-seq data.</p> <p>homepage: https://satijalab.org/seurat</p>    version versionsuffix toolchain     <code>1.4.0.16</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>2.3.4</code> <code>-R-3.4.4</code> <code>intel/2018a</code>   <code>2.3.4</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>3.1.2</code> <code>-R-3.6.0</code> <code>foss/2019a</code>   <code>3.1.5</code> <code>-R-4.0.0</code> <code>foss/2020a</code>   <code>4.0.1</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>4.0.3</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>4.2.0</code> <code>-R-4.2.1</code> <code>foss/2022a</code>   <code>4.3.0</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#seuratdata","title":"SeuratData","text":"<p>SeuratData is a mechanism for distributing datasets in the form of Seurat objects using R's internal package and data management systems.</p> <p>homepage: https://github.com/satijalab/seurat-data</p>    version versionsuffix toolchain     <code>20210514</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#seuratdisk","title":"SeuratDisk","text":"<p>Interfaces for HDF5-based Single Cell File Formats</p> <p>homepage: https://github.com/mojaveazure/seurat-disk</p>    version versionsuffix toolchain     <code>0.0.0.9020</code> <code>-R-4.2.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#seuratwrappers","title":"SeuratWrappers","text":"<p>SeuratWrappers is a collection of community-provided methods and extensions for Seurat</p> <p>homepage: https://github.com/satijalab/seurat-wrappers</p>    version versionsuffix toolchain     <code>20210528</code> <code>-R-4.0.3</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#sf","title":"sf","text":"<p>Support for simple features, a standardized way to encode spatial vector data. Binds to GDAL for reading and writing data, to GEOS for geometrical operations, and to PROJ for projection conversions and datum transformations.</p> <p>homepage: https://cran.r-project.org/package=sf</p>    version versionsuffix toolchain     <code>0.9-5</code> <code>-R-4.0.0-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#sfftk","title":"sfftk","text":"<p>sfftk is a set of utilities that facilitate creation, conversion and             modification of Electron Microscopy Data Bank - Segmentation File Format         (EMDB-SFF) files. EMDB-SFF is an open, community-driven file format to handle    annotated segmentations and subtomogram averages that facilitates segmentation   file interchange. It is written in Python and provides both a command-line suite of commands and a Python API.</p> <p>homepage: https://emdb-empiar.github.io/EMDB-SFF/</p>    version toolchain     <code>0.7.4</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#shannon","title":"Shannon","text":"<p>Shannon is a program for assembling transcripts from RNA-Seq data</p> <p>homepage: https://sreeramkannan.github.io/Shannon/</p>    version versionsuffix toolchain     <code>20170511</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#shap","title":"SHAP","text":"<p>SHAP (SHapley Additive exPlanations) is a game theoretic approach to explain the output of any  machine learning model. It connects optimal credit allocation with local explanations using the classic Shapley  values from game theory and their related extensions.</p> <p>homepage: https://github.com/slundberg/shap</p>    version versionsuffix toolchain     <code>0.35.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#shapaar","title":"shapAAR","text":"<p>An R package for the extraction, analysis and classification of (not only) archaeological objects  from scanned images.</p> <p>homepage: https://github.com/ISAAKiel/shapAAR</p>    version versionsuffix toolchain     <code>0.1.0-20180425</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#shapeit","title":"SHAPEIT","text":"<p>SHAPEIT is a fast and accurate method for estimation of  haplotypes (aka phasing) from genotype or sequencing data.</p> <p>homepage: https://mathgen.stats.ox.ac.uk/genetics_software/shapeit/shapeit.html</p>    version versionsuffix toolchain     <code>2.r837</code> <code>.GLIBCv2.12</code> <code>system</code>   <code>2.r904</code> <code>.glibcv2.17</code> <code>system</code>"},{"location":"version-specific/supported-software/#shapeit4","title":"SHAPEIT4","text":"<p>SHAPEIT4 is a fast and accurate method for estimation of haplotypes (aka phasing) for SNP array and high coverage sequencing data. </p> <p>homepage: https://odelaneau.github.io/shapeit4/</p>    version toolchain     <code>4.1.3</code> <code>foss/2019b</code>   <code>4.2.0</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>foss/2020b</code>   <code>4.2.2</code> <code>foss/2020b</code>, <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#shapely","title":"Shapely","text":"<p>Shapely is a BSD-licensed Python package for manipulation and analysis of planar geometric objects. It is based on the widely deployed GEOS (the engine of PostGIS) and JTS (from which GEOS is ported) libraries.</p> <p>homepage: https://github.com/Toblerity/Shapely</p>    version versionsuffix toolchain     <code>1.7.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.7.0</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>, <code>iccifort/2019.5.281</code>   <code>1.7.1</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>1.8.1.post1</code>  <code>GCC/11.2.0</code>   <code>1.8.2</code>  <code>foss/2021b</code>, <code>foss/2022a</code>   <code>1.8a1</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#sharutils","title":"sharutils","text":"<p>GNU shar makes so-called shell archives out of many files, preparing them for transmission by  electronic mail services, while unshar helps unpacking shell archives after reception.</p> <p>homepage: https://www.gnu.org/software/sharutils/</p>    version toolchain     <code>4.15</code> <code>GCCcore/6.3.0</code>"},{"location":"version-specific/supported-software/#shasta","title":"Shasta","text":"<p>The goal of the Shasta long read assembler is to rapidly produce accurate assembled sequence using DNA reads generated by Oxford Nanopore flow cells as input. Computational methods used by the Shasta assembler include: Using a run-length representation of the read sequence. This makes the assembly process more resilient to errors in homopolymer repeat counts, which are the most common type of errors in Oxford Nanopore reads. Using in some phases of the computation a representation of the read sequence based on markers, a fixed subset of short k-mers (k \u2248 10). </p> <p>homepage: https://github.com/chanzuckerberg/shasta</p>    version toolchain     <code>0.8.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#shengbte","title":"ShengBTE","text":"<p>A solver for the Boltzmann transport equation for phonons.</p> <p>homepage: https://bitbucket.org/sousaw/shengbte</p>    version toolchain     <code>1.1.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#shift","title":"shift","text":"<p>Shift is a framework for Self-Healing Independent File Transfer that provides high performance and resilience for local and remote transfers through a variety of techniques. </p> <p>homepage: http://people.nas.nasa.gov/~kolano/projects/shift.html</p>    version toolchain     <code>4.0</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#shore","title":"SHORE","text":"<p>SHORE, for Short Read, is a mapping and analysis pipeline for short read data produced on the Illumina platform. </p> <p>homepage: http://1001genomes.org/software/shore.html</p>    version toolchain     <code>0.9.3</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#short-pair","title":"Short-Pair","text":"<p>Sensitive Short Read Homology Search for Paired-End Reads</p> <p>homepage: https://sourceforge.net/projects/short-pair</p>    version versionsuffix toolchain     <code>20170125</code>  <code>foss/2021b</code>   <code>20170125</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#shovill","title":"shovill","text":"<p>Faster SPAdes assembly of Illumina reads</p> <p>homepage: https://github.com/tseemann/shovill</p>    version versionsuffix toolchain     <code>0.9.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>1.0.4</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.1.0</code>  <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#shrinkwrap","title":"shrinkwrap","text":"<p>A std::streambuf wrapper for compression formats.</p> <p>homepage: https://github.com/jonathonl/shrinkwrap</p>    version toolchain     <code>1.0.0-beta</code> <code>GCCcore/8.2.0</code>   <code>1.1.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#shtns","title":"SHTns","text":"<p>Spherical Harmonic Transform library aimed at high performance numerical simulations in spherical geometries.</p> <p>homepage: https://bitbucket.org/nschaeff/shtns</p>    version toolchain     <code>2.7</code> <code>foss/2021b</code>   <code>3.5.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#sibelia","title":"Sibelia","text":"<p>Sibelia: A comparative genomics tool: It assists biologists in analysing   the genomic variations that correlate with pathogens, or the genomic changes that help   microorganisms adapt in different environments. Sibelia will also be helpful for the   evolutionary and genome rearrangement studies for multiple strains of microorganisms.</p> <p>homepage: http://bioinf.spbau.ru/en/sibelia</p>    version toolchain     <code>3.0.6</code> <code>foss/2016b</code>   <code>3.0.7</code> <code>foss/2018b</code>, <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#sicer2","title":"SICER2","text":"<p>Redesigned and improved ChIP-seq broad peak calling tool SICER</p> <p>homepage: https://zanglab.github.io/SICER2/</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#sickle","title":"sickle","text":"<p>Windowed Adaptive Trimming for fastq files using quality </p> <p>homepage: https://github.com/najoshi/sickle</p>    version toolchain     <code>1.33</code> <code>foss/2017a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#siesta","title":"Siesta","text":"<p>SIESTA is both a method and its computer program implementation, to perform efficient electronic  structure calculations and ab initio molecular dynamics simulations of molecules and solids.</p> <p>homepage: http://departments.icmab.es/leem/siesta</p>    version versionsuffix toolchain     <code>4.0</code>  <code>foss/2017b</code>, <code>intel/2017a</code>   <code>4.0.1</code>  <code>intel/2017a</code>   <code>4.1-b2</code>  <code>intel/2017a</code>   <code>4.1-b3</code>  <code>intel/2017a</code>   <code>4.1-b4</code>  <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.1-MaX-1.0</code>  <code>intel/2019b</code>   <code>4.1-MaX-1.0</code> <code>-PEXSI</code> <code>intel/2019b</code>   <code>4.1.5</code>  <code>foss/2020a</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2020a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#signalp","title":"SignalP","text":"<p>SignalP predicts the presence  and  location of signal peptide  cleavage sites in  amino acid  sequences  from  different organisms</p> <p>homepage: https://services.healthtech.dtu.dk/software.php</p>    version versionsuffix toolchain     <code>5.0b</code> <code>-Linux</code> <code>system</code>   <code>6.0g</code> <code>-fast</code> <code>foss/2022a</code>   <code>6.0g</code> <code>-fast-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#silx","title":"silx","text":"<p>The silx project provides a collection of Python packages to support the  development of data assessment, reduction and analysis applications at synchrotron radiation facilities.</p> <p>homepage: http://www.silx.org/</p>    version versionsuffix toolchain     <code>0.13.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.14.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#simint","title":"simint","text":"<p>Simint is a vectorized implementation of the Obara-Saika (OS)  method of calculating electron repulsion integrals. Speedup is gained by  vectorizing the primitive loop of the OS algorithm, with additional vectorization  and optimizations left to the compiler.</p> <p>homepage: https://www.bennyp.org/research/simint/</p>    version versionsuffix toolchain     <code>0.7</code> <code>-lmax-5-vec-avx-psi4</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#simnibs","title":"SimNIBS","text":"<p>SimNIBS is a free and open source software package for the Simulation of Non-invasive Brain Stimulation.</p> <p>homepage: https://simnibs.github.io/simnibs</p>    version toolchain     <code>3.2.4</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#simpeg","title":"SimPEG","text":"<p>Simulation and Parameter Estimation in Geophysics: a python package for simulation and gradient based parameter estimation in the context of geophysical applications.</p> <p>homepage: https://simpeg.xyz</p>    version versionsuffix toolchain     <code>0.3.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.14.1</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>0.18.1</code>  <code>foss/2021b</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#simple","title":"SIMPLE","text":"<p>Single-particle IMage Processing Linux Engine SIMPLE is an open-source software package for analysis of cryogenic transmission electron microscopy (cryo-EM)  movies of single-particles (Single-Particle Analysis, SPA).</p> <p>homepage: https://simplecryoem.com/</p>    version toolchain     <code>2.5</code> <code>foss/2018a</code>   <code>3.0.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#simpleelastix","title":"SimpleElastix","text":"<p>Multi-lingual medical image registration library.</p> <p>homepage: https://simpleelastix.github.io</p>    version versionsuffix toolchain     <code>0.10.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>0.10.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#simpleitk","title":"SimpleITK","text":"<p>SimpleITK is a simplified programming interface to the algorithms and data structures of  the Insight Toolkit (ITK).</p> <p>homepage: https://www.simpleitk.org</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.1.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.2.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.1.0</code>  <code>foss/2020b</code>   <code>2.1.1</code>  <code>foss/2021a</code>   <code>2.1.1.2</code>  <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#simpy","title":"simpy","text":"<p>SimPy is a process-based discrete-event simulation framework based on standard Python.</p> <p>homepage: https://simpy.readthedocs.io</p>    version versionsuffix toolchain     <code>3.0.11</code>  <code>intel/2019a</code>   <code>3.0.11</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#simvascular","title":"SimVascular","text":"<p>SimVascular is an open source software suite for cardiovascular simulation, providing a complete  pipeline from medical image data to 3D model construction, meshing, and blood flow simulation.</p> <p>homepage: http://simvascular.github.io/</p>    version toolchain     <code>2.16.0406</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#singlem","title":"SingleM","text":"<p>SingleM is a tool to find the abundances of discrete operational taxonomic units (OTUs) directly  from shotgun metagenome data, without heavy reliance on reference sequence databases.</p> <p>homepage: https://github.com/wwood/singlem</p>    version versionsuffix toolchain     <code>0.12.1</code> <code>-Python-2.7.15</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#singular","title":"Singular","text":"<p>Singular is a computer algebra system for polynomial computations, with special emphasis on commutative and non-commutative algebra, algebraic geometry, and singularity theory.</p> <p>homepage: https://www.singular.uni-kl.de/</p>    version toolchain     <code>4.1.2</code> <code>GCC/8.2.0-2.31.1</code>, <code>system</code>"},{"location":"version-specific/supported-software/#sinvict","title":"SiNVICT","text":"<p>SiNVICT is a tool for the detection of SNVs and indels from cfDNA/ctDNA samples obtained  by ultra-deep sequencing.</p> <p>homepage: https://github.com/sfu-compbio/sinvict</p>    version toolchain     <code>1.0-20180817</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#sionlib","title":"SIONlib","text":"<p>SIONlib is a scalable I/O library for parallel access to task-local files.  The library not only supports writing and reading binary data to or from  several thousands of processors into a single or a small number of physical  files, but also provides global open and close functions to access SIONlib  files in parallel. This package provides a stripped-down installation of  SIONlib for use with performance tools (e.g., Score-P), with renamed symbols  to avoid conflicts when an application using SIONlib itself is linked against  a tool requiring a different SIONlib version. </p> <p>homepage: https://www.fz-juelich.de/ias/jsc/EN/Expertise/Support/Software/SIONlib/_node.html</p>    version versionsuffix toolchain     <code>1.6.1</code>  <code>foss/2016a</code>   <code>1.6.1</code> <code>-tools</code> <code>foss/2016a</code>   <code>1.7.1</code>  <code>foss/2017a</code>   <code>1.7.1</code> <code>-tools</code> <code>foss/2017a</code>   <code>1.7.4</code> <code>-tools</code> <code>GCCcore/8.2.0</code>   <code>1.7.6</code> <code>-tools</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.7.7</code> <code>-tools</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#sip","title":"SIP","text":"<p>SIP is a tool that makes it very easy to create Python bindings for C and C++ libraries.</p> <p>homepage: http://www.riverbankcomputing.com/software/sip/</p>    version versionsuffix toolchain     <code>4.18</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.18.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>4.18.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.19</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.19.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>4.19.8</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>4.19.8</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>4.19.13</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>"},{"location":"version-specific/supported-software/#sisso","title":"SISSO","text":"<p>A data-driven method combining symbolic regression and compressed sensing toward accurate &amp;  interpretable models.</p> <p>homepage: https://github.com/rouyang2017/SISSO</p>    version toolchain     <code>3.0.2</code> <code>iimpi/2021b</code>   <code>3.1-20220324</code> <code>iimpi/2021b</code>"},{"location":"version-specific/supported-software/#sisso_1","title":"SISSO++","text":"<p>C++ implementation of SISSO with built in Python bindings for an efficient python interface</p> <p>homepage: https://gitlab.com/sissopp_developers/sissopp</p>    version toolchain     <code>1.1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#skesa","title":"SKESA","text":"<p>SKESA is a de-novo sequence read assembler for cultured single isolate genomes based on DeBruijn graphs.</p> <p>homepage: https://github.com/ncbi/SKESA</p>    version versionsuffix toolchain     <code>2.2</code>  <code>foss/2018a</code>   <code>2.3.0</code>  <code>foss/2018b</code>   <code>2.4.0</code> <code>_saute.1.3.0_1</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#sketchmap","title":"sketchmap","text":"<p>Sketch-map is a dimensionality reduction algorithm that is particularly well suited to examining  the high-dimensionality data that is routinely produced in atomistic simulations.</p> <p>homepage: http://sketchmap.org/</p>    version toolchain     <code>20170130</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#skewer","title":"skewer","text":"<p>skewer implements the bit-masked k-difference matching algorithm dedicated to the task of adapter  trimming and it is specially designed for processing next-generation sequencing (NGS) paired-end sequences.</p> <p>homepage: https://github.com/relipmoc/skewer</p>    version toolchain     <code>0.2.2</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#sklearn-pandas","title":"sklearn-pandas","text":"<p>This module provides a bridge between Scikit-Learn's machine learning methods and pandas-style Data Frames. In particular, it provides a way to map DataFrame columns to transformations, which are later recombined into features.</p> <p>homepage: https://github.com/scikit-learn-contrib/sklearn-pandas</p>    version toolchain     <code>2.2.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#sklearn-som","title":"sklearn-som","text":"<p>A simple, planar self-organizing map with methods similar to clustering methods in Scikit Learn.</p> <p>homepage: https://github.com/rileypsmith/sklearn-som</p>    version toolchain     <code>1.1.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#skorch","title":"skorch","text":"<p>A scikit-learn compatible neural network library that wraps PyTorch.</p> <p>homepage: https://skorch.readthedocs.io/</p>    version versionsuffix toolchain     <code>0.11.0</code> <code>-PyTorch-1.10.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#slamdunk","title":"SlamDunk","text":"<p>SlamDunk is a novel, fully automated software tool for automated, robust, scalable and reproducible SLAMseq data analysis.</p> <p>homepage: https://t-neumann.github.io/slamdunk</p>    version toolchain     <code>0.4.3</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#slamdunk_1","title":"slamdunk","text":"<p>SlamDunk is a novel, fully automated software tool for automated, robust, scalable  and reproducible SLAMseq data analysis.</p> <p>homepage: https://t-neumann.github.io/slamdunk/</p>    version toolchain     <code>0.4.3</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#slatec","title":"SLATEC","text":"<p>SLATEC Common Mathematical Library, a comprehensive software library containing     over 1400 general purpose mathematical and statistical routines written in Fortran 77.</p> <p>homepage: https://www.netlib.org/slatec/</p>    version toolchain     <code>4.1</code> <code>GCC/6.4.0-2.28</code>, <code>GCC/8.3.0</code>, <code>iccifort/2018.1.163-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#slepc","title":"SLEPc","text":"<p>SLEPc (Scalable Library for Eigenvalue Problem Computations) is a software library for the solution  of large scale sparse eigenvalue problems on parallel computers. It is an extension of PETSc and can be used for  either standard or generalized eigenproblems, with real or complex arithmetic. It can also be used for computing a  partial SVD of a large, sparse, rectangular matrix, and to solve quadratic eigenvalue problems.</p> <p>homepage: https://www.grycap.upv.es/slepc/</p>    version versionsuffix toolchain     <code>3.8.3</code>  <code>foss/2017b</code>   <code>3.9.2</code>  <code>foss/2018a</code>   <code>3.11.0</code>  <code>foss/2018b</code>   <code>3.12.2</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>3.12.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>3.12.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>3.14.2</code>  <code>foss/2020b</code>   <code>3.15.1</code>  <code>foss/2021a</code>   <code>3.17.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#slepc4py","title":"slepc4py","text":"<p>Python bindings for SLEPc, the Scalable Library for Eigenvalue Problem Computations.</p> <p>homepage: https://bitbucket.org/slepc/slepc4py</p>    version versionsuffix toolchain     <code>3.9.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>3.12.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>3.15.1</code>  <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#sleuth","title":"sleuth","text":"<p>Investigate RNA-Seq transcript abundance from kallisto and perform differential expression analysis.</p> <p>homepage: http://pachterlab.github.io/sleuth</p>    version versionsuffix toolchain     <code>0.29.0</code> <code>-R-3.4.0</code> <code>intel/2017a</code>   <code>0.30.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#slidingwindow","title":"slidingwindow","text":"<p>slidingwindow is a simple little Python library for computing a set of windows into a larger dataset,  designed for use with image-processing algorithms that utilise a sliding window to break the processing up  into a series of smaller chunks.</p> <p>homepage: https://github.com/adamrehn/slidingwindow</p>    version versionsuffix toolchain     <code>0.0.13</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>0.0.13</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#slim","title":"SLiM","text":"<p>SLiM is an evolutionary simulation framework that combines a powerful engine for population  genetic simulations with the capability of modeling arbitrarily complex evolutionary scenarios.</p> <p>homepage: https://messerlab.org/slim</p>    version toolchain     <code>3.4</code> <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#slow5tools","title":"slow5tools","text":"<p>slow5tools is a toolkit for converting (FAST5 &lt;-&gt; SLOW5), compressing, viewing, indexing  and manipulating data in SLOW5 format.</p> <p>homepage: https://hasindu2008.github.io/slow5tools</p>    version toolchain     <code>0.4.0</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#smafa","title":"smafa","text":"<p>Smafa attempts to align or cluster pre-aligned biological sequences, handling sequences  which are all the same length.</p> <p>homepage: https://github.com/wwood/smafa</p>    version toolchain     <code>0.4.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#smallgenomeutilities","title":"smallgenomeutilities","text":"<p>The smallgenomeutilities are a collection of scripts that is  useful for dealing and manipulating NGS data of small viral genomes. They  are written in Python 3 with a small number of dependencies.</p> <p>homepage: https://github.com/cbg-ethz/smallgenomeutilities</p>    version versionsuffix toolchain     <code>0.2.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#smartdenovo","title":"SMARTdenovo","text":"<p>SMARTdenovo is a de novo assembler for PacBio and Oxford Nanopore (ONT) data. It produces an assembly from all-vs-all raw read alignments without an error correction stage. It also provides tools to generate accurate consensus sequences, though a platform dependent consensus polish tools (e.g. Quiver for PacBio or Nanopolish for ONT) are still required for higher accuracy.</p> <p>homepage: https://github.com/ruanjue/smartdenovo</p>    version toolchain     <code>20180219</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#smc","title":"SMC++","text":"<p>SMC++ is a program for estimating the size history of populations from whole genome sequence data.</p> <p>homepage: https://github.com/popgenmethods/smcpp</p>    version toolchain     <code>1.15.4</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#smithwaterman","title":"smithwaterman","text":"<p>smith-waterman-gotoh alignment algorithm.</p> <p>homepage: https://github.com/ekg/smithwaterman</p>    version toolchain     <code>20160702</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#smoldyn","title":"Smoldyn","text":"<p>Smoldyn is a computer program for cell-scale biochemical simulations. It simulates each molecule of  interest individually to capture natural stochasticity and to yield nanometer-scale spatial resolution. It treats  other molecules implicitly, enabling it to simulate hundreds of thousands of molecules over several minutes of real  time. Simulated molecules diffuse, react, are confined by surfaces, and bind to membranes much as they would in a real  biological system. </p> <p>homepage: http://www.smoldyn.org/</p>    version toolchain     <code>2.48</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#smooth-topk","title":"smooth-topk","text":"<p>Smooth Loss Functions for Deep Top-k Classification</p> <p>homepage: https://github.com/oval-group/smooth-topk</p>    version versionsuffix toolchain     <code>1.0-20210817</code>  <code>foss/2021a</code>   <code>1.0-20210817</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#smrt-link","title":"SMRT-Link","text":"<p>PacBio\u2019s open-source SMRT Analysis software suite is designed for use with Single Molecule,   Real-Time (SMRT) Sequencing data. You can analyze, visualize, and manage your data through an intuitive GUI   or command-line interface. You can also integrate SMRT Analysis in your existing data workflow through   the extensive set of APIs provided</p> <p>homepage: https://www.pacb.com/support/software-downloads/</p>    version versionsuffix toolchain     <code>5.1.0.26412</code> <code>-cli-tools-only</code> <code>system</code>   <code>6.0.0.47841</code> <code>-cli-tools-only</code> <code>system</code>"},{"location":"version-specific/supported-software/#smv","title":"SMV","text":"<p>Smokeview is a visualization program that displays output of FDS and CFAST simulations.</p> <p>homepage: https://github.com/firemodels/smv</p>    version toolchain     <code>6.7.17</code> <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#snakemake","title":"snakemake","text":"<p>The Snakemake workflow management system is a tool to create reproducible and scalable data analyses.</p> <p>homepage: https://snakemake.readthedocs.io</p>    version versionsuffix toolchain     <code>5.2.2</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>5.2.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>5.7.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>5.26.1</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>6.1.0</code>  <code>foss/2020b</code>   <code>6.6.1</code>  <code>foss/2021a</code>   <code>6.10.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#snap","title":"SNAP","text":"<p>Scalable Nucleotide Alignment Program -- a fast and accurate read aligner for  high-throughput sequencing data</p> <p>homepage: https://www.microsoft.com/en-us/research/project/snap</p>    version toolchain     <code>1.0beta.23</code> <code>intel/2017b</code>   <code>2.0.1</code> <code>GCC/12.2.0</code>"},{"location":"version-specific/supported-software/#snap-hmm","title":"SNAP-HMM","text":"<p>SNAP is a general purpose gene finding program suitable for both eukaryotic and prokaryotic genomes.  SNAP is an acroynm for Semi-HMM-based Nucleic Acid Parser.</p> <p>homepage: https://korflab.github.io/</p>    version toolchain     <code>2013-11-29</code> <code>GCC/6.4.0-2.28</code>, <code>GCC/8.3.0</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>   <code>20190603</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#snape-pooled","title":"SNAPE-pooled","text":"<p>SNAPE-pooled computes the probability distribution for the frequency of the minor allele  in a certain population, at a certain position in the genome.</p> <p>homepage: https://code.google.com/archive/p/snape-pooled/</p>    version toolchain     <code>r32</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#snaphu","title":"snaphu","text":"<p>SNAPHU is an implementation of the Statistical-cost, Network-flow Algorithm for Phase Unwrapping  proposed by Chen and Zebker</p> <p>homepage: https://web.stanford.edu/group/radar/softwareandlinks/sw/snaphu/</p>    version toolchain     <code>1.4.2</code> <code>GCCcore/6.3.0</code>, <code>intel/2016b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#snappy","title":"snappy","text":"<p>Snappy is a compression/decompression library. It does not aim for maximum compression, or compatibility with any other compression library; instead, it aims for very high speeds and reasonable compression.</p> <p>homepage: https://github.com/google/snappy</p>    version toolchain     <code>1.1.2</code> <code>GCC/4.9.2</code>   <code>1.1.3</code> <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>   <code>1.1.6</code> <code>system</code>   <code>1.1.7</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>1.1.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.1.9</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#snippy","title":"snippy","text":"<p>Rapid haploid variant calling and core genome alignment</p> <p>homepage: https://github.com/tseemann/snippy</p>    version versionsuffix toolchain     <code>4.4.1</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>4.6.0</code>  <code>GCC/10.2.0</code>   <code>4.6.0</code> <code>-Java-13-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>4.6.0</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#snp-sites","title":"snp-sites","text":"<p>Finds SNP sites from a multi-FASTA alignment file.</p> <p>homepage: https://sanger-pathogens.github.io/snp-sites/</p>    version toolchain     <code>2.5.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#snpeff","title":"snpEff","text":"<p>SnpEff is a variant annotation and effect prediction tool.  It annotates and predicts the effects of genetic variants (such as amino acid changes).</p> <p>homepage: https://pcingola.github.io/SnpEff/</p>    version versionsuffix toolchain     <code>3.6</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>4.1d</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>4.3t</code> <code>-Java-1.8</code> <code>system</code>   <code>5.0</code> <code>-Java-13</code> <code>system</code>   <code>5.0</code> <code>-Java-13-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>5.0e</code> <code>-Java-11</code> <code>GCCcore/11.2.0</code>   <code>5.0e</code> <code>-Java-13</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#snphylo","title":"SNPhylo","text":"<p>SNPhylo: a pipeline to generate a phylogenetic tree from huge SNP data</p> <p>homepage: http://chibba.pgml.uga.edu/snphylo/</p>    version versionsuffix toolchain     <code>20140701</code>  <code>foss/2016a</code>, <code>intel/2016a</code>   <code>20160204</code> <code>-Python-2.7.14-R-3.4.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#snpomatic","title":"SNPomatic","text":"<p>High throughput sequencing technologies generate large amounts of short reads.  Mapping these to a reference sequence consumes large amounts of processing  time and memory, and read mapping errors can lead to noisy or incorrect  alignments. SNP-o-matic is a fast, memory-efficient, and stringent read  mapping tool offering a variety of analytical output functions, with an  emphasis on genotyping. </p> <p>homepage: https://github.com/magnusmanske/snpomatic</p>    version toolchain     <code>1.0</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#soapaligner","title":"SOAPaligner","text":"<p>SOAPaligner/soap2 is a member of the SOAP (Short Oligonucleotide   Analysis Package). It is an updated version of SOAP software for short oligonucleotide   alignment. </p> <p>homepage: http://soap.genomics.org.cn/soapaligner.html</p>    version versionsuffix toolchain     <code>2.21</code> <code>_Linux-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#soapdenovo-trans","title":"SOAPdenovo-Trans","text":"<p>SOAPdenovo-Trans is a de novo transcriptome assembler basing on the SOAPdenovo framework, adapt to alternative splicing and different expression level among transcripts. </p> <p>homepage: http://soap.genomics.org.cn/SOAPdenovo-Trans.html</p>    version toolchain     <code>1.0.4</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#soapdenovo2","title":"SOAPdenovo2","text":"<p>SOAPdenovo is a novel short-read assembly method that can build a   de novo draft assembly for human-sized genomes. The program is specially designed to   assemble Illumina short reads. It creates new opportunities for building reference   sequences and carrying out accurate analyses of unexplored genomes in a cost effective way.   SOAPdenovo2 is the successor of SOAPdenovo.</p> <p>homepage: http://soap.genomics.org.cn/index.html</p>    version toolchain     <code>r240</code> <code>GCC/5.4.0-2.26</code>   <code>r241</code> <code>GCC/6.4.0-2.28</code>, <code>foss/2018a</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#soapfuse","title":"SOAPfuse","text":"<p>SOAPfuse is an open source tool developed for genome-wide detection of fusion  transcripts from paired-end RNA-Seq data.</p> <p>homepage: https://sourceforge.net/p/soapfuse/wiki/Home/</p>    version versionsuffix toolchain     <code>1.27</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>1.27</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#socat","title":"socat","text":"<p>socat is a relay for bidirectional data transfer between two independent data channels.</p> <p>homepage: http://www.dest-unreach.org/socat</p>    version toolchain     <code>1.7.3.3</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#soci","title":"SOCI","text":"<p>SOCI is a database access library for C++ that makes the illusion of embedding SQL queries in the  regular C++ code, staying entirely within the Standard C++.</p> <p>homepage: http://soci.sourceforge.net/</p>    version toolchain     <code>4.0.1</code> <code>GCC/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>4.0.2</code> <code>GCC/10.3.0</code>   <code>4.0.3</code> <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#solexaqa","title":"SolexaQA++","text":"<p>SolexaQA calculates sequence quality statistics and creates visual representations  of data quality for second-generation sequencing data. Originally developed for the Illumina system  (historically known as \u201cSolexa\u201d), SolexaQA now also supports Ion Torrent and 454 data.</p> <p>homepage: http://solexaqa.sourceforge.net</p>    version toolchain     <code>3.1.5</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#sonic","title":"sonic","text":"<p>Sonic is a simple algorithm for speeding up or slowing down speech.  However, it's optimized for speed ups of over 2X, unlike previous algorithms for changing speech rate.  The Sonic library is a very simple ANSI C library that is designed to easily be integrated into streaming voice applications, like TTS back ends. </p> <p>homepage: https://github.com/espeak-ng/sonic</p>    version toolchain     <code>20180202</code> <code>gompi/2020a</code>"},{"location":"version-specific/supported-software/#soqt","title":"SoQt","text":"<p>SoQt is a library which provides the glue between Systems in  Motion's Coin high-level 3D visualization library and the Qt 2D user interface  library. </p> <p>homepage: https://coin3d.github.io/SoQt/html/</p>    version toolchain     <code>1.6.0</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#sortmerna","title":"SortMeRNA","text":"<p>SortMeRNA is a biological sequence analysis tool for filtering, mapping and OTU-picking NGS reads.</p> <p>homepage: http://bioinfo.lifl.fr/RNA/sortmerna/</p>    version toolchain     <code>2.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#sox","title":"SoX","text":"<p>Sound eXchange, the Swiss Army knife of audio manipulation</p> <p>homepage: http://sox.sourceforge.net/</p>    version toolchain     <code>14.4.2</code> <code>GCC/8.3.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#soxt","title":"SoXt","text":"<p>SoXt is an Xt/Motif glue library for Coin. It can also be used  on top of the SGI or TGS implementation of Open Inventor, and is designed to  be source code compatible with SGI's InventorXt library. </p> <p>homepage: https://coin3d.github.io/SoXt/html/</p>    version toolchain     <code>1.4.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#spaceranger","title":"SpaceRanger","text":"<p>Space Ranger is a set of analysis pipelines that process Visium spatial RNA-seq output and brightfield microscope images in order to detect tissue, align reads, generate feature-spot matrices, perform clustering and gene expression analysis, and place spots in spatial context on the slide image. </p> <p>homepage: https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/what-is-space-ranger</p>    version toolchain     <code>1.1.0</code> <code>GCC/9.3.0</code>   <code>1.2.2</code> <code>GCC/9.3.0</code>   <code>1.3.0</code> <code>GCC/10.3.0</code>   <code>1.3.1</code> <code>GCC/11.2.0</code>   <code>2.0.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#spack","title":"Spack","text":"<p>Spack is a package manager for supercomputers, Linux, and macOS. It makes installing scientific  software easy. With Spack, you can build a package with multiple versions, configurations, platforms, and compilers,  and all of these builds can coexist on the same machine.</p> <p>homepage: https://spack.io/</p>    version toolchain     <code>0.10.0</code> <code>system</code>   <code>0.11.2</code> <code>system</code>   <code>0.12.1</code> <code>system</code>   <code>0.16.2</code> <code>system</code>   <code>0.17.0</code> <code>system</code>   <code>0.17.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#spacy","title":"spaCy","text":"<p>Industrial-strength Natural Language Processing (NLP) in Python.</p> <p>homepage: https://spacy.io/</p>    version toolchain     <code>3.4.4</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#spades","title":"SPAdes","text":"<p>Genome assembler for single-cell and isolates data sets</p> <p>homepage: http://bioinf.spbau.ru/en/spades</p>    version versionsuffix toolchain     <code>3.9.0</code>  <code>foss/2016a</code>, <code>foss/2016b</code>   <code>3.10.1</code>  <code>foss/2016b</code>, <code>foss/2017a</code>   <code>3.11.1</code>  <code>foss/2017b</code>, <code>foss/2018a</code>   <code>3.12.0</code>  <code>foss/2016b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>   <code>3.13.0</code>  <code>GCC/10.3.0</code>, <code>foss/2018b</code>   <code>3.13.1</code>  <code>GCC/8.2.0-2.31.1</code>   <code>3.14.0</code> <code>-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>3.14.0</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>3.14.1</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>3.15.2</code>  <code>GCC/10.2.0</code>   <code>3.15.2</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>   <code>3.15.3</code>  <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#spaln","title":"spaln","text":"<p>Spaln (space-efficient spliced alignment) is a stand-alone program that maps  and aligns a set of cDNA or protein sequences onto a whole genomic sequence in a single job.</p> <p>homepage: https://github.com/ogotoh/spaln</p>    version toolchain     <code>2.3.3c</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.4.03</code> <code>iccifort/2019.5.281</code>   <code>2.4.12</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#spark","title":"Spark","text":"<p>Spark is Hadoop MapReduce done in memory</p> <p>homepage: https://spark.apache.org</p>    version versionsuffix toolchain     <code>1.3.0</code>  <code>system</code>   <code>1.4.1</code>  <code>system</code>   <code>1.5.0</code>  <code>system</code>   <code>1.6.0</code>  <code>system</code>   <code>1.6.1</code>  <code>system</code>   <code>2.0.0</code>  <code>system</code>   <code>2.0.2</code>  <code>system</code>   <code>2.2.0</code> <code>-Hadoop-2.6-Java-1.8.0_144</code> <code>system</code>   <code>2.2.0</code> <code>-Hadoop-2.6-Java-1.8.0_152</code> <code>system</code>   <code>2.2.0</code> <code>-Hadoop-2.6-Java-1.8.0_152-Python-3.6.3</code> <code>intel/2017b</code>   <code>2.3.0</code> <code>-Hadoop-2.7-Java-1.8.0_162</code> <code>system</code>   <code>2.4.0</code> <code>-Hadoop-2.7-Java-1.8</code> <code>system</code>   <code>2.4.0</code> <code>-Hadoop-2.7-Java-1.8-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.4.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.4.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>2.4.5</code> <code>-Python-3.7.4-Java-1.8</code> <code>intel/2019b</code>   <code>3.0.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.1.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>3.1.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.2.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#sparsehash","title":"sparsehash","text":"<p>An extremely memory-efficient hash_map implementation. 2 bits/entry overhead!  The SparseHash library contains several hash-map implementations, including  implementations that optimize for space or speed. </p> <p>homepage: https://github.com/sparsehash/sparsehash</p>    version toolchain     <code>2.0.2</code> <code>foss/2016a</code>   <code>2.0.3</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016b</code>, <code>intel/2017a</code>   <code>2.0.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#spatialreg","title":"spatialreg","text":"<p>A collection of all the estimation functions for spatial cross-sectional models (on lattice/areal  data using spatial weights matrices) contained up to now in 'spdep', 'sphet' and 'spse'.</p> <p>homepage: https://cran.r-project.org/package=spatialreg</p>    version versionsuffix toolchain     <code>1.1-5</code> <code>-R-3.6.2</code> <code>foss/2019b</code>   <code>1.1-8</code> <code>-R-4.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#spdlog","title":"spdlog","text":"<p>Very fast, header-only/compiled, C++ logging library.</p> <p>homepage: https://github.com/gabime/spdlog</p>    version toolchain     <code>1.9.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#spectra","title":"SpectrA","text":"<p>Spectra stands for Sparse Eigenvalue Computation Toolkit as a Redesigned ARPACK. It is a C++  library for large scale eigenvalue problems, built on top of Eigen, an open source linear algebra library.</p> <p>homepage: https://spectralib.org/</p>    version toolchain     <code>1.0.0</code> <code>GCC/10.2.0</code>   <code>1.0.1</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#spectralmethods","title":"spectral.methods","text":"<p>Contains some implementations of Singular Spectrum Analysis (SSA) for the gapfilling and  spectral decomposition of time series.</p> <p>homepage: https://cran.r-project.org/web/packages/spectral.methods</p>    version versionsuffix toolchain     <code>0.7.2.133</code> <code>-R-3.4.3</code> <code>intel/2017b</code>   <code>0.7.2.133</code> <code>-R-3.4.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#speech_tools","title":"speech_tools","text":"<p>The Edinburgh Speech Tools Library is a collection of C++ class, functions and related programs for manipulating the sorts of objects used in speech processing. It includes support for reading and writing waveforms, parameter files (LPC, Ceptra, F0) in various formats and converting between them. It also includes support for linguistic type objects and support for various label files and ngrams (with smoothing). </p> <p>homepage: &lt;['http://festvox.org/festival/']&gt;</p>    version toolchain     <code>2.5.0</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#spglib","title":"spglib","text":"<p>Spglib is a library for finding and handling crystal symmetries written in C.</p> <p>homepage: https://atztogo.github.io/spglib/</p>    version toolchain     <code>1.9.2</code> <code>intel/2016.02-GCC-4.9</code>   <code>1.9.9</code> <code>intel/2017b</code>   <code>1.16.1</code> <code>GCCcore/10.2.0</code>   <code>1.16.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#spglib-python","title":"spglib-python","text":"<p>Spglib for Python. Spglib is a library for finding and handling crystal symmetries written in C.</p> <p>homepage: https://pypi.python.org/pypi/spglib</p>    version versionsuffix toolchain     <code>1.9.4.2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.9.5</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.9.9.38</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.10.0.2</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.10.0.2</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.14.1.post0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>1.16.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>1.16.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>, <code>intel/2019b</code>, <code>intelcuda/2019b</code>   <code>1.16.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>1.16.1</code>  <code>foss/2021a</code>, <code>gomkl/2021a</code>, <code>intel/2021a</code>   <code>1.16.3</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>2.0.0</code>  <code>foss/2022a</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#sphinx","title":"Sphinx","text":"<p>Sphinx is a tool that makes it easy to create intelligent and beautiful documentation.  It was originally created for the new Python documentation, and it has excellent facilities for the   documentation of Python projects, but C/C++ is already supported as well, and it is planned to add   special support for other languages as well.</p> <p>homepage: http://sphinx.pocoo.org/</p>    version versionsuffix toolchain     <code>1.4.8</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>1.4.8</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>1.8.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.8.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.8.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.8.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.8.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>1.8.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#sphinx-rtd-theme","title":"Sphinx-RTD-Theme","text":"<p>Sphinx theme designed to provide a great reader experience  for documentation users on both desktop and mobile devices.</p> <p>homepage: https://sphinx-rtd-theme.readthedocs.io</p>    version toolchain     <code>1.1.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#spiceypy","title":"SpiceyPy","text":"<p>SpiceyPy is a Python wrapper for the NAIF C SPICE Toolkit (N65)</p> <p>homepage: https://github.com/AndrewAnnex/SpiceyPy</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.1.1</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>2.1.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#spieceasi","title":"SpiecEasi","text":"<p>Sparse InversE Covariance estimation for Ecological Association and Statistical Inference</p> <p>homepage: https://github.com/zdk123/SpiecEasi</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-R-3.4.4</code> <code>intel/2018a</code>   <code>20160830</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#spladder","title":"SplAdder","text":"<p>Splicing Adder is a toolbox for alternative splicing analysis based on RNA-Seq alignment data. Briefly, the software takes a given annotation and RNA-Seq read alignments in standardized formats, transforms the annotation into a splicing graph representation, augments the splicing graph with additional information extracted from the read data, extracts alternative splicing events from the graph and quantifies the events based on the alignment data.</p> <p>homepage: https://github.com/ratschlab/spladder</p>    version versionsuffix toolchain     <code>2.4.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#splash","title":"SPLASH","text":"<p>SPLASH is a free and open source visualisation tool  for Smoothed Particle Hydrodynamics (SPH) simulations.</p> <p>homepage: http://users.monash.edu.au/~dprice/splash/index.html</p>    version toolchain     <code>2.8.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#splicemap","title":"SpliceMap","text":"<p>SpliceMap is a de novo splice junction discovery and alignment tool.  It offers high sensitivity and support for arbitrary RNA-seq read lengths.</p> <p>homepage: https://web.stanford.edu/group/wonglab/SpliceMap/</p>    version toolchain     <code>3.3.5.2</code> <code>GCC/7.3.0-2.30</code>"},{"location":"version-specific/supported-software/#split-seq","title":"split-seq","text":"<p>Analysis tools for split-seq.</p> <p>homepage: https://github.com/yjzhang/split-seq-pipeline</p>    version versionsuffix toolchain     <code>20190717</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#splitref","title":"splitRef","text":"<p>splitRef splits a reference haplotype file into smaller files   with subsets of markers. The current version is a pre-release. </p> <p>homepage: http://www.sph.umich.edu/csg/yli/splitRef/index.html</p>    version toolchain     <code>0.0.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#spm","title":"SPM","text":"<p>SPM (Statistical Parametric Mapping) refers to the construction  and assessment of spatially extended statistical processes used to test hypo-  theses about functional imaging data. These ideas have been instantiated in  software that is called SPM.  The SPM software package has been designed for the analysis of brain imaging  data sequences. The sequences can be a series of images from different cohorts,  or time-series from the same subject. The current release is designed for the  analysis of fMRI, PET, SPECT, EEG and MEG. </p> <p>homepage: https://www.fil.ion.ucl.ac.uk/spm</p>    version versionsuffix toolchain     <code>12.5_r7771</code> <code>-MATLAB-2021a</code> <code>system</code>   <code>12.5_r7771</code> <code>-MATLAB-2021b</code> <code>system</code>"},{"location":"version-specific/supported-software/#spoa","title":"spoa","text":"<p>Spoa (SIMD POA) is a c++ implementation of the partial order alignment (POA) algorithm  which is used to generate consensus sequences</p> <p>homepage: https://github.com/rvaser/spoa</p>    version toolchain     <code>3.0.1</code> <code>GCC/7.3.0-2.30</code>   <code>3.4.0</code> <code>GCC/10.2.0</code>   <code>4.0.0</code> <code>GCC/8.3.0</code>   <code>4.0.7</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#spooles","title":"SPOOLES","text":"<p>SPOOLES is a library for solving sparse real and complex linear  systems of equations, written in the C language using object oriented design. </p> <p>homepage: https://netlib.org/linalg/spooles/spooles.2.2.html</p>    version toolchain     <code>2.2</code> <code>gompi/2021a</code>"},{"location":"version-specific/supported-software/#spotpy","title":"SPOTPY","text":"<p>SPOTPY is a Python framework that enables the use of Computational optimization techniques for calibration, uncertainty and sensitivity analysis techniques of almost every (environmental-) model.</p> <p>homepage: https://spotpy.readthedocs.io</p>    version toolchain     <code>1.5.14</code> <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#sprng","title":"SPRNG","text":"<p>Scalable Parallel Pseudo Random Number Generators Library</p> <p>homepage: http://www.sprng.org/</p>    version toolchain     <code>2.0b</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#spyder","title":"Spyder","text":"<p>Spyder is an interactive Python development environment providing MATLAB-like features in a simple  and light-weighted software.</p> <p>homepage: https://github.com/spyder-ide/spyder</p>    version versionsuffix toolchain     <code>3.1.4</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.3.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>3.3.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>4.1.5</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>4.1.5</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#sqlite","title":"SQLite","text":"<p>SQLite: SQL Database Engine in a C Library</p> <p>homepage: http://www.sqlite.org/</p>    version toolchain     <code>3.8.8.1</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>3.8.10.2</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>gimkl/2.11.5</code>   <code>3.9.2</code> <code>GCC/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>3.13.0</code> <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016b</code>   <code>3.14.1</code> <code>GCCcore/4.9.3</code>   <code>3.17.0</code> <code>GCCcore/6.3.0</code>   <code>3.20.1</code> <code>GCCcore/6.4.0</code>   <code>3.21.0</code> <code>GCCcore/6.4.0</code>   <code>3.23.0</code> <code>GCCcore/6.4.0</code>   <code>3.24.0</code> <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>3.26.0</code> <code>GCCcore/8.2.0</code>   <code>3.27.2</code> <code>GCCcore/8.2.0</code>   <code>3.29.0</code> <code>GCCcore/8.3.0</code>   <code>3.31.1</code> <code>GCCcore/9.3.0</code>   <code>3.33.0</code> <code>GCCcore/10.2.0</code>   <code>3.35.4</code> <code>GCCcore/10.3.0</code>   <code>3.36</code> <code>GCCcore/11.2.0</code>   <code>3.38.3</code> <code>GCCcore/11.3.0</code>   <code>3.39.4</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#squeezemeta","title":"SqueezeMeta","text":"<p>SqueezeMeta is a full automatic pipeline for metagenomics/metatranscriptomics,  covering all steps of the analysis.</p> <p>homepage: https://github.com/jtamames/SqueezeMeta</p>    version versionsuffix toolchain     <code>0.4.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.0.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.5.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#squidpy","title":"Squidpy","text":"<p>Squidpy is a tool for the analysis and visualization of spatial molecular data.</p> <p>homepage: https://squidpy.readthedocs.io</p>    version toolchain     <code>1.2.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#sra-toolkit","title":"SRA-Toolkit","text":"<p>The SRA Toolkit, and the source-code SRA System Development  Kit (SDK), will allow you to programmatically access data housed within SRA  and convert it from the SRA format</p> <p>homepage: https://www.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=software</p>    version versionsuffix toolchain     <code>2.3.5</code> <code>-centos_linux64</code> <code>system</code>   <code>2.5.4-1</code> <code>-centos_linux64</code> <code>system</code>   <code>2.5.7</code> <code>-centos_linux64</code> <code>system</code>   <code>2.8.2-1</code> <code>-centos_linux64</code> <code>system</code>   <code>2.9.0</code> <code>-centos_linux64</code> <code>system</code>   <code>2.9.2</code> <code>-ubuntu64</code> <code>system</code>   <code>2.9.4</code> <code>-centos_linux64</code> <code>system</code>   <code>2.9.6-1</code> <code>-centos_linux64</code> <code>system</code>   <code>2.10.4</code>  <code>gompi/2019b</code>   <code>2.10.5</code> <code>-centos_linux64</code> <code>system</code>   <code>2.10.8</code>  <code>gompi/2020a</code>   <code>2.10.9</code>  <code>gompi/2020b</code>   <code>3.0.0</code> <code>-centos_linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#srprism","title":"SRPRISM","text":"<p>Single Read Paired Read Indel Substitution Minimizer</p> <p>homepage: https://github.com/ncbi/SRPRISM</p>    version versionsuffix toolchain     <code>3.0.0</code>  <code>foss/2018b</code>   <code>3.1.1</code> <code>-Java-11</code> <code>GCCcore/8.2.0</code>   <code>3.1.2</code>  <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#srst2","title":"SRST2","text":"<p>Short Read Sequence Typing for Bacterial Pathogens</p> <p>homepage: https://katholt.github.io/srst2</p>    version versionsuffix toolchain     <code>0.2.0-20210620</code> <code>-Python-2.7.18</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#ssaha2","title":"SSAHA2","text":"<p>SSAHA2 (Sequence Search and Alignment by Hashing Algorithm) is a   pairwise sequence alignment program designed for the efficient mapping of sequencing   reads onto genomic reference sequences. SSAHA2 reads of most sequencing platforms   (ABI-Sanger, Roche 454, Illumina-Solexa) and a range of output formats (SAM, CIGAR, PSL etc.)   are supported. A pile-up pipeline for analysis and genotype calling is available as   a separate package. </p> <p>homepage: http://www.sanger.ac.uk/resources/software/ssaha2/</p>    version versionsuffix toolchain     <code>2.5.5</code> <code>-i686</code> <code>system</code>   <code>2.5.5</code> <code>-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#ssn","title":"SSN","text":"<p>Spatial statistical modeling and prediction for data on stream networks, including models based on in-stream distance. Models are created using moving average constructions. Spatial linear models, including explanatory variables, can be fit with (restricted) maximum likelihood. Mapping and other graphical functions are included.</p> <p>homepage: https://cran.r-project.org/web/packages/SSN</p>    version versionsuffix toolchain     <code>1.1.14</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#sspace_basic","title":"SSPACE_Basic","text":"<p>SSPACE Basic, SSAKE-based Scaffolding of Pre-Assembled Contigs after Extension</p> <p>homepage: https://github.com/nsoranzo/sspace_basic</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>   <code>2.1.1</code> <code>-Perl-5.26.0</code> <code>intel/2017b</code>   <code>2.1.1</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#ssw","title":"SSW","text":"<p>SSW is a fast implementation of the Smith-Waterman algorithm, which uses the  Single-Instruction Multiple-Data (SIMD) instructions to parallelize the algorithm at the  instruction level. SSW library provides an API that can be flexibly used by programs written in  C, C++ and other languages. We also provide a software that can do protein and genome alignment  directly. Current version of our implementation is ~50 times faster than an ordinary  Smith-Waterman. It can return the Smith-Waterman score, alignment location and traceback path  (cigar) of the optimal alignment accurately; and return the sub-optimal alignment score and  location heuristically. </p> <p>homepage: https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library</p>    version toolchain     <code>1.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#stacey","title":"STACEY","text":"<p>The BEAST2 package STACEY can be used for species delimitation and species tree estimation, based on the multispecies coalescent model.</p> <p>homepage: http://www.indriid.com/software.html</p>    version toolchain     <code>1.2.5</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#stack","title":"Stack","text":"<p>Stack is a cross-platform program for developing Haskell projects. It is intended for Haskellers both new and experienced.</p> <p>homepage: https://docs.haskellstack.org</p>    version versionsuffix toolchain     <code>2.3.3</code> <code>-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#stacks","title":"Stacks","text":"<p>Stacks is a software pipeline for building loci from short-read sequences, such as those generated on  the Illumina platform. Stacks was developed to work with restriction enzyme-based data, such as RAD-seq,  for the purpose of building genetic maps and conducting population genomics and phylogeography. </p> <p>homepage: https://catchenlab.life.illinois.edu/stacks/</p>    version toolchain     <code>1.40</code> <code>foss/2016a</code>   <code>1.42</code> <code>foss/2016a</code>   <code>1.44</code> <code>foss/2016a</code>   <code>1.45</code> <code>foss/2016a</code>   <code>1.46</code> <code>intel/2017a</code>   <code>1.47</code> <code>foss/2016a</code>   <code>1.48</code> <code>intel/2017b</code>, <code>intel/2018b</code>   <code>2.0</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.0Beta7c</code> <code>intel/2017b</code>   <code>2.0Beta8c</code> <code>intel/2017b</code>   <code>2.0Beta9</code> <code>intel/2018a</code>   <code>2.0Beta10a</code> <code>foss/2018a</code>   <code>2.2</code> <code>foss/2018a</code>   <code>2.3b</code> <code>foss/2018a</code>   <code>2.3e</code> <code>foss/2018b</code>   <code>2.5</code> <code>iccifort/2019.5.281</code>   <code>2.41</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>, <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.53</code> <code>foss/2019b</code>, <code>iccifort/2019.5.281</code>   <code>2.54</code> <code>foss/2020a</code>   <code>2.62</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#stamp","title":"STAMP","text":"<p>STAMP is a tool for characterizing similarities between transcription factor binding motifs</p> <p>homepage: http://www.benoslab.pitt.edu/stamp/</p>    version toolchain     <code>1.2</code> <code>intel/2016a</code>   <code>1.3</code> <code>intel/2016a</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#stamps","title":"StaMPS","text":"<p>A software package to extract ground displacements from time series of synthetic aperture radar  (SAR) acquisitions.</p> <p>homepage: http://homepages.see.leeds.ac.uk/~earahoo/stamps/</p>    version versionsuffix toolchain     <code>3.3b1</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#stampy","title":"Stampy","text":"<p>Stampy is a package for the mapping of short reads from illumina sequencing machines onto  a reference genome.</p> <p>homepage: http://www.well.ox.ac.uk/stampy</p>    version versionsuffix toolchain     <code>1.0.31</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.0.32</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#star","title":"STAR","text":"<p>STAR aligns RNA-seq reads to a reference genome using uncompressed suffix arrays.</p> <p>homepage: https://github.com/alexdobin/STAR</p>    version toolchain     <code>2.4.2a</code> <code>foss/2018b</code>   <code>2.5.0a</code> <code>GNU/4.9.3-2.25</code>   <code>2.5.2a</code> <code>foss/2016a</code>   <code>2.5.2b</code> <code>intel/2016b</code>   <code>2.5.3a</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.5.4b</code> <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.6.0c</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>2.6.1c</code> <code>foss/2018b</code>   <code>2.7.0d</code> <code>foss/2018b</code>   <code>2.7.0f</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>   <code>2.7.1a</code> <code>GCC/8.2.0-2.31.1</code>, <code>foss/2018b</code>   <code>2.7.2b</code> <code>GCC/8.3.0</code>   <code>2.7.3a</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>   <code>2.7.4a</code> <code>GCC/9.3.0</code>   <code>2.7.5b</code> <code>GCC/9.3.0</code>   <code>2.7.6a</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>2.7.7a</code> <code>GCC/10.2.0</code>, <code>GCC/9.3.0</code>   <code>2.7.8a</code> <code>GCC/10.2.0</code>   <code>2.7.9a</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>2.7.10a_alpha_220601</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#star-ccm","title":"STAR-CCM+","text":"<p>STAR-CCM+ is a multiphysics computational fluid dynamics (CFD) software for the simulation of products operating under real-world conditions.</p> <p>homepage: https://mdx.plm.automation.siemens.com/star-ccm-plus</p>    version versionsuffix toolchain     <code>13.04.011</code>  <code>system</code>   <code>17.02.008</code>  <code>system</code>   <code>17.02.008</code> <code>-r8</code> <code>system</code>   <code>17.04.008</code>  <code>system</code>   <code>17.04.008</code> <code>-r8</code> <code>system</code>   <code>17.06.007</code>  <code>system</code>   <code>17.06.007</code> <code>-r8</code> <code>system</code>"},{"location":"version-specific/supported-software/#star-fusion","title":"STAR-Fusion","text":"<p>STAR-Fusion uses the STAR aligner to identify candidate fusion transcripts  supported by Illumina reads. STAR-Fusion further processes the output generated  by the STAR aligner to map junction reads and spanning reads to a reference  annotation set.</p> <p>homepage: https://github.com/STAR-Fusion/STAR-Fusion</p>    version versionsuffix toolchain     <code>1.5.0</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>1.6.0</code> <code>-Perl-5.28.1-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>1.8.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#stars","title":"stars","text":"<p>Reading, manipulating, writing and plotting spatiotemporal arrays (raster and vector data cubes)  in R, using GDAL bindings provided by sf, and NetCDF bindings by ncmeta and RNetCDF.</p> <p>homepage: https://cran.r-project.org/package=stars</p>    version versionsuffix toolchain     <code>0.4-3</code> <code>-R-4.0.0-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#stata","title":"Stata","text":"<p>Stata is a complete, integrated statistical software package that provides everything you need  for data analysis, data management, and graphics.</p> <p>homepage: https://www.stata.com/</p>    version versionsuffix toolchain     <code>15</code>  <code>system</code>   <code>16</code> <code>-legacy</code> <code>system</code>   <code>17</code>  <code>system</code>"},{"location":"version-specific/supported-software/#statistics-r","title":"Statistics-R","text":"<p>Perl interface with the R statistical program</p> <p>homepage: https://metacpan.org/pod/Statistics::R</p>    version toolchain     <code>0.34</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#statsmodels","title":"statsmodels","text":"<p>Statsmodels is a Python module that provides classes and functions  for the estimation of many different statistical models, as well as for conducting   statistical tests, and statistical data exploration.</p> <p>homepage: https://www.statsmodels.org</p>    version versionsuffix toolchain     <code>0.6.1</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>0.6.1</code> <code>-Python-3.5.1</code> <code>intel/2016a</code>   <code>0.6.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.8.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.9.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.9.0</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>   <code>0.9.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.10.1</code>  <code>foss/2019a</code>   <code>0.11.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>0.11.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>0.12.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>0.12.2</code>  <code>foss/2021a</code>   <code>0.13.1</code>  <code>foss/2021b</code>, <code>foss/2022a</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#steak","title":"STEAK","text":"<p>Detects integrations of any sort in high-throughput  sequencing (HTS) data. STEAK was built for validating and discovering  transposable element (TE) and retroviral integrations in a variety of  HTS data. The software performs on both single-end (SE) and paired-end ( PE) libraries and on a variety of HTS sequencing strategies. It can  be applied to a broad range of research interests and clinical uses  such as population genetic studies and detecting polymorphic integrations.</p> <p>homepage: https://omictools.com/steak-tool</p>    version versionsuffix toolchain     <code>2019.09.12</code>  <code>foss/2021b</code>   <code>2019.09.12</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#stir","title":"STIR","text":"<p>Software for Tomographic Image Reconstruction</p> <p>homepage: http://stir.sourceforge.net/</p>    version toolchain     <code>3.0</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#stpipeline","title":"stpipeline","text":"<p>The ST Pipeline contains the tools and scripts needed to process  and analyze the raw files generated with the Spatial Transcriptomics method  in FASTQ format to generated datasets for down-stream analysis. The ST  pipeline can also be used to process single cell data as long as a file  with barcodes identifying each cell is provided. The ST Pipeline can also  process RNA-Seq datasets generated with or without UMIs.</p> <p>homepage: https://github.com/SpatialTranscriptomicsResearch/st_pipeline</p>    version versionsuffix toolchain     <code>1.7.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.7.6</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>1.7.6</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#stream","title":"STREAM","text":"<p>The STREAM benchmark is a simple synthetic benchmark program that measures sustainable  memory bandwidth (in MB/s) and the corresponding computation rate for simple vector kernels.</p> <p>homepage: https://www.cs.virginia.edu/stream/</p>    version toolchain     <code>5.10</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.2.0-2.31.1</code>, <code>GCC/9.3.0</code>, <code>iccifort/2020.1.217</code>, <code>intel/2016b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#strelka","title":"strelka","text":"<p>Strelka2 is a fast and accurate small variant caller  optimized for analysis of germline variation in small cohorts and  somatic variation in tumor/normal sample pairs.</p> <p>homepage: https://github.com/Illumina/strelka</p>    version versionsuffix toolchain     <code>2.9.7</code>  <code>intel/2018a</code>   <code>2.9.9</code>  <code>foss/2018b</code>   <code>2.9.10</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#stringtie","title":"StringTie","text":"<p>StringTie is a fast and highly efficient assembler of RNA-Seq alignments into potential transcripts</p> <p>homepage: https://ccb.jhu.edu/software/stringtie/</p>    version toolchain     <code>1.3.0</code> <code>intel/2016b</code>   <code>1.3.3</code> <code>GCCcore/6.4.0</code>, <code>intel/2017a</code>   <code>1.3.3b</code> <code>foss/2016b</code>   <code>1.3.5</code> <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>   <code>2.0.3</code> <code>GCCcore/7.3.0</code>   <code>2.1.0</code> <code>foss/2018b</code>   <code>2.1.1</code> <code>GCC/8.3.0</code>   <code>2.1.3</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>   <code>2.1.4</code> <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>   <code>2.1.7</code> <code>GCC/10.3.0</code>   <code>2.2.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#stripy","title":"stripy","text":"<p>A Python interface to TRIPACK and STRIPACK Fortran code for (constrained) triangulation in Cartesian  coordinates and on a sphere. Stripy is an object-oriented package and includes routines from SRFPACK and SSRFPACK for  interpolation (nearest neighbor, linear and hermite cubic) and to evaluate derivatives (Renka 1996a,b and 1997a,b).</p> <p>homepage: https://github.com/underworldcode/stripy</p>    version toolchain     <code>2.1.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#strique","title":"STRique","text":"<p>STRique is a python package to analyze repeat expansion and methylation states of short tandem repeats (STR) in Oxford Nanopore Technology (ONT) long read sequencing data.</p> <p>homepage: https://github.com/giesselmann/STRique</p>    version toolchain     <code>0.4.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#structure","title":"Structure","text":"<p>The program structure is a free software package for using multi-locus genotype data to investigate  population structure.</p> <p>homepage: https://web.stanford.edu/group/pritchardlab/structure.html</p>    version toolchain     <code>2.3.4</code> <code>GCC/8.2.0-2.31.1</code>, <code>iccifort/2019.3.199-GCC-8.3.0-2.32</code>, <code>iccifort/2019.5.281</code>"},{"location":"version-specific/supported-software/#strumpack","title":"STRUMPACK","text":"<p>STRUMPACK - STRUctured Matrix PACKage - Fast linear solvers and preconditioner  for both dense and sparse systems using low-rank structured factorization with randomized sampling.</p> <p>homepage: https://fastmath-scidac.llnl.gov/software/strumpack.html</p>    version toolchain     <code>6.1.0</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#suave","title":"suave","text":"<p>suave is an interactive web application to visualize read depth ratios between two samples and the structural variants of one of the samples (typically the \"case\" sample in a case/control setup such as tumor/normal comparison).</p> <p>homepage: https://github.com/dellytools/suave</p>    version toolchain     <code>20160529</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#subread","title":"Subread","text":"<p>High performance read alignment, quantification and mutation discovery</p> <p>homepage: http://subread.sourceforge.net/</p>    version toolchain     <code>1.5.0-p1</code> <code>foss/2016a</code>, <code>foss/2016b</code>   <code>1.6.3</code> <code>foss/2018b</code>   <code>1.6.4</code> <code>foss/2018b</code>   <code>2.0.0</code> <code>GCC/7.3.0-2.30</code>, <code>GCC/8.3.0</code>   <code>2.0.2</code> <code>GCC/10.2.0</code>   <code>2.0.3</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#subversion","title":"Subversion","text":"<p>Subversion is an open source version control system.</p> <p>homepage: http://subversion.apache.org/</p>    version toolchain     <code>1.9.7</code> <code>iomkl/2018a</code>   <code>1.9.9</code> <code>GCCcore/7.3.0</code>   <code>1.10.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.12.0</code> <code>GCCcore/8.2.0</code>   <code>1.14.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.14.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#suds","title":"suds","text":"<p>Lightweight SOAP client</p> <p>homepage: https://pypi.python.org/pypi/suds-py3</p>    version versionsuffix toolchain     <code>1.3.3.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#suitesparse","title":"SuiteSparse","text":"<p>SuiteSparse is a collection of libraries manipulate sparse matrices.</p> <p>homepage: https://faculty.cse.tamu.edu/davis/suitesparse.html</p>    version versionsuffix toolchain     <code>4.5.1</code> <code>-METIS-5.1.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.5.2</code> <code>-METIS-5.1.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.5.3</code> <code>-METIS-5.1.0</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.5.3</code> <code>-ParMETIS-4.0.3</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>4.5.5</code> <code>-METIS-5.1.0</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>4.5.5</code> <code>-ParMETIS-4.0.3</code> <code>foss/2017a</code>, <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>4.5.6</code> <code>-METIS-5.1.0</code> <code>foss/2017b</code>   <code>5.1.2</code> <code>-METIS-5.1.0</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>5.1.2</code> <code>-ParMETIS-4.0.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.4.0</code> <code>-METIS-5.1.0</code> <code>foss/2019a</code>, <code>intel/2018b</code>, <code>intel/2019a</code>   <code>5.6.0</code> <code>-METIS-5.1.0</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>5.7.1</code> <code>-METIS-5.1.0</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>5.8.1</code> <code>-METIS-5.1.0</code> <code>foss/2020b</code>, <code>intel/2020b</code>   <code>5.10.1</code> <code>-METIS-5.1.0</code> <code>foss/2021a</code>, <code>foss/2021b</code>   <code>5.10.1</code> <code>-METIS-5.1.0-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>5.13.0</code> <code>-METIS-5.1.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#sumaclust","title":"SUMACLUST","text":"<p>SUMATRA and SUMACLUST: fast and exact comparison and clustering of sequences.</p> <p>homepage: http://metabarcoding.org/sumatra</p>    version toolchain     <code>1.0.20</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#sumatra","title":"SUMATRA","text":"<p>SUMATRA and SUMACLUST: fast and exact comparison and clustering of sequences.</p> <p>homepage: http://metabarcoding.org/sumatra</p>    version toolchain     <code>1.0.20</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#sumo","title":"SUMO","text":"<p>Simulation of Urban MObility\" (SUMO) is an open source, highly portable, microscopic and continuous traffic simulation package designed to handle large networks. It allows for intermodal simulation including pedestrians and comes with a large set of tools for scenario creation.</p> <p>homepage: https://www.eclipse.org/sumo/</p>    version versionsuffix toolchain     <code>1.3.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>1.7.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.12.0</code>  <code>foss/2021b</code>   <code>1.14.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#sundials","title":"SUNDIALS","text":"<p>SUNDIALS: SUite of Nonlinear and DIfferential/ALgebraic Equation Solvers</p> <p>homepage: https://computation.llnl.gov/projects/sundials</p>    version toolchain     <code>2.6.2</code> <code>intel/2016b</code>, <code>intel/2018b</code>   <code>2.7.0</code> <code>foss/2016b</code>, <code>foss/2017b</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>5.1.0</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>5.7.0</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>6.3.0</code> <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#sunpy","title":"SunPy","text":"<p>The community-developed, free and open-source solar data analysis environment for Python.</p> <p>homepage: https://sunpy.org/</p>    version versionsuffix toolchain     <code>1.1.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#superlu","title":"SuperLU","text":"<p>SuperLU is a general purpose library for the  direct solution of large, sparse, nonsymmetric systems  of linear equations on high performance machines.</p> <p>homepage: https://crd-legacy.lbl.gov/~xiaoye/SuperLU/</p>    version toolchain     <code>5.1.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.2.1</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>5.2.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>5.3.0</code> <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2022a</code>, <code>intel/2020b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#superlu_dist","title":"SuperLU_DIST","text":"<p>SuperLU is a general purpose library for the direct solution of large, sparse, nonsymmetric systems  of linear equations on high performance machines.</p> <p>homepage: https://crd-legacy.lbl.gov/~xiaoye/SuperLU/</p>    version versionsuffix toolchain     <code>5.4.0</code> <code>-trisolve-merge</code> <code>intel/2020a</code>   <code>6.4.0</code>  <code>foss/2020a</code>, <code>intel/2020a</code>   <code>8.1.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#supermagic","title":"supermagic","text":"<p>Very simple MPI sanity code. Nothing more, nothing less.</p> <p>homepage: https://github.com/hpc/supermagic</p>    version toolchain     <code>20170824</code> <code>foss/2017a</code>, <code>gompi/2019b</code>"},{"location":"version-specific/supported-software/#supernova","title":"supernova","text":"<p>Supernova is a software package for de novo assembly from Chromium Linked-Reads  that are made from a single whole-genome library from an individual DNA source</p> <p>homepage: https://support.10xgenomics.com/de-novo-assembly/software/overview/latest/welcome</p>    version toolchain     <code>2.0.1</code> <code>system</code>   <code>2.1.1</code> <code>system</code>"},{"location":"version-specific/supported-software/#survivor","title":"SURVIVOR","text":"<p>Toolset for SV simulation, comparison and filtering</p> <p>homepage: https://github.com/fritzsedlazeck/SURVIVOR</p>    version toolchain     <code>1.0.7-19-ged1ca51</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#svdetect","title":"SVDetect","text":"<p>SVDetect is a application for the isolation and the type prediction of intra- and inter-chromosomal  rearrangements from paired-end/mate-pair sequencing data provided by the high-throughput sequencing technologies.  This tool aims to identifying structural variations with both clustering and sliding-window strategies, and  helping in their visualization at the genome scale.</p> <p>homepage: http://svdetect.sourceforge.net/Site/Home.html</p>    version versionsuffix toolchain     <code>0.8b</code> <code>-Perl-5.26.0</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#svdquest","title":"SVDquest","text":"<p>SVDquartets-based species trees</p> <p>homepage: https://github.com/pranjalv123/SVDquest</p>    version toolchain     <code>20190627</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#svg","title":"SVG","text":"<p>Perl binding for SVG</p> <p>homepage: https://metacpan.org/pod/SVG</p>    version versionsuffix toolchain     <code>2.84</code> <code>-Perl-5.30.0</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#svist4get","title":"svist4get","text":"<p>Svist4get is a simple bioinformatics tool for visualization of  genomic signal tracks in user-defined genomic windows, either arbitrary selected  by genomic coordinates or anchored to particular transcripts or genes.</p> <p>homepage: https://github.com/art-egorov/svist4get</p>    version toolchain     <code>1.3.1</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#swarm","title":"swarm","text":"<p>A robust and fast clustering method for amplicon-based studies </p> <p>homepage: https://github.com/torognes/swarm</p>    version toolchain     <code>2.2.2</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#swash","title":"SWASH","text":"<p>SWASH is a general-purpose numerical tool for simulating unsteady, non-hydrostatic, free-surface,  rotational flow and transport phenomena in coastal waters as driven by waves, tides, buoyancy and wind forces.</p> <p>homepage: http://swash.sourceforge.net/</p>    version versionsuffix toolchain     <code>3.14</code> <code>-mpi</code> <code>intel/2016b</code>, <code>intel/2017a</code>   <code>4.01</code> <code>-mpi</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#swat","title":"SWAT+","text":"<p>The Soil &amp; Water Assessment Tool (SWAT) is a small watershed to river basin-scale model used to simulate the quality and quantity of surface and ground water and predict the environmental impact of land use, land management practices, and climate change. In order to face present and future challenges in water resources modeling SWAT code has undergone major modifications over the past few years, resulting in SWAT+, a completely revised version of the model. SWAT+ provides a more flexible spatial representation of interactions and processes within a watershed.</p> <p>homepage: https://swatplus.gitbook.io</p>    version toolchain     <code>60.4.1</code> <code>GCC/9.3.0</code>   <code>60.5.1</code> <code>iccifort/2020.4.304</code>"},{"location":"version-specific/supported-software/#swifter","title":"swifter","text":"<p>A package which efficiently applies any function to a pandas dataframe or series in the fastest available manner.</p> <p>homepage: https://github.com/jmcarpenter2/swifter</p>    version toolchain     <code>1.0.9</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#swig","title":"SWIG","text":"<p>SWIG is a software development tool that connects programs written in C and C++ with  a variety of high-level programming languages.</p> <p>homepage: http://www.swig.org/</p>    version versionsuffix toolchain     <code>3.0.8</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.0.8</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>3.0.10</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.0.10</code> <code>-Python-2.7.12-PCRE-8.39</code> <code>intel/2016b</code>   <code>3.0.11</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>3.0.12</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.0.12</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.0.12</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.0.12</code> <code>-Python-2.7.14-bare</code> <code>GCCcore/6.4.0</code>   <code>3.0.12</code> <code>-Python-2.7.15</code> <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.0.12</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>3.0.12</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>, <code>intel/2018.00</code>   <code>3.0.12</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>, <code>intel/2018.01</code>   <code>3.0.12</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018a</code>   <code>3.0.12</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>3.0.12</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>4.0.1</code>  <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.0.2</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#swipe","title":"SWIPE","text":"<p>Smith-Waterman database searches with inter-sequence SIMD parallelisation</p> <p>homepage: https://github.com/torognes/swipe</p>    version toolchain     <code>2.1.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#swissknife","title":"swissknife","text":"<p>Perl module for reading and writing UniProtKB data in plain text format.</p> <p>homepage: https://sourceforge.net/projects/swissknife/</p>    version toolchain     <code>1.80</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#symengine","title":"SymEngine","text":"<p>SymEngine is a standalone fast C++ symbolic manipulation library</p> <p>homepage: https://github.com/symengine/symengine</p>    version versionsuffix toolchain     <code>0.3.0</code> <code>-20181006</code> <code>intel/2018a</code>   <code>0.4.0</code>  <code>GCC/8.2.0-2.31.1</code>   <code>0.7.0</code>  <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#symengine-python","title":"SymEngine-python","text":"<p>Python wrappers to the C++ library SymEngine, a fast C++ symbolic manipulation library.</p> <p>homepage: https://github.com/symengine/symengine.py</p>    version toolchain     <code>0.7.2</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#symphony","title":"SYMPHONY","text":"<p>SYMPHONY is an open-source solver for mixed-integer linear programs (MILPs) written in C.</p> <p>homepage: https://projects.coin-or.org/SYMPHONY</p>    version toolchain     <code>5.6.16</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#sympy","title":"sympy","text":"<p>SymPy is a Python library for symbolic mathematics. It aims to  become a full-featured computer algebra system (CAS) while keeping the code as  simple as possible in order to be comprehensible and easily extensible. SymPy  is written entirely in Python and does not require any external libraries.</p> <p>homepage: https://sympy.org/</p>    version versionsuffix toolchain     <code>1.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>1.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>1.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>1.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.4</code>  <code>foss/2019a</code>, <code>intel/2019a</code>   <code>1.5.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.6.2</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.7.1</code>  <code>foss/2020b</code>, <code>intel/2020b</code>   <code>1.8</code>  <code>foss/2021a</code>   <code>1.9</code>  <code>foss/2021b</code>   <code>1.10.1</code>  <code>foss/2022a</code>   <code>1.11.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#syri","title":"SyRI","text":"<p>Synteny and Rearrangement Identifier (SyRI).</p> <p>homepage: https://schneebergerlab.github.io/syri/</p>    version toolchain     <code>1.4</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#szip","title":"Szip","text":"<p>Szip compression software, providing lossless compression of scientific data </p> <p>homepage: https://www.hdfgroup.org/doc_resource/SZIP/</p>    version toolchain     <code>2.1</code> <code>GCC/4.8.1</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>gmpolf/2017.10</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017.01</code>, <code>intel/2017a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>2.1.1</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#t","title":"T","text":"<p>tabix - tabixpp - taco - TagDust - TagLib - Taiyaki - TALON - TALYS - TAMkin - taxator-tk - TBA - tbb - tbl2asn - TCC - Tcl - TCLAP - tcsh - tecplot360ex - TELEMAC-MASCARET - Telescope - Teneto - tensorboard - tensorboardX - TensorFlow - TensorFlow-Datasets - tensorflow-probability - TensorRT - terastructure - termcolor - Tesla-Deployment-Kit - tesseract - testpath - TetGen - TEToolkit - TEtranscripts - texinfo - texlive - Text-CSV - TFEA - Theano - ThemisPy - THetA - thurstonianIRT - TiCCutils - tidybayes - tidymodels - Tika - TiMBL - time - TINKER - TinyDB - TinyXML - Tk - Tkinter - TM-align - tMAE - tmap - tmux - TN93 - TOBIAS - ToFu - Togl - tokenizers - Tombo - TOML-Fortran - topaz - TopHat - torchaudio - torchdata - torchinfo - torchsampler - torchtext - torchvision - TotalView - tqdm - Tracer - TranscriptClean - TransDecoder - Transformers - Transrate - travis - TRAVIS-Analyzer - treatSens - TreeMix - TreeShrink - TRF - Triangle - Trilinos - Trim_Galore - trimAl - trimesh - Trimmomatic - Trinity - TRIQS - TRIQS-cthyb - TRIQS-dft_tools - TRIQS-tprf - TRUST - TRUST4 - Trycycler - tsne - TurboVNC - TVB - tvb-data - TVB-deps - tvb-framework - tvb-library - TWL-NINJA - typing-extensions</p>"},{"location":"version-specific/supported-software/#tabix","title":"tabix","text":"<p>Generic indexer for TAB-delimited genome position files </p> <p>homepage: http://samtools.sourceforge.net</p>    version toolchain     <code>0.2.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>foss/2016a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#tabixpp","title":"tabixpp","text":"<p>C++ wrapper to tabix indexer</p> <p>homepage: https://github.com/ekg/tabixpp</p>    version toolchain     <code>1.1.0</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>"},{"location":"version-specific/supported-software/#taco","title":"taco","text":"<p>Multi-sample transcriptome assembly from RNA-Seq</p> <p>homepage: http://tacorna.github.io</p>    version versionsuffix toolchain     <code>0.5.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#tagdust","title":"TagDust","text":"<p>Raw sequences produced by next generation sequencing (NGS) machines may contain adapter,  linker, barcode and fingerprint sequences. TagDust2 is a program to extract and correctly label the  sequences to be mapped in downstream pipelines.</p> <p>homepage: http://tagdust.sourceforge.net/</p>    version toolchain     <code>2.33</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#taglib","title":"TagLib","text":"<p>TagLib is a library for reading and editing the meta-data of several popular audio formats.</p> <p>homepage: https://taglib.org/</p>    version toolchain     <code>1.11.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#taiyaki","title":"Taiyaki","text":"<p>Taiyaki is research software for training models for basecalling Oxford Nanopore reads.</p> <p>homepage: https://github.com/nanoporetech/taiyaki</p>    version versionsuffix toolchain     <code>5.1.0-20200617</code> <code>-Python-3.7.2-PyTorch-1.2.0</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>"},{"location":"version-specific/supported-software/#talon","title":"TALON","text":"<p>TALON is a Python package for identifying and quantifying known and novel genes/isoforms in long-read transcriptome data sets. TALON is technology-agnostic in that it works from mapped SAM files, allowing data from different sequencing platforms (i.e. PacBio and Oxford Nanopore) to be analyzed side by side.</p> <p>homepage: https://github.com/mortazavilab/TALON</p>    version toolchain     <code>5.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#talys","title":"TALYS","text":"<p>TALYS is a nuclear reaction program.</p> <p>homepage: https://tendl.web.psi.ch/tendl_2019/talys.html</p>    version toolchain     <code>1.95</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#tamkin","title":"TAMkin","text":"<p>TAMkin is a post-processing toolkit for normal mode analysis,  thermochemistry and reaction kinetics. It uses a Hessian computation from a  standard computational chemistry program as its input.</p> <p>homepage: https://molmod.github.io/tamkin/</p>    version versionsuffix toolchain     <code>1.0.9</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.2.4</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.2.6</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>1.2.6</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#taxator-tk","title":"taxator-tk","text":"<p>A set of programs for the taxonomic analysis of nucleotide sequence data</p> <p>homepage: https://github.com/fungs/taxator-tk</p>    version toolchain     <code>1.3.3</code> <code>GCC/10.2.0</code>, <code>foss/2018b</code>, <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#tba","title":"TBA","text":"<p>TBA (a Transcription factor Binding Analysis): TBA is a multi-functional machine learning tool for identifying  transcription factors associated with genomic features</p> <p>homepage: https://github.com/jenhantao/tba</p>    version toolchain     <code>1.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#tbb","title":"tbb","text":"<p>Intel Threading Building Blocks (Intel TBB)  is a widely used, award-winning C++ template library for creating reliable,  portable, and scalable parallel applications.  Use Intel TBB for a simple and rapid way of developing robust task-based  parallel applications that scale to available processor cores, are compatible  with multiple environments, and are easier to maintain.  Intel TBB is the most proficient way to implement future-proof parallel applications  that tap into the power and performance of multicore and manycore hardware platforms.</p> <p>homepage: https://software.intel.com/en-us/articles/intel-tbb/</p>    version toolchain     <code>4.0.0.233</code> <code>system</code>   <code>4.0.5.339</code> <code>system</code>   <code>4.3.6.211</code> <code>system</code>   <code>4.4.2.152</code> <code>system</code>   <code>2017.2.132</code> <code>system</code>   <code>2017.4.174</code> <code>system</code>   <code>2017.6.196</code> <code>system</code>   <code>2017_U5</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2017a</code>   <code>2017_U6</code> <code>GCCcore/6.3.0</code>, <code>intel/2017a</code>   <code>2018_U1</code> <code>GCCcore/6.4.0</code>   <code>2018_U2</code> <code>GCCcore/6.4.0</code>   <code>2018_U3</code> <code>GCCcore/6.4.0</code>   <code>2018_U5</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2019_U4</code> <code>GCCcore/8.2.0</code>   <code>2019_U9</code> <code>GCCcore/8.3.0</code>   <code>2020.1</code> <code>GCCcore/9.3.0</code>   <code>2020.2</code> <code>GCCcore/8.3.0</code>   <code>2020.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2021.4.0</code> <code>GCCcore/11.2.0</code>   <code>2021.5.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tbl2asn","title":"tbl2asn","text":"<p>Tbl2asn is a command-line program that automates the creation of  sequence records for submission to GenBank</p> <p>homepage: https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/</p>    version versionsuffix toolchain     <code>25.8</code> <code>-linux64</code> <code>system</code>   <code>20180227</code> <code>-linux64</code> <code>system</code>   <code>20200302</code> <code>-linux64</code> <code>system</code>   <code>20220427</code> <code>-linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#tcc","title":"TCC","text":"<p>The Tiny C Compiler (aka TCC, tCc, or TinyCC) is an x86 and x86-64 C compiler  created by Fabrice Bellard. It is designed to work for slow computers with little disk space  and can run shebang style !/usr/bin/tcc . TCC is distributed under the LGPL. TCC claims to  implement all of ANSI C (C89/C90),[1] much of the new ISO C99 standard,  and many GNU C extensions including inline assembly.</p> <p>homepage: http://bellard.org/tcc/</p>    version toolchain     <code>0.9.26</code> <code>system</code>"},{"location":"version-specific/supported-software/#tcl","title":"Tcl","text":"<p>Tcl (Tool Command Language) is a very powerful but easy to learn dynamic  programming language, suitable for a very wide range of uses, including web  and desktop applications, networking, administration, testing and many more. </p> <p>homepage: https://www.tcl.tk/</p>    version toolchain     <code>8.5.19</code> <code>foss/2017a</code>   <code>8.6.3</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>8.6.4</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>8.6.5</code> <code>GCC/4.9.3-2.25</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016b</code>   <code>8.6.6</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/6.3.0</code>   <code>8.6.7</code> <code>GCCcore/6.4.0</code>   <code>8.6.8</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>   <code>8.6.9</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>8.6.10</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>8.6.11</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>8.6.12</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#tclap","title":"TCLAP","text":"<p>TCLAP is a small, flexible library that provides a simple interface for defining and accessing command line arguments. It was intially inspired by the user friendly CLAP libary.</p> <p>homepage: http://tclap.sourceforge.net/</p>    version toolchain     <code>1.2.2</code> <code>GCCcore/8.3.0</code>   <code>1.2.4</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.2.5</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#tcsh","title":"tcsh","text":"<p>Tcsh is an enhanced, but completely compatible version of the Berkeley UNIX C shell (csh).  It is a command language interpreter usable both as an interactive login shell and a shell script command  processor. It includes a command-line editor, programmable word completion, spelling correction, a history  mechanism, job control and a C-like syntax.</p> <p>homepage: https://www.tcsh.org</p>    version toolchain     <code>6.19.00</code> <code>intel/2016a</code>   <code>6.20.00</code> <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>6.22.02</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>6.22.03</code> <code>GCCcore/10.2.0</code>   <code>6.22.04</code> <code>GCCcore/10.3.0</code>   <code>6.24.01</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tecplot360ex","title":"tecplot360ex","text":"<p>Quickly plot and animate your CFD results exactly the way you want. Analyze complex solutions, arrange multiple layouts, and communicate your results with professional images and animations.</p> <p>homepage: http://www.tecplot.com/products/tecplot-360/</p>    version toolchain     <code>linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#telemac-mascaret","title":"TELEMAC-MASCARET","text":"<p>TELEMAC-MASCARET is an integrated suite of solvers for use in the field of free-surface flow. Having been used in the context of many studies throughout the world, it has become one of the major standards in its field.</p> <p>homepage: http://www.opentelemac.org</p>    version toolchain     <code>8p3r1</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#telescope","title":"Telescope","text":"<p>Single locus resolution of Transposable ELEment expression using next-generation sequencing.</p> <p>homepage: https://github.com/mlbendall/telescope</p>    version versionsuffix toolchain     <code>1.0.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#teneto","title":"Teneto","text":"<p>Teneto is package for deriving, analysing and plotting temporal network representations. Additional tools for temporal network analysis with neuroimaging contexts.</p> <p>homepage: https://teneto.readthedocs.io</p>    version versionsuffix toolchain     <code>0.5.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#tensorboard","title":"tensorboard","text":"<p>TensorBoard is a suite of web applications for inspecting and understanding your TensorFlow runs and graphs.</p> <p>homepage: https://github.com/tensorflow/tensorboard</p>    version toolchain     <code>2.8.0</code> <code>foss/2021a</code>   <code>2.10.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#tensorboardx","title":"tensorboardX","text":"<p>Tensorboard for PyTorch.</p> <p>homepage: https://github.com/lanpa/tensorboardX</p>    version versionsuffix toolchain     <code>2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.1</code> <code>-PyTorch-1.7.1</code> <code>fosscuda/2020b</code>   <code>2.2</code> <code>-PyTorch-1.7.1</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.5.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#tensorflow","title":"TensorFlow","text":"<p>An open-source software library for Machine Intelligence</p> <p>homepage: https://www.tensorflow.org/</p>    version versionsuffix toolchain     <code>0.12.1</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.12.1</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>1.0.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.0.1</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>1.1.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.1.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.2.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.2.1</code> <code>-GPU-Python-3.5.2</code> <code>foss/2016b</code>   <code>1.2.1</code> <code>-Python-3.5.2</code> <code>foss/2016b</code>   <code>1.3.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.3.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.3.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.4.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.4.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>   <code>1.5.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.6.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.6.0</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>1.7.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.7.0</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>1.8.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>   <code>1.8.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>   <code>1.8.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>fosscuda/2018a</code>, <code>intel/2018a</code>   <code>1.10.0</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>1.10.1</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>1.10.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.11.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.12.0</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>1.12.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.13.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.13.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>1.14.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>1.15.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.15.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>1.15.5</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.15.5</code> <code>-Python-3.7.4-nompi</code> <code>fosscuda/2019b</code>   <code>2.0.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>2.0.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>2.0.1</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>2.0.1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>2.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.2.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.2.3</code>  <code>foss/2020b</code>   <code>2.3.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>2.3.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>   <code>2.4.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.4.1</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>2.4.4</code>  <code>foss/2021a</code>   <code>2.5.0</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>2.5.0</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>2.5.3</code>  <code>foss/2021a</code>   <code>2.5.3</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.6.0</code>  <code>foss/2021a</code>   <code>2.6.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>2.7.1</code>  <code>foss/2021b</code>   <code>2.7.1</code> <code>-CUDA-11.4.1</code> <code>foss/2021b</code>   <code>2.8.4</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#tensorflow-datasets","title":"TensorFlow-Datasets","text":"<p>TensorFlow Datasets is a collection of datasets ready to use, with TensorFlow or other Python ML frameworks, such as Jax. All datasets are exposed as tf.data.Datasets , enabling easy-to-use and high-performance input pipelines. </p> <p>homepage: https://www.tensorflow.org/datasets</p>    version versionsuffix toolchain     <code>4.7.0</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#tensorflow-probability","title":"tensorflow-probability","text":"<p>TensorFlow Probability (TFP) is a library for probabilistic reasoning and statistical analysis.</p> <p>homepage: https://www.tensorflow.org/probability</p>    version versionsuffix toolchain     <code>0.9.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>0.12.1</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.16.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#tensorrt","title":"TensorRT","text":"<p>NVIDIA TensorRT is a platform for high-performance deep learning inference</p> <p>homepage: https://developer.nvidia.com/tensorrt</p>    version versionsuffix toolchain     <code>4.0.1.6</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>"},{"location":"version-specific/supported-software/#terastructure","title":"terastructure","text":"<p>TeraStructure is a new algorithm to fit Bayesian models of genetic variation in human  populations on tera-sample-sized data sets (10^12 observed genotypes, i.e., 1M individuals at 1M SNPs).  This package provides a scalable, multi-threaded C++ implementation that can be run on a single computer. </p> <p>homepage: https://github.com/StoreyLab/terastructure</p>    version toolchain     <code>1.0</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#termcolor","title":"termcolor","text":"<p>Termcolor is a header-only C++ library for printing colored  messages to the terminal.</p> <p>homepage: https://termcolor.readthedocs.io/</p>    version toolchain     <code>2.0.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#tesla-deployment-kit","title":"Tesla-Deployment-Kit","text":"<p>The Tesla Deployment Kit is a set of tools provided primarily for the NVIDIA Tesla  range of GPUs. They aim to empower users to better manage their NVIDIA GPUs by providing a broad  range of functionalities. The kit contains:  * NVIDIA Management Library (NVML),  * Tesla Deployment Kit - Linux Edition (Aug 1st, 2013)</p> <p>homepage: https://developer.nvidia.com/tesla-deployment-kit</p>    version toolchain     <code>5.319.43</code> <code>system</code>"},{"location":"version-specific/supported-software/#tesseract","title":"tesseract","text":"<p>Tesseract is an optical character recognition engine</p> <p>homepage: https://github.com/tesseract-ocr/tesseract</p>    version toolchain     <code>4.0.0</code> <code>GCCcore/7.3.0</code>   <code>4.1.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/8.2.0</code>   <code>5.3.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#testpath","title":"testpath","text":"<p>Test utilities for code working with files and commands</p> <p>homepage: https://github.com/jupyter/testpath</p>    version versionsuffix toolchain     <code>0.3</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.3</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.3</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.3</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#tetgen","title":"TetGen","text":"<p>A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator </p> <p>homepage: http://wias-berlin.de/software/index.jsp?id=TetGen</p>    version toolchain     <code>1.5.0</code> <code>GCCcore/6.4.0</code>   <code>1.6.0</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#tetoolkit","title":"TEToolkit","text":"<p>Tools for estimating differential enrichment of Transposable  Elements and other highly repetitive regions</p> <p>homepage: http://hammelllab.labsites.cshl.edu/software/#TEToolkit</p>    version versionsuffix toolchain     <code>1.5.1</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#tetranscripts","title":"TEtranscripts","text":"<p>TEtranscripts and TEcount takes RNA-seq (and similar data) and annotates reads to both genes &amp; transposable elements. TEtranscripts then performs differential analysis using DESeq2.</p> <p>homepage: https://github.com/mhammell-laboratory/TEtranscripts</p>    version toolchain     <code>2.2.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#texinfo","title":"texinfo","text":"<p>Texinfo is the official documentation format of the GNU project.</p> <p>homepage: https://www.gnu.org/software/texinfo/</p>    version toolchain     <code>4.13a</code> <code>system</code>   <code>5.2</code> <code>GCC/4.8.2</code>   <code>6.4</code> <code>GCCcore/5.4.0</code>   <code>6.5</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>6.6</code> <code>GCCcore/8.2.0</code>   <code>6.7</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>6.8</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#texlive","title":"texlive","text":"<p>TeX is a typesetting language. Instead of visually formatting your text, you enter your manuscript  text intertwined with TeX commands in a plain text file. You then run TeX to produce formatted output, such as a  PDF file. Thus, in contrast to standard word processors, your document is a separate file that does not pretend to  be a representation of the final typeset output, and so can be easily edited and manipulated.</p> <p>homepage: https://tug.org</p>    version toolchain     <code>20200406</code> <code>GCCcore/8.3.0</code>   <code>20210324</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>20220321</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#text-csv","title":"Text-CSV","text":"<p>Text-CSV parser</p> <p>homepage: https://metacpan.org/pod/Text::CSV</p>    version versionsuffix toolchain     <code>1.33</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#tfea","title":"TFEA","text":"<p>Transcription Factor Enrichment Analysis </p> <p>homepage: https://github.com/Dowell-Lab/TFEA</p>    version versionsuffix toolchain     <code>1.1.4</code> <code>-muMerge-1.1.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#theano","title":"Theano","text":"<p>Theano is a Python library that allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently.</p> <p>homepage: https://deeplearning.net/software/theano</p>    version versionsuffix toolchain     <code>0.8.2</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.8.2</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.8.2</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.9.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.9.0</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>1.0.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>1.0.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.0.1</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>1.0.2</code> <code>-Python-2.7.14</code> <code>fosscuda/2017b</code>, <code>intelcuda/2017b</code>   <code>1.0.2</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>1.0.2</code> <code>-Python-3.6.3</code> <code>fosscuda/2017b</code>, <code>intelcuda/2017b</code>   <code>1.0.2</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.0.3</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.0.4</code>  <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>1.0.4</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.0.4</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>1.0.4</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>, <code>intel/2019b</code>   <code>1.0.4</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.1.2</code> <code>-PyMC</code> <code>foss/2020b</code>, <code>foss/2021b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>, <code>intel/2021b</code>"},{"location":"version-specific/supported-software/#themispy","title":"ThemisPy","text":"<p>A header-only C++ library for L-BFGS and L-BFGS-B algorithms</p> <p>homepage: https://github.com/aeb/ThemisPy</p>    version toolchain     <code>0.3.0</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#theta","title":"THetA","text":"<p>Tumor Heterogeneity Analysis (THetA) and THetA2 are algorithms  that estimate the tumor purity and clonal/subclonal copy number aberrations  directly from high-throughput DNA sequencing data.</p> <p>homepage: https://github.com/raphael-group/THetA</p>    version versionsuffix toolchain     <code>0.7</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#thurstonianirt","title":"thurstonianIRT","text":"<p>Fit Thurstonian IRT models in R using Stan, lavaan, or Mplus</p> <p>homepage: https://github.com/paul-buerkner/thurstonianIRT</p>    version versionsuffix toolchain     <code>0.9.0</code> <code>-R-3.6.0</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#ticcutils","title":"TiCCutils","text":"<p>TiCC utils is a collection of generic C++ software which is used in a lot of programs produced at  Tilburg centre for Cognition and Communication (TiCC) at Tilburg University and  Centre for Dutch Language and Speech at University of Antwerp.</p> <p>homepage: https://github.com/LanguageMachines/ticcutils</p>    version toolchain     <code>0.11</code> <code>foss/2016a</code>   <code>0.21</code> <code>iimpi/2019a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#tidybayes","title":"tidybayes","text":"<p>Compose data for and extract, manipulate, and visualize posterior draws from Bayesian models ('JAGS', 'Stan', 'rstanarm', 'brms', 'MCMCglmm', 'coda', ...) in a tidy data format. </p> <p>homepage: https://cran.r-project.org/package=tidybayes</p>    version versionsuffix toolchain     <code>2.1.1</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#tidymodels","title":"tidymodels","text":"<p>The tidy modeling \"verse\" is a collection of packages for modeling and statistical analysis that share the underlying design philosophy, grammar, and data structures of the tidyverse.</p> <p>homepage: https://cran.r-project.org/package=tidymodels</p>    version versionsuffix toolchain     <code>0.1.0</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#tika","title":"Tika","text":"<p>The Apache Tika toolkit detects and extracts metadata and text from over a thousand different  file types (such as PPT, XLS, and PDF).</p> <p>homepage: https://tika.apache.org/</p>    version toolchain     <code>1.16</code> <code>system</code>"},{"location":"version-specific/supported-software/#timbl","title":"TiMBL","text":"<p>TiMBL (Tilburg Memory Based Learner)  is an open source software package implementing several memory-based learning algorithms,  among which IB1-IG, an implementation of k-nearest neighbor classification with feature weighting suitable for  symbolic feature spaces, and IGTree, a decision-tree approximation of IB1-IG. All implemented algorithms have in  common that they store some representation of the training set explicitly in memory. During testing, new cases are  classified by extrapolation from the most similar stored cases.</p> <p>homepage: http://ilk.uvt.nl/timbl/</p>    version toolchain     <code>6.4.7</code> <code>foss/2016a</code>   <code>6.4.13</code> <code>iimpi/2019a</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#time","title":"time","text":"<p>The `time' command runs another program, then displays information about the resources used by that  program, collected by the system while the program was running.</p> <p>homepage: https://www.gnu.org/software/time/</p>    version toolchain     <code>1.7</code> <code>system</code>   <code>1.9</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#tinker","title":"TINKER","text":"<p>The TINKER molecular modeling software is a complete and general package for molecular mechanics  and dynamics, with some special features for biopolymers.</p> <p>homepage: https://dasher.wustl.edu/tinker</p>    version toolchain     <code>8.6.1</code> <code>foss/2018b</code>   <code>8.7.2</code> <code>foss/2019b</code>   <code>8.8.1</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#tinydb","title":"TinyDB","text":"<p>TinyDB is a lightweight document oriented database optimized for your happiness :) It's written in  pure Python and has no external dependencies. The target are small apps that would be blown away by a SQL-DB or an  external database server.</p> <p>homepage: https://tinydb.readthedocs.io/</p>    version toolchain     <code>3.15.2</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#tinyxml","title":"TinyXML","text":"<p>TinyXML is a simple, small, minimal, C++ XML parser that can be easily integrating  into other programs. It reads XML and creates C++ objects representing the XML document. The  objects can be manipulated, changed, and saved again as XML. </p> <p>homepage: https://sourceforge.net/projects/tinyxml</p>    version toolchain     <code>2.6.2</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tk","title":"Tk","text":"<p>Tk is an open source, cross-platform widget toolchain that provides a library of basic elements for  building a graphical user interface (GUI) in many different programming languages.</p> <p>homepage: https://www.tcl.tk/</p>    version versionsuffix toolchain     <code>8.6.3</code> <code>-no-X11</code> <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>   <code>8.6.4</code>  <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>   <code>8.6.4</code> <code>-libX11-1.6.3</code> <code>intel/2016a</code>   <code>8.6.4</code> <code>-no-X11</code> <code>GCC/4.9.3-2.25</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>   <code>8.6.5</code>  <code>GCC/5.4.0-2.26</code>, <code>GCCcore/6.3.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>iccifort/2016.3.210-GCC-5.4.0-2.26</code>, <code>intel/2016b</code>   <code>8.6.6</code>  <code>foss/2017a</code>, <code>intel/2017a</code>   <code>8.6.7</code>  <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>8.6.8</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>foss/2018a</code>, <code>iomkl/2018a</code>   <code>8.6.9</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>8.6.10</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>8.6.11</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>8.6.12</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tkinter","title":"Tkinter","text":"<p>Tkinter module, built with the Python buildsystem</p> <p>homepage: https://python.org/</p>    version versionsuffix toolchain     <code>2.7.13</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>2.7.14</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intelcuda/2017b</code>   <code>2.7.15</code>  <code>GCCcore/8.2.0</code>   <code>2.7.15</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>   <code>2.7.16</code>  <code>GCCcore/8.3.0</code>   <code>2.7.18</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.6.1</code> <code>-Python-3.6.1</code> <code>foss/2017a</code>, <code>intel/2017a</code>   <code>3.6.2</code> <code>-Python-3.6.2</code> <code>foss/2017b</code>   <code>3.6.3</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>3.6.4</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>, <code>iomkl/2018.02</code>, <code>iomkl/2018a</code>   <code>3.6.6</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>3.7.2</code>  <code>GCCcore/8.2.0</code>   <code>3.7.4</code>  <code>GCCcore/8.3.0</code>   <code>3.8.2</code>  <code>GCCcore/9.3.0</code>   <code>3.8.6</code>  <code>GCCcore/10.2.0</code>   <code>3.9.5</code>  <code>GCCcore/10.3.0</code>   <code>3.9.6</code>  <code>GCCcore/11.2.0</code>   <code>3.10.4</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tm-align","title":"TM-align","text":"<p>This package unifies protein structure alignment and RNA structure alignment  into the standard TM-align program for single chain structure alignment, MM-align program for  multi-chain structure alignment, and TM-score program for sequence dependent structure superposition.</p> <p>homepage: https://zhanglab.ccmb.med.umich.edu/RNA-align/TMalign/</p>    version toolchain     <code>20180426</code> <code>foss/2018b</code>, <code>intel/2019a</code>   <code>20190822</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#tmae","title":"tMAE","text":"<p>Package containing functions to:      perform a negative binomial test on allele-specific counts     add gnomAD minor allele frequencies     MAplot (FC vs total counts) of allele-specific counts and results     allelic counts (ALT vs REF)</p> <p>homepage: https://github.com/mumichae/tMAE</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-R-4.0.3</code> <code>foss/2020b</code>   <code>1.0.1</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#tmap","title":"tmap","text":"<p>tmap is a very fast visualization library for large, high-dimensional data sets. Currently, tmap is available for Python. tmap's graph layouts are based on the OGDF library.</p> <p>homepage: https://tmap.gdb.tools</p>    version toolchain     <code>20220502</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#tmux","title":"tmux","text":"<p>tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached.</p> <p>homepage: https://github.com/tmux/tmux/</p>    version toolchain     <code>1.9a</code> <code>GCC/4.9.2</code>   <code>2.2</code> <code>GCCcore/4.9.3</code>   <code>2.3</code> <code>GCC/5.4.0-2.26</code>, <code>system</code>   <code>3.1c</code> <code>GCCcore/8.3.0</code>   <code>3.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.2a</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>system</code>   <code>3.3a</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tn93","title":"TN93","text":"<p>This is a simple program meant to compute pairwise distances between  aligned nucleotide sequences in sequential FASTA format using the Tamura Nei 93 distance.</p> <p>homepage: https://github.com/veg/tn93</p>    version toolchain     <code>1.0.7</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#tobias","title":"TOBIAS","text":"<p>TOBIAS is a collection of command-line bioinformatics tools  for performing footprinting analysis on ATAC-seq data.</p> <p>homepage: https://github.com/loosolab/TOBIAS</p>    version toolchain     <code>0.12.12</code> <code>foss/2021b</code>   <code>0.14.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#tofu","title":"ToFu","text":"<p>Tomography for Fusion.</p> <p>homepage: https://github.com/ToFuProject/tofu</p>    version versionsuffix toolchain     <code>1.3.17</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>   <code>1.3.17</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>1.4.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.4.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.4.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>1.5.0</code>  <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#togl","title":"Togl","text":"<p>A Tcl/Tk widget for OpenGL rendering.</p> <p>homepage: https://sourceforge.net/projects/togl/</p>    version toolchain     <code>2.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#tokenizers","title":"tokenizers","text":"<p>Fast State-of-the-Art Tokenizers optimized for Research and Production</p> <p>homepage: https://github.com/huggingface/tokenizers</p>    version toolchain     <code>0.12.1</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#tombo","title":"Tombo","text":"<p>Tombo is a suite of tools primarily for the identification of modified nucleotides  from raw nanopore sequencing data.</p> <p>homepage: https://github.com/nanoporetech/tombo</p>    version versionsuffix toolchain     <code>1.5.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#toml-fortran","title":"TOML-Fortran","text":"<p>TOML parser for Fortran projects</p> <p>homepage: https://github.com/toml-f/toml-f</p>    version toolchain     <code>0.2.2</code> <code>GCC/10.2.0</code>, <code>iccifort/2020.4.304</code>   <code>0.3.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#topaz","title":"topaz","text":"<p>A pipeline for particle detection in cryo-electron microscopy  images using convolutional neural networks trained from positive and unlabeled  examples. Topaz also includes methods for micrograph denoising using deep de-  noising models. </p> <p>homepage: https://github.com/tbepler/topaz</p>    version versionsuffix toolchain     <code>0.2.5</code>  <code>foss/2021a</code>   <code>0.2.5</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#tophat","title":"TopHat","text":"<p>TopHat is a fast splice junction mapper for RNA-Seq reads.</p> <p>homepage: http://ccb.jhu.edu/software/tophat/</p>    version versionsuffix toolchain     <code>2.1.0</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>2.1.1</code>  <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.1.2</code>  <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>iimpi/2019b</code>   <code>2.1.2</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#torchaudio","title":"torchaudio","text":"<p>Data manipulation and transformation for audio signal processing, powered by PyTorch </p> <p>homepage: https://github.com/pytorch/audio</p>    version versionsuffix toolchain     <code>0.5.0</code> <code>-Python-3.7.4-PyTorch-1.4.0</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>"},{"location":"version-specific/supported-software/#torchdata","title":"torchdata","text":"<p>TorchData is a prototype library of common modular data loading primitives for easily constructing flexible and performant data pipelines.\" </p> <p>homepage: https://github.com/pytorch/data</p>    version versionsuffix toolchain     <code>0.3.0</code> <code>-PyTorch-1.11.0-CUDA-11.3.1</code> <code>foss/2021a</code>"},{"location":"version-specific/supported-software/#torchinfo","title":"torchinfo","text":"<p>\" Torchinfo provides information complementary to what is provided by print(your_model) in PyTorch, similar to Tensorflow's model.summary() API to view the visualization of the model, which is helpful while debugging your network. </p> <p>homepage: https://github.com/TylerYep/torchinfo</p>    version versionsuffix toolchain     <code>1.5.2</code> <code>-PyTorch-1.7.1</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#torchsampler","title":"torchsampler","text":"<p>A (PyTorch) imbalanced dataset sampler for oversampling low classes and undersampling high frequent ones.</p> <p>homepage: https://github.com/ufoym/imbalanced-dataset-sampler</p>    version versionsuffix toolchain     <code>0.1.2</code>  <code>foss/2022a</code>   <code>0.1.2</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#torchtext","title":"torchtext","text":"<p>Data loaders and abstractions for text and NLP</p> <p>homepage: https://github.com/pytorch/text</p>    version versionsuffix toolchain     <code>0.5.0</code> <code>-PyTorch-1.4.0-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>0.7.0</code> <code>-Python-3.7.4-PyTorch-1.6.0</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.8.1</code> <code>-PyTorch-1.7.1</code> <code>fosscuda/2020b</code>   <code>0.9.1</code> <code>-PyTorch-1.8.1</code> <code>fosscuda/2020b</code>   <code>0.10.0</code> <code>-PyTorch-1.9.0</code> <code>fosscuda/2020b</code>"},{"location":"version-specific/supported-software/#torchvision","title":"torchvision","text":"<p>Datasets, Transforms and Models specific to Computer Vision</p> <p>homepage: https://github.com/pytorch/vision</p>    version versionsuffix toolchain     <code>0.2.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.2.0</code> <code>-Python-3.6.4-CUDA-9.1.85</code> <code>foss/2018a</code>   <code>0.2.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>0.3.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.4.2</code> <code>-PyTorch-1.3.1</code> <code>fosscuda/2020b</code>   <code>0.4.2</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.5.0</code> <code>-Python-3.7.4-PyTorch-1.4.0</code> <code>fosscuda/2019b</code>   <code>0.7.0</code> <code>-Python-3.7.4-PyTorch-1.6.0</code> <code>foss/2019b</code>, <code>fosscuda/2019b</code>   <code>0.7.0</code> <code>-Python-3.7.4-PyTorch-1.6.0-imkl</code> <code>fosscuda/2019b</code>   <code>0.8.2</code> <code>-PyTorch-1.7.1</code> <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>0.8.2</code> <code>-Python-3.7.4-PyTorch-1.7.1</code> <code>fosscuda/2019b</code>   <code>0.9.1</code> <code>-PyTorch-1.8.1</code> <code>fosscuda/2020b</code>   <code>0.9.1</code> <code>-Python-3.7.4-PyTorch-1.8.1</code> <code>fosscuda/2019b</code>   <code>0.10.0</code> <code>-PyTorch-1.9.0</code> <code>fosscuda/2020b</code>   <code>0.11.1</code>  <code>foss/2021a</code>   <code>0.11.1</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.11.3</code>  <code>foss/2021a</code>   <code>0.11.3</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.12.0</code> <code>-PyTorch-1.11.0-CUDA-11.3.1</code> <code>foss/2021a</code>   <code>0.13.1</code>  <code>foss/2022a</code>   <code>0.13.1</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#totalview","title":"TotalView","text":"<p>TotalView is a GUI-based source code defect analysis tool that gives you unprecedented  control over processes and thread execution and visibility into program state and variables. It allows  you to debug one or many processes and/or threads in a single window with complete control over program  execution. This allows you to set breakpoints, stepping line by line through the code on a single thread,  or with coordinated groups of processes or threads, and run or halt arbitrary sets of processes or threads.  You can reproduce and troubleshoot difficult problems that can occur in concurrent programs that take  advantage of threads, OpenMP, MPI, GPUs or coprocessors.</p> <p>homepage: http://www.roguewave.com/products/totalview.aspx</p>    version versionsuffix toolchain     <code>8.11.0-0</code> <code>-linux-x86-64</code> <code>system</code>   <code>8.11.0-2</code> <code>-linux-x86-64</code> <code>system</code>   <code>8.12.0-0</code> <code>-linux-x86-64</code> <code>system</code>"},{"location":"version-specific/supported-software/#tqdm","title":"tqdm","text":"<p>A fast, extensible progress bar for Python and CLI</p> <p>homepage: https://github.com/tqdm/tqdm</p>    version versionsuffix toolchain     <code>4.24.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.24.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>4.29.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>4.32.1</code>  <code>GCCcore/8.2.0</code>   <code>4.41.1</code>  <code>GCCcore/8.3.0</code>   <code>4.41.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>4.47.0</code>  <code>GCCcore/9.3.0</code>   <code>4.51.0</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>   <code>4.56.2</code>  <code>GCCcore/10.2.0</code>   <code>4.60.0</code>  <code>GCCcore/10.2.0</code>   <code>4.61.1</code>  <code>GCCcore/10.3.0</code>   <code>4.61.2</code>  <code>GCCcore/10.3.0</code>   <code>4.62.3</code>  <code>GCCcore/11.2.0</code>   <code>4.64.0</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tracer","title":"Tracer","text":"<p>Tracer is a graphical tool for visualization and diagnostics of MCMC output.</p> <p>homepage: https://github.com/beast-dev/tracer</p>    version toolchain     <code>1.7.1</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#transcriptclean","title":"TranscriptClean","text":"<p>TranscriptClean is a Python program that corrects mismatches, microindels, and noncanonical splice junctions in long reads that have been mapped to the genome.</p> <p>homepage: https://github.com/mortazavilab/TranscriptClean</p>    version toolchain     <code>2.0.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#transdecoder","title":"TransDecoder","text":"<p>TransDecoder identifies candidate coding regions within transcript sequences,  such as those generated by de novo RNA-Seq transcript assembly using Trinity,  or constructed based on RNA-Seq alignments to the genome using  Tophat and Cufflinks.</p> <p>homepage: https://github.com/TransDecoder/TransDecoder/wiki</p>    version versionsuffix toolchain     <code>2.1.0</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#transformers","title":"Transformers","text":"<p>State-of-the-art Natural Language Processing for PyTorch and TensorFlow 2.0</p> <p>homepage: https://github.com/huggingface/transformers</p>    version versionsuffix toolchain     <code>4.2.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>4.20.1</code>  <code>foss/2021a</code>   <code>4.21.1</code>  <code>foss/2021b</code>   <code>4.24.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#transrate","title":"Transrate","text":"<p>Transrate is software for de-novo transcriptome assembly quality analysis.  It examines your assembly in detail and compares it to experimental evidence  such as the sequencing reads, reporting quality scores for contigs and  assemblies. This allows you to choose between assemblers and parameters,  filter out the bad contigs from an assembly, and help decide when  to stop trying to improve the assembly.</p> <p>homepage: http://hibberdlab.com/transrate/</p>    version toolchain     <code>1.0.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#travis","title":"travis","text":"<p>Travis CI Client (CLI and Ruby library)</p> <p>homepage: https://github.com/travis-ci/travis.rb</p>    version versionsuffix toolchain     <code>1.8.2</code> <code>-Ruby-2.3.1</code> <code>system</code>   <code>1.8.4</code> <code>-Ruby-2.3.3</code> <code>system</code>"},{"location":"version-specific/supported-software/#travis-analyzer","title":"TRAVIS-Analyzer","text":"<p>TRAVIS is a free tool for analyzing and visualizing trajectories from all kinds of Molecular Dynamics or Monte Carlo simulations.</p> <p>homepage: http://www.travis-analyzer.de/</p>    version toolchain     <code>210521</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#treatsens","title":"treatSens","text":"<p>Utilities to investigate sensitivity to unmeasured confounding in parametric models  with either binary or continuous treatment.</p> <p>homepage: https://github.com/vdorie/treatSens</p>    version versionsuffix toolchain     <code>3.0-20201002</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#treemix","title":"TreeMix","text":"<p>TreeMix is a method for inferring the patterns of population splits and mixtures in the history of a  set of populations.</p> <p>homepage: http://bitbucket.org/nygcresearch/treemix</p>    version toolchain     <code>1.13</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#treeshrink","title":"TreeShrink","text":"<p>TreeShrink is an algorithm for detecting abnormally long branches in one or more phylogenetic trees.</p> <p>homepage: https://github.com/uym2/TreeShrink</p>    version versionsuffix toolchain     <code>1.3.2</code> <code>-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>"},{"location":"version-specific/supported-software/#trf","title":"TRF","text":"<p>Tandem Repeats Finder: a program to analyze DNA sequences.</p> <p>homepage: https://tandem.bu.edu/trf/trf.html</p>    version versionsuffix toolchain     <code>4.09</code> <code>-linux64</code> <code>system</code>   <code>4.09.1</code>  <code>GCC/10.3.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#triangle","title":"Triangle","text":"<p>Triangle generates exact Delaunay triangulations, constrained Delaunay triangulations,  conforming Delaunay triangulations, Voronoi diagrams, and high-quality triangular meshes.  The latter can be generated with no small or large angles,  and are thus suitable for finite element analysis.</p> <p>homepage: http://www.cs.cmu.edu/~quake/triangle.html</p>    version toolchain     <code>1.6</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>foss/2018a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#trilinos","title":"Trilinos","text":"<p>The Trilinos Project is an effort to develop algorithms and enabling technologies  within an object-oriented software framework for the solution of large-scale, complex multi-physics  engineering and scientific problems. A unique design feature of Trilinos is its focus on packages.</p> <p>homepage: https://trilinos.org</p>    version versionsuffix toolchain     <code>12.12.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>12.12.1</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>12.12.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#trim_galore","title":"Trim_Galore","text":"<p>Trim Galore! is a wrapper script to automate quality and adapter trimming as well as quality control, with some added functionality to remove biased methylation positions for RRBS sequence files (for directional, non-directional  (or paired-end) sequencing).</p> <p>homepage: https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/</p>    version versionsuffix toolchain     <code>0.4.2</code>  <code>foss/2016b</code>   <code>0.4.4</code>  <code>foss/2016b</code>, <code>intel/2017a</code>   <code>0.5.0</code>  <code>foss/2018b</code>   <code>0.5.0</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>   <code>0.6.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.6.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.6.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.6.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.6.2</code> <code>-Java-11</code> <code>GCCcore/8.2.0</code>   <code>0.6.2</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>0.6.2</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>0.6.5</code> <code>-Java-11-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>0.6.6</code> <code>-Python-2.7.18</code> <code>GCC/10.2.0</code>   <code>0.6.6</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>0.6.7</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#trimal","title":"trimAl","text":"<p>A tool for automated alignment trimming in large-scale phylogenetic analyses</p> <p>homepage: http://trimal.cgenomics.org/</p>    version toolchain     <code>1.4.1</code> <code>GCC/8.2.0-2.31.1</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>, <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#trimesh","title":"trimesh","text":"<p>Trimesh is a Python (2.7- 3.3+) library for loading and using triangular meshes with an emphasis on watertight meshes. The goal of the library is to provide a fully featured Trimesh object which allows for easy manipulation and analysis, in the style of the excellent Polygon object in the Shapely library.</p> <p>homepage: https://trimsh.org/</p>    version toolchain     <code>3.17.1</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#trimmomatic","title":"Trimmomatic","text":"<p>Trimmomatic performs a variety of useful trimming tasks for illumina   paired-end and single ended data.The selection of trimming steps and their associated   parameters are supplied on the command line. </p> <p>homepage: http://www.usadellab.org/cms/?page=trimmomatic</p>    version versionsuffix toolchain     <code>0.32</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>0.36</code> <code>-Java-1.8.0_92</code> <code>system</code>   <code>0.38</code> <code>-Java-1.8</code> <code>system</code>   <code>0.38</code> <code>-Java-1.8.0_162</code> <code>system</code>   <code>0.39</code> <code>-Java-1.8</code> <code>system</code>   <code>0.39</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#trinity","title":"Trinity","text":"<p>Trinity represents a novel method for the efficient and robust de novo reconstruction  of transcriptomes from RNA-Seq data. Trinity combines three independent software modules: Inchworm,  Chrysalis, and Butterfly, applied sequentially to process large volumes of RNA-Seq reads.</p> <p>homepage: https://trinityrnaseq.github.io</p>    version versionsuffix toolchain     <code>2.2.0</code>  <code>foss/2016a</code>   <code>2.4.0</code>  <code>foss/2017a</code>   <code>2.5.1</code>  <code>intel/2017a</code>, <code>intel/2017b</code>   <code>2.6.6</code>  <code>intel/2018a</code>   <code>2.8.4</code>  <code>foss/2018b</code>   <code>2.8.5</code>  <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.8.5</code> <code>-Java-11</code> <code>GCC/8.3.0</code>   <code>2.9.1</code>  <code>foss/2020b</code>   <code>2.9.1</code> <code>-Python-2.7.16</code> <code>foss/2019b</code>   <code>2.9.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>2.10.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#triqs","title":"TRIQS","text":"<p>TRIQS (Toolbox for Research on Interacting Quantum Systems) is a  scientific project providing a set of C++ and Python libraries to  develop new tools for the study of interacting quantum systems. </p> <p>homepage: https://triqs.github.io/triqs</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>2.2.1</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.1.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#triqs-cthyb","title":"TRIQS-cthyb","text":"<p>TRIQS (Toolbox for Research on Interacting Quantum Systems) is a  scientific project providing a set of C++ and Python libraries to  develop new tools for the study of interacting quantum systems.   cthyb = continuous-time hybridisation-expansion quantum Monte Carlo   The TRIQS-based hybridization-expansion solver allows to solve the  generic problem of a quantum impurity embedded in a conduction bath  for an arbitrary local interaction vertex. The \u201cimpurity\u201d can be any  set of orbitals, on one or several atoms. </p> <p>homepage: https://triqs.github.io/cthyb/</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.1.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#triqs-dft_tools","title":"TRIQS-dft_tools","text":"<p>TRIQS (Toolbox for Research on Interacting Quantum Systems) is a  scientific project providing a set of C++ and Python libraries to  develop new tools for the study of interacting quantum systems.   This TRIQS-based-based application is aimed at ab-initio calculations  for correlated materials, combining realistic DFT band-structure calculation   with the dynamical mean-field theory. Together with the necessary tools to  perform the DMFT self-consistency loop for realistic multi-band problems,  the package provides a full-fledged charge self-consistent interface to the  Wien2K package. In addition, if Wien2k is not available, it provides a generic  interface for one-shot DFT+DMFT calculations, where only the single-particle  Hamiltonian in orbital space has to be provided. </p> <p>homepage: https://triqs.github.io/dft_tools/</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.1.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#triqs-tprf","title":"TRIQS-tprf","text":"<p>TRIQS (Toolbox for Research on Interacting Quantum Systems) is a  scientific project providing a set of C++ and Python libraries to  develop new tools for the study of interacting quantum systems.   TPRF is a TRIQS-based two-particle response function tool box that  implements basic operations for higher order response functions such  as inversion, products, the random phase approximation, the bethe  salpeter equation (in the local vertex approximation), etc..   The aim is to provide efficient (C++/OpenMP/MPI) implementations of  the basic operations needed to compute the two-particle response in  the different two-particle channels (particle-hole, particle-particle). </p> <p>homepage: https://triqs.github.io/tprf</p>    version versionsuffix toolchain     <code>2.2.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>3.0.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>3.1.1</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#trust","title":"TRUST","text":"<p>Tcr Receptor Utilities for Solid Tissue (TRUST) is a computational tool to analyze  TCR and BCR sequences using unselected RNA sequencing data, profiled from solid tissues, including tumors. </p> <p>homepage: https://bitbucket.org/liulab/trust</p>    version versionsuffix toolchain     <code>3.0.2</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#trust4","title":"TRUST4","text":"<p>Tcr Receptor Utilities for Solid Tissue (TRUST) is a computational tool to analyze TCR and BCR sequences using unselected RNA sequencing data, profiled from solid tissues, including tumors. TRUST4 performs de novo assembly on V, J, C genes including the hypervariable complementarity-determining region 3 (CDR3) and reports consensus of BCR/TCR sequences. TRUST4 then realigns the contigs to IMGT reference gene sequences to report the corresponding information. TRUST4 supports both single-end and paired-end sequencing data with any read length.</p> <p>homepage: https://github.com/liulab-dfci/TRUST4</p>    version toolchain     <code>1.0.5.1</code> <code>system</code>   <code>1.0.6</code> <code>GCC/11.2.0</code>   <code>1.0.7</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#trycycler","title":"Trycycler","text":"<p>Trycycler is a tool for generating consensus long-read assemblies for bacterial genomes.</p> <p>homepage: https://github.com/rrwick/Trycycler</p>    version versionsuffix toolchain     <code>0.3.3</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>0.5.2</code>  <code>foss/2021a</code>   <code>0.5.3</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#tsne","title":"tsne","text":"<p>Python library containing T-SNE algorithms.</p> <p>homepage: https://github.com/danielfrg/tsne</p>    version versionsuffix toolchain     <code>0.1.8</code> <code>-Python-2.7.16</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#turbovnc","title":"TurboVNC","text":"<p>TurboVNC is a derivative of VNC (Virtual Network Computing) that is tuned to provide  peak performance for 3D and video workloads.</p> <p>homepage: https://www.turbovnc.org</p>    version toolchain     <code>2.2.3</code> <code>GCCcore/8.2.0</code>   <code>3.0.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#tvb","title":"TVB","text":"<p>The Virtual Brain will deliver the first open simulation of the human brain  based on individual large-scale connectivity.</p> <p>homepage: http://thevirtualbrain.org</p>    version versionsuffix toolchain     <code>1.4.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>1.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#tvb-data","title":"tvb-data","text":"<p>The Virtual Brain Project (TVB Project) has the purpose of offering some modern tools to the  Neurosciences community, for computing, simulating and analyzing functional and structural data of human brains.  Various demonstration data for use with TVB.</p> <p>homepage: http://www.thevirtualbrain.org/</p>    version versionsuffix toolchain     <code>1.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>20150915</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#tvb-deps","title":"TVB-deps","text":"<p>Bundle of dependency Python packages for TVB (The Virtual Brain)</p> <p>homepage: https://thevirtualbrain.org</p>    version versionsuffix toolchain     <code>20160618</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#tvb-framework","title":"tvb-framework","text":"<p>The Virtual Brain Project (TVB Project) has the purpose of offering some modern tools to the  Neurosciences community, for computing, simulating and analyzing functional and structural data of human brains.  TVB Scientific Library is the most important scientific contribution of TVB Project.</p> <p>homepage: http://www.thevirtualbrain.org/</p>    version versionsuffix toolchain     <code>1.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>20150921</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#tvb-library","title":"tvb-library","text":"<p>The Virtual Brain Project (TVB Project) has the purpose of offering some modern tools to the  Neurosciences community, for computing, simulating and analyzing functional and structural data of human brains.  TVB Scientific Library is the most important scientific contribution of TVB Project.</p> <p>homepage: http://www.thevirtualbrain.org/</p>    version versionsuffix toolchain     <code>1.5</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>20150922</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#twl-ninja","title":"TWL-NINJA","text":"<p>Nearly Infinite Neighbor Joining Application.</p> <p>homepage: https://github.com/TravisWheelerLab/NINJA</p>    version toolchain     <code>0.97-cluster_only</code> <code>GCC/10.2.0</code>"},{"location":"version-specific/supported-software/#typing-extensions","title":"typing-extensions","text":"<p>Typing Extensions - Backported and Experimental Type Hints for Python</p> <p>homepage: https://github.com/python/typing/blob/master/typing_extensions/README.rst</p>    version versionsuffix toolchain     <code>3.7.4.3</code>  <code>GCCcore/10.2.0</code>   <code>3.7.4.3</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>   <code>3.7.4.3</code> <code>-Python-3.8.2</code> <code>GCCcore/9.3.0</code>   <code>3.10.0.0</code>  <code>GCCcore/10.3.0</code>   <code>3.10.0.2</code>  <code>GCCcore/11.2.0</code>   <code>4.3.0</code>  <code>GCCcore/11.3.0</code>   <code>4.4.0</code>  <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#u","title":"U","text":"<p>UCC - UCC-CUDA - UCLUST - UCX - UCX-CUDA - ucx-py - udocker - UDUNITS - UFL - umap-learn - UMI-tools - umi4cPackage - umis - UNAFold - uncertainty-calibration - Unicycler - Unidecode - unimap - units - unixODBC - unrar - UnZip - UQTk - USEARCH - UShER - USPEX - utf8proc - util-linux</p>"},{"location":"version-specific/supported-software/#ucc","title":"UCC","text":"<p>UCC (Unified Collective Communication) is a collective communication operations API and library that is flexible, complete, and  feature-rich for current and emerging programming models and runtimes. </p> <p>homepage: https://www.openucx.org/</p>    version toolchain     <code>1.0.0</code> <code>GCCcore/11.3.0</code>   <code>1.1.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#ucc-cuda","title":"UCC-CUDA","text":"<p>UCC (Unified Collective Communication) is a collective communication operations API and library that is flexible, complete, and  feature-rich for current and emerging programming models and runtimes.  This module adds the UCC CUDA support. </p> <p>homepage: https://www.openucx.org/</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-CUDA-11.7.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#uclust","title":"UCLUST","text":"<p>UCLUST: Extreme high-speed sequence clustering, alignment and database search.</p> <p>homepage: https://www.drive5.com/usearch/index.html</p>    version versionsuffix toolchain     <code>1.2.22q</code> <code>-i86linux64</code> <code>system</code>"},{"location":"version-specific/supported-software/#ucx","title":"UCX","text":"<p>Unified Communication X An open-source production grade communication framework for data centric and high-performance applications </p> <p>homepage: http://www.openucx.org/</p>    version versionsuffix toolchain     <code>1.3.1</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>1.5.0</code>  <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>   <code>1.5.0rc1</code> <code>-hpcx</code> <code>GCCcore/8.2.0</code>   <code>1.5.1</code>  <code>GCCcore/8.2.0</code>   <code>1.6.1</code>  <code>GCCcore/8.3.0</code>   <code>1.8.0</code>  <code>GCCcore/9.3.0</code>   <code>1.8.0</code> <code>-CUDA-11.0.2</code> <code>GCCcore/9.3.0</code>   <code>1.9.0</code>  <code>GCCcore/10.2.0</code>   <code>1.9.0</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code>   <code>1.9.0</code> <code>-CUDA-11.2.1</code> <code>GCCcore/10.2.0</code>   <code>1.10.0</code>  <code>GCCcore/10.3.0</code>   <code>1.11.0</code>  <code>GCCcore/11.2.0</code>   <code>1.11.2</code>  <code>GCCcore/11.2.0</code>   <code>1.12.1</code>  <code>GCCcore/11.3.0</code>   <code>1.13.1</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#ucx-cuda","title":"UCX-CUDA","text":"<p>Unified Communication X An open-source production grade communication framework for data centric and high-performance applications  This module adds the UCX CUDA support. </p> <p>homepage: http://www.openucx.org/</p>    version versionsuffix toolchain     <code>1.10.0</code> <code>-CUDA-11.3.1</code> <code>GCCcore/10.3.0</code>   <code>1.11.0</code> <code>-CUDA-11.4.1</code> <code>GCCcore/11.2.0</code>   <code>1.11.2</code> <code>-CUDA-11.4.1</code> <code>GCCcore/11.2.0</code>   <code>1.12.1</code> <code>-CUDA-11.7.0</code> <code>GCCcore/11.3.0</code>   <code>1.13.1</code> <code>-CUDA-12.0.0</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#ucx-py","title":"ucx-py","text":"<p>UCX-Py is the Python interface for UCX, a low-level high-performance networking library. UCX and UCX-Py supports several transport methods including InfiniBand and NVLink while still using traditional networking protocols like TCP.</p> <p>homepage: https://ucx-py.readthedocs.io</p>    version toolchain     <code>0.21.0</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#udocker","title":"udocker","text":"<p>A basic user tool to execute simple docker containers in batch  or interactive systems without root privileges.</p> <p>homepage: https://github.com/indigo-dc/udocker</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>   <code>1.1.3</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#udunits","title":"UDUNITS","text":"<p>UDUNITS supports conversion of unit specifications between formatted and binary forms,  arithmetic manipulation of units, and conversion of values between compatible scales of measurement.</p> <p>homepage: https://www.unidata.ucar.edu/software/udunits/</p>    version toolchain     <code>2.2.20</code> <code>foss/2016a</code>, <code>intel/2016b</code>   <code>2.2.24</code> <code>intel/2017a</code>   <code>2.2.25</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.2.26</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2018a</code>, <code>foss/2018b</code>, <code>foss/2020a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>2.2.28</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#ufl","title":"UFL","text":"<p>The Unified Form Language (UFL) is a domain specific language   for declaration of finite element discretizations of variational forms.   More precisely, it defines a flexible interface for choosing finite element   spaces and defining expressions for weak forms in a notation close to   mathematical notation.</p> <p>homepage: https://bitbucket.org/fenics-project/ufl</p>    version versionsuffix toolchain     <code>2018.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>   <code>2019.1.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#umap-learn","title":"umap-learn","text":"<p>Uniform Manifold Approximation and Projection (UMAP) is a dimension reduction technique  that can be used for visualisation similarly to t-SNE, but also for general non-linear  dimension reduction. </p> <p>homepage: https://umap-learn.readthedocs.io/en/latest/</p>    version toolchain     <code>0.4.6</code> <code>fosscuda/2020b</code>   <code>0.5.3</code> <code>foss/2021a</code>, <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#umi-tools","title":"UMI-tools","text":"<p>Tools for handling Unique Molecular Identifiers in NGS data sets</p> <p>homepage: https://umi-tools.readthedocs.io</p>    version versionsuffix toolchain     <code>1.0.0</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>1.0.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.0.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#umi4cpackage","title":"umi4cPackage","text":"<p>umi4cPackage is a processing and analysis pipeline for UMI-4C experiment.</p> <p>homepage: https://github.com/tanaylab/umi4cpackage</p>    version versionsuffix toolchain     <code>20200116</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#umis","title":"umis","text":"<p>Package for estimating UMI counts in Transcript Tag Counting data.</p> <p>homepage: https://github.com/vals/umis</p>    version toolchain     <code>1.0.3</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#unafold","title":"UNAFold","text":"<p>The UNAFold package contains several programs for performing energy minimization and partition  function calculations on nucleic acid sequences.</p> <p>homepage: http://mfold.rna.albany.edu/?q=DINAMelt/software</p>    version versionsuffix toolchain     <code>3.8</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#uncertainty-calibration","title":"uncertainty-calibration","text":"<p>Python library to measure the calibration error of models, including confidence intervals computed by Bootstrap resampling, and code to recalibrate models.</p> <p>homepage: https://github.com/p-lambda/verified_calibration</p>    version toolchain     <code>0.0.9</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#unicycler","title":"Unicycler","text":"<p>Unicycler is an assembly pipeline for bacterial genomes. It can assemble Illumina-only read sets  where it functions as a SPAdes-optimiser. It can also assembly long-read-only sets (PacBio or Nanopore)  where it runs a miniasm+Racon pipeline. </p> <p>homepage: https://github.com/rrwick/Unicycler</p>    version versionsuffix toolchain     <code>0.4.7</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>   <code>0.4.8</code> <code>-Python-3.8.2</code> <code>gompi/2020a</code>   <code>0.4.9</code>  <code>gompi/2021a</code>   <code>0.5.0</code>  <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#unidecode","title":"Unidecode","text":"<p>Python library for lossy ASCII transliterations of Unicode text (port of Text::Unidecode Perl module)</p> <p>homepage: https://github.com/avian2/unidecode</p>    version versionsuffix toolchain     <code>1.1.1</code> <code>-Python-3.7.4</code> <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#unimap","title":"unimap","text":"<p>Unimap is a fork of minimap2 optimized for assembly-to-reference alignment. It integrates the minigraph chaining algorithm and can align through long INDELs (up to 100kb by default) much faster than minimap2. Unimap is a better fit for resolving segmental duplications and is recommended over minimap2 for alignment between high-quality assemblies.  Unimap does not replace minimap2 for other types of alignment. It drops the support of multi-part index and short-read mapping. Its long-read alignment is different from minimap2 but is not necessarily better. Unimap is more of a specialized minimap2 at the moment.</p> <p>homepage: https://github.com/lh3/unimap</p>    version toolchain     <code>0.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#units","title":"units","text":"<p>GNU Units converts quantities expressed in various systems of measurement to their equivalents in other systems of measurement. Like many similar programs, it can handle multiplicative scale changes. It can also handle nonlinear conversions such as Fahrenheit to Celsius or wire gauge, and it can convert from and to sums of units, such as converting between meters and feet plus inches.</p> <p>homepage: https://www.gnu.org/software/units/</p>    version toolchain     <code>2.19</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#unixodbc","title":"unixODBC","text":"<p>unixODBC provides a uniform interface between application and database driver</p> <p>homepage: https://www.unixodbc.org</p>    version toolchain     <code>2.3.7</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#unrar","title":"unrar","text":"<p>RAR is a powerful archive manager.</p> <p>homepage: https://www.rarlab.com/</p>    version toolchain     <code>5.6.1</code> <code>GCCcore/7.3.0</code>   <code>5.7.3</code> <code>GCCcore/8.2.0</code>   <code>6.0.2</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#unzip","title":"UnZip","text":"<p>UnZip is an extraction utility for archives compressed in .zip format (also called \"zipfiles\"). Although highly compatible both with PKWARE's PKZIP and PKUNZIP utilities for MS-DOS and with Info-ZIP's own Zip program, our primary objectives have been portability and non-MSDOS functionality.</p> <p>homepage: http://www.info-zip.org/UnZip.html</p>    version toolchain     <code>6.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#uqtk","title":"UQTk","text":"<p>The UQ Toolkit (UQTk) is a collection of libraries and tools  for the quantification of uncertainty in numerical model predictions.</p> <p>homepage: https://www.sandia.gov/UQToolkit/</p>    version versionsuffix toolchain     <code>3.1.0</code> <code>-Python-3.7.4</code> <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#usearch","title":"USEARCH","text":"<p>USEARCH is a unique sequence analysis tool which offers search and clustering algorithms that are  often orders of magnitude faster than BLAST.</p> <p>homepage: http://www.drive5.com/usearch/index.html</p>    version versionsuffix toolchain     <code>5.2.236</code> <code>-i86linux32</code> <code>system</code>   <code>5.2.236-6.1.544</code> <code>-i86linux32</code> <code>system</code>   <code>6.1.544</code> <code>-i86linux32</code> <code>system</code>   <code>11.0.667</code> <code>-i86linux32</code> <code>system</code>"},{"location":"version-specific/supported-software/#usher","title":"UShER","text":"<p>UShER is now a package consisting of a family of programs for  rapid phylogenetic analyses, particularly suitable for the SARS-CoV-2 genomes.</p> <p>homepage: https://github.com/yatisht/usher</p>    version toolchain     <code>0.4.1</code> <code>gompi/2020b</code>   <code>0.5.0</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#uspex","title":"USPEX","text":"<p>USPEX (Universal Structure Predictor: Evolutionary Xtallography...  and in Russian \"uspekh\" means \"success\" - owing to the high success rate and many  useful results produced by this method) is a method developed by the Oganov  laboratory since 2004. The problem of crystal structure prediction is very old and  does, in fact, constitute the central problem of theoretical crystal chemistry.  USPEX can also be used for finding low-energy metastable phases, as well as stable  structures of nanoparticles, surface reconstructions, molecular packings in organic  crystals, and for searching for materials with desired physical (mechanical,  electronic) properties. The USPEX code is based on an efficient evolutionary  algorithm developed by A.R. Oganov's group, but also has options for using  alternative methods (random sampling, metadynamics, corrected particle swarm  optimization algorithms). USPEX is interfaced with many ab initio codes, such as  VASP, SIESTA, GULP, Quantum Espresso, CP2K, CASTEP, LAMMPS, and so on. </p> <p>homepage: http://uspex-team.org/uspex/overview</p>    version versionsuffix toolchain     <code>9.4.4</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#utf8proc","title":"utf8proc","text":"<p>utf8proc is a small, clean C library that provides Unicode normalization, case-folding,  and other operations for data in the UTF-8 encoding.</p> <p>homepage: https://github.com/JuliaStrings/utf8proc</p>    version toolchain     <code>2.2.0</code> <code>GCCcore/6.4.0</code>   <code>2.3.0</code> <code>GCCcore/8.2.0</code>   <code>2.5.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>2.6.1</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>   <code>2.7.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#util-linux","title":"util-linux","text":"<p>Set of Linux utilities</p> <p>homepage: https://www.kernel.org/pub/linux/utils/util-linux</p>    version toolchain     <code>2.27.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.28</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.28.1</code> <code>intel/2016b</code>   <code>2.29</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.29.2</code> <code>GCCcore/6.3.0</code>, <code>intel/2017a</code>   <code>2.30</code> <code>GCCcore/6.4.0</code>   <code>2.30.1</code> <code>GCCcore/6.3.0</code>, <code>foss/2017a</code>   <code>2.31</code> <code>GCCcore/6.4.0</code>   <code>2.31.1</code> <code>GCCcore/6.4.0</code>   <code>2.32</code> <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>   <code>2.32.1</code> <code>GCCcore/7.3.0</code>   <code>2.33</code> <code>GCCcore/8.2.0</code>   <code>2.34</code> <code>GCCcore/8.3.0</code>   <code>2.35</code> <code>GCCcore/9.3.0</code>   <code>2.36</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>   <code>2.37</code> <code>GCCcore/11.2.0</code>   <code>2.38</code> <code>GCCcore/11.3.0</code>   <code>2.38.1</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#v","title":"V","text":"<p>V8 - Vala - Valgrind - Vampir - Vampire - VarDict - variant_tools - VariantMetaCaller - VarScan - vartools - VASP - VAtools - vawk - VBZ-Compression - VCF-kit - vcflib - vcfnp - VCFtools - VEGAS - velocyto - Velvet - VEP - verifyBamID - VERSE - VESTA - ViennaRNA - Vim - VirSorter - VirtualGL - Virtuoso-opensource - VisPy - VMD - VMTK - voltools - vorbis-tools - Voro++ - vsc-base - vsc-install - vsc-mympirun - vsc-mympirun-scoop - vsc-processcontrol - VSEARCH - vt - VTK - VTune - VV - VXL</p>"},{"location":"version-specific/supported-software/#v8","title":"V8","text":"<p>R interface to Google's open source JavaScript engine</p> <p>homepage: https://cran.r-project.org/web/packages/V8/</p>    version versionsuffix toolchain     <code>2.2</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>2.3</code> <code>-R-3.6.0</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>3.2.0</code> <code>-R-3.6.2</code> <code>foss/2019b</code>   <code>3.4.0</code> <code>-R-4.0.0</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#vala","title":"Vala","text":"<p>Vala is a programming language using modern high level abstractions without imposing additional runtime requirements and without using a different ABI compared to applications and libraries written in C.</p> <p>homepage: https://wiki.gnome.org/Projects/Vala</p>    version toolchain     <code>0.52.4</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#valgrind","title":"Valgrind","text":"<p>Valgrind: Debugging and profiling tools</p> <p>homepage: https://valgrind.org</p>    version toolchain     <code>3.11.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.13.0</code> <code>foss/2017b</code>, <code>foss/2018a</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>3.14.0</code> <code>foss/2018b</code>   <code>3.16.1</code> <code>gompi/2019b</code>, <code>gompi/2020a</code>, <code>gompi/2020b</code>, <code>iimpi/2020a</code>   <code>3.17.0</code> <code>gompi/2021a</code>   <code>3.18.1</code> <code>gompi/2021b</code>, <code>iimpi/2021b</code>   <code>3.19.0</code> <code>gompi/2022a</code>   <code>3.20.0</code> <code>gompi/2022a</code>"},{"location":"version-specific/supported-software/#vampir","title":"Vampir","text":"<p>The Vampir software tool provides an easy-to-use framework that enables  developers to quickly display and analyze arbitrary program behavior at any level of detail.  The tool suite implements optimized event analysis algorithms and customizable displays that  enable fast and interactive rendering of very complex performance monitoring data.</p> <p>homepage: http://www.vampir.eu</p>    version versionsuffix toolchain     <code>8.4.1</code>  <code>system</code>   <code>8.4.1</code> <code>-demo</code> <code>system</code>"},{"location":"version-specific/supported-software/#vampire","title":"Vampire","text":"<p>The Vampire Theorem Prover.</p> <p>homepage: https://vprover.github.io/</p>    version toolchain     <code>4.5.1</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#vardict","title":"VarDict","text":"<p>VarDict is an ultra sensitive variant caller for both single  and paired sample variant calling from BAM files.</p> <p>homepage: https://github.com/AstraZeneca-NGS/VarDict</p>    version versionsuffix toolchain     <code>1.5.7</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#variant_tools","title":"variant_tools","text":"<p>Variant tools is a software tool for the manipulation, annotation, selection, simulation, and  analysis of variants in the context of next-gen sequencing analysis. Unlike some other tools used for Next-Gen  sequencing analysis, variant tools is project based and provides a whole set of tools to manipulate and analyze  genetic variants.</p> <p>homepage: https://vatlab.github.io/vat-docs/</p>    version versionsuffix toolchain     <code>3.1.3</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#variantmetacaller","title":"VariantMetaCaller","text":"<p>VariantMetaCaller automatically integrates variant calling pipelines into a better performing  overall model that also predicts accurate variant probabilities.</p> <p>homepage: http://bioinformatics.mit.bme.hu/VariantMetaCaller/</p>    version toolchain     <code>1.0</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#varscan","title":"VarScan","text":"<p>Variant calling and somatic mutation/CNV detection for next-generation sequencing data</p> <p>homepage: https://github.com/dkoboldt/varscan</p>    version versionsuffix toolchain     <code>2.3.6</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.4.1</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>2.4.4</code> <code>-Java-1.8</code> <code>system</code>   <code>2.4.4</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#vartools","title":"vartools","text":"<p>Command line utility that provides tools for processing   and analyzing astronomical time series data.</p> <p>homepage: https://www.astro.princeton.edu/~jhartman/vartools.html</p>    version toolchain     <code>1.35</code> <code>foss/2016b</code>, <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#vasp","title":"VASP","text":"<p>The Vienna Ab initio Simulation Package (VASP) is a computer program for atomic scale materials modelling, e.g. electronic structure calculations and quantum-mechanical molecular dynamics, from first principles.</p> <p>homepage: http://www.vasp.at</p>    version toolchain     <code>5.4.1</code> <code>intel/2016.02-GCC-4.9</code>"},{"location":"version-specific/supported-software/#vatools","title":"VAtools","text":"<p>VAtools is a python package that includes several tools to annotate VCF files  with data from other tools. </p> <p>homepage: https://vatools.readthedocs.io/en/latest/</p>    version versionsuffix toolchain     <code>3.0.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#vawk","title":"vawk","text":"<p>An awk-like VCF parser  </p> <p>homepage: https://github.com/cc2qe/vawk</p>    version versionsuffix toolchain     <code>0.0.1</code> <code>-Python-2.7.18</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#vbz-compression","title":"VBZ-Compression","text":"<p>VBZ compression HDF5 plugin for nanopolish</p> <p>homepage: https://github.com/nanoporetech/vbz_compression</p>    version toolchain     <code>1.0.1</code> <code>gompi/2020b</code>"},{"location":"version-specific/supported-software/#vcf-kit","title":"VCF-kit","text":"<p>VCF-kit is a command-line based collection of utilities for performing analysis on  Variant Call Format (VCF) files.</p> <p>homepage: https://github.com/AndersenLab/VCF-kit</p>    version versionsuffix toolchain     <code>0.1.6</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#vcflib","title":"vcflib","text":"<p>vcflib provides methods to manipulate and interpret sequence variation as it can be  described by VCF. The Variant Call Format (VCF) is a flat-file, tab-delimited textual format intended  to concisely describe reference-indexed genetic variations between individuals.</p> <p>homepage: https://github.com/vcflib/vcflib</p>    version versionsuffix toolchain     <code>1.0.2</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>   <code>1.0.2</code> <code>-Python-3.8.2</code> <code>GCC/9.3.0</code>   <code>1.0.3</code> <code>-R-4.1.0</code> <code>foss/2021a</code>   <code>1.0.3</code> <code>-R-4.1.2</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#vcfnp","title":"vcfnp","text":"<p>Load data from a VCF (variant call format) file into numpy arrays,   and (optionally) from there into an HDF5 file.</p> <p>homepage: https://github.com/alimanfoo/vcfnp</p>    version versionsuffix toolchain     <code>2.3.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#vcftools","title":"VCFtools","text":"<p>The aim of VCFtools is to provide   easily accessible methods for working with complex   genetic variation data in the form of VCF files.</p> <p>homepage: https://vcftools.github.io</p>    version versionsuffix toolchain     <code>0.1.14</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>0.1.15</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>   <code>0.1.15</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>0.1.15</code> <code>-Perl-5.26.1</code> <code>foss/2018a</code>   <code>0.1.16</code>  <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/11.3.0</code>, <code>GCC/8.3.0</code>, <code>GCC/9.3.0</code>, <code>iccifort/2019.5.281</code>   <code>0.1.16</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>, <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#vegas","title":"VEGAS","text":"<p>VEGAS (Versatile Gene-based Association Study) is  a free program for performing gene-based tests for association using  the results from genetic association studies </p> <p>homepage: http://gump.qimr.edu.au/VEGAS/</p>    version toolchain     <code>0.8.27</code> <code>system</code>"},{"location":"version-specific/supported-software/#velocyto","title":"velocyto","text":"<p>Velocyto is a library for the analysis of RNA velocity.</p> <p>homepage: https://velocyto.org/velocyto.py/</p>    version versionsuffix toolchain     <code>0.17.17</code>  <code>foss/2021a</code>   <code>0.17.17</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#velvet","title":"Velvet","text":"<p>Sequence assembler for very short reads</p> <p>homepage: http://www.ebi.ac.uk/~zerbino/velvet/</p>    version versionsuffix toolchain     <code>1.2.10</code> <code>-mt-kmer_191</code> <code>GCC/11.2.0</code>, <code>GCC/8.3.0</code>, <code>foss/2018a</code>, <code>foss/2018b</code>   <code>1.2.10</code> <code>-mt-kmer_37</code> <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#vep","title":"VEP","text":"<p>Variant Effect Predictor (VEP) determines the effect of your  variants (SNPs, insertions, deletions, CNVs or structural variants) on genes,  transcripts, and protein sequence, as well as regulatory regions.  Includes EnsEMBL-XS, which provides pre-compiled replacements for frequently  used routines in VEP.</p> <p>homepage: https://www.ensembl.org/info/docs/tools/vep</p>    version versionsuffix toolchain     <code>93.4</code> <code>-Perl-5.26.1</code> <code>intel/2018a</code>   <code>94.0</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>94.5</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>95.0</code> <code>-Perl-5.28.0</code> <code>foss/2018b</code>   <code>96.0</code> <code>-Perl-5.28.1</code> <code>foss/2019a</code>   <code>103.1</code>  <code>GCC/10.2.0</code>   <code>105</code>  <code>GCC/11.2.0</code>   <code>107</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#verifybamid","title":"verifyBamID","text":"<p>verifyBamID is a software that verifies whether the reads in particular file match previously known   genotypes for an individual (or group of individuals), and checks whether the reads are contaminated as a mixture of   two samples. verifyBamID can detect sample contamination and swaps when external genotypes are available. When   external genotypes are not available, verifyBamID still robustly detects sample swaps. </p> <p>homepage: http://csg.sph.umich.edu/kang/verifyBamID/index.html</p>    version toolchain     <code>1.1.3</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#verse","title":"VERSE","text":"<p>A versatile and efficient RNA-Seq read counting tool</p> <p>homepage: https://github.com/qinzhu/VERSE</p>    version toolchain     <code>0.1.5</code> <code>foss/2016b</code>"},{"location":"version-specific/supported-software/#vesta","title":"VESTA","text":"<p>VESTA is a 3D visualization program for structured models,    volumetric data such as electron/nuclear densities,    and crystal morphologies. </p> <p>homepage: http://www.jp-minerals.org/vesta</p>    version versionsuffix toolchain     <code>3.5.8</code> <code>-gtk3</code> <code>system</code>"},{"location":"version-specific/supported-software/#viennarna","title":"ViennaRNA","text":"<p>The Vienna RNA Package consists of a C code library and several stand-alone programs for the prediction and comparison of RNA secondary structures.</p> <p>homepage: https://www.tbi.univie.ac.at/RNA/</p>    version versionsuffix toolchain     <code>2.2.3</code>  <code>intel/2016b</code>   <code>2.3.4</code>  <code>foss/2016b</code>   <code>2.3.5</code>  <code>intel/2017a</code>   <code>2.4.10</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>2.4.11</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.4.14</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>   <code>2.5.0</code>  <code>foss/2021b</code>   <code>2.5.1</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#vim","title":"Vim","text":"<p>Vim is an advanced text editor that seeks to provide the power   of the de-facto Unix editor 'Vi', with a more complete feature set. </p> <p>homepage: http://www.vim.org</p>    version versionsuffix toolchain     <code>8.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>8.1.0483</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>8.1.1209</code> <code>-Python-3.7.2</code> <code>GCCcore/8.2.0</code>   <code>9.0.0950</code>  <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#virsorter","title":"VirSorter","text":"<p>VirSorter: mining viral signal from microbial genomic data.</p> <p>homepage: https://github.com/simroux/VirSorter</p>    version versionsuffix toolchain     <code>20160601</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#virtualgl","title":"VirtualGL","text":"<p>VirtualGL is an open source toolkit that gives any Linux or  Unix remote display software the ability to run OpenGL applications with full  hardware acceleration.</p> <p>homepage: https://virtualgl.org/</p>    version toolchain     <code>2.6.1</code> <code>foss/2018b</code>   <code>2.6.2</code> <code>GCCcore/9.3.0</code>   <code>3.0</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#virtuoso-opensource","title":"Virtuoso-opensource","text":"<p>Virtuoso is a high-performance and scalable Multi-Model RDBMS, Data Integration Middleware, Linked Data Deployment, and HTTP Application Server Platform.</p> <p>homepage: https://github.com/openlink/virtuoso-opensource</p>    version toolchain     <code>7.2.6.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#vispy","title":"VisPy","text":"<p>VisPy is a high-performance interactive 2D/3D data visualization library  leveraging the computational power of modern Graphics Processing Units (GPUs) through the  OpenGL library to display very large datasets.</p> <p>homepage: https://vispy.org</p>    version toolchain     <code>0.6.6</code> <code>foss/2020b</code>, <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#vmd","title":"VMD","text":"<p>VMD is a molecular visualization program for displaying, animating, and analyzing large biomolecular  systems using 3-D graphics and built-in scripting.</p> <p>homepage: https://www.ks.uiuc.edu/Research/vmd</p>    version versionsuffix toolchain     <code>1.9.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>1.9.3</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2018a</code>   <code>1.9.3</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.9.4a43</code> <code>-Python-3.7.4</code> <code>fosscuda/2019b</code>   <code>1.9.4a51</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>   <code>1.9.4a57</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#vmtk","title":"VMTK","text":"<p>vmtk is a collection of libraries and tools for 3D reconstruction, geometric analysis, mesh generation and surface data analysis for image-based modeling of blood vessels. </p> <p>homepage: https://vmtk.org</p>    version versionsuffix toolchain     <code>1.4.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>"},{"location":"version-specific/supported-software/#voltools","title":"voltools","text":"<p>CUDA-accelerated numpy 3D affine transformations</p> <p>homepage: https://github.com/the-lay/voltools</p>    version toolchain     <code>0.4.2</code> <code>foss/2020b</code>"},{"location":"version-specific/supported-software/#vorbis-tools","title":"vorbis-tools","text":"<p>Command-line tools for creating and playing Ogg Vorbis files.</p> <p>homepage: https://xiph.org/vorbis/</p>    version toolchain     <code>1.4.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#voro","title":"Voro++","text":"<p>Voro++ is a software library for carrying out three-dimensional computations of the Voronoi tessellation. A distinguishing feature of the Voro++ library is that it carries out cell-based calculations, computing the Voronoi cell for each particle individually. It is particularly well-suited for applications that rely on cell-based statistics, where features of Voronoi cells (eg. volume, centroid, number of faces) can be used to analyze a system of particles.</p> <p>homepage: http://math.lbl.gov/voro++/</p>    version toolchain     <code>0.4.6</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2019b</code>, <code>intel/2016a</code>, <code>intel/2019b</code>"},{"location":"version-specific/supported-software/#vsc-base","title":"vsc-base","text":"<p>Basic Python libraries used by UGent's HPC group</p> <p>homepage: http://hpcugent.github.com/vsc-base/</p>    version versionsuffix toolchain     <code>1.6.9</code>  <code>system</code>   <code>1.7.3</code>  <code>system</code>   <code>2.0.4</code>  <code>system</code>   <code>2.1.2</code>  <code>system</code>   <code>2.4.2</code>  <code>system</code>   <code>2.4.17</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.5.1</code>  <code>system</code>   <code>2.5.1</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>2.5.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2.5.8</code>  <code>system</code>   <code>2.8.0</code>  <code>system</code>   <code>2.8.1</code>  <code>system</code>   <code>2.8.3</code>  <code>system</code>"},{"location":"version-specific/supported-software/#vsc-install","title":"vsc-install","text":"<p>vsc-install provides shared setuptools functions and classes for Python libraries  developed by UGent's HPC group</p> <p>homepage: https://pypi.python.org/pypi/vsc-install</p>    version versionsuffix toolchain     <code>0.9.18</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.10.6</code>  <code>system</code>   <code>0.10.6</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.10.11</code> <code>-Python-2.7.11</code> <code>intel/2016a</code>   <code>0.10.11</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.10.25</code>  <code>system</code>   <code>0.10.26</code>  <code>system</code>   <code>0.11.1</code>  <code>system</code>   <code>0.11.2</code>  <code>system</code>"},{"location":"version-specific/supported-software/#vsc-mympirun","title":"vsc-mympirun","text":"<p>mympirun is a tool to make it easier for users of HPC clusters to run MPI programs with good performance.</p> <p>homepage: https://github.com/hpcugent/vsc-mympirun</p>    version versionsuffix toolchain     <code>3.2.1</code>  <code>system</code>   <code>3.3.0</code>  <code>system</code>   <code>3.4.2</code>  <code>system</code>   <code>3.4.2</code> <code>-Python-2.7.11-vsc-base-2.4.17</code> <code>intel/2016a</code>   <code>3.4.2</code> <code>-Python-2.7.11-vsc-base-2.5.1</code> <code>intel/2016a</code>   <code>3.4.2</code> <code>-vsc-base-2.4.2</code> <code>system</code>   <code>3.4.3</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>4.0.0</code>  <code>system</code>   <code>4.0.0b0</code>  <code>system</code>   <code>4.0.1</code>  <code>system</code>   <code>4.0.2</code>  <code>system</code>   <code>4.1.4</code>  <code>system</code>   <code>4.1.5</code>  <code>system</code>   <code>4.1.6</code>  <code>system</code>   <code>4.1.8</code>  <code>system</code>   <code>4.1.9</code>  <code>system</code>   <code>5.1.0</code>  <code>system</code>   <code>5.2.0</code>  <code>system</code>   <code>5.2.2</code>  <code>system</code>   <code>5.2.3</code>  <code>system</code>   <code>5.2.4</code>  <code>system</code>   <code>5.2.5</code>  <code>system</code>   <code>5.2.6</code>  <code>system</code>   <code>5.2.7</code>  <code>system</code>   <code>5.2.9</code>  <code>system</code>   <code>5.2.10</code>  <code>system</code>   <code>5.2.11</code>  <code>system</code>"},{"location":"version-specific/supported-software/#vsc-mympirun-scoop","title":"vsc-mympirun-scoop","text":"<p>VSC-tools is a set of Python libraries and scripts that are commonly used within HPC-UGent.</p> <p>homepage: http://hpcugent.github.com/vsc-mympirun/</p>    version versionsuffix toolchain     <code>3.4.1</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#vsc-processcontrol","title":"vsc-processcontrol","text":"<p>vsc-processcontrol is a module to abstract process control like scheduler settings and affinity  from actual implementations like vsc.affinity and psutil.</p> <p>homepage: http://hpcugent.github.com/vsc-processcontrol/</p>    version versionsuffix toolchain     <code>1.0</code>  <code>system</code>   <code>1.0</code> <code>-vsc-base-2.1.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#vsearch","title":"VSEARCH","text":"<p>VSEARCH supports de novo and reference based chimera detection,  clustering, full-length and prefix dereplication, rereplication,  reverse complementation, masking, all-vs-all pairwise global alignment,  exact and global alignment searching, shuffling, subsampling and sorting.  It also supports FASTQ file analysis, filtering,  conversion and merging of paired-end reads.</p> <p>homepage: https://github.com/torognes/vsearch</p>    version toolchain     <code>2.9.1</code> <code>foss/2018b</code>   <code>2.13.4</code> <code>iccifort/2019.1.144-GCC-8.2.0-2.31.1</code>   <code>2.15.0</code> <code>GCC/9.3.0</code>   <code>2.18.0</code> <code>GCC/10.2.0</code>   <code>2.21.1</code> <code>GCC/10.3.0</code>"},{"location":"version-specific/supported-software/#vt","title":"vt","text":"<p>A tool set for short variant discovery in genetic sequence data.</p> <p>homepage: http://genome.sph.umich.edu/wiki/Vt</p>    version toolchain     <code>0.57721</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>GCC/9.3.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#vtk","title":"VTK","text":"<p>The Visualization Toolkit (VTK) is an open-source, freely available software system for  3D computer graphics, image processing and visualization. VTK consists of a C++ class library and several  interpreted interface layers including Tcl/Tk, Java, and Python. VTK supports a wide variety of visualization  algorithms including: scalar, vector, tensor, texture, and volumetric methods; and advanced modeling techniques  such as: implicit modeling, polygon reduction, mesh smoothing, cutting, contouring, and Delaunay triangulation.</p> <p>homepage: https://www.vtk.org</p>    version versionsuffix toolchain     <code>6.3.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>6.3.0</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>7.0.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>7.1.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>7.1.1</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>8.0.1</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>8.1.0</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>8.1.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>8.1.1</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>   <code>8.1.1</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>8.1.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>   <code>8.2.0</code>  <code>foss/2021a</code>   <code>8.2.0</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>   <code>8.2.0</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>, <code>intel/2019a</code>   <code>8.2.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>8.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>fosscuda/2020a</code>, <code>intel/2020a</code>   <code>9.0.1</code>  <code>foss/2020b</code>, <code>foss/2021a</code>   <code>9.1.0</code>  <code>foss/2021b</code>   <code>9.2.0.rc2</code>  <code>foss/2022a</code>   <code>9.2.2</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#vtune","title":"VTune","text":"<p>Intel VTune Amplifier XE is the premier performance profiler for C, C++, C#, Fortran,  Assembly and Java.</p> <p>homepage: https://software.intel.com/en-us/vtune</p>    version toolchain     <code>2013_update6</code> <code>system</code>   <code>2013_update8</code> <code>system</code>   <code>2013_update9</code> <code>system</code>   <code>2013_update10</code> <code>system</code>   <code>2013_update11</code> <code>system</code>   <code>2013_update12</code> <code>system</code>   <code>2016_update3</code> <code>system</code>   <code>2017</code> <code>system</code>   <code>2017_update1</code> <code>system</code>   <code>2017_update2</code> <code>system</code>   <code>2017_update3</code> <code>system</code>   <code>2018_update1</code> <code>system</code>   <code>2018_update2</code> <code>system</code>   <code>2018_update3</code> <code>system</code>   <code>2019_update2</code> <code>system</code>   <code>2019_update3</code> <code>system</code>   <code>2019_update5</code> <code>system</code>   <code>2020_update3</code> <code>system</code>   <code>2021.6.0</code> <code>system</code>   <code>2021.9.0</code> <code>system</code>   <code>2022.0.0</code> <code>system</code>   <code>2022.2.0</code> <code>system</code>   <code>2022.3.0</code> <code>system</code>"},{"location":"version-specific/supported-software/#vv","title":"VV","text":"<p>VV is an open-source and cross platform image viewer, designed for fast and  simple visualization of spatio-temporal images: 2D, 2D+t, 3D and 3D+t (or 4D)  images. Only the command-line (clitk) tools are build.</p> <p>homepage: https://www.creatis.insa-lyon.fr/rio/vv</p>    version versionsuffix toolchain     <code>2018.09.19</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#vxl","title":"VXL","text":"<p>A multi-platform collection of C++ software libraries for Computer Vision and Image Understanding.</p> <p>homepage: https://sf.net/projects/vxl</p>    version toolchain     <code>1.18.0</code> <code>foss/2018a</code>"},{"location":"version-specific/supported-software/#w","title":"W","text":"<p>wandb - Wannier90 - WannierTools - Wayland - Waylandpp - WCT - wcwidth - webin-cli - WebKitGTK+ - WebSocket++ - WEKA - wget - wgsim - WHAM - WhatsHap - wheel - WIEN2k - WildMagic - Winnowmap - WisecondorX - WISExome - wkhtmltopdf - worker - wpebackend-fdo - WPS - WRF - WRF-Fire - wrf-python - wtdbg2 - wxPropertyGrid - wxPython - wxWidgets</p>"},{"location":"version-specific/supported-software/#wandb","title":"wandb","text":"<p>CLI and Python API for Weights and Biases (wandb), a tool for visualizing and tracking your machine learning experiments.</p> <p>homepage: https://www.wandb.com/</p>    version versionsuffix toolchain     <code>0.8.30</code> <code>-Python-3.7.4</code> <code>gcccuda/2019b</code>   <code>0.13.4</code>  <code>GCCcore/11.3.0</code>   <code>0.13.6</code>  <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#wannier90","title":"Wannier90","text":"<p>A tool for obtaining maximally-localised Wannier functions</p> <p>homepage: http://www.wannier.org</p>    version versionsuffix toolchain     <code>1.2</code>  <code>intel/2016.02-GCC-4.9</code>   <code>2.0.1</code>  <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>   <code>2.0.1.1</code> <code>-abinit</code> <code>intel/2018b</code>   <code>2.1.0</code>  <code>foss/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>3.0.0</code>  <code>intel/2018b</code>   <code>3.1.0</code>  <code>foss/2020b</code>, <code>foss/2021a</code>, <code>foss/2021b</code>, <code>foss/2022a</code>, <code>gomkl/2021a</code>, <code>intel/2020a</code>, <code>intel/2020b</code>, <code>intel/2021a</code>, <code>intel/2021b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#wanniertools","title":"WannierTools","text":"<p>WannierTools is an open source software that studies the physical properties of given tight-binding  model.</p> <p>homepage: http://www.wanniertools.com</p>    version toolchain     <code>2.3.0</code> <code>intel/2018a</code>   <code>2.5.1</code> <code>intel/2020b</code>"},{"location":"version-specific/supported-software/#wayland","title":"Wayland","text":"<p>Wayland is a project to define a protocol for a compositor to talk to  its clients as well as a library implementation of the protocol.  The  compositor can be a standalone display server running on Linux kernel  modesetting and evdev input devices, an X application, or a wayland  client itself.  The clients can be traditional applications, X servers  (rootless or fullscreen) or other display servers. </p> <p>homepage: https://wayland.freedesktop.org/</p>    version toolchain     <code>1.20.0</code> <code>GCCcore/11.3.0</code>   <code>1.21.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#waylandpp","title":"Waylandpp","text":"<p>Wayland is an object oriented display protocol, which features request and events. Requests can be seen as method calls on certain objects, whereas events can be seen as signals of an object. This makes the Wayland protocol a perfect candidate for a C++ binding.  The goal of this library is to create such a C++ binding for Wayland using the most modern C++ technology currently available, providing an easy to use C++ API to Wayland.</p> <p>homepage: https://github.com/NilsBrause/waylandpp</p>    version toolchain     <code>1.0.0</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#wct","title":"WCT","text":"<p>NOAA's Weather and Climate Toolkit (WCT) is free, platform independent software  distributed from NOAA's National Centers for Environmental Information (NCEI).  The WCT allows the visualization and data export of weather and climate data,  including Radar, Satellite and Model data. The WCT also provides access to  weather/climate web services provided from NCEI and other organizations. </p> <p>homepage: https://www.ncdc.noaa.gov/wct/index.php</p>    version versionsuffix toolchain     <code>4.6.0</code> <code>-Java-11</code> <code>system</code>"},{"location":"version-specific/supported-software/#wcwidth","title":"wcwidth","text":"<p>wcwidth is a low-level Python library to simplify Terminal emulation.</p> <p>homepage: https://github.com/jquast/wcwidth</p>    version versionsuffix toolchain     <code>0.1.7</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.1.7</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>0.1.7</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.1.7</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#webin-cli","title":"webin-cli","text":"<p>The Webin command line submission interface can be used to validate,  upload and submit files to the European Nucleotide Archive (ENA)</p> <p>homepage: https://github.com/enasequence/webin-cli</p>    version toolchain     <code>1.8.9</code> <code>system</code>"},{"location":"version-specific/supported-software/#webkitgtk","title":"WebKitGTK+","text":"<p>WebKitGTK+ is a full-featured port of the WebKit rendering engine, suitable for projects requiring any kind of web integration, from hybrid HTML/CSS applications to full-fledged web browsers. It offers WebKit's full functionality and is useful in a wide range of systems from desktop computers to embedded systems like phones, tablets, and televisions.</p> <p>homepage: https://webkitgtk.org/</p>    version toolchain     <code>2.24.1</code> <code>GCC/8.2.0-2.31.1</code>   <code>2.27.4</code> <code>GCC/10.3.0</code>, <code>GCC/8.3.0</code>   <code>2.37.1</code> <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#websocket","title":"WebSocket++","text":"<p>WebSocket++ is an open source (BSD license) header only C++ library  that implements RFC6455 The WebSocket Protocol. </p> <p>homepage: https://www.zaphoyd.com/websocketpp/</p>    version toolchain     <code>0.8.1</code> <code>gompi/2019a</code>"},{"location":"version-specific/supported-software/#weka","title":"WEKA","text":"<p>Weka is a collection of machine learning algorithms for data mining tasks.   The algorithms can either be applied directly to a dataset or called from your own Java code.   Weka contains tools for data pre-processing, classification, regression, clustering,   association rules, and visualization. It is also well-suited for developing new machine   learning schemes.</p> <p>homepage: http://www.cs.waikato.ac.nz/ml/weka/index.html</p>    version versionsuffix toolchain     <code>3.6.12</code> <code>-Java-1.7.0_80</code> <code>system</code>   <code>3.7.0</code> <code>-Java-1.7.0_80</code> <code>system</code>"},{"location":"version-specific/supported-software/#wget","title":"wget","text":"<p>GNU Wget is a free software package for retrieving files using HTTP, HTTPS and FTP,  the most widely-used Internet protocols. It is a non-interactive commandline tool,  so it may easily be called from scripts, cron jobs, terminals without X-Windows support, etc.</p> <p>homepage: https://www.gnu.org/software/wget</p>    version toolchain     <code>1.17.1</code> <code>foss/2016a</code>, <code>foss/2016b</code>   <code>1.19.4</code> <code>GCCcore/6.4.0</code>   <code>1.20.1</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>   <code>1.20.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.21.1</code> <code>GCCcore/10.3.0</code>   <code>1.21.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#wgsim","title":"wgsim","text":"<p>Wgsim is a small tool for simulating sequence reads from a reference genome.</p> <p>homepage: https://github.com/lh3/wgsim/</p>    version toolchain     <code>20111017</code> <code>GCC/10.2.0</code>, <code>GCC/11.2.0</code>"},{"location":"version-specific/supported-software/#wham","title":"WHAM","text":"<p>An implementation of WHAM:  the Weighted Histogram Analysis Method</p> <p>homepage: http://membrane.urmc.rochester.edu/?page_id=126</p>    version versionsuffix toolchain     <code>2.0.9.1</code>  <code>intel/2019a</code>   <code>2.0.9.1</code> <code>-kj_mol</code> <code>intel/2019a</code>   <code>2.0.10.2</code>  <code>intel/2020a</code>   <code>2.0.10.2</code> <code>-kj_mol</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#whatshap","title":"WhatsHap","text":"<p>WhatsHap is a software for phasing genomic variants using DNA sequencing reads, also called read-based phasing or haplotype assembly. It is especially suitable for long reads, but works also well with short reads.</p> <p>homepage: https://whatshap.readthedocs.io</p>    version toolchain     <code>1.1</code> <code>foss/2020b</code>, <code>foss/2021a</code>   <code>1.4</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#wheel","title":"wheel","text":"<p>A built-package format for Python.</p> <p>homepage: https://pypi.python.org/pypi/wheel</p>    version versionsuffix toolchain     <code>0.29.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>   <code>0.29.0</code> <code>-Python-3.5.1</code> <code>foss/2016a</code>   <code>0.30.0</code> <code>-Python-2.7.14</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.30.0</code> <code>-Python-3.6.3</code> <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>0.30.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>intel/2018a</code>   <code>0.31.0</code> <code>-Python-2.7.14</code> <code>fosscuda/2018a</code>, <code>intel/2018a</code>   <code>0.31.0</code> <code>-Python-3.6.4</code> <code>foss/2018a</code>, <code>fosscuda/2018a</code>   <code>0.31.1</code> <code>-Python-2.7.15</code> <code>fosscuda/2018b</code>   <code>0.31.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>fosscuda/2018b</code>"},{"location":"version-specific/supported-software/#wien2k","title":"WIEN2k","text":"<p>The program package WIEN2k allows to perform electronic structure calculations of solids using density functional theory (DFT). It is based on the full-potential (linearized) augmented plane-wave ((L)APW) + local orbitals (lo) method, one among the most accurate schemes for band structure calculations. WIEN2k is an all-electron scheme including relativistic effects and has many features.</p> <p>homepage: http://www.wien2k.at/</p>    version toolchain     <code>17.1</code> <code>foss/2018a</code>, <code>gimkl/2017a</code>, <code>intel/2018a</code>   <code>18.1</code> <code>foss/2018a</code>, <code>gimkl/2017a</code>, <code>intel/2018a</code>   <code>19.1</code> <code>intel/2019a</code>   <code>19.2</code> <code>intel/2020b</code>   <code>21.1</code> <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#wildmagic","title":"WildMagic","text":"<p>Wild Magic 5.17</p> <p>homepage: https://www.geometrictools.com/index.html</p>    version toolchain     <code>5.17</code> <code>GCCcore/10.3.0</code>, <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#winnowmap","title":"Winnowmap","text":"<p>Winnowmap is a long-read mapping algorithm, and a result of our exploration  into superior minimizer sampling techniques.</p> <p>homepage: https://github.com/marbl/Winnowmap</p>    version toolchain     <code>1.0</code> <code>GCC/8.3.0</code>"},{"location":"version-specific/supported-software/#wisecondorx","title":"WisecondorX","text":"<p>WisecondorX -- an evolved WISECONDOR</p> <p>homepage: https://github.com/CenterForMedicalGeneticsGhent/WisecondorX</p>    version versionsuffix toolchain     <code>1.1.6</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#wisexome","title":"WISExome","text":"<p>A within-sample comparison approach to detect copy number variations in whole exome sequencing data</p> <p>homepage: https://github.com/VUmcCGP/wisexome</p>    version versionsuffix toolchain     <code>20180517</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#wkhtmltopdf","title":"wkhtmltopdf","text":"<p>wkhtmltopdf and wkhtmltoimage are open source (LGPLv3) command line tools to render   HTML into PDF and various image formats using the Qt WebKit rendering engine. These run entirely headless   and do not require a display or display service.</p> <p>homepage: http://wkhtmltopdf.org/</p>    version versionsuffix toolchain     <code>0.12.3</code> <code>-Linux-x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#worker","title":"worker","text":"<p>The Worker framework has been developed to help deal with parameter exploration experiments  that would otherwise result in many jobs, forcing the user resort to scripting to retain her sanity;  see also https://vscentrum.be/neutral/documentation/cluster-doc/running-jobs/worker-framework.</p> <p>homepage: https://github.com/gjbex/worker</p>    version versionsuffix toolchain     <code>1.6.4</code>  <code>intel/2016a</code>   <code>1.6.5</code>  <code>intel/2016a</code>   <code>1.6.6</code>  <code>intel/2016b</code>   <code>1.6.7</code> <code>-intel-2016b</code> <code>system</code>   <code>1.6.7</code> <code>-intel-2017a</code> <code>system</code>   <code>1.6.7</code> <code>-intel-2017b</code> <code>system</code>   <code>1.6.8</code> <code>-intel-2018a</code> <code>system</code>   <code>1.6.8</code> <code>-intel-2018b</code> <code>system</code>   <code>1.6.11</code>  <code>intel/2019b</code>   <code>1.6.12</code>  <code>foss/2019a</code>, <code>foss/2021b</code>   <code>1.6.13</code>  <code>iimpi/2021b</code>"},{"location":"version-specific/supported-software/#wpebackend-fdo","title":"wpebackend-fdo","text":"<p>WPE WebKit allows embedders to create simple and performant  systems based on Web platform technologies. It is a WebKit port designed with  flexibility and hardware acceleration in mind, leveraging common 3D graphics  APIs for best performance.</p> <p>homepage: https://wpewebkit.org/</p>    version toolchain     <code>1.13.1</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#wps","title":"WPS","text":"<p>WRF Preprocessing System (WPS) for WRF. The Weather Research and Forecasting (WRF) Model is  a next-generation mesoscale numerical weather prediction system designed to serve both operational  forecasting and atmospheric research needs.</p> <p>homepage: http://www.wrf-model.org</p>    version versionsuffix toolchain     <code>3.8.0</code> <code>-dmpar</code> <code>intel/2016a</code>   <code>3.9.1</code> <code>-dmpar</code> <code>foss/2020b</code>   <code>4.0.1</code> <code>-dmpar</code> <code>intel/2018b</code>   <code>4.0.2</code> <code>-dmpar</code> <code>foss/2018b</code>   <code>4.1</code> <code>-dmpar</code> <code>intel/2019b</code>   <code>4.2</code> <code>-dmpar</code> <code>foss/2020b</code>   <code>4.3.1</code> <code>-dmpar</code> <code>foss/2021a</code>   <code>4.4</code> <code>-dmpar</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#wrf","title":"WRF","text":"<p>The Weather Research and Forecasting (WRF) Model is a next-generation mesoscale  numerical weather prediction system designed to serve both operational forecasting and atmospheric  research needs.</p> <p>homepage: https://www.wrf-model.org</p>    version versionsuffix toolchain     <code>3.8.0</code> <code>-dmpar</code> <code>intel/2016a</code>, <code>intel/2016b</code>   <code>3.9.1.1</code> <code>-dmpar</code> <code>foss/2020a</code>, <code>foss/2020b</code>, <code>intel/2020a</code>, <code>intel/2020b</code>   <code>4.0.1</code> <code>-dmpar</code> <code>intel/2018b</code>   <code>4.0.2</code> <code>-dmpar</code> <code>foss/2018b</code>   <code>4.1.3</code> <code>-dm+sm</code> <code>intel/2019b</code>   <code>4.1.3</code> <code>-dmpar</code> <code>foss/2019b</code>, <code>foss/2020a</code>, <code>intel/2019b</code>   <code>4.2.2</code> <code>-dmpar</code> <code>foss/2020b</code>   <code>4.3</code> <code>-dmpar</code> <code>foss/2021a</code>   <code>4.4</code> <code>-dmpar</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#wrf-fire","title":"WRF-Fire","text":"<p>WRF-Fire combines the Weather Research and Forecasting model (WRF) with a fire code implementing a  surface fire behavior model, called SFIRE, based on semi-empirical formulas calculate the rate of spread of the fire  line (the interface between burning and unignited fuel) based on fuel properties, wind velocities from WRF, and  terrain slope. The fire spread is implemented by the level set method.</p> <p>homepage: http://www.openwfm.org/wiki/WRF-SFIRE</p>    version versionsuffix toolchain     <code>20170221</code> <code>-dmpar</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#wrf-python","title":"wrf-python","text":"<p>A collection of diagnostic and interpolation routines for use with output from  the Weather Research and Forecasting (WRF-ARW) Model.</p> <p>homepage: https://wrf-python.readthedocs.io</p>    version versionsuffix toolchain     <code>1.2.0</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>1.3.1</code> <code>-Python-3.6.6</code> <code>intel/2018b</code>"},{"location":"version-specific/supported-software/#wtdbg2","title":"wtdbg2","text":"<p>Wtdbg2 is a de novo sequence assembler for long noisy reads produced by PacBio  or Oxford Nanopore Technologies (ONT). It assembles raw reads without error  correction and then builds the consensus from intermediate assembly output. </p> <p>homepage: https://github.com/ruanjue/wtdbg2</p>    version toolchain     <code>2.3</code> <code>GCC/7.3.0-2.30</code>   <code>2.5</code> <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#wxpropertygrid","title":"wxPropertyGrid","text":"<p>wxPropertyGrid is a property sheet control for wxWidgets. In other words, it is  a specialized two-column grid for editing properties such as strings, numbers, flagsets, string arrays, and colours.</p> <p>homepage: http://wxpropgrid.sourceforge.net/</p>    version toolchain     <code>1.4.15</code> <code>GCC/4.9.2</code>"},{"location":"version-specific/supported-software/#wxpython","title":"wxPython","text":"<p>Wraps the wxWidgets C++ toolkit and provides access to the user interface portions of the wxWidgets  API, enabling Python applications to have a native GUI on Windows, Macs or Unix systems, with a native look and feel  and requiring very little (if any) platform specific code.</p> <p>homepage: https://www.wxpython.org/</p>    version versionsuffix toolchain     <code>3.0.2.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>3.0.2.0</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>3.0.2.0</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>3.0.2.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>3.0.2.0</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>   <code>4.0.4</code> <code>-Python-2.7.15</code> <code>GCC/8.2.0-2.31.1</code>   <code>4.0.4</code> <code>-Python-3.7.2</code> <code>GCC/8.2.0-2.31.1</code>   <code>4.0.7.post2</code> <code>-Python-3.7.4</code> <code>GCC/8.3.0</code>   <code>4.1.1</code>  <code>foss/2021a</code>   <code>4.2.0</code>  <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#wxwidgets","title":"wxWidgets","text":"<p>wxWidgets is a C++ library that lets developers create applications for Windows, Mac OS X, Linux and other platforms with a single code base. It has popular language bindings for Python, Perl, Ruby and many other languages, and unlike other cross-platform toolkits, wxWidgets gives applications a truly native look and feel because it uses the platform's native API rather than emulating the GUI.</p> <p>homepage: https://www.wxwidgets.org</p>    version toolchain     <code>3.0.3</code> <code>foss/2018a</code>   <code>3.0.4</code> <code>GCC/8.2.0-2.31.1</code>   <code>3.1.3</code> <code>GCC/8.3.0</code>   <code>3.1.4</code> <code>GCC/10.2.0</code>   <code>3.1.5</code> <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>   <code>3.2.0</code> <code>GCC/11.2.0</code>   <code>3.2.1</code> <code>GCC/11.3.0</code>"},{"location":"version-specific/supported-software/#x","title":"X","text":"<p>X11 - x13as - x264 - x265 - XALT - xarray - xbitmaps - xcb-proto - xcb-util - xcb-util-image - xcb-util-keysyms - xcb-util-renderutil - xcb-util-wm - xCell - XCFun - XCrySDen - Xerces-C++ - xESMF - xextproto - xf86vidmodeproto - XGBoost - XGrafix - xineramaproto - XKeyboardConfig - XlsxWriter - XMDS2 - Xmipp - xmitgcm - XML-Compile - XML-LibXML - XML-Parser - xmlf90 - XMLSec - XMLStarlet - xonsh - xorg-macros - XPLOR-NIH - xprop - xproto - XSD - XTandem - xtb - xtensor - xtrans - Xvfb - xxd - xxHash - XZ</p>"},{"location":"version-specific/supported-software/#x11","title":"X11","text":"<p>The X Window System (X11) is a windowing system for bitmap displays</p> <p>homepage: https://www.x.org</p>    version toolchain     <code>20160819</code> <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>intel/2016b</code>   <code>20170129</code> <code>GCCcore/6.3.0</code>, <code>gimkl/2017a</code>   <code>20170314</code> <code>GCCcore/6.3.0</code>   <code>20171023</code> <code>GCCcore/6.4.0</code>   <code>20180131</code> <code>GCCcore/6.4.0</code>   <code>20180604</code> <code>GCCcore/7.3.0</code>   <code>20190311</code> <code>GCCcore/8.2.0</code>   <code>20190717</code> <code>GCCcore/8.3.0</code>   <code>20200222</code> <code>GCCcore/9.3.0</code>   <code>20201008</code> <code>GCCcore/10.2.0</code>   <code>20210518</code> <code>GCCcore/10.3.0</code>   <code>20210802</code> <code>GCCcore/11.2.0</code>   <code>20220504</code> <code>GCCcore/11.3.0</code>   <code>20221110</code> <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#x13as","title":"x13as","text":"<p>X-13ARIMA-SEATS is seasonal adjustment software produced, distributed,  and maintained by the Census Bureau.  Features of X-13ARIMA-SEATS include:     - Extensive time series modeling and model selection capabilities for        linear regression models with ARIMA errors (regARIMA models);     - The capability to generate ARIMA model-based seasonal adjustment        using a version of the SEATS software originally developed by Victor        G\u00f3mez and Agust\u00edn Maravall at the Bank of Spain, as well as nonparametric        adjustments from the X-11 procedure;     - Diagnostics of the quality and stability of the adjustments        achieved under the options selected;     - The ability to efficiently process many series at once. </p> <p>homepage: https://www.census.gov/data/software/x13as.About_X-13.html</p>    version toolchain     <code>1-1-b59</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#x264","title":"x264","text":"<p>x264 is a free software library and application for encoding video streams  into the H.264/MPEG-4 AVC compression format, and is released under the  terms of the GNU GPL. </p> <p>homepage: https://www.videolan.org/developers/x264.html</p>    version toolchain     <code>20160114</code> <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>20160430</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>20160614</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>20170406</code> <code>gimkl/2017a</code>   <code>20170721</code> <code>GCCcore/6.4.0</code>   <code>20170913</code> <code>intel/2017a</code>   <code>20171217</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>20180128</code> <code>GCCcore/6.4.0</code>   <code>20180325</code> <code>GCCcore/6.4.0</code>   <code>20181203</code> <code>GCCcore/7.3.0</code>   <code>20190413</code> <code>GCCcore/8.2.0</code>   <code>20190925</code> <code>GCCcore/8.3.0</code>   <code>20191217</code> <code>GCCcore/9.3.0</code>   <code>20201026</code> <code>GCCcore/10.2.0</code>   <code>20210414</code> <code>GCCcore/10.3.0</code>   <code>20210613</code> <code>GCCcore/11.2.0</code>   <code>20220620</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#x265","title":"x265","text":"<p>x265 is a free software library and application for encoding video streams  into the H.265 AVC compression format, and is released under the terms of  the GNU GPL. </p> <p>homepage: https://x265.org/</p>    version toolchain     <code>2.4</code> <code>foss/2016b</code>   <code>2.5</code> <code>intel/2017a</code>   <code>2.6</code> <code>GCCcore/6.4.0</code>, <code>intel/2017b</code>   <code>2.7</code> <code>GCCcore/6.4.0</code>   <code>2.9</code> <code>GCCcore/7.3.0</code>   <code>3.0</code> <code>GCCcore/8.2.0</code>   <code>3.2</code> <code>GCCcore/8.3.0</code>   <code>3.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>3.5</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#xalt","title":"XALT","text":"<p>XALT 2 is a tool to allow a site to track user executables   and library usage on a cluster. When installed it can tell a site what are   the top executables by Node-Hours or by the number of users or the number   of times it is run. XALT 2 also tracks library usage as well. XALT 2 can   also track package use by R, MATLAB or Python. It tracks both MPI and   non-MPI programs.</p> <p>homepage: https://github.com/xalt/xalt</p>    version toolchain     <code>2.8.4</code> <code>system</code>"},{"location":"version-specific/supported-software/#xarray","title":"xarray","text":"<p>xarray (formerly xray) is an open source project and Python package that aims to bring  the labeled data power of pandas to the physical sciences, by providing N-dimensional variants of the  core pandas data structures.</p> <p>homepage: https://github.com/pydata/xarray</p>    version versionsuffix toolchain     <code>0.9.5</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.9.5</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.9.6</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>0.10.0</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.10.0</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>0.10.3</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.10.4</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.10.8</code> <code>-Python-3.6.4</code> <code>intel/2018a</code>   <code>0.12.1</code> <code>-Python-3.6.6</code> <code>foss/2018b</code>, <code>intel/2018b</code>   <code>0.13.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>0.15.1</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>0.16.1</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>   <code>0.16.2</code>  <code>foss/2020b</code>, <code>fosscuda/2020b</code>, <code>intel/2020b</code>   <code>0.19.0</code>  <code>foss/2021a</code>   <code>0.20.1</code>  <code>foss/2021b</code>, <code>intel/2021b</code>   <code>2022.6.0</code>  <code>foss/2022a</code>, <code>intel/2022a</code>   <code>2022.9.0</code>  <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#xbitmaps","title":"xbitmaps","text":"<p>provides bitmaps for x</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.1.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>, <code>system</code>   <code>1.1.2</code> <code>system</code>"},{"location":"version-specific/supported-software/#xcb-proto","title":"xcb-proto","text":"<p>The X protocol C-language Binding (XCB) is a replacement for Xlib featuring a small footprint, latency hiding, direct access to the protocol, improved threading support, and extensibility.</p> <p>homepage: https://xcb.freedesktop.org/</p>    version toolchain     <code>1.11</code> <code>system</code>   <code>1.13</code> <code>system</code>"},{"location":"version-specific/supported-software/#xcb-util","title":"xcb-util","text":"<p>The xcb-util package provides additional extensions to the XCB library,  many that were previously found in Xlib, but are not part of core X protocol</p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.4.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xcb-util-image","title":"xcb-util-image","text":"<p>The xcb-util-image package provides additional extensions to the XCB library.</p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.4.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xcb-util-keysyms","title":"xcb-util-keysyms","text":"<p>The xcb-util-keysyms package contains a library for  handling standard X key constants and conversion to/from keycodes.</p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.4.0</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xcb-util-renderutil","title":"xcb-util-renderutil","text":"<p>The xcb-util-renderutil package provides additional extensions to the XCB library.</p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.3.9</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xcb-util-wm","title":"xcb-util-wm","text":"<p>The xcb-util-wm package contains libraries which provide client and window-manager helpers  for EWMH and ICCCM.</p> <p>homepage: http://xcb.freedesktop.org/</p>    version toolchain     <code>0.4.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xcell","title":"xCell","text":"<p>xCell is a gene signatures-based method learned from thousands of pure cell types from various sources.</p> <p>homepage: https://github.com/dviraran/xCell</p>    version versionsuffix toolchain     <code>1.12</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#xcfun","title":"XCFun","text":"<p>XCFun is a library of DFT exchange-correlation (XC) functionals.  It is based on automatic differentiation and can therefore generate arbitrary order  derivatives of these functionals. </p> <p>homepage: http://dftlibs.org/xcfun/</p>    version versionsuffix toolchain     <code>2.1.0</code>  <code>GCCcore/9.3.0</code>   <code>2.1.1</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.3.0</code>   <code>20180122</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>20190127</code> <code>-Python-3.7.2</code> <code>foss/2019a</code>"},{"location":"version-specific/supported-software/#xcrysden","title":"XCrySDen","text":"<p>XCrySDen is a crystalline and molecular structure visualisation program aiming at display of isosurfaces and contours, which can be superimposed on crystalline structures and interactively rotated and manipulated. It also possesses some tools for analysis of properties in reciprocal space such as interactive selection of k-paths in the Brillouin zone for the band-structure plots, and visualisation of Fermi surfaces. </p> <p>homepage: http://www.xcrysden.org/</p>    version toolchain     <code>1.5.60</code> <code>intel/2019a</code>   <code>1.6.2</code> <code>foss/2019b</code>, <code>foss/2020b</code>, <code>foss/2022a</code>, <code>intel/2019b</code>, <code>intel/2022a</code>"},{"location":"version-specific/supported-software/#xerces-c","title":"Xerces-C++","text":"<p>Xerces-C++ is a validating XML parser written in a portable subset of C++. Xerces-C++ makes it easy to give your application the ability to read and write XML data. A shared library is provided for parsing, generating, manipulating, and validating XML documents using the DOM, SAX, and SAX2 APIs.</p> <p>homepage: https://xerces.apache.org/xerces-c/</p>    version toolchain     <code>3.1.4</code> <code>GCCcore/6.4.0</code>   <code>3.2.0</code> <code>GCCcore/7.3.0</code>   <code>3.2.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>3.2.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#xesmf","title":"xESMF","text":"<p>xESMF: Universal Regridder for Geospatial Data</p> <p>homepage: https://xesmf.readthedocs.io</p>    version versionsuffix toolchain     <code>0.3.0</code>  <code>intel/2020b</code>   <code>0.3.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>"},{"location":"version-specific/supported-software/#xextproto","title":"xextproto","text":"<p>XExtProto protocol headers.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>7.3.0</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#xf86vidmodeproto","title":"xf86vidmodeproto","text":"<p>X11 XFree86 video mode extension protocol headers.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>2.3.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xgboost","title":"XGBoost","text":"<p>XGBoost is an optimized distributed gradient boosting library designed to be highly efficient,  flexible and portable.</p> <p>homepage: https://github.com/dmlc/xgboost</p>    version versionsuffix toolchain     <code>0.6a2</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>0.6a2</code> <code>-Python-3.5.2</code> <code>intel/2016b</code>   <code>0.6a2</code> <code>-Python-3.6.1</code> <code>intel/2017a</code>   <code>0.72.1</code> <code>-Python-2.7.14</code> <code>intel/2017b</code>   <code>0.90</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>   <code>1.2.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>1.5.0</code>  <code>foss/2021a</code>   <code>1.7.2</code>  <code>foss/2022a</code>   <code>1.7.2</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>   <code>20171120</code> <code>-Java-1.8.0_152</code> <code>intel/2017b</code>"},{"location":"version-specific/supported-software/#xgrafix","title":"XGrafix","text":"<p>A graphics library and controller for physics simulation programs. 3-d surface plots, scatter plots, 2-d line plots.</p> <p>homepage: https://ptsg.egr.msu.edu/</p>    version toolchain     <code>2.41</code> <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#xineramaproto","title":"xineramaproto","text":"<p>X protocol and ancillary headers for xinerama</p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.2.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xkeyboardconfig","title":"XKeyboardConfig","text":"<p>The non-arch keyboard configuration database for X Window.  The goal is to provide the consistent, well-structured,  frequently released open source of X keyboard configuration data  for X Window System implementations (free, open source and commercial).  The project is targeted to XKB-based systems.</p> <p>homepage: http://www.freedesktop.org/wiki/Software/XKeyboardConfig/</p>    version toolchain     <code>2.17</code> <code>foss/2016a</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xlsxwriter","title":"XlsxWriter","text":"<p>A Python module for creating Excel XLSX files</p> <p>homepage: https://xlsxwriter.readthedocs.io/</p>    version toolchain     <code>1.4.0</code> <code>GCCcore/10.2.0</code>   <code>1.4.4</code> <code>GCCcore/10.3.0</code>   <code>3.0.2</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#xmds2","title":"XMDS2","text":"<p>The purpose of XMDS2 is to simplify the process of creating simulations that  solve systems of initial-value first-order partial and ordinary differential equations.</p> <p>homepage: http://www.xmds.org/</p>    version versionsuffix toolchain     <code>2.2.3</code> <code>-Python-2.7.15</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#xmipp","title":"Xmipp","text":"<p>Scipion is an image processing framework to obtain 3D models of macromolecular complexes using Electron Microscopy (3DEM). It integrates several software packages and presents an unified interface for both biologists and developers. Scipion allows to execute workflows combining different software tools, while taking care of formats and conversions. Additionally, all steps are tracked and can be reproduced later on.  </p> <p>homepage: https://github.com/I2PC/scipion/wiki</p>    version versionsuffix toolchain     <code>3.19.04-Apollo</code> <code>-Python-2.7.15</code> <code>foss/2019a</code>, <code>fosscuda/2019a</code>   <code>3.22.07-Helios</code>  <code>foss/2022a</code>   <code>3.22.07-Helios</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#xmitgcm","title":"xmitgcm","text":"<p>xmitgcm is a python package for reading MITgcm binary  MDS files into xarray data structures. By storing data in dask arrays,  xmitgcm enables parallel, out-of-core analysis of MITgcm output data.</p> <p>homepage: https://github.com/MITgcm/xmitgcm</p>    version toolchain     <code>0.5.2</code> <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#xml-compile","title":"XML-Compile","text":"<p>Perl module for compilation based XML processing</p> <p>homepage: https://metacpan.org/pod/XML::Compile</p>    version toolchain     <code>1.63</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#xml-libxml","title":"XML-LibXML","text":"<p>Perl binding for libxml2</p> <p>homepage: https://metacpan.org/pod/distribution/XML-LibXML/LibXML.pod</p>    version versionsuffix toolchain     <code>2.0132</code> <code>-Perl-5.24.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2.0132</code> <code>-Perl-5.24.1</code> <code>intel/2017a</code>   <code>2.0132</code> <code>-Perl-5.26.0</code> <code>foss/2017b</code>, <code>intel/2017b</code>   <code>2.0132</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>2.0132</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>   <code>2.0200</code> <code>-Perl-5.28.1</code> <code>GCCcore/8.2.0</code>   <code>2.0201</code>  <code>GCCcore/8.3.0</code>   <code>2.0205</code>  <code>GCCcore/9.3.0</code>   <code>2.0206</code>  <code>GCCcore/10.2.0</code>   <code>2.0207</code>  <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#xml-parser","title":"XML-Parser","text":"<p>This is a Perl extension interface to James Clark's XML parser, expat.</p> <p>homepage: https://search.cpan.org/~toddr/XML-Parser-2.46/</p>    version versionsuffix toolchain     <code>2.41</code> <code>-Perl-5.20.3</code> <code>intel/2016a</code>   <code>2.44</code> <code>-Perl-5.22.1</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2.44_01</code> <code>-Perl-5.24.0</code> <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016b</code>, <code>gimkl/2017a</code>, <code>intel/2016b</code>   <code>2.44_01</code> <code>-Perl-5.24.1</code> <code>GCCcore/6.3.0</code>, <code>intel/2017a</code>   <code>2.44_01</code> <code>-Perl-5.26.0</code> <code>GCCcore/6.4.0</code>   <code>2.44_01</code> <code>-Perl-5.26.1</code> <code>GCCcore/6.4.0</code>   <code>2.44_01</code> <code>-Perl-5.28.0</code> <code>GCCcore/7.3.0</code>   <code>2.46</code> <code>-Perl-5.32.1</code> <code>GCCcore/10.3.0</code>   <code>2.46</code> <code>-Perl-5.34.1</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#xmlf90","title":"xmlf90","text":"<p>xmlf90 is a basic XML parsing library written in Fortran.</p> <p>homepage: https://launchpad.net/xmlf90</p>    version toolchain     <code>1.5.3</code> <code>foss/2016b</code>, <code>foss/2017a</code>   <code>1.5.4</code> <code>GCC/10.2.0</code>, <code>GCC/10.3.0</code>, <code>GCC/11.2.0</code>, <code>iccifort/2019.5.281</code>, <code>iccifort/2020.4.304</code>, <code>intel-compilers/2021.2.0</code>, <code>intel-compilers/2021.4.0</code>"},{"location":"version-specific/supported-software/#xmlsec","title":"XMLSec","text":"<p>XML Security Library is a C library based on LibXML2,  supporting major XML security standards.</p> <p>homepage: https://www.aleksey.com/xmlsec/index.html</p>    version toolchain     <code>1.2.26</code> <code>GCCcore/6.4.0</code>"},{"location":"version-specific/supported-software/#xmlstarlet","title":"XMLStarlet","text":"<p>Command line XML tool</p> <p>homepage: http://xmlstar.sourceforge.net</p>    version toolchain     <code>1.6.1</code> <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>"},{"location":"version-specific/supported-software/#xonsh","title":"xonsh","text":"<p>Xonsh is a Python-ish, BASHwards-looking shell language and command prompt.</p> <p>homepage: https://xon.sh/</p>    version toolchain     <code>0.3.2</code> <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xorg-macros","title":"xorg-macros","text":"<p>X.org macros utilities.</p> <p>homepage: https://cgit.freedesktop.org/xorg/util/macros</p>    version toolchain     <code>1.19.0</code> <code>foss/2016a</code>, <code>foss/2016b</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>1.19.1</code> <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>   <code>1.19.2</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.19.3</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#xplor-nih","title":"XPLOR-NIH","text":"<p>A System for X-ray Crystallography and NMR</p> <p>homepage: https://nmr.cit.nih.gov/xplor-nih/</p>    version versionsuffix toolchain     <code>3.4</code> <code>-Linux_x86_64</code> <code>system</code>"},{"location":"version-specific/supported-software/#xprop","title":"xprop","text":"<p>The xprop utility is for displaying window and font properties in an X server.  One window or font is selected using the command line arguments or possibly  in the case of a window, by clicking on the desired window. A list of  properties is then given, possibly with formatting information.</p> <p>homepage: https://www.x.org/wiki/</p>    version versionsuffix toolchain     <code>1.2.2</code>  <code>GCCcore/5.4.0</code>, <code>GCCcore/6.4.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>   <code>1.2.2</code> <code>-X11-20180131</code> <code>GCCcore/6.4.0</code>   <code>1.2.3</code>  <code>GCCcore/7.3.0</code>   <code>1.2.4</code>  <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.2.5</code>  <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#xproto","title":"xproto","text":"<p>X protocol and ancillary headers</p> <p>homepage: https://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>7.0.28</code> <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>   <code>7.0.29</code> <code>intel/2016a</code>   <code>7.0.31</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#xsd","title":"XSD","text":"<p>CodeSynthesis XSD is an open-source, cross-platform W3C XML Schema to C++ data binding compiler.</p> <p>homepage: https://www.codesynthesis.com/products/xsd/</p>    version toolchain     <code>4.0.0</code> <code>GCCcore/8.2.0</code>"},{"location":"version-specific/supported-software/#xtandem","title":"XTandem","text":"<p>X!Tandem open source is software that can match tandem mass  spectra with peptide sequences, in a process that has come to be known as  protein identification.</p> <p>homepage: https://www.thegpm.org/tandem</p>    version toolchain     <code>17.02.01.4</code> <code>GCC/6.4.0-2.28</code>, <code>iccifort/2017.4.196-GCC-6.4.0-2.28</code>"},{"location":"version-specific/supported-software/#xtb","title":"xtb","text":"<p>Semiempirical Extended Tight-Binding Program Package.</p> <p>homepage: https://xtb-docs.readthedocs.io</p>    version versionsuffix toolchain     <code>6.2.2-hotfix</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>6.2.3</code>  <code>foss/2019b</code>   <code>6.4.1</code>  <code>foss/2021b</code>, <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#xtensor","title":"xtensor","text":"<p>xtensor is a C++ library meant for numerical analysis with multi-dimensional array expressions.</p> <p>homepage: https://github.com/xtensor-stack/xtensor</p>    version toolchain     <code>0.24.0</code> <code>foss/2021b</code>"},{"location":"version-specific/supported-software/#xtrans","title":"xtrans","text":"<p>xtrans includes a number of routines to make X implementations transport-independent;  at time of writing, it includes support for UNIX sockets, IPv4, IPv6, and DECnet. </p> <p>homepage: http://www.freedesktop.org/wiki/Software/xlibs</p>    version toolchain     <code>1.3.5</code> <code>GCCcore/11.3.0</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016a</code>"},{"location":"version-specific/supported-software/#xvfb","title":"Xvfb","text":"<p>Xvfb is an X server that can run on machines with no display hardware and no physical input devices.  It emulates a dumb framebuffer using virtual memory.</p> <p>homepage: https://www.x.org/releases/X11R7.6/doc/man/man1/Xvfb.1.xhtml</p>    version toolchain     <code>1.20.8</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>   <code>1.20.9</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/9.3.0</code>   <code>1.20.11</code> <code>GCCcore/10.3.0</code>   <code>1.20.13</code> <code>GCCcore/11.2.0</code>   <code>21.1.3</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#xxd","title":"xxd","text":"<p>xxd is part of the VIM package and this will only install xxd, not vim! xxd converts to/from hexdumps of binary files.</p> <p>homepage: https://www.vim.org</p>    version toolchain     <code>8.2.4220</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#xxhash","title":"xxHash","text":"<p>xxHash is an extremely fast non-cryptographic hash algorithm, working at RAM speed limit.</p> <p>homepage: https://cyan4973.github.io/xxHash</p>    version toolchain     <code>0.8.0</code> <code>GCCcore/11.2.0</code>"},{"location":"version-specific/supported-software/#xz","title":"XZ","text":"<p>xz: XZ utilities</p> <p>homepage: https://tukaani.org/xz/</p>    version versionsuffix toolchain     <code>5.0.5</code>  <code>GCC/4.8.2</code>   <code>5.2.0</code>  <code>GCC/4.9.2</code>   <code>5.2.2</code>  <code>GCC/4.9.2</code>, <code>GCC/5.4.0-2.26</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/5.4.0</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>intel/2016a</code>, <code>intel/2016b</code>   <code>5.2.2</code> <code>-gettext-0.19.7</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>5.2.3</code>  <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>gimkl/2017a</code>   <code>5.2.4</code>  <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.2.0</code>   <code>5.2.5</code>  <code>GCCcore/10.1.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/9.3.0</code>   <code>5.2.7</code>  <code>GCCcore/12.2.0</code>"},{"location":"version-specific/supported-software/#y","title":"Y","text":"<p>YACS - Yade - yaff - Yambo - yaml-cpp - YANK - YAPS - Yasm - YAXT - Yices</p>"},{"location":"version-specific/supported-software/#yacs","title":"YACS","text":"<p>YACS was created as a lightweight library to define and manage system configurations, such as those commonly found in software designed for scientific experimentation. These \"configurations\" typically cover concepts like hyperparameters used in training a machine learning model or configurable model hyperparameters, such as the depth of a convolutional neural network.</p> <p>homepage: https://github.com/rbgirshick/yacs</p>    version toolchain     <code>0.1.8</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/8.3.0</code>"},{"location":"version-specific/supported-software/#yade","title":"Yade","text":"<p>Yade is an extensible open-source framework for discrete numerical models,   focused on Discrete Element Method. The computation parts are written in c++ using flexible object model,   allowing independent implementation of new alogrithms and interfaces.   Python is used for rapid and concise scene construction, simulation control, postprocessing and debugging. </p> <p>homepage: https://yade-dem.org/doc/</p>    version versionsuffix toolchain     <code>1.20.0</code> <code>-Python-2.7.11</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>2016.06a</code> <code>-Python-2.7.12</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>2017.01a</code> <code>-Python-2.7.12</code> <code>intel/2016b</code>   <code>2018.02b</code> <code>-Python-2.7.14</code> <code>intel/2018a</code>"},{"location":"version-specific/supported-software/#yaff","title":"yaff","text":"<p>Yaff stands for 'Yet another force field'. It is a pythonic force-field code.</p> <p>homepage: https://molmod.github.io/yaff/</p>    version versionsuffix toolchain     <code>1.0.develop.2.15</code> <code>-Python-2.7.12-HDF5-1.8.18</code> <code>intel/2016b</code>   <code>1.1.2</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.1.3</code> <code>-Python-2.7.13</code> <code>intel/2017a</code>   <code>1.4.2</code> <code>-Python-2.7.14</code> <code>foss/2018a</code>, <code>intel/2017b</code>, <code>intel/2018a</code>   <code>1.4.2</code> <code>-Python-3.6.3</code> <code>intel/2017b</code>   <code>1.4.5</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.5.0</code> <code>-Python-2.7.15</code> <code>intel/2018b</code>   <code>1.5.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>1.6.0</code>  <code>foss/2020b</code>   <code>1.6.0</code> <code>-Python-3.7.2</code> <code>intel/2019a</code>   <code>1.6.0</code> <code>-Python-3.7.4</code> <code>foss/2019b</code>, <code>intel/2019b</code>   <code>1.6.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>, <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#yambo","title":"Yambo","text":"<p>Yambo is a FORTRAN/C code for Many-Body calculations in solid state and molecular physics.  Yambo relies on the Kohn-Sham wavefunctions generated by two DFT public codes: abinit, and PWscf.</p> <p>homepage: http://www.yambo-code.org</p>    version toolchain     <code>3.4.2</code> <code>intel/2016.02-GCC-4.9</code>   <code>5.0.4</code> <code>intel/2021a</code>"},{"location":"version-specific/supported-software/#yaml-cpp","title":"yaml-cpp","text":"<p>yaml-cpp is a YAML parser and emitter in C++ matching the YAML 1.2 spec</p> <p>homepage: https://github.com/jbeder/yaml-cpp</p>    version toolchain     <code>0.6.3</code> <code>GCCcore/8.3.0</code>   <code>0.7.0</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#yank","title":"YANK","text":"<p>A GPU-accelerated Python framework for exploring algorithms for alchemical free energy calculations</p> <p>homepage: http://getyank.org/</p>    version versionsuffix toolchain     <code>0.25.2</code> <code>-Python-3.8.2</code> <code>intel/2020a</code>"},{"location":"version-specific/supported-software/#yaps","title":"YAPS","text":"<p>YAPS - Yet Another Positioning Solver</p> <p>homepage: https://github.com/baktoft/yaps</p>    version versionsuffix toolchain     <code>1.1.0</code> <code>-R-3.5.1</code> <code>foss/2018b</code>   <code>1.1.0</code> <code>-R-3.6.0</code> <code>intel/2019a</code>"},{"location":"version-specific/supported-software/#yasm","title":"Yasm","text":"<p>Yasm: Complete rewrite of the NASM assembler with BSD license</p> <p>homepage: http://www.tortall.net/projects/yasm/</p>    version toolchain     <code>1.3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>, <code>foss/2016a</code>, <code>foss/2016b</code>, <code>foss/2017a</code>, <code>gimkl/2.11.5</code>, <code>gimkl/2017a</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017a</code>"},{"location":"version-specific/supported-software/#yaxt","title":"YAXT","text":"<p>Yet Another eXchange Tool</p> <p>homepage: https://www.dkrz.de/redmine/projects/yaxt</p>    version toolchain     <code>0.5.1</code> <code>intel/2016b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>   <code>0.6.0</code> <code>intel/2018a</code>, <code>intel/2018b</code>, <code>iomkl/2018b</code>   <code>0.6.2</code> <code>foss/2018b</code>, <code>gompi/2019b</code>, <code>iimpi/2019b</code>   <code>0.9.0</code> <code>gompi/2020b</code>   <code>0.9.1</code> <code>gompi/2021a</code>   <code>0.9.2</code> <code>iimpi/2021b</code>   <code>0.9.2.1</code> <code>gompi/2021b</code>"},{"location":"version-specific/supported-software/#yices","title":"Yices","text":"<p>Yices 2 is an SMT solver that decides the satisfiability of formulas containing uninterpreted  function symbols with equality, real and integer arithmetic, bitvectors, scalar types, and tuples. Yices 2 supports  both linear and nonlinear arithmetic.</p> <p>homepage: https://yices.csl.sri.com/index.html</p>    version toolchain     <code>2.6.2</code> <code>GCCcore/10.2.0</code>"},{"location":"version-specific/supported-software/#z","title":"Z","text":"<p>Z3 - zarr - ZeroMQ - zfp - Zgoubi - zingeR - Zip - zlib - zlib-ng - zlibbioc - Zopfli - ZPAQ - zsh - zstd</p>"},{"location":"version-specific/supported-software/#z3","title":"Z3","text":"<p>Z3 is a theorem prover from Microsoft Research. </p> <p>homepage: https://github.com/Z3Prover/z3</p>    version toolchain     <code>4.8.9</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.8.10</code> <code>GCCcore/10.2.0</code>   <code>4.8.11</code> <code>GCCcore/10.3.0</code>   <code>4.8.12</code> <code>GCCcore/11.2.0</code>   <code>4.8.16</code> <code>GCCcore/11.3.0</code>   <code>4.10.2</code> <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#zarr","title":"zarr","text":"<p>Zarr is a Python package providing an implementation of compressed, chunked, N-dimensional arrays,  designed for use in parallel computing.</p> <p>homepage: https://zarr.readthedocs.io/en/stable/</p>    version versionsuffix toolchain     <code>2.1.4</code> <code>-Python-2.7.13</code> <code>foss/2017a</code>   <code>2.4.0</code> <code>-Python-3.8.2</code> <code>foss/2020a</code>   <code>2.8.1</code>  <code>foss/2020b</code>   <code>2.10.1</code>  <code>foss/2021a</code>   <code>2.13.3</code>  <code>foss/2021b</code>, <code>foss/2022a</code>"},{"location":"version-specific/supported-software/#zeromq","title":"ZeroMQ","text":"<p>ZeroMQ looks like an embeddable networking library but acts like a concurrency framework.  It gives you sockets that carry atomic messages across various transports like in-process,  inter-process, TCP, and multicast. You can connect sockets N-to-N with patterns like fanout,  pub-sub, task distribution, and request-reply. It's fast enough to be the fabric for clustered  products. Its asynchronous I/O model gives you scalable multicore applications, built as asynchronous  message-processing tasks. It has a score of language APIs and runs on most operating systems.</p> <p>homepage: https://www.zeromq.org/</p>    version toolchain     <code>4.1.4</code> <code>foss/2016a</code>, <code>intel/2016a</code>   <code>4.1.5</code> <code>intel/2016b</code>   <code>4.2.0</code> <code>foss/2016b</code>, <code>intel/2016b</code>   <code>4.2.2</code> <code>foss/2017a</code>, <code>foss/2017b</code>, <code>fosscuda/2017b</code>, <code>intel/2017a</code>, <code>intel/2017b</code>, <code>intelcuda/2017b</code>   <code>4.2.5</code> <code>foss/2018a</code>, <code>foss/2018b</code>, <code>fosscuda/2018b</code>, <code>intel/2018a</code>, <code>intel/2018b</code>   <code>4.3.2</code> <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>4.3.3</code> <code>GCCcore/10.2.0</code>   <code>4.3.4</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>"},{"location":"version-specific/supported-software/#zfp","title":"zfp","text":"<p>zfp is a compressed format for representing multidimensional floating-point and integer arrays. zfp provides compressed-array classes that support high throughput read and write random access to individual array elements. zfp also supports serial and parallel (OpenMP and CUDA) compression of whole arrays, e.g., for applications that read and write large data sets to and from disk.</p> <p>homepage: https://github.com/LLNL/zfp</p>    version toolchain     <code>0.5.5</code> <code>GCCcore/10.2.0</code>   <code>1.0.0</code> <code>GCCcore/10.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#zgoubi","title":"Zgoubi","text":"<p>Zgoubi is a ray-tracing code in use for charged particle beam dynamics simulations.  It can simulate beam dynamics in a large variety of machines and optical systems.</p> <p>homepage: https://zgoubi.sourceforge.io</p>    version toolchain     <code>6.0.2</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#zinger","title":"zingeR","text":"<p>Zero-Inflated Negative binomial Gene Expression in R</p> <p>homepage: https://github.com/statOmics/zingeR</p>    version versionsuffix toolchain     <code>20180131</code> <code>-R-3.5.1</code> <code>foss/2018b</code>"},{"location":"version-specific/supported-software/#zip","title":"Zip","text":"<p>Zip is a compression and file packaging/archive utility. Although highly compatible both with PKWARE's PKZIP and PKUNZIP utilities for MS-DOS and with Info-ZIP's own UnZip, our primary objectives have been portability and other-than-MSDOS functionality</p> <p>homepage: http://www.info-zip.org/Zip.html</p>    version toolchain     <code>3.0</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/11.3.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>"},{"location":"version-specific/supported-software/#zlib","title":"zlib","text":"<p>zlib is designed to be a free, general-purpose, legally unencumbered -- that is,  not covered by any patents -- lossless data-compression library for use on virtually any  computer hardware and operating system.</p> <p>homepage: http://www.zlib.net/</p>    version toolchain     <code>1.2.7</code> <code>GCC/4.8.1</code>, <code>GCC/4.8.2</code>   <code>1.2.8</code> <code>GCC/4.8.2</code>, <code>GCC/4.8.3</code>, <code>GCC/4.8.4</code>, <code>GCC/4.9.2</code>, <code>GCC/4.9.2-binutils-2.25</code>, <code>GCC/4.9.3</code>, <code>GCC/4.9.3-2.25</code>, <code>GCC/4.9.3-binutils-2.25</code>, <code>GCC/5.1.0-binutils-2.25</code>, <code>GCCcore/4.9.2</code>, <code>GCCcore/4.9.3</code>, <code>GCCcore/4.9.4</code>, <code>GCCcore/5.3.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/6.1.0</code>, <code>GCCcore/6.2.0</code>, <code>GCCcore/6.3.0</code>, <code>GNU/4.9.3-2.25</code>, <code>foss/2016.04</code>, <code>foss/2016a</code>, <code>gimkl/2.11.5</code>, <code>intel/2016.02-GCC-4.9</code>, <code>intel/2016a</code>, <code>intel/2016b</code>, <code>intel/2017.01</code>, <code>iomkl/2016.07</code>, <code>iomkl/2016.09-GCC-4.9.3-2.25</code>, <code>system</code>   <code>1.2.10</code> <code>system</code>   <code>1.2.11</code> <code>FCC/4.5.0</code>, <code>GCCcore/10.1.0</code>, <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>, <code>GCCcore/11.1.0</code>, <code>GCCcore/11.2.0</code>, <code>GCCcore/5.4.0</code>, <code>GCCcore/5.5.0</code>, <code>GCCcore/6.3.0</code>, <code>GCCcore/6.4.0</code>, <code>GCCcore/7.1.0</code>, <code>GCCcore/7.2.0</code>, <code>GCCcore/7.3.0</code>, <code>GCCcore/7.4.0</code>, <code>GCCcore/8.1.0</code>, <code>GCCcore/8.2.0</code>, <code>GCCcore/8.3.0</code>, <code>GCCcore/8.4.0</code>, <code>GCCcore/9.1.0</code>, <code>GCCcore/9.2.0</code>, <code>GCCcore/9.3.0</code>, <code>GCCcore/9.4.0</code>, <code>GCCcore/system</code>, <code>gimkl/2017a</code>, <code>system</code>   <code>1.2.12</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.1.0</code>, <code>GCCcore/12.2.0</code>, <code>GCCcore/9.5.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#zlib-ng","title":"zlib-ng","text":"<p>zlib data compression library for the next generation systems</p> <p>homepage: https://github.com/zlib-ng/zlib-ng</p>    version toolchain     <code>2.0.5</code> <code>GCCcore/10.2.0</code>   <code>2.0.6</code> <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#zlibbioc","title":"zlibbioc","text":"<p>This package uses the source code of zlib-1.2.5 to create libraries for systems that do not have  these available via other means.</p> <p>homepage: https://bioconductor.org/packages/release/bioc/html/zlibbioc.html</p>    version versionsuffix toolchain     <code>1.18.0</code> <code>-R-3.2.3</code> <code>intel/2016a</code>   <code>1.20.0</code> <code>-R-3.3.1</code> <code>intel/2016b</code>"},{"location":"version-specific/supported-software/#zopfli","title":"Zopfli","text":"<p>Zopfli Compression Algorithm is a compression library programmed in C to perform very good, but slow, deflate or zlib compression.</p> <p>homepage: https://github.com/google/zopfli</p>    version toolchain     <code>1.0.3</code> <code>GCCcore/10.2.0</code>, <code>GCCcore/10.3.0</code>"},{"location":"version-specific/supported-software/#zpaq","title":"ZPAQ","text":"<p>zpaq is a free and open source (GPL v3) incremental,  journaling command-line archiver for Windows, Linux and Mac OS/X</p> <p>homepage: http://mattmahoney.net/dc/zpaq.html</p>    version toolchain     <code>7.00</code> <code>GCC/4.8.2</code>"},{"location":"version-specific/supported-software/#zsh","title":"zsh","text":"<p>Zsh is a shell designed for interactive use, although it is also a powerful scripting language.</p> <p>homepage: https://www.zsh.org/</p>    version toolchain     <code>5.1.1</code> <code>GNU/4.9.3-2.25</code>   <code>5.2</code> <code>foss/2016b</code>   <code>5.8</code> <code>GCC/8.3.0</code>, <code>system</code>"},{"location":"version-specific/supported-software/#zstd","title":"zstd","text":"<p>Zstandard is a real-time compression algorithm, providing high compression ratios.  It offers a very wide range of compression/speed trade-off, while being backed by a very fast decoder.  It also offers a special mode for small data, called dictionary compression, and can create dictionaries  from any sample set.</p> <p>homepage: https://facebook.github.io/zstd</p>    version toolchain     <code>1.3.4</code> <code>foss/2016b</code>   <code>1.4.0</code> <code>GCCcore/7.3.0</code>, <code>GCCcore/8.2.0</code>, <code>foss/2018b</code>   <code>1.4.4</code> <code>GCCcore/8.3.0</code>, <code>GCCcore/9.3.0</code>   <code>1.4.5</code> <code>GCCcore/10.2.0</code>   <code>1.4.9</code> <code>GCCcore/10.3.0</code>   <code>1.5.0</code> <code>GCCcore/11.2.0</code>   <code>1.5.2</code> <code>GCCcore/11.3.0</code>, <code>GCCcore/12.2.0</code>"},{"location":"version-specific/toolchain-opts/","title":"Available toolchain options (by toolchain)","text":"<p>(see also <code>eb --avail-toolchain-opts &lt;tcname&gt;</code> )</p> <p>ClangGCC - CrayCCE - CrayGNU - CrayIntel - CrayPGI - FCC - Fujitsu - GCC - GCCcore - GNU - NVHPC - PGI - cgmpich - cgmpolf - cgmvapich2 - cgmvolf - cgompi - cgoolf - ffmpi - foss - fosscuda - gcccuda - gfbf - gimkl - gimpi - gimpic - giolf - giolfc - gmacml - gmkl - gmklc - gmpich2 - gmpich - gmpit - gmpolf - gmvapich2 - gmvolf - goalf - gobff - goblf - gofbf - golf - golfc - gomkl - gomklc - gompi - gompic - goolf - goolfc - gpsmpi - gpsolf - gqacml - gsmpi - gsolf - iccifort - iccifortcuda - ictce - iibff - iimkl - iimklc - iimpi - iimpic - iiqmpi - impich - impmkl - intel-compilers - intel-para - intel - intelcuda - iomkl - iomklc - iompi - iompic - ipsmpi - iqacml - ismkl - nvompi - nvompic - nvpsmpi - nvpsmpic - pmkl - pomkl - pompi - system - xlcxlf - xlmpich2 - xlmpich - xlmvapich2 - xlompi</p>"},{"location":"version-specific/toolchain-opts/#clanggcc","title":"ClangGCC","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-clanggcc-toolchain","title":"Available options for ClangGCC toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#craycce","title":"CrayCCE","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-craycce-toolchain","title":"Available options for CrayCCE toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>dynamic</code> Generate dynamically linked executable <code>True</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>mpich-mt</code> Directs the driver to link in an alternate version of the Cray-MPICH library which                              provides fine-grained multi-threading support to applications that perform                              MPI operations within threaded regions. <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>False</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>True</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#craygnu","title":"CrayGNU","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-craygnu-toolchain","title":"Available options for CrayGNU toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>dynamic</code> Generate dynamically linked executable <code>True</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>mpich-mt</code> Directs the driver to link in an alternate version of the Cray-MPICH library which                              provides fine-grained multi-threading support to applications that perform                              MPI operations within threaded regions. <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>False</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>True</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#crayintel","title":"CrayIntel","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-crayintel-toolchain","title":"Available options for CrayIntel toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>dynamic</code> Generate dynamically linked executable <code>True</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>mpich-mt</code> Directs the driver to link in an alternate version of the Cray-MPICH library which                              provides fine-grained multi-threading support to applications that perform                              MPI operations within threaded regions. <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>False</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>True</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#craypgi","title":"CrayPGI","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-craypgi-toolchain","title":"Available options for CrayPGI toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>dynamic</code> Generate dynamically linked executable <code>True</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>mpich-mt</code> Directs the driver to link in an alternate version of the Cray-MPICH library which                              provides fine-grained multi-threading support to applications that perform                              MPI operations within threaded regions. <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>False</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>True</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#fcc","title":"FCC","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-fcc-toolchain","title":"Available options for FCC toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#fujitsu","title":"Fujitsu","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-fujitsu-toolchain","title":"Available options for Fujitsu toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gcc","title":"GCC","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gcc-toolchain","title":"Available options for GCC toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gcccore","title":"GCCcore","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gcccore-toolchain","title":"Available options for GCCcore toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gnu","title":"GNU","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gnu-toolchain","title":"Available options for GNU toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#nvhpc","title":"NVHPC","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-nvhpc-toolchain","title":"Available options for NVHPC toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#pgi","title":"PGI","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-pgi-toolchain","title":"Available options for PGI toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgmpich","title":"cgmpich","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgmpich-toolchain","title":"Available options for cgmpich toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgmpolf","title":"cgmpolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgmpolf-toolchain","title":"Available options for cgmpolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgmvapich2","title":"cgmvapich2","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgmvapich2-toolchain","title":"Available options for cgmvapich2 toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgmvolf","title":"cgmvolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgmvolf-toolchain","title":"Available options for cgmvolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgompi","title":"cgompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgompi-toolchain","title":"Available options for cgompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#cgoolf","title":"cgoolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-cgoolf-toolchain","title":"Available options for cgoolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>basic-block-vectorize</code> Basic block vectorization <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop-vectorize</code> Loop vectorization <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#ffmpi","title":"ffmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-ffmpi-toolchain","title":"Available options for ffmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#foss","title":"foss","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-foss-toolchain","title":"Available options for foss toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#fosscuda","title":"fosscuda","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-fosscuda-toolchain","title":"Available options for fosscuda toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gcccuda","title":"gcccuda","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gcccuda-toolchain","title":"Available options for gcccuda toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gfbf","title":"gfbf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gfbf-toolchain","title":"Available options for gfbf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gimkl","title":"gimkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gimkl-toolchain","title":"Available options for gimkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gimpi","title":"gimpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gimpi-toolchain","title":"Available options for gimpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gimpic","title":"gimpic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gimpic-toolchain","title":"Available options for gimpic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#giolf","title":"giolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-giolf-toolchain","title":"Available options for giolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#giolfc","title":"giolfc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-giolfc-toolchain","title":"Available options for giolfc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmacml","title":"gmacml","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmacml-toolchain","title":"Available options for gmacml toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmkl","title":"gmkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmkl-toolchain","title":"Available options for gmkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmklc","title":"gmklc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmklc-toolchain","title":"Available options for gmklc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmpich2","title":"gmpich2","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmpich2-toolchain","title":"Available options for gmpich2 toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmpich","title":"gmpich","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmpich-toolchain","title":"Available options for gmpich toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmpit","title":"gmpit","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmpit-toolchain","title":"Available options for gmpit toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmpolf","title":"gmpolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmpolf-toolchain","title":"Available options for gmpolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmvapich2","title":"gmvapich2","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmvapich2-toolchain","title":"Available options for gmvapich2 toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gmvolf","title":"gmvolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gmvolf-toolchain","title":"Available options for gmvolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#goalf","title":"goalf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-goalf-toolchain","title":"Available options for goalf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gobff","title":"gobff","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gobff-toolchain","title":"Available options for gobff toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#goblf","title":"goblf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-goblf-toolchain","title":"Available options for goblf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gofbf","title":"gofbf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gofbf-toolchain","title":"Available options for gofbf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#golf","title":"golf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-golf-toolchain","title":"Available options for golf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#golfc","title":"golfc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-golfc-toolchain","title":"Available options for golfc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gomkl","title":"gomkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gomkl-toolchain","title":"Available options for gomkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gomklc","title":"gomklc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gomklc-toolchain","title":"Available options for gomklc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gompi","title":"gompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gompi-toolchain","title":"Available options for gompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gompic","title":"gompic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gompic-toolchain","title":"Available options for gompic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#goolf","title":"goolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-goolf-toolchain","title":"Available options for goolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#goolfc","title":"goolfc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-goolfc-toolchain","title":"Available options for goolfc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gpsmpi","title":"gpsmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gpsmpi-toolchain","title":"Available options for gpsmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gpsolf","title":"gpsolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gpsolf-toolchain","title":"Available options for gpsolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gqacml","title":"gqacml","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gqacml-toolchain","title":"Available options for gqacml toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gsmpi","title":"gsmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gsmpi-toolchain","title":"Available options for gsmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#gsolf","title":"gsolf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-gsolf-toolchain","title":"Available options for gsolf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>f2c</code> Generate code compatible with f2c and f77 <code>False</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loop</code> Automatic loop parallellisation <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>lto</code> Enable Link Time Optimization <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iccifort","title":"iccifort","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iccifort-toolchain","title":"Available options for iccifort toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iccifortcuda","title":"iccifortcuda","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iccifortcuda-toolchain","title":"Available options for iccifortcuda toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#ictce","title":"ictce","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-ictce-toolchain","title":"Available options for ictce toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iibff","title":"iibff","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iibff-toolchain","title":"Available options for iibff toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iimkl","title":"iimkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iimkl-toolchain","title":"Available options for iimkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iimklc","title":"iimklc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iimklc-toolchain","title":"Available options for iimklc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iimpi","title":"iimpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iimpi-toolchain","title":"Available options for iimpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iimpic","title":"iimpic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iimpic-toolchain","title":"Available options for iimpic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iiqmpi","title":"iiqmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iiqmpi-toolchain","title":"Available options for iiqmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#impich","title":"impich","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-impich-toolchain","title":"Available options for impich toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#impmkl","title":"impmkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-impmkl-toolchain","title":"Available options for impmkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#intel-compilers","title":"intel-compilers","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-intel-compilers-toolchain","title":"Available options for intel-compilers toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#intel-para","title":"intel-para","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-intel-para-toolchain","title":"Available options for intel-para toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#intel","title":"intel","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-intel-toolchain","title":"Available options for intel toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#intelcuda","title":"intelcuda","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-intelcuda-toolchain","title":"Available options for intelcuda toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iomkl","title":"iomkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iomkl-toolchain","title":"Available options for iomkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iomklc","title":"iomklc","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iomklc-toolchain","title":"Available options for iomklc toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iompi","title":"iompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iompi-toolchain","title":"Available options for iompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>oneapi</code> Use oneAPI compilers icx/icpx/ifx instead of classic compilers <code>None</code>   <code>oneapi_c_cxx</code> Use oneAPI C/C++ compilers icx/icpx instead of classic Intel C/C++ compilers (auto-enabled for Intel compilers version 2022.2.0, or newer) <code>None</code>   <code>oneapi_fortran</code> Use oneAPI Fortran compiler ifx instead of classic Intel Fortran compiler <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iompic","title":"iompic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iompic-toolchain","title":"Available options for iompic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#ipsmpi","title":"ipsmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-ipsmpi-toolchain","title":"Available options for ipsmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#iqacml","title":"iqacml","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-iqacml-toolchain","title":"Available options for iqacml toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#ismkl","title":"ismkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-ismkl-toolchain","title":"Available options for ismkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>intel-static</code> Link Intel provided libraries statically <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>no-icc</code> Don't set Intel specific macros <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#nvompi","title":"nvompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-nvompi-toolchain","title":"Available options for nvompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#nvompic","title":"nvompic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-nvompic-toolchain","title":"Available options for nvompic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#nvpsmpi","title":"nvpsmpi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-nvpsmpi-toolchain","title":"Available options for nvpsmpi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#nvpsmpic","title":"nvpsmpic","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-nvpsmpic-toolchain","title":"Available options for nvpsmpic toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#pmkl","title":"pmkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-pmkl-toolchain","title":"Available options for pmkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#pomkl","title":"pomkl","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-pomkl-toolchain","title":"Available options for pomkl toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#pompi","title":"pompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-pompi-toolchain","title":"Available options for pompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#system","title":"system","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-system-toolchain","title":"Available options for system toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#xlcxlf","title":"xlcxlf","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-xlcxlf-toolchain","title":"Available options for xlcxlf toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ibm-static</code> Link IBM XL provided libraries statically <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#xlmpich2","title":"xlmpich2","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-xlmpich2-toolchain","title":"Available options for xlmpich2 toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ibm-static</code> Link IBM XL provided libraries statically <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#xlmpich","title":"xlmpich","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-xlmpich-toolchain","title":"Available options for xlmpich toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ibm-static</code> Link IBM XL provided libraries statically <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#xlmvapich2","title":"xlmvapich2","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-xlmvapich2-toolchain","title":"Available options for xlmvapich2 toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ibm-static</code> Link IBM XL provided libraries statically <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain-opts/#xlompi","title":"xlompi","text":""},{"location":"version-specific/toolchain-opts/#available-options-for-xlompi-toolchain","title":"Available options for xlompi toolchain","text":"option description default     <code>32bit</code> Compile 32bit target <code>False</code>   <code>cciscxx</code> Use CC as CXX <code>False</code>   <code>cstd</code> Specify C standard <code>None</code>   <code>debug</code> Enable debug <code>False</code>   <code>defaultopt</code> Default compiler optimizations <code>False</code>   <code>defaultprec</code> Default precision <code>False</code>   <code>error-unknown-option</code> Error instead of warning for unknown options <code>False</code>   <code>extra_cflags</code> Specify extra CFLAGS options. <code>None</code>   <code>extra_cxxflags</code> Specify extra CXXFLAGS options. <code>None</code>   <code>extra_f90flags</code> Specify extra F90FLAGS options. <code>None</code>   <code>extra_fcflags</code> Specify extra FCFLAGS options. <code>None</code>   <code>extra_fflags</code> Specify extra FFLAGS options. <code>None</code>   <code>i8</code> Integers are 8 byte integers <code>False</code>   <code>ibm-static</code> Link IBM XL provided libraries statically <code>False</code>   <code>ieee</code> Adhere to IEEE-754 rules <code>False</code>   <code>loose</code> Loose precision <code>False</code>   <code>lowopt</code> Low compiler optimizations <code>False</code>   <code>noopt</code> Disable compiler optimizations <code>False</code>   <code>openmp</code> Enable OpenMP <code>False</code>   <code>opt</code> High compiler optimizations <code>False</code>   <code>optarch</code> Enable architecture optimizations <code>True</code>   <code>packed-linker-options</code> Pack the linker options as comma separated list <code>False</code>   <code>pic</code> Use PIC <code>False</code>   <code>precise</code> High precision <code>False</code>   <code>r8</code> Real is 8 byte real <code>False</code>   <code>rpath</code> Use RPATH wrappers when --rpath is enabled in EasyBuild configuration <code>True</code>   <code>shared</code> Build shared library <code>False</code>   <code>static</code> Build static library <code>False</code>   <code>strict</code> Strict (highest) precision <code>False</code>   <code>unroll</code> Unroll loops <code>False</code>   <code>usempi</code> Use MPI compiler as default compiler <code>False</code>   <code>vectorize</code> Enable compiler auto-vectorization, default except for noopt and lowopt <code>None</code>   <code>verbose</code> Verbose output <code>False</code>   <code>veryloose</code> Very loose precision <code>False</code>"},{"location":"version-specific/toolchain/","title":"List of known toolchains","text":"<p>Warning</p> <p>This page will soon replace https://docs.easybuild.io/en/latest/version-specific/toolchains.html.</p> <p> It still needs to be ported from reStructuredText (.rst) to MarkDown (.md), and you can help with that! </p> <ul> <li>source: <code>docs/version-specific/toolchains.rst</code> in <code>easybuilders/easybuild</code> repo</li> <li>target: <code>docs/version-specific/toolchains.md</code> in <code>easybuilders/easybuild-docs</code> repo</li> </ul> <p>See https://github.com/easybuilders/easybuild-docs for more information.</p>"}]}